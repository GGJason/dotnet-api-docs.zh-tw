<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeDelegateInvokeExpression.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac517969ebf87bf2e20d71e8dac4d8cd9b16d9eee9a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17969ebf87bf2e20d71e8dac4d8cd9b16d9eee9a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeDelegateInvokeExpression">
          <source>Represents an expression that raises an event.</source>
          <target state="translated">表示引發事件的運算式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeDelegateInvokeExpression">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeDelegateInvokeExpression&gt;</ph> can be used to represent code that invokes an event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeDelegateInvokeExpression&gt;</ph> 可用來代表叫用事件的程式碼。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeDelegateInvokeExpression">
          <source>Invoking an event invokes all delegates that are registered with the event using the specified parameters.</source>
          <target state="translated">叫用事件，會叫用所有使用指定的參數的事件註冊的委派。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeDelegateInvokeExpression">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeDelegateInvokeExpression.TargetObject%2A&gt;</ph> property specifies the event to invoke.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeDelegateInvokeExpression.TargetObject%2A&gt;</ph>屬性會指定要叫用的事件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeDelegateInvokeExpression">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeDelegateInvokeExpression.Parameters%2A&gt;</ph> property specifies the parameters to pass to the delegates for the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeDelegateInvokeExpression.Parameters%2A&gt;</ph>屬性會指定要為事件委派傳遞的參數。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeDelegateInvokeExpression">
          <source>The following example demonstrates use of a <ph id="ph1">&lt;xref:System.CodeDom.CodeDelegateInvokeExpression&gt;</ph> to invoke an event named <ph id="ph2">`TestEvent`</ph>.</source>
          <target state="translated">下列範例會示範使用<ph id="ph1">&lt;xref:System.CodeDom.CodeDelegateInvokeExpression&gt;</ph>叫用名為事件<ph id="ph2">`TestEvent`</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeDelegateInvokeExpression">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the target object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> 指示目標物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /&gt;</ph> class using the specified target object.</source>
          <target state="translated">使用指定的目標物件來初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the target object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> 指示目標物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> objects that indicate the parameters.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> 物件陣列，表示參數。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /&gt;</ph> class using the specified target object and parameters.</source>
          <target state="translated">使用指定的目標物件和參數來初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeDelegateInvokeExpression.Parameters">
          <source>Gets or sets the parameters to pass to the event handling methods attached to the event.</source>
          <target state="translated">取得或設定參數，傳遞至附加到事件之事件處理常式方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeDelegateInvokeExpression.Parameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the parameters to pass to the event handling methods attached to the event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>，表示要傳遞至附加到事件之事件處理常式方法的參數。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeDelegateInvokeExpression.TargetObject">
          <source>Gets or sets the event to invoke.</source>
          <target state="translated">取得或設定要叫用的事件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeDelegateInvokeExpression.TargetObject">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the event to invoke.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>，表示要叫用的事件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>