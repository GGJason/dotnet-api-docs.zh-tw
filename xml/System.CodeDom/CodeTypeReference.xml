<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeTypeReference.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52455b43fddb32549a443564aec8b89bb01619d72.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2455b43fddb32549a443564aec8b89bb01619d72</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeTypeReference">
          <source>Represents a reference to a type.</source>
          <target state="translated">表示型別的參考。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object is used to represent a type for CodeDOM objects.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>物件用來代表型別為 CodeDOM 物件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>When CodeDOM types have a <ph id="ph1">`Type`</ph> property, it is of type <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>.</source>
          <target state="translated">當 CodeDOM 型別有<ph id="ph1">`Type`</ph>屬性，它是型別<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>For example, the <ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType&gt;</ph> property is a <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> that represents a field's data type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType&gt;</ph>屬性是<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>代表欄位的資料類型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> can be initialized with a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object or a string.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>可以使用初始化<ph id="ph2">&lt;xref:System.Type&gt;</ph>物件或字串。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>It is generally recommended to use a <ph id="ph1">&lt;xref:System.Type&gt;</ph> to do this, although it may not always be possible.</source>
          <target state="translated">通常建議使用<ph id="ph1">&lt;xref:System.Type&gt;</ph>若要這樣做，雖然它不一定可能。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as "System.Console" instead of just "Console", because not all languages support importing namespaces.</source>
          <target state="translated">如果初始化字串與這個類別的執行個體，強烈建議一律使用完整的類型，例如"System.Console"，而不只是 「 主控台 」，因為並非所有語言都支援匯入的命名空間。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.</source>
          <target state="translated">傳入的型別物件的陣列，或使用其中一個接受陣序規範做為參數的建構函式，可以指定陣列類型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property specifies the name of the type to reference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph>屬性會指定要參考的型別名稱。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>For references to array types, the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A&gt;</ph> property indicates the type of the elements of the array, and the <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph> property indicates the number of dimensions in the array.</source>
          <target state="translated">陣列型別參考<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A&gt;</ph>屬性表示陣列的項目類型和<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph>屬性表示陣列中的維度數目。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>The following example demonstrates use of a <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> to represent a reference to a type.</source>
          <target state="translated">下列範例會示範使用<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>來表示類型的參考。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeTypeReference">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type.</source>
          <target state="translated">使用指定的型別，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor">
          <source>This constructor creates an empty <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object.</source>
          <target state="translated">這個建構函式會建立空<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor">
          <source>If you use this constructor, set properties to establish the type reference.</source>
          <target state="translated">如果您使用這個建構函式，設定屬性，以建立的類型參照。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeParameter" /&gt;</ph> that represents the type of the type parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeParameter" /&gt;</ph>，表示型別參數的型別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified code type parameter.</source>
          <target state="translated">使用指定的程式碼型別參數，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>The name of the type to reference.</source>
          <target state="translated">要參考的型別名稱。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type name.</source>
          <target state="translated">使用指定的型別名稱，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>If the <ph id="ph1">`typeName`</ph> parameter references a generic type, it must follow the syntax conventions for generic types.</source>
          <target state="translated">如果<ph id="ph1">`typeName`</ph>參數參考泛型型別，其必須遵循的泛型類型的語法慣例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>For example, the reflection signature for a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> type, where <ph id="ph2">`K`</ph> is a string and <ph id="ph3">`V`</ph> is a <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of integers, is represented by reflection as the following (with the assembly information removed): <ph id="ph5">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph>.</source>
          <target state="translated">比方說，反映簽章<ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>型別，其中<ph id="ph2">`K`</ph>是一個字串和<ph id="ph3">`V`</ph>是<ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph>的整數，表示由反映如下所示 （與移除的組件資訊）： <ph id="ph5">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>You must use square brackets ([]) and not the C# angle brackets (&lt;&gt;) to delimit generic parameters.</source>
          <target state="translated">您必須使用方括號 ([]) 和不 C# 角括號 （&lt;&gt;） 來分隔泛型參數。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.</source>
          <target state="translated">若要避免在指定的語法發生錯誤的可能性，請考慮使用接受型別做為參數，而非字串的建構函式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to reference.</source>
          <target state="translated">要參考的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type.</source>
          <target state="translated">使用指定的型別，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> that indicates the type of the array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>，表示陣列的型別。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
          <source>The number of dimensions in the array.</source>
          <target state="translated">陣列中維度的數目。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified array type and rank.</source>
          <target state="translated">使用指定的陣列型別和陣序，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
          <source>This constructor can be used to construct arrays of arrays by nesting <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> objects.</source>
          <target state="translated">這個建構函式可以用來建構陣列的陣列，巢狀結構<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
          <source>The name of the type to reference.</source>
          <target state="translated">要參考的型別名稱。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 值的陣列。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type name and type arguments.</source>
          <target state="translated">使用指定的型別名稱和型別引數，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
          <source>The name of the type to reference.</source>
          <target state="translated">要參考的型別名稱。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
          <source>The code type reference option, one of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> values.</source>
          <target state="translated">程式碼型別參考選項 (其中一個 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> 值)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type name and code type reference option.</source>
          <target state="translated">使用指定的型別名稱和程式碼型別參考選項，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)">
          <source>The name of the type of the elements of the array.</source>
          <target state="translated">陣列元素的型別名稱。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)">
          <source>The number of dimensions of the array.</source>
          <target state="translated">陣列維度的數目。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified array type name and rank.</source>
          <target state="translated">使用指定的陣列型別名稱和陣序，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to reference.</source>
          <target state="translated">要參考的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
          <source>The code type reference option, one of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> values.</source>
          <target state="translated">程式碼型別參考選項 (其中一個 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> 值)。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type and code type reference.</source>
          <target state="translated">使用指定的型別和程式碼型別參考，初始化 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.ArrayElementType">
          <source>Gets or sets the type of the elements in the array.</source>
          <target state="translated">取得或設定陣列中的元素型別。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.ArrayElementType">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> that indicates the type of the array elements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>，表示陣列元素的型別。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.ArrayElementType">
          <source>This is disregarded unless the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph> property is greater than or equal to 1.</source>
          <target state="translated">這會忽略除非<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph>屬性是大於或等於 1。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.ArrayRank">
          <source>Gets or sets the array rank of the array.</source>
          <target state="translated">取得或設定陣列的陣列陣序。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.ArrayRank">
          <source>The number of dimensions of the array.</source>
          <target state="translated">陣列維度的數目。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Gets or sets the name of the type being referenced.</source>
          <target state="translated">取得或設定要參考的型別名稱。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The name of the type being referenced.</source>
          <target state="translated">所參考的型別名稱。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>This property contains the name of the type unless it is an array type, in which case it is the array element type.</source>
          <target state="translated">此屬性包含型別的名稱，除非它是陣列型別，在此情況下，它是陣列項目類型。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The name of the property may be misleading.</source>
          <target state="translated">屬性的名稱可能使人產生誤解。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected.</source>
          <target state="translated">這個屬性包含型別名稱與任何陣列裝飾或泛型型別引數中移除，不是基底或父類型所預期。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>For example, the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> value for <ph id="ph2">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph> is <ph id="ph3">``System.Collections.Generic.Dictionary`2``</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph>值<ph id="ph2">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph>是<ph id="ph3">``System.Collections.Generic.Dictionary`2``</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Representation of Generic Types</source>
          <target state="translated">泛型型別表示法</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages.</source>
          <target state="translated">本節中的資訊適用於 CodeDom 提供者開發人員而且只適用於符合 CLS 標準的語言。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The return value can contain generic types.</source>
          <target state="translated">傳回值可以包含泛型型別。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Generic types are formatted with the name of the type followed by a grave accent ("`") followed by a count of the generic type arguments.</source>
          <target state="translated">泛型型別的格式後面接著抑音符號型別的名稱 ("'") 後面接著的泛型型別引數計數。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The generic type arguments can be found in the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReferenceCollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property.</source>
          <target state="translated">泛型型別引數位於<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReferenceCollection&gt;</ph>傳回<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The values returned by <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> and the associated <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> contain the same content as the value of the type returned by reflection.</source>
          <target state="translated">所傳回的值<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph>和相關聯<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph>包含相同的內容做為反映所傳回的類型的值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>For example, a constructed <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> where <ph id="ph2">`K`</ph> is a string and <ph id="ph3">`V`</ph> is a constructed <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of integers is represented by reflection as the following (with the assembly information removed):</source>
          <target state="translated">例如，建構<ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>其中<ph id="ph2">`K`</ph>是一個字串和<ph id="ph3">`V`</ph>是建構<ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph>的整數表示由反映如下所示 （與移除的組件資訊）：</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Recursively parsing the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property from the <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> for <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> yields the same strings as the reflection representation above:</source>
          <target state="translated">以遞迴方式剖析<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph>屬性從<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>如<ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>產生為反映表示上述相同的字串：</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the parent <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> returns the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph>父屬性<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>會傳回下列：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the first <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object in the <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> collection returns the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph>第一個屬性<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>物件存放至<ph id="ph3">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph>集合將會傳回下列：</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the second <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object in the <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> collection returns the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph>第二個屬性<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>物件存放至<ph id="ph3">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph>集合將會傳回下列：</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object for <ph id="ph3">``System.Collections.Generic.List`1``</ph> returns the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>物件<ph id="ph3">``System.Collections.Generic.List`1``</ph>會傳回下列：</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The type argument count should be used when parsing the associated <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> values.</source>
          <target state="translated">剖析相關聯時，就應該使用型別引數計數<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.</source>
          <target state="translated">常見的作法是從產生的程式碼，移除型別引數計數，但作法是將特定編譯器。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign ("+").</source>
          <target state="translated">請務必注意，巢狀的類型名稱內找不到型別引數計數，在此情況下它後面接著加號 （"+"）。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>When creating a generic <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>, the recommended practice is to specify the type arguments as <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> objects or use the constructor that takes a <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">在建立泛型<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>，建議的作法是指定的型別引數<ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>物件，或使用的建構函式<ph id="ph3">&lt;xref:System.Type&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Use of the constructor that creates a <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> from a string can lead to undiscoverable type-argument errors.</source>
          <target state="translated">使用建構函式會建立<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>從字串可能會導致 undiscoverable 的型別引數錯誤。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.Options">
          <source>Gets or sets the code type reference option.</source>
          <target state="translated">取得或設定程式碼型別參考選項。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.Options">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> 值的位元組合。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>Gets the type arguments for the current generic type reference.</source>
          <target state="translated">取得目前泛型型別參考的型別引數。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceCollection" /&gt;</ph> containing the type arguments for the current <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceCollection" /&gt;</ph>，包含目前 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 物件的型別引數。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property is a collection of type references to be substituted for the type parameter references of the current generic type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph>屬性是用來取代目前泛型型別的型別參數參考的型別參考的集合。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>The collection contains all the type arguments for all nested types.</source>
          <target state="translated">包含所有的巢狀類型的所有型別引數的集合。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property.</source>
          <target state="translated">如需範例，請參閱<ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph>屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>