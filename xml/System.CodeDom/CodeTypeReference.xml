<Type Name="CodeTypeReference" FullName="System.CodeDom.CodeTypeReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2455b43fddb32549a443564aec8b89bb01619d72" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369662" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeTypeReference : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeReference extends System.CodeDom.CodeObject" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeReference&#xA;Inherits CodeObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeReference : System::CodeDom::CodeObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6853e-101">表示型別的參考。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6853e-101">Represents a reference to a type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6853e-102">A<xref:System.CodeDom.CodeTypeReference>物件用來代表型別為 CodeDOM 物件。</span><span class="sxs-lookup"><span data-stu-id="6853e-102">A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects.</span></span> <span data-ttu-id="6853e-103">當 CodeDOM 型別有`Type`屬性，它是型別<xref:System.CodeDom.CodeTypeReference>。</span><span class="sxs-lookup"><span data-stu-id="6853e-103">When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>.</span></span> <span data-ttu-id="6853e-104">例如，<xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType>屬性是<xref:System.CodeDom.CodeTypeReference>代表欄位的資料類型。</span><span class="sxs-lookup"><span data-stu-id="6853e-104">For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type.</span></span>  
  
 <span data-ttu-id="6853e-105">A<xref:System.CodeDom.CodeTypeReference>可以使用初始化<xref:System.Type>物件或字串。</span><span class="sxs-lookup"><span data-stu-id="6853e-105">A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string.</span></span> <span data-ttu-id="6853e-106">通常建議使用<xref:System.Type>若要這樣做，雖然它不一定可能。</span><span class="sxs-lookup"><span data-stu-id="6853e-106">It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible.</span></span> <span data-ttu-id="6853e-107">如果初始化字串與這個類別的執行個體，強烈建議一律使用完整的類型，例如"System.Console"，而不只是 「 主控台 」，因為並非所有語言都支援匯入的命名空間。</span><span class="sxs-lookup"><span data-stu-id="6853e-107">If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as "System.Console" instead of just "Console", because not all languages support importing namespaces.</span></span> <span data-ttu-id="6853e-108">傳入的型別物件的陣列，或使用其中一個接受陣序規範做為參數的建構函式，可以指定陣列類型。</span><span class="sxs-lookup"><span data-stu-id="6853e-108">Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.</span></span>  
  
 <span data-ttu-id="6853e-109"><xref:System.CodeDom.CodeTypeReference.BaseType%2A>屬性會指定要參考的型別名稱。</span><span class="sxs-lookup"><span data-stu-id="6853e-109">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference.</span></span> <span data-ttu-id="6853e-110">陣列型別參考<xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A>屬性表示陣列的項目類型和<xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>屬性表示陣列中的維度數目。</span><span class="sxs-lookup"><span data-stu-id="6853e-110">For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6853e-111">下列範例會示範使用<xref:System.CodeDom.CodeTypeReference>來表示類型的參考。</span><span class="sxs-lookup"><span data-stu-id="6853e-111">The following example demonstrates use of a <xref:System.CodeDom.CodeTypeReference> to represent a reference to a type.</span></span>  
  
 [!code-cpp[CodeTypeOfExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeOfExample/CPP/codetypeofexample.cpp#2)]
 [!code-csharp[CodeTypeOfExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeOfExample/CS/codetypeofexample.cs#2)]
 [!code-vb[CodeTypeOfExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeOfExample/VB/codetypeofexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6853e-112">使用指定的型別，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6853e-113">初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6853e-114">這個建構函式會建立空<xref:System.CodeDom.CodeTypeReference>物件。</span><span class="sxs-lookup"><span data-stu-id="6853e-114">This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.</span></span>  <span data-ttu-id="6853e-115">如果您使用這個建構函式，設定屬性，以建立的類型參照。</span><span class="sxs-lookup"><span data-stu-id="6853e-115">If you use this constructor, set properties to establish the type reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeParameter typeParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeParameter As CodeTypeParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeParameter ^ typeParameter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeParameter" Type="System.CodeDom.CodeTypeParameter" />
      </Parameters>
      <Docs>
        <param name="typeParameter">
          <span data-ttu-id="6853e-116">
            <see cref="T:System.CodeDom.CodeTypeParameter" />，表示型別參數的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-116">A <see cref="T:System.CodeDom.CodeTypeParameter" /> that represents the type of the type parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6853e-117">使用指定的程式碼型別參數，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-117">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified code type parameter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="6853e-118">要參考的型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-118">The name of the type to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6853e-119">使用指定的型別名稱，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-119">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6853e-120">如果`typeName`參數參考泛型型別，其必須遵循的泛型類型的語法慣例。</span><span class="sxs-lookup"><span data-stu-id="6853e-120">If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types.</span></span> <span data-ttu-id="6853e-121">比方說，反映簽章<xref:System.Collections.Generic.Dictionary%602>型別，其中`K`是一個字串和`V`是<xref:System.Collections.Generic.List%601>的整數，表示由反映如下所示 （與移除的組件資訊）： ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``。</span><span class="sxs-lookup"><span data-stu-id="6853e-121">For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6853e-122">您必須使用方括號 ([]) 和不 C# 角括號 （<>） 來分隔泛型參數。</span><span class="sxs-lookup"><span data-stu-id="6853e-122">You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.</span></span>  
  
 <span data-ttu-id="6853e-123">若要避免在指定的語法發生錯誤的可能性，請考慮使用接受型別做為參數，而非字串的建構函式。</span><span class="sxs-lookup"><span data-stu-id="6853e-123">To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6853e-124">要參考的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-124">The <see cref="T:System.Type" /> to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6853e-125">使用指定的型別，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-125">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6853e-126">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-126">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference arrayType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (arrayType As CodeTypeReference, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeReference ^ arrayType, int rank);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arrayType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arrayType">
          <span data-ttu-id="6853e-127">
            <see cref="T:System.CodeDom.CodeTypeReference" />，表示陣列的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-127">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array.</span>
          </span>
        </param>
        <param name="rank">
          <span data-ttu-id="6853e-128">陣列中維度的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-128">The number of dimensions in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6853e-129">使用指定的陣列型別和陣序，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-129">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type and rank.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6853e-130">這個建構函式可以用來建構陣列的陣列，巢狀結構<xref:System.CodeDom.CodeTypeReference>物件。</span><span class="sxs-lookup"><span data-stu-id="6853e-130">This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, params System.CodeDom.CodeTypeReference[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.CodeDom.CodeTypeReference[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ParamArray typeArguments As CodeTypeReference())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, ... cli::array &lt;System::CodeDom::CodeTypeReference ^&gt; ^ typeArguments);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.CodeDom.CodeTypeReference[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="6853e-131">要參考的型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-131">The name of the type to reference.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="6853e-132">
            <see cref="T:System.CodeDom.CodeTypeReference" /> 值的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-132">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6853e-133">使用指定的型別名稱和型別引數，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-133">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and type arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, codeTypeReferenceOption As CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="6853e-134">要參考的型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-134">The name of the type to reference.</span>
          </span>
        </param>
        <param name="codeTypeReferenceOption">
          <span data-ttu-id="6853e-135">程式碼型別參考選項 (其中一個 <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> 值)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-135">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6853e-136">使用指定的型別名稱和程式碼型別參考選項，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-136">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and code type reference option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string baseType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseType As String, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ baseType, int rank);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseType" Type="System.String" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="baseType">
          <span data-ttu-id="6853e-137">陣列元素的型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-137">The name of the type of the elements of the array.</span>
          </span>
        </param>
        <param name="rank">
          <span data-ttu-id="6853e-138">陣列維度的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-138">The number of dimensions of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6853e-139">使用指定的陣列型別名稱和陣序，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-139">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type name and rank.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6853e-140">要參考的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-140">The <see cref="T:System.Type" /> to reference.</span>
          </span>
        </param>
        <param name="codeTypeReferenceOption">
          <span data-ttu-id="6853e-141">程式碼型別參考選項 (其中一個 <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> 值)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-141">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6853e-142">使用指定的型別和程式碼型別參考，初始化 <see cref="T:System.CodeDom.CodeTypeReference" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-142">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type and code type reference.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElementType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference ArrayElementType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayElementType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ ArrayElementType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6853e-143">取得或設定陣列中的元素型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-143">Gets or sets the type of the elements in the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6853e-144">
            <see cref="T:System.CodeDom.CodeTypeReference" />，表示陣列元素的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-144">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6853e-145">這會忽略除非<xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>屬性是大於或等於 1。</span><span class="sxs-lookup"><span data-stu-id="6853e-145">This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayRank">
      <MemberSignature Language="C#" Value="public int ArrayRank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArrayRank" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayRank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArrayRank { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6853e-146">取得或設定陣列的陣列陣序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-146">Gets or sets the array rank of the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6853e-147">陣列維度的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-147">The number of dimensions of the array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public string BaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6853e-148">取得或設定要參考的型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-148">Gets or sets the name of the type being referenced.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6853e-149">所參考的型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-149">The name of the type being referenced.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6853e-150">此屬性包含型別的名稱，除非它是陣列型別，在此情況下，它是陣列項目類型。</span><span class="sxs-lookup"><span data-stu-id="6853e-150">This property contains the name of the type unless it is an array type, in which case it is the array element type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6853e-151">屬性的名稱可能使人產生誤解。</span><span class="sxs-lookup"><span data-stu-id="6853e-151">The name of the property may be misleading.</span></span> <span data-ttu-id="6853e-152">這個屬性包含型別名稱與任何陣列裝飾或泛型型別引數中移除，不是基底或父類型所預期。</span><span class="sxs-lookup"><span data-stu-id="6853e-152">This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected.</span></span> <span data-ttu-id="6853e-153">例如，<xref:System.CodeDom.CodeTypeReference.BaseType%2A>值``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``是``System.Collections.Generic.Dictionary`2``。</span><span class="sxs-lookup"><span data-stu-id="6853e-153">For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.</span></span>  
  
## <a name="representation-of-generic-types"></a><span data-ttu-id="6853e-154">泛型型別表示法</span><span class="sxs-lookup"><span data-stu-id="6853e-154">Representation of Generic Types</span></span>  
 <span data-ttu-id="6853e-155">本節中的資訊適用於 CodeDom 提供者開發人員而且只適用於符合 CLS 標準的語言。</span><span class="sxs-lookup"><span data-stu-id="6853e-155">The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages.</span></span> <span data-ttu-id="6853e-156">傳回值可以包含泛型型別。</span><span class="sxs-lookup"><span data-stu-id="6853e-156">The return value can contain generic types.</span></span> <span data-ttu-id="6853e-157">泛型型別的格式後面接著抑音符號型別的名稱 ("'") 後面接著的泛型型別引數計數。</span><span class="sxs-lookup"><span data-stu-id="6853e-157">Generic types are formatted with the name of the type followed by a grave accent ("\`") followed by a count of the generic type arguments.</span></span> <span data-ttu-id="6853e-158">泛型型別引數位於<xref:System.CodeDom.CodeTypeReferenceCollection>傳回<xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="6853e-158">The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property.</span></span> <span data-ttu-id="6853e-159">所傳回的值<xref:System.CodeDom.CodeTypeReference.BaseType%2A>和相關聯<xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>包含相同的內容做為反映所傳回的類型的值。</span><span class="sxs-lookup"><span data-stu-id="6853e-159">The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.</span></span>  
  
 <span data-ttu-id="6853e-160">例如，建構<xref:System.Collections.Generic.Dictionary%602>其中`K`是一個字串和`V`是建構<xref:System.Collections.Generic.List%601>的整數表示由反映如下所示 （與移除的組件資訊）：</span><span class="sxs-lookup"><span data-stu-id="6853e-160">For example, a constructed <xref:System.Collections.Generic.Dictionary%602> where `K` is a string and `V` is a constructed <xref:System.Collections.Generic.List%601> of integers is represented by reflection as the following (with the assembly information removed):</span></span>  
  
```  
System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]  
```  
  
 <span data-ttu-id="6853e-161">以遞迴方式剖析<xref:System.CodeDom.CodeTypeReference.BaseType%2A>屬性從<xref:System.CodeDom.CodeTypeReference>如<xref:System.Collections.Generic.Dictionary%602>產生為反映表示上述相同的字串：</span><span class="sxs-lookup"><span data-stu-id="6853e-161">Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:</span></span>  
  
-   <span data-ttu-id="6853e-162"><xref:System.CodeDom.CodeTypeReference.BaseType%2A>父屬性<xref:System.CodeDom.CodeTypeReference>會傳回下列：</span><span class="sxs-lookup"><span data-stu-id="6853e-162">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.Dictionary`2  
    ```  
  
-   <span data-ttu-id="6853e-163"><xref:System.CodeDom.CodeTypeReference.BaseType%2A>第一個屬性<xref:System.CodeDom.CodeTypeReference>物件存放至<xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>集合將會傳回下列：</span><span class="sxs-lookup"><span data-stu-id="6853e-163">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.String  
    ```  
  
-   <span data-ttu-id="6853e-164"><xref:System.CodeDom.CodeTypeReference.BaseType%2A>第二個屬性<xref:System.CodeDom.CodeTypeReference>物件存放至<xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>集合將會傳回下列：</span><span class="sxs-lookup"><span data-stu-id="6853e-164">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.List`1  
    ```  
  
-   <span data-ttu-id="6853e-165"><xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>屬性<xref:System.CodeDom.CodeTypeReference>物件``System.Collections.Generic.List`1``會傳回下列：</span><span class="sxs-lookup"><span data-stu-id="6853e-165">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property in the <xref:System.CodeDom.CodeTypeReference> object for ``System.Collections.Generic.List`1`` returns the following:</span></span>  
  
    ```  
    System.Int32  
    ```  
  
 <span data-ttu-id="6853e-166">剖析相關聯時，就應該使用型別引數計數<xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>值。</span><span class="sxs-lookup"><span data-stu-id="6853e-166">The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values.</span></span> <span data-ttu-id="6853e-167">常見的作法是從產生的程式碼，移除型別引數計數，但作法是將特定編譯器。</span><span class="sxs-lookup"><span data-stu-id="6853e-167">The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.</span></span>  <span data-ttu-id="6853e-168">請務必注意，巢狀的類型名稱內找不到型別引數計數，在此情況下它後面接著加號 （"+"）。</span><span class="sxs-lookup"><span data-stu-id="6853e-168">It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign ("+").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6853e-169">在建立泛型<xref:System.CodeDom.CodeTypeReference>，建議的作法是指定的型別引數<xref:System.CodeDom.CodeTypeReference>物件，或使用的建構函式<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="6853e-169">When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>.</span></span> <span data-ttu-id="6853e-170">使用建構函式會建立<xref:System.CodeDom.CodeTypeReference>從字串可能會導致 undiscoverable 的型別引數錯誤。</span><span class="sxs-lookup"><span data-stu-id="6853e-170">Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeTypeReferenceOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As CodeTypeReferenceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceOptions Options { System::CodeDom::CodeTypeReferenceOptions get(); void set(System::CodeDom::CodeTypeReferenceOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6853e-171">取得或設定程式碼型別參考選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-171">Gets or sets the code type reference option.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6853e-172">
            <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-172">A bitwise combination of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ TypeArguments { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6853e-173">取得目前泛型型別參考的型別引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-173">Gets the type arguments for the current generic type reference.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6853e-174">
            <see cref="T:System.CodeDom.CodeTypeReferenceCollection" />，包含目前 <see cref="T:System.CodeDom.CodeTypeReference" /> 物件的型別引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6853e-174">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the type arguments for the current <see cref="T:System.CodeDom.CodeTypeReference" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6853e-175"><xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>屬性是用來取代目前泛型型別的型別參數參考的型別參考的集合。</span><span class="sxs-lookup"><span data-stu-id="6853e-175">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type.</span></span> <span data-ttu-id="6853e-176">包含所有的巢狀類型的所有型別引數的集合。</span><span class="sxs-lookup"><span data-stu-id="6853e-176">The collection contains all the type arguments for all nested types.</span></span> <span data-ttu-id="6853e-177">如需範例，請參閱<xref:System.CodeDom.CodeTypeReference.BaseType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="6853e-177">For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>