<Type Name="SoapExtensionImporter" FullName="System.Web.Services.Description.SoapExtensionImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe0839595eab406f15a870a301f415432bec6b5f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37543605" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtensionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionImporter abstract" />
  <TypeSignature Language="F#" Value="type SoapExtensionImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>為類別 (Class) 提供公用介面和功能，以產生指定 SOAP 擴充功能的程式碼屬性 (Attribute)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapExtensionImporter> `abstract`類別會公開`abstract`方法， <xref:System.Web.Services.Description.SoapExtensionImporter.ImportMethod%2A>，可讓衍生的類別將中繼資料新增至任何方法，表示繫結中的作業。 方法本身不是輸入的方法。 程式碼屬性，它會新增至繫結類別中的所有 Web 方法，表示延伸模組到 SOAP Web 服務通訊協定，比方說，為傳出 SOAP 訊息中加入額外的標頭，或進行額外處理內送的 SOAP 訊息。  
  
 您可以使用一個衍生自類別<xref:System.Web.Services.Description.SoapExtensionImporter>延伸的用戶端 proxy 程式碼產生或`abstract`伺服端程式碼。 您可以搭配使用這類衍生的類別，衍生自的類別`abstract`<xref:System.Web.Services.Protocols.SoapExtension>類別，以擴充用戶端或服務上的 SOAP 訊息的執行階段處理。  
  
 您可以指定<xref:System.Web.Services.Description.SoapExtensionImporter>透過組態檔中`soapExtensionImporterTypes`組態項目和其子系`add`項目。 您可以套用至組態：  
  
-   ASP.NET Web 應用程式： 服務或用戶端。  
  
-   獨立的.NET Framework 應用程式： 只在用戶端。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Description.SoapExtensionImporter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapProtocolImporter ImportContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.SoapProtocolImporter ImportContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionImporter.ImportContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportContext As SoapProtocolImporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapProtocolImporter ^ ImportContext { System::Web::Services::Description::SoapProtocolImporter ^ get(); void set(System::Web::Services::Description::SoapProtocolImporter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportContext : System.Web.Services.Description.SoapProtocolImporter with get, set" Usage="System.Web.Services.Description.SoapExtensionImporter.ImportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapProtocolImporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定叫用 (Invoke) <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 方法的 <see cref="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" /> 執行個體。</summary>
        <value>叫用 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 方法的 <see cref="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" /> 執行個體。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.Services.Description.SoapProtocolImporter>物件會維護執行個體的參考<xref:System.Web.Services.Description.SoapExtensionImporter>衍生類型，然後再呼叫<xref:System.Web.Services.Description.SoapExtensionImporter.ImportMethod%2A>上每個這些執行個體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMethod">
      <MemberSignature Language="C#" Value="public abstract void ImportMethod (System.CodeDom.CodeAttributeDeclarationCollection metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportMethod(class System.CodeDom.CodeAttributeDeclarationCollection metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ImportMethod (metadata As CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ImportMethod(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata);" />
      <MemberSignature Language="F#" Value="abstract member ImportMethod : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit" Usage="soapExtensionImporter.ImportMethod metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="metadata"><see cref="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" /> 方法可在其中放置新 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 執行個體的 <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />。</param>
        <summary>在衍生類別中覆寫時，將程式碼屬性宣告加入表示繫結中作業的任何方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要套用的屬性宣告的方法不會直接由<xref:System.Web.Services.Description.SoapExtensionImporter.ImportMethod%2A>方法。 屬性會加入至繫結類別中的所有 Web 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>