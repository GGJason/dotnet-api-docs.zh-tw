<Type Name="SoapExtensionReflector" FullName="System.Web.Services.Description.SoapExtensionReflector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bdaa22b0a02a98ab2b7be6813340865189c2125" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30546612" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionReflector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionReflector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionReflector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionReflector" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionReflector abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>為類別提供公用介面和功能，以將 SOAP 擴充資訊加入每一方法的 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 物件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 抽象<xref:System.Web.Services.Description.SoapExtensionReflector>類別會公開一個抽象方法， <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>。 這個抽象方法允許衍生的類別放入物件至反映 Web 方法時加入 SOAP 延伸模組的說明<xref:System.Web.Services.Description.ServiceDescription>物件。 方法本身不是輸入。 描述取得所有屬於指定的繫結所產生的 Web 方法加入<xref:System.Web.Services.Description.ServiceDescription>。  
  
 您可以使用<xref:System.Web.Services.Description.ServiceDescription>產生透過 Web 服務描述語言 (WSDL) 文件<xref:System.Web.Services.Description.ServiceDescription.Write%2A>方法。 <xref:System.Web.Services.Description.ServiceDescriptionImporter>也可以使用類別和相關的類別<xref:System.Web.Services.Description.ServiceDescription>來產生用戶端 proxy 程式碼或抽象伺服端程式碼。  
  
 使用衍生自類別<xref:System.Web.Services.Description.SoapExtensionReflector>類別搭配使用的類別衍生自抽象<xref:System.Web.Services.Protocols.SoapExtension>類別，以擴充執行階段處理的 SOAP 訊息的用戶端或服務。  
  
 您可以指定<xref:System.Web.Services.Description.SoapExtensionReflector>透過組態檔中[ \<soapExtensionReflectorTypes > 項目](http://msdn.microsoft.com/library/6950609a-c9a3-4f6f-a5fc-a05d6d204d5c)項目和其子系**新增**項目。 您也可以發行 Web 服務的 ASP.NET Web 應用程式套用設定。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionReflector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionReflector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Description.SoapExtensionReflector" /> 類別的執行個體</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectDescription">
      <MemberSignature Language="C#" Value="public virtual void ReflectDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReflectDescription ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReflectDescription();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>產生服務特定描述資訊，該資訊位於對應繫結的 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ProtocolReflector ReflectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ProtocolReflector ReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ReflectionContext As ProtocolReflector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ProtocolReflector ^ ReflectionContext { System::Web::Services::Description::ProtocolReflector ^ get(); void set(System::Web::Services::Description::ProtocolReflector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ProtocolReflector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定類別的執行個體，該類別衍生自叫用 (Invoke) <see cref="T:System.Web.Services.Description.ProtocolReflector" /> 方法的抽象 <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> 類別。</summary>
        <value>類別的執行個體，該類別衍生自叫用 <see cref="T:System.Web.Services.Description.ProtocolReflector" /> 方法的抽象 <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> 類別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您實作衍生自類別<xref:System.Web.Services.Description.SoapExtensionReflector>`abstract`類別，您不需要實作的類別，衍生自<xref:System.Web.Services.Description.ProtocolReflector>叫用<xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>方法或設定<xref:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectMethod">
      <MemberSignature Language="C#" Value="public abstract void ReflectMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReflectMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReflectMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see langword="Abstract" /> 方法，衍生類別必須實作這個方法，才能將 SOAP 擴充資訊加入每一方法的 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>方法針對每個繫結所屬的 Web 方法呼叫的<xref:System.Web.Services.Description.ServiceDescription>代表。 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>方法不會直接使用 Web 方法。 SOAP 延伸模組的資訊會加入繫結，反映來自 Web 服務類別中的所有 Web 方法。  
  
 實作<xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>可以產生作業的繫結，例如資訊`abstract`作業，而且訊息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>