<Type Name="SoapProtocolImporter" FullName="System.Web.Services.Description.SoapProtocolImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4677669d9f3d1944591b272934538309aa3b8558" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224848" /></Metadata><TypeSignature Language="C#" Value="public class SoapProtocolImporter : System.Web.Services.Description.ProtocolImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapProtocolImporter extends System.Web.Services.Description.ProtocolImporter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapProtocolImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapProtocolImporter&#xA;Inherits ProtocolImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapProtocolImporter : System::Web::Services::Description::ProtocolImporter" />
  <TypeSignature Language="F#" Value="type SoapProtocolImporter = class&#xA;    inherit ProtocolImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Description.ProtocolImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>為使用 SOAP 通訊協定 (Protocol) 的 Web 服務產生類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>類別會產生用戶端 proxy 程式碼或根據 SOAP 通訊協定的抽象伺服端程式碼。 類別會產生每個支援的繫結 Web 服務描述語言 (WSDL) 文件中定義的類別。  
  
 一般而言，而不是叫用<xref:System.Web.Services.Description.SoapProtocolImporter>開發人員直接使用間接透過類別<xref:System.Web.Services.Description.ServiceDescriptionImporter>類別。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapProtocolImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapProtocolImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginClass">
      <MemberSignature Language="C#" Value="protected override System.CodeDom.CodeTypeDeclaration BeginClass ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.CodeDom.CodeTypeDeclaration BeginClass() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.BeginClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BeginClass () As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::CodeDom::CodeTypeDeclaration ^ BeginClass();" />
      <MemberSignature Language="F#" Value="override this.BeginClass : unit -&gt; System.CodeDom.CodeTypeDeclaration" Usage="soapProtocolImporter.BeginClass " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化繫結類別的產生。</summary>
        <returns>繫結類別。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定繫結，類別的產生過程<xref:System.Web.Services.Description.SoapProtocolImporter.BeginClass%2A>方法執行之前<xref:System.Web.Services.Description.SoapProtocolImporter>類別會產生對應至作業的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginNamespace">
      <MemberSignature Language="C#" Value="protected override void BeginNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.BeginNamespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BeginNamespace();" />
      <MemberSignature Language="F#" Value="override this.BeginNamespace : unit -&gt; unit" Usage="soapProtocolImporter.BeginNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>執行產生程式碼期間的整個程式碼命名空間 (Namespace) 初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 程式碼產生期間<xref:System.Web.Services.Description.SoapProtocolImporter.BeginNamespace%2A>方法執行之前<xref:System.Web.Services.Description.SoapProtocolImporter>類別會產生代表繫結的類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClass">
      <MemberSignature Language="C#" Value="protected override void EndClass ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndClass() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.EndClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndClass ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EndClass();" />
      <MemberSignature Language="F#" Value="override this.EndClass : unit -&gt; unit" Usage="soapProtocolImporter.EndClass " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在產生方法之後處理繫結類別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定繫結，類別的產生過程<xref:System.Web.Services.Description.SoapProtocolImporter.EndClass%2A>方法執行之後<xref:System.Web.Services.Description.SoapProtocolImporter>類別會產生對應至作業的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndNamespace">
      <MemberSignature Language="C#" Value="protected override void EndNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.EndNamespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EndNamespace();" />
      <MemberSignature Language="F#" Value="override this.EndNamespace : unit -&gt; unit" Usage="soapProtocolImporter.EndNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>執行繫結類別產生之後的整個程式碼命名空間處理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 程式碼產生期間<xref:System.Web.Services.Description.SoapProtocolImporter.EndNamespace%2A>方法執行之後<xref:System.Web.Services.Description.SoapProtocolImporter>類別會產生代表繫結的類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMethod">
      <MemberSignature Language="C#" Value="protected override System.CodeDom.CodeMemberMethod GenerateMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.CodeDom.CodeMemberMethod GenerateMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.GenerateMethod" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateMethod () As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::CodeDom::CodeMemberMethod ^ GenerateMethod();" />
      <MemberSignature Language="F#" Value="override this.GenerateMethod : unit -&gt; System.CodeDom.CodeMemberMethod" Usage="soapProtocolImporter.GenerateMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>產生繫結類別的方法程式碼。</summary>
        <returns>繫結類別的方法程式碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在特定的繫結，類別的產生期間<xref:System.Web.Services.Description.SoapProtocolImporter.GenerateMethod%2A>方法執行每個繫結類別方法，表示作業。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSupported">
      <MemberSignature Language="C#" Value="protected override bool IsBindingSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsBindingSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsBindingSupported" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsBindingSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsBindingSupported();" />
      <MemberSignature Language="F#" Value="override this.IsBindingSupported : unit -&gt; bool" Usage="soapProtocolImporter.IsBindingSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷是否可以產生目前繫結的類別。</summary>
        <returns>如果可以產生目前繫結的類別則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter.IsBindingSupported%2A>方法會判斷是否要產生目前繫結的類別表示的<xref:System.Web.Services.Description.ProtocolImporter.Binding%2A>屬性。 這個方法會檢查是否<xref:System.Web.Services.Description.ProtocolImporter.Binding%2A>屬性的<xref:System.Web.Services.Description.Binding.Extensions%2A>屬性包含<xref:System.Web.Services.Description.SoapBinding>執行個體。 此外，傳輸機制一貫<xref:System.Web.Services.Description.SoapBinding.Transport%2A>屬性必須支援目前的 Web 服務組態。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOperationFlowSupported">
      <MemberSignature Language="C#" Value="protected override bool IsOperationFlowSupported (System.Web.Services.Description.OperationFlow flow);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsOperationFlowSupported(valuetype System.Web.Services.Description.OperationFlow flow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsOperationFlowSupported(System.Web.Services.Description.OperationFlow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsOperationFlowSupported (flow As OperationFlow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsOperationFlowSupported(System::Web::Services::Description::OperationFlow flow);" />
      <MemberSignature Language="F#" Value="override this.IsOperationFlowSupported : System.Web.Services.Description.OperationFlow -&gt; bool" Usage="soapProtocolImporter.IsOperationFlowSupported flow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flow" Type="System.Web.Services.Description.OperationFlow" />
      </Parameters>
      <Docs>
        <param name="flow">表示傳送模式的 <see cref="T:System.Web.Services.Description.OperationFlow" /> 列舉值。</param>
        <summary>判斷是否支援目前作業的作業流程。</summary>
        <returns>如果支援目前作業的作業流程則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter.IsOperationFlowSupported%2A>方法會判斷是否要產生目前的作業，方法表示的<xref:System.Web.Services.Description.Operation>屬性。 這項評估會繫結所產生的類別中的每個作業的進行。 如果`false`會傳回值，<xref:System.Web.Services.Description.ProtocolImporter.UnsupportedOperationWarning%2A>方法執行。 A`true`輸入值時，才會傳回值<xref:System.Web.Services.Description.OperationFlow.OneWay>或<xref:System.Web.Services.Description.OperationFlow.RequestResponse>。  
  
 如需詳細資訊，請參閱 <xref:System.Web.Services.Description.OperationMessageCollection.Flow%2A> 屬性 (Property)。 <xref:System.Web.Services.Description.Operation.Messages%2A> 屬性是 <xref:System.Web.Services.Description.OperationMessageCollection> 型別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoapEncodingPresent">
      <MemberSignature Language="C#" Value="protected virtual bool IsSoapEncodingPresent (string uriList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSoapEncodingPresent(string uriList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsSoapEncodingPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsSoapEncodingPresent (uriList As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsSoapEncodingPresent(System::String ^ uriList);" />
      <MemberSignature Language="F#" Value="abstract member IsSoapEncodingPresent : string -&gt; bool&#xA;override this.IsSoapEncodingPresent : string -&gt; bool" Usage="soapProtocolImporter.IsSoapEncodingPresent uriList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriList">以空格分隔的 URI 清單。</param>
        <summary>檢查在表示 Uniform Resource Indicator (URI) 清單的字串中，是否存在 <c>"http://schemas.xmlsoap.org/soap/encoding/"</c>。</summary>
        <returns>若字串包含 <c>"http://schemas.xmlsoap.org/soap/encoding/"</c> 即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolName">
      <MemberSignature Language="C#" Value="public override string ProtocolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProtocolName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.ProtocolName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ProtocolName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProtocolName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolName : string" Usage="System.Web.Services.Description.SoapProtocolImporter.ProtocolName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 "Soap" 的值。</summary>
        <value><see cref="T:System.String" /> 物件，包含字串 "Soap"。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapBinding">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBinding SoapBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.SoapBinding SoapBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapBinding As SoapBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBinding ^ SoapBinding { System::Web::Services::Description::SoapBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapBinding : System.Web.Services.Description.SoapBinding" Usage="System.Web.Services.Description.SoapProtocolImporter.SoapBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.Services.Description.SoapBinding" /> 執行個體，這個執行個體是透過 <see cref="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" /> 屬性的 <see cref="P:System.Web.Services.Description.Binding.Extensions" /> 屬性取得的。</summary>
        <value><see cref="T:System.Web.Services.Description.SoapBinding" /> 執行個體，是透過 <see cref="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" /> 屬性的 <see cref="P:System.Web.Services.Description.Binding.Extensions" /> 屬性取得的。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapExporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapCodeExporter SoapExporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapCodeExporter SoapExporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapExporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapExporter As SoapCodeExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapCodeExporter ^ SoapExporter { System::Xml::Serialization::SoapCodeExporter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapExporter : System.Xml.Serialization.SoapCodeExporter" Usage="System.Web.Services.Description.SoapProtocolImporter.SoapExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapCodeExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得型別為 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 的物件，由 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別內部使用，以從 SOAP 編碼的 XML 結構描述內容與 .NET Framework 型別之間的對應產生程式碼。</summary>
        <value>型別為 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 的物件，由 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別內部使用，以從 SOAP 編碼的 XML 結構描述內容與 .NET Framework 型別之間的對應產生程式碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>類別會使用<xref:System.Xml.Serialization.SoapCodeExporter>物件來建立程式碼，從 XML 結構描述的.NET Framework 型別對應項目和資料類型，可讓 SOAP 編碼，而不常值 XML 結構描述使用方式。 SOAP 編碼的 SOAP 1.1 規格第 5 節中指定。 SOAP 編碼使用命名空間"http://schemas.xmlsoap.org/soap/encoding/」。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapImporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapSchemaImporter SoapImporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapSchemaImporter SoapImporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapImporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapImporter As SoapSchemaImporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapSchemaImporter ^ SoapImporter { System::Xml::Serialization::SoapSchemaImporter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapImporter : System.Xml.Serialization.SoapSchemaImporter" Usage="System.Web.Services.Description.SoapProtocolImporter.SoapImporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapSchemaImporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得型別為 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 的物件，由 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別內部使用，以產生 SOAP 編碼的 XML 結構描述內容與 .NET Framework 型別之間的對應。</summary>
        <value>型別為 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 的物件，由 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別內部使用，以產生 SOAP 編碼的 XML 結構描述內容與 .NET Framework 型別之間的對應。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>類別會使用<xref:System.Xml.Serialization.SoapSchemaImporter>物件來建立 XML 結構描述的.NET Framework 型別對應項目和資料類型，可讓 SOAP 編碼，而不常值 XML 結構描述使用方式。 SOAP 編碼的 SOAP 1.1 規格第 5 節中指定。 SOAP 編碼使用命名空間"http://schemas.xmlsoap.org/soap/encoding/」。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlExporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlCodeExporter XmlExporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlCodeExporter XmlExporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.XmlExporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlExporter As XmlCodeExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlCodeExporter ^ XmlExporter { System::Xml::Serialization::XmlCodeExporter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlExporter : System.Xml.Serialization.XmlCodeExporter" Usage="System.Web.Services.Description.SoapProtocolImporter.XmlExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlCodeExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得型別為 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 的物件，由 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別內部使用，以從常值 XML 結構描述內容與 .NET Framework 型別之間的對應產生程式碼。</summary>
        <value>型別為 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 的物件，由 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別內部使用，以從常值 XML 結構描述內容與 .NET Framework 型別之間的對應產生程式碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>類別會使用<xref:System.Xml.Serialization.XmlSchemaImporter>來建立 XML 結構描述的.NET Framework 型別對應需要常值 XML 結構描述使用方式，而不是 SOAP 編碼的項目和資料類型的物件。 SOAP 編碼的 SOAP 1.1 規格第 5 節中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlSchemaImporter XmlImporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlSchemaImporter XmlImporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.XmlImporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlImporter As XmlSchemaImporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlSchemaImporter ^ XmlImporter { System::Xml::Serialization::XmlSchemaImporter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlImporter : System.Xml.Serialization.XmlSchemaImporter" Usage="System.Web.Services.Description.SoapProtocolImporter.XmlImporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSchemaImporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得型別為 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 的物件，由 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別內部使用，以產生常值 XML 結構描述內容與 .NET Framework 型別之間的對應。</summary>
        <value>型別為 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 的物件，由 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 類別內部使用，以產生常值 XML 結構描述內容與 .NET Framework 型別之間的對應。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>類別會使用<xref:System.Xml.Serialization.XmlSchemaImporter>建立程式碼，從 XML 結構描述的.NET Framework 型別對應需要常值 XML 結構描述使用方式，而不是 SOAP 編碼的元素和資料類型的物件。 SOAP 編碼的 SOAP 1.1 規格第 5 節中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>