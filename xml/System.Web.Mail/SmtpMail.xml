<Type Name="SmtpMail" FullName="System.Web.Mail.SmtpMail">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5051177cb66ce3e7d6f6be5919055f37425abd35" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37751692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SmtpMail" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpMail extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Mail.SmtpMail" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpMail" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpMail" />
  <TypeSignature Language="F#" Value="type SmtpMail = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The recommended alternative is System.Net.Mail.SmtpClient. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供使用的 Collaboration Data Objects for Windows 2000 (CDOSYS) 訊息元件傳送訊息的屬性和方法。 建議的替代做法： <see cref="N:System.Net.Mail" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 透過 Microsoft Windows 2000 內建的 SMTP 郵件服務或任意的 SMTP 伺服器，可以傳遞的郵件訊息。 中的型別<xref:System.Web.Mail>從 ASP.NET 或從任何 managed 應用程式，就可以使用命名空間。  
  
 如果<xref:System.Web.Mail.SmtpMail.SmtpServer%2A>屬性未設定，郵件預設排入佇列在 Windows 2000 系統上，確保呼叫端程式不會封鎖網路流量。 如果<xref:System.Web.Mail.SmtpMail>屬性設定時，郵件會直接傳遞到指定的伺服器。  
  
   
  
## Examples  
 下列範例可編譯為主控台應用程式用來從命令列中傳送電子郵件。 如果您編譯為名為 MailMessage.exe 檔案範例，使用可執行檔來傳送電子郵件，如下所示：  
  
```  
MailMessage to@contoso.com from@contoso.com test hello  
```  
  
 [!code-csharp[System.Web.Mail.SmtpMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Mail.SmtpMail/CS/systemwebmailsmtpmail.cs#1)]
 [!code-vb[System.Web.Mail.SmtpMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Mail.SmtpMail/VB/systemwebmailsmtpmail.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳送電子郵件訊息。 建議的替代做法： <see cref="N:System.Net.Mail" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (System.Web.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(class System.Web.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mail.SmtpMail.Send(System.Web.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::Web::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="static member Send : System.Web.Mail.MailMessage -&gt; unit" Usage="System.Web.Mail.SmtpMail.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">要傳送的 <see cref="T:System.Web.Mail.MailMessage" />。</param>
        <summary>使用 <see cref="T:System.Web.Mail.MailMessage" /> 類別的屬性中提供的引數來傳送電子郵件訊息。 建議的替代做法： <see cref="N:System.Net.Mail" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用<xref:System.Web.Mail.MailMessage>傳送電子郵件訊息使用<xref:System.Web.Mail.SmtpMail>。  
  
 [!code-csharp[Classic SmtpMail.Send Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic SmtpMail.Send Example/CS/smtpmailsend.cs#1)]
 [!code-vb[Classic SmtpMail.Send Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic SmtpMail.Send Example/VB/smtpmailsend.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法傳送郵件。</exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <see cref="M:System.Web.Mail.SmtpMail.Send(System.Web.Mail.MailMessage)" /> 方法需要 Microsoft Windows NT、Windows 2000 或 Windows XP 作業系統。</exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string from, string to, string subject, string messageText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string from, string to, string subject, string messageText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Mail.SmtpMail.Send(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (from As String, to As String, subject As String, messageText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ messageText);" />
      <MemberSignature Language="F#" Value="static member Send : string * string * string * string -&gt; unit" Usage="System.Web.Mail.SmtpMail.Send (from, to, subject, messageText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="messageText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">電子郵件寄件者的地址。</param>
        <param name="to">電子郵件收件者的地址。</param>
        <param name="subject">電子郵件訊息的主旨。</param>
        <param name="messageText">電子郵件訊息的內文。</param>
        <summary>使用指定目的地參數來傳送電子郵件訊息。 建議的替代做法： <see cref="N:System.Net.Mail" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何將傳送簡單的訊息，使用<xref:System.Web.Mail.SmtpMail>。  
  
 [!code-csharp[Classic SmtpMail.Send Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic SmtpMail.Send Example/CS/smtpmailsend.cs#2)]
 [!code-vb[Classic SmtpMail.Send Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic SmtpMail.Send Example/VB/smtpmailsend.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <see cref="M:System.Web.Mail.SmtpMail.Send(System.String,System.String,System.String,System.String)" /> 方法需要 Microsoft Windows NT、Windows 2000 或 Windows XP 作業系統。</exception>
      </Docs>
    </Member>
    <Member MemberName="SmtpServer">
      <MemberSignature Language="C#" Value="public static string SmtpServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string SmtpServer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Mail.SmtpMail.SmtpServer" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SmtpServer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SmtpServer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmtpServer : string with get, set" Usage="System.Web.Mail.SmtpMail.SmtpServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SMTP 轉接郵件伺服器的名稱，用來傳送電子郵件訊息。 建議的替代做法： <see cref="N:System.Net.Mail" />。</summary>
        <value>電子郵件轉接伺服器的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您 （隨附於 Windows 2000 和 Windows Server 2003） 的本機 SMTP 伺服器位於防火牆會封鎖任何直接的 SMTP 流量 （透過連接埠 25），您必須了解是否有智慧主機可用的 SMTP 郵件轉接至 t 允許您網路上他網際網路。  
  
 智慧主機是直接向網際網路轉送外寄電子郵件訊息，從內部的 SMTP 伺服器的權限的 SMTP 伺服器。 智慧主機應該能夠同時連線到內部網路和網際網路才能與電子郵件閘道。  
  
   
  
## Examples  
 [!code-csharp[System.Web.Mail.SmtpMail.SmtpServer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Mail.SmtpMail.SmtpServer/CS/systemwebmailsmtpmailsmtpserver.cs#1)]
 [!code-vb[System.Web.Mail.SmtpMail.SmtpServer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Mail.SmtpMail.SmtpServer/VB/systemwebmailsmtpmailsmtpserver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>