<Type Name="NativeActivity&lt;TResult&gt;" FullName="System.Activities.NativeActivity&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d2e54474b53f6db6d17a0058f40ad1676f9eb3b" />
    <Meta Name="ms.sourcegitcommit" Value="b3480b6208c3cad466469e76294a96f5ab1ef04c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/16/2018" />
    <Meta Name="ms.locfileid" Value="35691556" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class NativeActivity&lt;TResult&gt; : System.Activities.Activity&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NativeActivity`1&lt;TResult&gt; extends System.Activities.Activity`1&lt;!TResult&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.NativeActivity`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NativeActivity(Of TResult)&#xA;Inherits Activity(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class NativeActivity abstract : System::Activities::Activity&lt;TResult&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.Activity&lt;TResult&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResult">TResult</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="12146-101">活動傳回的結果。</span>
      <span class="sxs-lookup">
        <span data-stu-id="12146-101">The result returned by the activity.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="12146-102">使用 <see cref="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)" /> 方法實作執行邏輯之自訂活動的抽象基底類別，可完整存取執行階段的功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="12146-102">Abstract base class for custom activities that implement execution logic using the <see cref="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)" /> method, that has full access to the runtime’s features.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="12146-103">下列程式碼範例將示範如何建立繼承自 <xref:System.Activities.NativeActivity%601> 的類別。</span><span class="sxs-lookup"><span data-stu-id="12146-103">The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="12146-104">這個範例取自[How to： 建立活動](~/docs/framework/windows-workflow-foundation/how-to-create-an-activity.md)步驟[入門教學課程&#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)。</span><span class="sxs-lookup"><span data-stu-id="12146-104">This example is from the [How to: Create an Activity](~/docs/framework/windows-workflow-foundation/how-to-create-an-activity.md) step of the  [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span>  
  
 [!code-csharp[CFX_WF_GettingStarted#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/readint.cs#1)]
 [!code-vb[CFX_WF_GettingStarted#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/readint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12146-105">在衍生類別中實作時，建立衍生類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-105">When implemented in a derived class, creates a new instance of the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected virtual void Abort (System.Activities.NativeActivityAbortContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort(class System.Activities.NativeActivityAbortContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Abort (context As NativeActivityAbortContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Abort(System::Activities::NativeActivityAbortContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityAbortContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="12146-106">活動執行的執行內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-106">The execution context in which the activity executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12146-107">在衍生類別中實作時，會採取動作以回應中止的活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-107">When implemented in a derived class, takes actions in response to the activity being aborted.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CacheMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12146-108">建立並驗證活動之引數、變數、子活動和活動委派的描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-108">Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12146-109">自訂活動作者可以在活動的 <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> 覆寫中提供驗證邏輯。</span><span class="sxs-lookup"><span data-stu-id="12146-109">Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> override.</span></span> <span data-ttu-id="12146-110">從 <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> 擲回的任何例外狀況都不會被視為驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="12146-110">Any exceptions that are thrown from <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="12146-111">這些例外狀況會從 <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> 的呼叫中逸出，而且必須由呼叫端處理。</span><span class="sxs-lookup"><span data-stu-id="12146-111">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.ActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub CacheMetadata (metadata As ActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::ActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.ActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="12146-112">未實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-112">Not implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12146-113">未實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-113">Not implemented.</span>
          </span>
          <span data-ttu-id="12146-114">請改用 <see cref="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-114">Use <see cref="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" /> instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12146-115">自訂活動作者可以在活動的 <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> 覆寫中提供驗證邏輯。</span><span class="sxs-lookup"><span data-stu-id="12146-115">Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> override.</span></span> <span data-ttu-id="12146-116">從 <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> 擲回的任何例外狀況都不會被視為驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="12146-116">Any exceptions that are thrown from <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="12146-117">這些例外狀況會從 <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> 的呼叫中逸出，而且必須由呼叫端處理。</span><span class="sxs-lookup"><span data-stu-id="12146-117">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected virtual void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="12146-118">封裝活動之引數、變數、子活動和活動委派的活動中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-118">The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12146-119">建立並驗證活動之引數、變數、子活動和活動委派的描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-119">Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12146-120">工作流程執行階段會使用 <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> 的預設實作，以確保工作流程的正確結構以及管理執行階段關聯性和存留期規則。</span><span class="sxs-lookup"><span data-stu-id="12146-120">The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules.</span></span> <span data-ttu-id="12146-121"><xref:System.Activities.NativeActivity%601.CacheMetadata%2A> 的預設實作會使用型別的 <xref:System.ComponentModel.TypeDescriptor> 檢查活動型別的公用成員。</span><span class="sxs-lookup"><span data-stu-id="12146-121">The default implementation of <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="12146-122">這些公用成員是型別<xref:System.Activities.Argument>， <xref:System.Activities.Variable>， [IEnumerable\<變數 >](xref:System.Collections.Generic.IEnumerable%601)， <xref:System.Activities.Activity>， [IEnumerable\<活動 >](xref:System.Collections.Generic.IEnumerable%601)，或<xref:System.Activities.ActivityDelegate>.</span><span class="sxs-lookup"><span data-stu-id="12146-122">These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [IEnumerable\<Variable>](xref:System.Collections.Generic.IEnumerable%601), <xref:System.Activities.Activity>, [IEnumerable\<Activity>](xref:System.Collections.Generic.IEnumerable%601), or <xref:System.Activities.ActivityDelegate>.</span></span> <span data-ttu-id="12146-123">您可以覆寫這個方法，以自訂活動之執行階段描述的建置，並提供自訂驗證邏輯。</span><span class="sxs-lookup"><span data-stu-id="12146-123">You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic.</span></span> <span data-ttu-id="12146-124">從 <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> 擲回的任何例外狀況都不會被視為驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="12146-124">Any exceptions that are thrown from <xref:System.Activities.NativeActivity%601.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="12146-125">這些例外狀況會從 <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> 的呼叫中逸出，而且必須由呼叫端處理。</span><span class="sxs-lookup"><span data-stu-id="12146-125">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12146-126">下列程式碼範例將示範如何在繼承自 <xref:System.Activities.NativeActivity%601> 的類別中使用 CacheMetadata。</span><span class="sxs-lookup"><span data-stu-id="12146-126">The following code sample demonstrates using CacheMetadata in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="12146-127">這個範例取自[自訂複合使用原生活動](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)範例。</span><span class="sxs-lookup"><span data-stu-id="12146-127">This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CustomCompositeNativeActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected virtual void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="12146-128">活動執行的執行內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-128">The execution context in which the activity executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12146-129">在衍生類別中實作時，執行邏輯以便在非失誤性的狀況下及早完成活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-129">When implemented in a derived class, runs logic to cause graceful early completion of the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="12146-130">下列程式碼範例將示範如何在繼承自 <xref:System.Activities.NativeActivity%601> 的類別中使用 Cancel。</span><span class="sxs-lookup"><span data-stu-id="12146-130">The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="12146-131">這個範例取自[非泛型 ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md)範例。</span><span class="sxs-lookup"><span data-stu-id="12146-131">This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.</span></span>  
  
 [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInduceIdle">
      <MemberSignature Language="C#" Value="protected virtual bool CanInduceIdle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInduceIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity`1.CanInduceIdle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CanInduceIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanInduceIdle { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12146-132">取得或設定值，這個值指出此活動是否會造成工作流程變為閒置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-132">Gets or sets a value that indicates whether the activity can cause the workflow to become idle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12146-133">如果活動會導致工作流程變為閒置，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-133">
              <see langword="true" /> if the activity can cause the workflow to become idle, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="12146-134">這個值預設為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-134">This value is <see langword="false" /> by default.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="12146-135">下列程式碼範例將示範如何在繼承自 <xref:System.Activities.NativeActivity%601> 的類別中使用 CanInduceIdle。</span><span class="sxs-lookup"><span data-stu-id="12146-135">The following code sample demonstrates using CanInduceIdle in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="12146-136">這個範例取自[等候的輸入活動&#91;WF 範例&#93;](~/docs/framework/windows-workflow-foundation/samples/wait-for-input-activity.md)範例。</span><span class="sxs-lookup"><span data-stu-id="12146-136">This example is from the [Wait For Input Activity &#91;WF Samples&#93;](~/docs/framework/windows-workflow-foundation/samples/wait-for-input-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_WaitForInput#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_waitforinput/cs/waitforinput/waitforinput.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected abstract void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="12146-137">活動執行的執行內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-137">The execution context in which the activity executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12146-138">在衍生類別中實作時，執行活動的執行邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-138">When implemented in a derived class, runs the activity’s execution logic.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="12146-139">下列程式碼範例將示範如何在繼承自 <xref:System.Activities.NativeActivity%601> 的類別中使用 Execute。</span><span class="sxs-lookup"><span data-stu-id="12146-139">The following code sample demonstrates using Execute in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="12146-140">這個範例取自[非泛型 ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md)範例。</span><span class="sxs-lookup"><span data-stu-id="12146-140">This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.</span></span>  
  
 [!code-csharp[wfs_NonGenericParallelForEach#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="protected override sealed Func&lt;System.Activities.Activity&gt; Implementation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class System.Activities.Activity&gt; Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity`1.Implementation" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Property Implementation As Func(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Func&lt;System::Activities::Activity ^&gt; ^ Implementation { Func&lt;System::Activities::Activity ^&gt; ^ get(); void set(Func&lt;System::Activities::Activity ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.IgnoreDataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12146-141">活動的執行邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-141">The execution logic of the activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12146-142">執行邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-142">The execution logic.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationVersion">
      <MemberSignature Language="C#" Value="protected internal override sealed Version ImplementationVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ImplementationVersion" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity`1.ImplementationVersion" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Property ImplementationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Version ^ ImplementationVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12146-143">取得或設定活動的實作版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-143">Gets or sets the implementation version of the activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12146-144">活動的實作版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-144">The implementation version of the activity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnCreateDynamicUpdateMap">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12146-145">建立動態更新的對應時引發事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-145">Raises an event when creating a map for the dynamic update.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="12146-146">中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-146">The metadata.</span>
          </span>
        </param>
        <param name="originalActivity">
          <span data-ttu-id="12146-147">原始活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-147">The original activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12146-148">建立動態更新的對應時引發事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-148">Raises an event when creating a map for the dynamic update.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.UpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub OnCreateDynamicUpdateMap (metadata As UpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::UpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.UpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="12146-149">中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-149">The metadata.</span>
          </span>
        </param>
        <param name="originalActivity">
          <span data-ttu-id="12146-150">原始活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-150">The original activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12146-151">建立動態更新的對應時引發事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-151">Raises an event when creating a map for the dynamic update.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstance">
      <MemberSignature Language="C#" Value="protected virtual void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateInstance(class System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UpdateInstance (updateContext As NativeActivityUpdateContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UpdateInstance(System::Activities::DynamicUpdate::NativeActivityUpdateContext ^ updateContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateContext" Type="System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
      </Parameters>
      <Docs>
        <param name="updateContext">
          <span data-ttu-id="12146-152">更新內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-152">The update context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12146-153">更新 <see cref="T:System.Activities.NativeActivity`1" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12146-153">Updates the instance of <see cref="T:System.Activities.NativeActivity`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>