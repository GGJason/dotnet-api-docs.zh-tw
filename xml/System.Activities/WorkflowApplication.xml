<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0bf7171683bfcf700a6829397846a86eebe8e09" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53291284" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <TypeSignature Language="F#" Value="type WorkflowApplication = class&#xA;    inherit WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7146e-101">提供工作流程單一執行個體的主機。</span><span class="sxs-lookup"><span data-stu-id="7146e-101">Provides a host for a single instance of a workflow.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-102"><xref:System.Activities.WorkflowApplication> 類別會提供工作流程單一執行個體的主機。</span><span class="sxs-lookup"><span data-stu-id="7146e-102">The <xref:System.Activities.WorkflowApplication> class provides a host for a single workflow instance.</span></span> <span data-ttu-id="7146e-103">這是工作流程執行階段管理的實際工作流程執行個體所屬的 Proxy。</span><span class="sxs-lookup"><span data-stu-id="7146e-103">It is a proxy to the actual workflow instance that is managed by the workflow runtime.</span></span> <span data-ttu-id="7146e-104"><xref:System.Activities.WorkflowApplication> 的使用者可指示工作流程執行階段呼叫 <xref:System.Activities.WorkflowApplication> 物件上適當的方法，以便在工作流程執行個體上執行動作。</span><span class="sxs-lookup"><span data-stu-id="7146e-104">Users of <xref:System.Activities.WorkflowApplication> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <xref:System.Activities.WorkflowApplication> object.</span></span> <span data-ttu-id="7146e-105">如果要求的動作無效，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7146e-105">If a requested action is not valid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7146e-106">使用 <xref:System.Activities.WorkflowApplication> 可執行下列工作：</span><span class="sxs-lookup"><span data-stu-id="7146e-106">Using <xref:System.Activities.WorkflowApplication> you can perform the following tasks:</span></span>  
  
1.  <span data-ttu-id="7146e-107">建立新的工作流程執行個體，或從執行個體存放區載入工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-107">Create a new workflow instance, or load a workflow instance from an instance store.</span></span>  
  
2.  <span data-ttu-id="7146e-108">提供工作流程執行個體中的活動使用的擴充。</span><span class="sxs-lookup"><span data-stu-id="7146e-108">Provide extensions to be used by activities within a workflow instance.</span></span>  
  
3.  <span data-ttu-id="7146e-109">控制工作流程執行個體的執行。</span><span class="sxs-lookup"><span data-stu-id="7146e-109">Control the execution of a workflow instance.</span></span>  
  
4.  <span data-ttu-id="7146e-110">繼續工作流程執行個體中的活動所使用的書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-110">Resume a bookmark created by an activity within a workflow instance.</span></span>  
  
5.  <span data-ttu-id="7146e-111">保存或卸載工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-111">Persist or unload a workflow instance.</span></span>  
  
6.  <span data-ttu-id="7146e-112">接收工作流程執行個體開發週期事件的通知。</span><span class="sxs-lookup"><span data-stu-id="7146e-112">Be notified of workflow instance lifecycle events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-113">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-113">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-114">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-114">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-115">當工作流程完成時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-115">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-116">建立 <see cref="T:System.Activities.WorkflowApplication" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-116">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication workflowDefinition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="7146e-117">工作流程定義。</span><span class="sxs-lookup"><span data-stu-id="7146e-117">The workflow definition.</span></span></param>
        <summary><span data-ttu-id="7146e-118">使用指定的工作流程定義，建立 <see cref="T:System.Activities.WorkflowApplication" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-118">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-119">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-119">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-120">系統會使用由單一 <xref:System.Activities.WorkflowApplication> 活動組成的工作流程定義來建構 `DiceRoll` 執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-120">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `DiceRoll` activity.</span></span> <span data-ttu-id="7146e-121">`DiceRoll` 活動具有兩個輸出引數，這些引數代表擲骰作業的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-121">The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation.</span></span> <span data-ttu-id="7146e-122">當工作流程完成時，<xref:System.Activities.WorkflowApplication.Completed%2A> 處理常式就會擷取輸出，而且主控台會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-122">When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.</span></span>  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Activities.WorkflowIdentity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="7146e-123">工作流程定義。</span><span class="sxs-lookup"><span data-stu-id="7146e-123">The workflow definition.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="7146e-124">定義識別。</span><span class="sxs-lookup"><span data-stu-id="7146e-124">The definition identity.</span></span></param>
        <summary><span data-ttu-id="7146e-125">使用指定的工作流程定義和定義識別，建立 <see cref="T:System.Activities.WorkflowApplication" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-125">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, inputs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="7146e-126">工作流程定義。</span><span class="sxs-lookup"><span data-stu-id="7146e-126">The workflow definition.</span></span></param>
        <param name="inputs"><span data-ttu-id="7146e-127">在工作流程定義的根活動上定義的引數值，以引數名稱做為索引鍵。</span><span class="sxs-lookup"><span data-stu-id="7146e-127">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span></span></param>
        <summary><span data-ttu-id="7146e-128">建立使用指定工作流程定義及引數值的 <see cref="T:System.Activities.WorkflowApplication" /> 類別新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-128">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-129">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-129">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-130">系統會使用由接受兩個輸入引數之單一 <xref:System.Activities.WorkflowApplication> 活動組成的工作流程定義以及包含兩個要傳遞之值的輸入引數字典 (以引數名稱做為索引鍵)，建構 `Divide` 執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-130">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</span></span> <span data-ttu-id="7146e-131">系統會處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-131">The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-132">當工作流程完成時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-132">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Activities.WorkflowIdentity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, inputs, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="7146e-133">工作流程定義。</span><span class="sxs-lookup"><span data-stu-id="7146e-133">The workflow definition.</span></span></param>
        <param name="inputs"><span data-ttu-id="7146e-134">定義識別。</span><span class="sxs-lookup"><span data-stu-id="7146e-134">The definition identity.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="7146e-135">在工作流程定義的根活動上定義的引數值，以引數名稱做為索引鍵。</span><span class="sxs-lookup"><span data-stu-id="7146e-135">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span></span></param>
        <summary><span data-ttu-id="7146e-136">建立使用指定的工作流程定義和引數值以及定義識別的 <see cref="T:System.Activities.WorkflowApplication" /> 類別新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-136">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values, and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-137">通知工作流程執行階段此工作流程執行個體應該中止。</span><span class="sxs-lookup"><span data-stu-id="7146e-137">Notifies the workflow runtime that this workflow instance should abort.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-138">當 <xref:System.Activities.WorkflowApplication> 所裝載的工作流程已中止時，系統就會叫用 <xref:System.Activities.WorkflowApplication.Aborted%2A> 處理常式，而不會叫用 <xref:System.Activities.WorkflowApplication.Completed%2A> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="7146e-138">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="workflowApplication.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7146e-139">通知工作流程執行階段此工作流程執行個體應該中止。</span><span class="sxs-lookup"><span data-stu-id="7146e-139">Notifies the workflow runtime that this workflow instance should abort.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-140">當 <xref:System.Activities.WorkflowApplication> 所裝載的工作流程已中止時，系統就會叫用 <xref:System.Activities.WorkflowApplication.Aborted%2A> 處理常式，而不會叫用 <xref:System.Activities.WorkflowApplication.Completed%2A> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="7146e-140">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-141">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-141">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-142">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-142">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-143">啟動工作流程之後，就會呼叫 <xref:System.Activities.WorkflowApplication.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-143">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="7146e-144">當工作流程中止時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-144">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="override this.Abort : string -&gt; unit" Usage="workflowApplication.Abort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-145">要求中止的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-145">The reason for the request to abort.</span></span></param>
        <summary><span data-ttu-id="7146e-146">通知工作流程執行階段此工作流程執行個體應該因指定原因而中止。</span><span class="sxs-lookup"><span data-stu-id="7146e-146">Notifies the workflow runtime that this workflow instance should abort for the specified reason.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-147">當 <xref:System.Activities.WorkflowApplication> 所裝載的工作流程已中止時，系統就會叫用 <xref:System.Activities.WorkflowApplication.Aborted%2A> 處理常式，而不會叫用 <xref:System.Activities.WorkflowApplication.Completed%2A> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="7146e-147">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-148">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-148">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-149">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-149">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-150">啟動工作流程之後，就會呼叫 <xref:System.Activities.WorkflowApplication.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-150">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="7146e-151">當工作流程中止時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-151">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Aborted : Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Aborted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-152">取得或設定終止工作流程執行個體時叫用的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="7146e-152">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</span></span></summary>
        <value><span data-ttu-id="7146e-153">終止工作流程執行個體時叫用的動作。</span><span class="sxs-lookup"><span data-stu-id="7146e-153">The action that is invoked when the workflow instance is aborted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-154">當 <xref:System.Activities.WorkflowApplication> 所裝載的工作流程已中止時，系統就會叫用 <xref:System.Activities.WorkflowApplication.Aborted%2A> 處理常式，而不會叫用 <xref:System.Activities.WorkflowApplication.Completed%2A> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="7146e-154">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-155">下列程式碼範例會檢查傳遞給 <xref:System.Activities.WorkflowApplicationAbortedEventArgs> 執行個體之 <xref:System.Activities.WorkflowApplication.Aborted%2A> 處理常式的 <xref:System.Activities.WorkflowApplication>，並且顯示工作流程中止原因的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-155">The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="member this.AddInitialInstanceValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="workflowApplication.AddInitialInstanceValues writeOnlyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues"><span data-ttu-id="7146e-156">要與首次持續性一同納入的中繼資料值。</span><span class="sxs-lookup"><span data-stu-id="7146e-156">The metadata values to be included with the first persistence.</span></span></param>
        <summary><span data-ttu-id="7146e-157">指定執行個體中繼資料值，這些值會連同第一個持續性新執行個體納入。</span><span class="sxs-lookup"><span data-stu-id="7146e-157">Specifies instance metadata values that are included with the first persistence of a new instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-158">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式取消工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-158">Cancels a workflow asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-159">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-159">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancel : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginCancel (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="7146e-160">取消作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-160">The method to be called when the cancel operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-161">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-161">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-162">使用指定的 <see cref="T:System.AsyncCallback" /> 和使用者提供的狀態，以非同步方式取消工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-162">Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-163">非同步取消作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-163">A reference to the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-164">若要判斷取消作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndCancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-164">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="7146e-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> 可以從 `callback` 方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="7146e-166">如果在取消作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndCancel%2A>，它會封鎖直到取消作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-166">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="7146e-167">根據預設，取消作業必須在 30 秒內完成，否則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndCancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-167">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="7146e-168">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步取消工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-168">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-169">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-169">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginCancel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-170">取消作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-170">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-171">取消作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-171">The method to be called when the cancel operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-172">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-172">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-173">使用指定的逾時間隔、<see cref="T:System.AsyncCallback" /> 和使用者提供的狀態，以非同步方式取消工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-173">Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-174">非同步取消作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-174">A reference to the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-175">若要判斷取消作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndCancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-175">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="7146e-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> 可以從 `callback` 參數中指定的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the method specified in the `callback` parameter.</span></span> <span data-ttu-id="7146e-177">如果在取消作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndCancel%2A>，它會封鎖直到取消作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-177">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="7146e-178">如果取消作業沒有在 `timeOut` 參數指定的間隔內完成，則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndCancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-178">If the cancel operation does not complete in the interval specified by the `timeOut` parameter, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="7146e-179">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步取消工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-179">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-180">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-180">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-181">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式建立預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-181">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginCreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-182">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-182">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="7146e-183">定義識別。</span><span class="sxs-lookup"><span data-stu-id="7146e-183">The definition identity.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="7146e-184">識別篩選條件。</span><span class="sxs-lookup"><span data-stu-id="7146e-184">The identity filter.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-185">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-185">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-186">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-186">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-187">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體存放區、定義識別、識別篩選器、回呼和狀態，非同步建立預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-187">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-188">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-188">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginCreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-189">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-189">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="7146e-190">定義識別。</span><span class="sxs-lookup"><span data-stu-id="7146e-190">The definition identity.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="7146e-191">識別篩選條件。</span><span class="sxs-lookup"><span data-stu-id="7146e-191">The identity filter.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-192">開始載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-192">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-193">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-193">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-194">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-194">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-195">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體存放區、定義識別、識別篩選器、逾時間隔、回呼和狀態，非同步建立預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-195">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-196">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-196">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-197">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式刪除預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-197">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginDeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner (instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-198">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-198">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-199">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-199">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-200">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-200">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-201">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體存放區、回呼和狀態，非同步刪除預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-201">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-202">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-202">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginDeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner (instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-203">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-203">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-204">開始載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-204">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-205">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-205">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-206">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-206">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-207">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體存放區、逾時間隔、回呼和狀態，非同步刪除預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-207">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-208">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-208">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-209">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式擷取執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-209">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetInstance (instanceId, instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="7146e-210">執行個體識別項。</span><span class="sxs-lookup"><span data-stu-id="7146e-210">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="7146e-211">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-211">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-212">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-212">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-213">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-213">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-214">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體識別碼、執行個體存放區、回呼和狀態，非同步擷取執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-214">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-215">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-215">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetInstance (instanceId, instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="7146e-216">執行個體識別項。</span><span class="sxs-lookup"><span data-stu-id="7146e-216">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="7146e-217">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-217">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-218">開始載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-218">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-219">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-219">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-220">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-220">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-221">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體識別碼、執行個體存放區、逾時間隔、回呼和狀態，非同步擷取執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-221">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-222">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-222">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-223">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式擷取可執行的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-223">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetRunnableInstance (instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-224">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-224">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-225">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-225">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-226">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-226">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-227">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體存放區、回呼和狀態，非同步擷取可執行的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-227">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-228">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-228">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetRunnableInstance (instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-229">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-229">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-230">開始載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-230">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-231">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-231">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-232">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-232">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-233">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體存放區、逾時間隔、回呼和狀態，非同步擷取可執行的執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-233">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-234">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-234">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-235">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式從執行個體存放區非同步載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-235">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-236">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-236">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7146e-237">執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-237">The instance.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-238">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-238">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-239">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-239">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-240">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體、回呼和狀態，從執行個體存放區非同步載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-240">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, callback and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-241">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-241">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="7146e-242">工作流程執行個體的全域唯一 128 位元識別碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-242">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-243">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-243">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-244">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-244">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-245">使用指定的執行個體識別項、回呼方法及使用者提供的狀態，以非同步方式從執行個體存放區載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-245">Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-246">非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="7146e-246">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, updateMap, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7146e-247">執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-247">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="7146e-248">更新對應。</span><span class="sxs-lookup"><span data-stu-id="7146e-248">The update map.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-249">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-249">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-250">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-250">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-251">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體、更新對應、回呼和狀態，從執行個體存放區非同步載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-251">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, callback and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-252">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-252">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7146e-253">執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-253">The instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-254">開始載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-254">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-255">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-255">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-256">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-256">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-257">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體、逾時間隔、回呼和狀態，從執行個體存放區非同步載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-257">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-258">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-258">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Guid * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instanceId, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="7146e-259">工作流程執行個體的全域唯一 128 位元識別碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-259">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-260">開始載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-260">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-261">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-261">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-262">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-262">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-263">使用指定的執行個體識別項、逾時時間、回呼方法及使用者提供的狀態，以非同步方式從執行個體存放區載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-263">Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-264">非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="7146e-264">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, updateMap, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7146e-265">執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-265">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="7146e-266">更新對應。</span><span class="sxs-lookup"><span data-stu-id="7146e-266">The update map.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-267">開始載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-267">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-268">完成開始載入作業時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-268">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-269">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-269">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-270">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以指定的執行個體、更新對應、逾時間隔、回呼和狀態，從執行個體存放區非同步載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-270">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-271">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-271">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-272">從 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 啟始載入可執行工作流程執行個體的非同步程序。</span><span class="sxs-lookup"><span data-stu-id="7146e-272">Initiates the asynchronous process of loading a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-273">可執行執行個體是計時器或執行個體鎖定已過期的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-273">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadRunnableInstance : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoadRunnableInstance (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="7146e-274">作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-274">The method to be called when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-275">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-275">An optional application-specific object containing information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-276">從 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 啟始載入可執行工作流程執行個體的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-276">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <returns><span data-ttu-id="7146e-277">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-277">A reference to the asynchronous operation</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-278">可執行執行個體是計時器或執行個體鎖定已過期的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-278">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="7146e-279">若要判斷載入作業是否成功，請呼叫 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-279">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="7146e-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> 可以從 `callback` 方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="7146e-281">如果在繼續作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>，它會封鎖直到繼續作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-281">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="7146e-282">根據預設，繼續作業必須在 30 秒內完成，否則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-282">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="7146e-283">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-283">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-284">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-284">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadRunnableInstance : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoadRunnableInstance (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-285">載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-285">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-286">作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-286">The method to be called when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-287">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-287">An optional application-specific object containing information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-288">使用指定逾時間隔，從 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 啟始載入可執行工作流程執行個體的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-288">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span></span></summary>
        <returns><span data-ttu-id="7146e-289">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-289">A reference to the asynchronous operation</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-290">可執行執行個體是計時器或執行個體鎖定已過期的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-290">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="7146e-291">若要判斷載入作業是否成功，請呼叫 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-291">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="7146e-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> 可以從 `callback` 方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="7146e-293">如果在繼續作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>，它會封鎖直到繼續作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-293">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="7146e-294">如果載入作業沒有在指定逾時間隔內完成，則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-294">If the load operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="7146e-295">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-295">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-296">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-296">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-297">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式將工作流程執行個體保存到執行個體存放區。</span><span class="sxs-lookup"><span data-stu-id="7146e-297">Persists a workflow instance to an instance store asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-298">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-298">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 <span data-ttu-id="7146e-299">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-299">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-300">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-300">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="7146e-301">保留作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-301">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-302">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-302">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-303">使用指定的回呼方法及使用者提供的狀態，以非同步方式將工作流程執行個體保存到執行個體存放區。</span><span class="sxs-lookup"><span data-stu-id="7146e-303">Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-304">非同步保留作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-304">A reference to the asynchronous persist operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-305">若要判斷保存作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndPersist%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-305">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="7146e-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="7146e-307">如果在保存作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndPersist%2A>，它會封鎖直到保存作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-307">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="7146e-308">如果保存作業沒有在 30 秒內完成，則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndPersist%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-308">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="7146e-309">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-309">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-310">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-310">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="7146e-311">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步保存工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-311">This method persists a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-312">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-312">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginPersist : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginPersist (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-313">保存作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-313">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-314">保留作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-314">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-315">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-315">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-316">使用指定的逾時間隔、回呼方法及使用者提供的狀態，以非同步方式將工作流程執行個體保存到執行個體存放區。</span><span class="sxs-lookup"><span data-stu-id="7146e-316">Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-317">非同步保留作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-317">A reference to the asynchronous persist operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-318">若要判斷保存作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndPersist%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-318">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="7146e-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="7146e-320">如果在保存作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndPersist%2A>，它會封鎖直到保存作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-320">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="7146e-321">如果保存作業沒有在指定的逾時間隔內完成，則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndPersist%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-321">If the persist operation does not complete within the specified time-out interval, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="7146e-322">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-322">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-323">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-323">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="7146e-324">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步保存工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-324">This method persists a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-325">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-325">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-326">啟始非同步作業以繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-326">Initiates an asynchronous operation to resume a bookmark.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : System.Activities.Bookmark * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmark, value, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="7146e-327">要繼續的書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-327">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="7146e-328">繼續書籤時，做為參數傳遞至所叫用方法的物件。</span><span class="sxs-lookup"><span data-stu-id="7146e-328">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-329">繼續作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-329">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-330">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-330">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-331">使用指定的值、回呼方法與狀態來啟始繼續書籤的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-331">Initiates an operation to resume a bookmark using the specified value, callback method, and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-332">非同步書籤繼續作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-332">A reference to the asynchronous bookmark resume operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-333">若要判斷繼續作業是否成功，請呼叫 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-333">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="7146e-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> 可以從 `callback` 方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="7146e-335">如果在繼續作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>，它會封鎖直到繼續作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-335">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="7146e-336">根據預設，繼續作業必須在 30 秒內完成，否則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-336">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="7146e-337">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-337">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-338">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-338">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : string * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmarkName, value, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="7146e-339">要繼續的書籤名稱。</span><span class="sxs-lookup"><span data-stu-id="7146e-339">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="7146e-340">繼續書籤時，做為參數傳遞至所叫用方法的物件。</span><span class="sxs-lookup"><span data-stu-id="7146e-340">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-341">完成非同步作業時呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-341">The method that is called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-342">非同步作業開始時，由呼叫執行緒保留之工作流程的執行狀態。</span><span class="sxs-lookup"><span data-stu-id="7146e-342">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</span></span></param>
        <summary><span data-ttu-id="7146e-343">使用指定的值、回呼方法與狀態來啟始非同步作業，以使用指定名稱繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-343">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</span></span> <span data-ttu-id="7146e-344">要繼續的書籤是由工作流程執行個體中的活動事先建立的。</span><span class="sxs-lookup"><span data-stu-id="7146e-344">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="7146e-345">書籤繼續作業的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-345">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-346">書籤結果會指出繼續作業是成功或是失敗。</span><span class="sxs-lookup"><span data-stu-id="7146e-346">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="7146e-347">要繼續的書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-347">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="7146e-348">繼續書籤時，做為參數傳遞至所叫用方法的物件。</span><span class="sxs-lookup"><span data-stu-id="7146e-348">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-349">繼續作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-349">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-350">繼續作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-350">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-351">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-351">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-352">使用指定的值、逾時間隔、回呼方法與狀態來啟始繼續書籤的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-352">Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</span></span></summary>
        <returns><span data-ttu-id="7146e-353">非同步書籤繼續作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-353">A reference to the asynchronous bookmark resume operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-354">若要判斷繼續作業是否成功，請呼叫 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-354">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="7146e-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> 可以從 `callback` 方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="7146e-356">如果在繼續作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>，它會封鎖直到繼續作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-356">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="7146e-357">如果繼續作業沒有在指定的逾時間隔內完成，則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-357">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="7146e-358">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-358">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-359">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-359">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : string * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmarkName, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="7146e-360">要繼續的書籤名稱。</span><span class="sxs-lookup"><span data-stu-id="7146e-360">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="7146e-361">繼續書籤時，做為參數傳遞至所叫用方法的物件。</span><span class="sxs-lookup"><span data-stu-id="7146e-361">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-362">書籤必須在期間內繼續的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-362">The time interval during which the bookmark must be resumed.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-363">完成非同步作業時呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-363">The method that is called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-364">非同步作業開始時，由呼叫執行緒儲存之工作流程的執行狀態。</span><span class="sxs-lookup"><span data-stu-id="7146e-364">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</span></span></param>
        <summary><span data-ttu-id="7146e-365">使用指定的值、逾時間隔、回呼方法與狀態來啟始非同步作業，以使用指定名稱繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-365">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</span></span> <span data-ttu-id="7146e-366">要繼續的書籤是由工作流程執行個體中的活動事先建立的。</span><span class="sxs-lookup"><span data-stu-id="7146e-366">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="7146e-367">書籤繼續作業的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-367">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-368">書籤結果會指出繼續作業是成功或是失敗。</span><span class="sxs-lookup"><span data-stu-id="7146e-368">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-369">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式啟動或繼續工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-369">Starts or resumes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-370">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-370">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginRun : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginRun (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="7146e-371">繼續作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-371">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-372">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-372">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-373">使用指定的回呼方法及使用者提供的狀態，以非同步方式啟動或繼續工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-373">Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-374">非同步執行作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-374">A reference to the asynchronous run operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-375">若要判斷執行作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndRun%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-375">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="7146e-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="7146e-377">如果在繼續作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndRun%2A>，它會封鎖直到繼續作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-377">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="7146e-378">根據預設，繼續作業必須在 30 秒內完成，否則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndRun%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-378">By default, the resume operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="7146e-379">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步啟動或繼續工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-379">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-380">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-380">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginRun : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginRun (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-381">繼續作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-381">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-382">繼續作業完成時要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-382">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-383">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-383">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-384">使用指定的逾時間隔、回呼方法及使用者提供的狀態，以非同步方式啟動或繼續工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-384">Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-385">非同步執行作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-385">A reference to the asynchronous run operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-386">若要判斷執行作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndRun%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-386">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="7146e-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="7146e-388">如果在繼續作業完成之前呼叫 <xref:System.Activities.WorkflowApplication.EndRun%2A>，它會封鎖直到繼續作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-388">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="7146e-389">如果繼續作業沒有在指定的逾時間隔內完成，則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndRun%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-389">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="7146e-390">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步啟動或繼續工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-390">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-391">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-391">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-392">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-392">Terminates a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-393">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-393">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : Exception * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-394">終止工作流程執行個體的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-394">The reason the workflow instance is terminated.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-395">當 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業已完成時，所要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-395">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-396">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-396">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-397">使用指定的例外狀況、回呼方法及使用者提供的狀態，以非同步方式終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-397">Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-398">目前 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-398">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-399">此方法會排程工作流程執行個體的終止。</span><span class="sxs-lookup"><span data-stu-id="7146e-399">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="7146e-400">若要在終止完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-400">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="7146e-401">若要判斷 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-401">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="7146e-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="7146e-403">如果在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 作業完成前呼叫 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>，它會封鎖直到 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-403">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="7146e-404">根據預設，<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業必須在 30 秒內完成，否則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-404">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="7146e-405">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步終止工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-405">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-406">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-406">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-407">終止工作流程執行個體的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-407">The reason for terminating the workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-408">當 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業已完成時，所要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-408">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-409">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-409">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-410">使用指定的錯誤訊息、回呼方法及使用者提供的狀態，非同步終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-410">Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-411">目前 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-411">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-412">此方法會排程工作流程執行個體的終止。</span><span class="sxs-lookup"><span data-stu-id="7146e-412">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="7146e-413">若要在終止完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-413">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="7146e-414">若要判斷 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-414">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="7146e-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="7146e-416">如果在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 作業完成前呼叫 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>，它會封鎖直到 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-416">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="7146e-417">根據預設，<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業必須在 30 秒內完成，否則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-417">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="7146e-418">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-418">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-419">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-419">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : Exception * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-420">終止工作流程執行個體的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-420">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-421"><see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-421">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-422">當 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業已完成時，所要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-422">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-423">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-423">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-424">使用指定的例外狀況、逾時間隔、回呼方法及使用者提供的狀態，以非同步方式終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-424">Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-425">目前 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-425">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-426">此方法會排程工作流程執行個體的終止。</span><span class="sxs-lookup"><span data-stu-id="7146e-426">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="7146e-427">若要在終止完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-427">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="7146e-428">若要判斷 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-428">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="7146e-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 可以從 `callback` 方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="7146e-430">如果在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 作業完成前呼叫 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>，它會封鎖直到 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-430">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="7146e-431">如果 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業沒有在指定的逾時間隔內完成，則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-431">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown.</span></span> <span data-ttu-id="7146e-432">從 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 擲回 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 處理期間發生的此例外或其他任何例外。</span><span class="sxs-lookup"><span data-stu-id="7146e-432">This or any other exceptions that occur during the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> process is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="7146e-433">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步終止工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-433">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-434">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-434">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : string * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-435">終止工作流程執行個體的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-435">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-436"><see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-436">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-437">當 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業已完成時，所要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-437">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-438">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-438">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-439">使用指定的錯誤訊息、逾時間隔、回呼方法及使用者提供的狀態，非同步終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-439">Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-440">非同步 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-440">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-441">此方法會排程工作流程執行個體的終止。</span><span class="sxs-lookup"><span data-stu-id="7146e-441">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="7146e-442">若要在終止完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-442">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="7146e-443">若要判斷 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-443">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="7146e-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="7146e-445">如果在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 作業完成前呼叫 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>，它會封鎖直到 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-445">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="7146e-446">如果 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業沒有在指定的逾時間隔內完成，則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-446">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="7146e-447">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-447">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-448">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-448">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-449">使用 <see cref="T:System.IAsyncResult" /> 非同步設計模式，以非同步方式保存和處置工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-449">Persists and disposes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-450">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-450">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 <span data-ttu-id="7146e-451">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-451">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-452">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-452">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginUnload : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginUnload (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="7146e-453">當 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 作業已完成時，所要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-453">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-454">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-454">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-455">使用指定的回呼方法及使用者提供的狀態，以非同步方式保存和處置工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-455">Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-456">非同步 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-456">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-457">若要判斷 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndUnload%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-457">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="7146e-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="7146e-459">如果在 <xref:System.Activities.WorkflowApplication.EndUnload%2A> 作業完成前呼叫 <xref:System.Activities.WorkflowApplication.BeginUnload%2A>，它會封鎖直到 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-459">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="7146e-460">根據預設，<xref:System.Activities.WorkflowApplication.BeginUnload%2A> 作業必須在 30 秒內完成，否則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndUnload%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-460">By default, the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="7146e-461">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-461">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-462">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-462">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="7146e-463">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步保存和處置工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-463">This method persists and disposes a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-464">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-464">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginUnload : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginUnload (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-465"><see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-465">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="7146e-466">當 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 作業已完成時，所要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7146e-466">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="7146e-467">選擇性的應用程式特定物件，其中包含非同步作業的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-467">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="7146e-468">使用指定的逾時間隔、回呼方法及使用者提供的狀態，以非同步方式保存和處置工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-468">Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="7146e-469">非同步 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-469">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-470">若要判斷 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 作業是否成功，請呼叫<xref:System.Activities.WorkflowApplication.EndUnload%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-470">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="7146e-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> 可以從 `callback` 參數中參考的方法之內或之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="7146e-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="7146e-472">如果在 <xref:System.Activities.WorkflowApplication.EndUnload%2A> 作業完成前呼叫 <xref:System.Activities.WorkflowApplication.BeginUnload%2A>，它會封鎖直到 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-472">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="7146e-473">如果 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 作業沒有在指定的逾時間隔內完成，則會從 <xref:System.TimeoutException> 擲回 <xref:System.Activities.WorkflowApplication.EndUnload%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-473">If the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="7146e-474">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-474">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-475">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-475">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="7146e-476">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步保存和卸載工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-476">This method persists and unloads a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-477">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-477">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-478">取消工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-478">Cancels the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-479">此方法會排程工作流程執行個體的取消。</span><span class="sxs-lookup"><span data-stu-id="7146e-479">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="7146e-480">若要在取消完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-480">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="7146e-481">根據預設，取消作業必須在 30 秒內完成，否則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-481">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="workflowApplication.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7146e-482">取消工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-482">Cancels the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-483">此方法會排程工作流程執行個體的取消。</span><span class="sxs-lookup"><span data-stu-id="7146e-483">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="7146e-484">若要在取消完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="7146e-484">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
 <span data-ttu-id="7146e-485">根據預設，取消作業必須在 30 秒內完成，否則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-485">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-486">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-486">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-487">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-487">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-488">啟動工作流程之後，就會呼叫 <xref:System.Activities.WorkflowApplication.Cancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-488">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="7146e-489">當工作流程取消時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-489">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Cancel : TimeSpan -&gt; unit" Usage="workflowApplication.Cancel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-490">取消作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-490">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-491">取消使用指定逾時間隔的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-491">Cancels the workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-492">此方法會排程工作流程執行個體的取消。</span><span class="sxs-lookup"><span data-stu-id="7146e-492">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="7146e-493">若要在取消完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="7146e-493">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-494">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-494">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-495">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-495">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-496">啟動工作流程之後，就會呼叫 <xref:System.Activities.WorkflowApplication.Cancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-496">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="7146e-497">當工作流程取消時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-497">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Completed : Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Completed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-498">取得或設定完成工作流程執行個體時所叫用的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="7146e-498">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</span></span></summary>
        <value><span data-ttu-id="7146e-499">完成工作流程執行個體時叫用的動作。</span><span class="sxs-lookup"><span data-stu-id="7146e-499">The action that is invoked when the workflow instance is complete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-500">下列程式碼範例會檢查傳遞給 <xref:System.Activities.WorkflowApplicationCompletedEventArgs> 執行個體之 <xref:System.Activities.WorkflowApplication.Completed%2A> 處理常式的 <xref:System.Activities.WorkflowApplication>，並且顯示工作流程如何完成的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7146e-500">The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Completed%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-501">建立工作流程的預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-501">Creates a default instance owner for the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter -&gt; unit" Usage="System.Activities.WorkflowApplication.CreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-502">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-502">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="7146e-503">工作流程的定義識別。</span><span class="sxs-lookup"><span data-stu-id="7146e-503">The definition identity of the workflow.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="7146e-504">識別篩選條件。</span><span class="sxs-lookup"><span data-stu-id="7146e-504">The identity filter.</span></span></param>
        <summary><span data-ttu-id="7146e-505">使用指定的執行個體存放區、定義識別和識別篩選器，建立工作流程的預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-505">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * TimeSpan -&gt; unit" Usage="System.Activities.WorkflowApplication.CreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-506">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-506">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="7146e-507">工作流程的定義識別。</span><span class="sxs-lookup"><span data-stu-id="7146e-507">The definition identity of the workflow.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="7146e-508">識別篩選條件。</span><span class="sxs-lookup"><span data-stu-id="7146e-508">The identity filter.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-509">開始載入作業必須在作業取消前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-509">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="7146e-510">使用指定的執行個體存放區、定義識別、識別篩選器和逾時間隔，建立工作流程的預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-510">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-511">刪除工作流程的預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-511">Deletes a default instance owner for the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member DeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore -&gt; unit" Usage="System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner instanceStore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-512">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-512">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <summary><span data-ttu-id="7146e-513">以指定的執行個體存放區，刪除工作流程的預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-513">Deletes a default instance owner for the workflow with specified instance store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member DeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; unit" Usage="System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner (instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-514">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-514">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-515">開始載入作業必須在作業取消前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-515">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="7146e-516">以指定的執行個體存放區和逾時間隔，刪除工作流程的預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-516">Deletes a default instance owner for the workflow with specified instance store and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndCancel : IAsyncResult -&gt; unit" Usage="workflowApplication.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7146e-517">非同步取消作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-517">The asynchronous cancel operation.</span></span></param>
        <summary><span data-ttu-id="7146e-518">等候暫止的非同步取消作業完成。</span><span class="sxs-lookup"><span data-stu-id="7146e-518">Waits for the pending asynchronous cancel operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-519">這個方法可判斷 <xref:System.Activities.WorkflowApplication.BeginCancel%2A> 作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="7146e-519">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operation was successful.</span></span> <span data-ttu-id="7146e-520">如果在取消作業完成之前呼叫，它會封鎖直到取消作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-520">If called before the cancel operation completes, it blocks until the cancel operation is complete.</span></span>  
  
 <span data-ttu-id="7146e-521">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來完成非同步取消作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-521">This method completes the asynchronous cancel operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-522">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-522">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndCreateDefaultInstanceOwner : IAsyncResult -&gt; unit" Usage="System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7146e-523">非同步結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-523">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="7146e-524">等候完成建立預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-524">Waits for the creation of default instance owner to complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndDeleteDefaultInstanceOwner : IAsyncResult -&gt; unit" Usage="System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7146e-525">非同步結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-525">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="7146e-526">等候完成刪除預設執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="7146e-526">Waits for the deletion of default instance owner to complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetInstance : IAsyncResult -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.EndGetInstance asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7146e-527">非同步結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-527">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="7146e-528">等候完成擷取執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-528">Waits for the instance retrieval to complete.</span></span></summary>
        <returns><span data-ttu-id="7146e-529">運算的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-529">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetRunnableInstance : IAsyncResult -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.EndGetRunnableInstance asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7146e-530">非同步結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-530">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="7146e-531">等候完成可執行之執行個體作業的非同步擷取。</span><span class="sxs-lookup"><span data-stu-id="7146e-531">Waits for the asynchronous retrieval of runnable instance operation to complete.</span></span></summary>
        <returns><span data-ttu-id="7146e-532">運算的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-532">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndLoad : IAsyncResult -&gt; unit" Usage="workflowApplication.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7146e-533">非同步載入作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-533">The asynchronous load operation.</span></span></param>
        <summary><span data-ttu-id="7146e-534">等候暫止的非同步載入作業完成。</span><span class="sxs-lookup"><span data-stu-id="7146e-534">Waits for the pending asynchronous load operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-535">如果在載入作業完成之前呼叫這個方法，它會封鎖直到載入作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-535">If this method is called before the loading operation completes, it blocks until the loading operation is complete.</span></span>  
  
 <span data-ttu-id="7146e-536">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來完成非同步載入作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-536">This method completes the asynchronous load operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-537">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-537">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndLoadRunnableInstance : IAsyncResult -&gt; unit" Usage="workflowApplication.EndLoadRunnableInstance result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7146e-538">非同步載入作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-538">A reference to the asynchronous load operation.</span></span></param>
        <summary><span data-ttu-id="7146e-539">等候非同步載入可執行執行個體作業完成。</span><span class="sxs-lookup"><span data-stu-id="7146e-539">Waits for the asynchronous load runnable instance operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-540">這個方法可判斷 <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> 作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="7146e-540">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operation was successful.</span></span> <span data-ttu-id="7146e-541">如果在載入作業完成之前呼叫，它會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-541">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7146e-542">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步載入工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-542">This method loads workflows asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-543">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-543">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndPersist : IAsyncResult -&gt; unit" Usage="workflowApplication.EndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7146e-544">非同步保存作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-544">The asynchronous persist operation.</span></span></param>
        <summary><span data-ttu-id="7146e-545">等候暫止的非同步保存作業完成。</span><span class="sxs-lookup"><span data-stu-id="7146e-545">Waits for the pending asynchronous persist operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-546">這個方法可判斷 <xref:System.Activities.WorkflowApplication.BeginPersist%2A> 作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="7146e-546">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operation was successful.</span></span> <span data-ttu-id="7146e-547">如果在保存作業完成之前呼叫，它會封鎖直到保存作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-547">If called before the persist operation completes, it blocks until the persist operation is complete.</span></span>  
  
 <span data-ttu-id="7146e-548">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來完成非同步保存作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-548">This method completes the asynchronous persist operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-549">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-549">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.EndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7146e-550">非同步書籤繼續作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-550">A reference to the asynchronous bookmark resume operation.</span></span></param>
        <summary><span data-ttu-id="7146e-551">等候書籤繼續作業完成</span><span class="sxs-lookup"><span data-stu-id="7146e-551">Waits for a bookmark resume operation to complete.</span></span></summary>
        <returns><span data-ttu-id="7146e-552">指出書籤繼續作業結果的其中一個列舉值。</span><span class="sxs-lookup"><span data-stu-id="7146e-552">One of the enumeration values that indicates the results of a bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-553">這個方法可判斷 <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> 作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="7146e-553">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operation was successful.</span></span> <span data-ttu-id="7146e-554">如果在載入作業完成之前呼叫，它會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-554">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7146e-555">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來非同步繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-555">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-556">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-556">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndRun : IAsyncResult -&gt; unit" Usage="workflowApplication.EndRun result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7146e-557">非同步執行作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-557">The asynchronous run operation.</span></span></param>
        <summary><span data-ttu-id="7146e-558">等候暫止的非同步執行作業完成。</span><span class="sxs-lookup"><span data-stu-id="7146e-558">Waits for the pending asynchronous run operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-559">這個方法可判斷 <xref:System.Activities.WorkflowApplication.BeginRun%2A> 作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="7146e-559">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginRun%2A> operation was successful.</span></span> <span data-ttu-id="7146e-560">如果在繼續作業完成之前呼叫此方法，它會封鎖直到繼續作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-560">If called before the resume operation completes, it blocks until the resume operation is complete.</span></span>  
  
 <span data-ttu-id="7146e-561">這個方法會使用 <xref:System.IAsyncResult> 非同步設計模式來完成非同步執行作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-561">This method completes an asynchronous run operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-562">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-562">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndTerminate : IAsyncResult -&gt; unit" Usage="workflowApplication.EndTerminate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7146e-563">非同步終止作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-563">The asynchronous terminate operation.</span></span></param>
        <summary><span data-ttu-id="7146e-564">等候暫止的非同步終止作業完成。</span><span class="sxs-lookup"><span data-stu-id="7146e-564">Waits for the pending asynchronous terminate operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-565">呼叫這個方法即可判斷 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="7146e-565">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful.</span></span> <span data-ttu-id="7146e-566">如果在終止作業完成之前呼叫，它會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-566">If called before the terminate operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7146e-567">這個方法會使用 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 非同步設計模式來完成非同步的 <xref:System.IAsyncResult> 作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-567">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-568">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-568">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndUnload : IAsyncResult -&gt; unit" Usage="workflowApplication.EndUnload result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7146e-569">非同步卸載作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-569">The asynchronous unload operation.</span></span></param>
        <summary><span data-ttu-id="7146e-570">等候暫止的非同步卸載作業完成。</span><span class="sxs-lookup"><span data-stu-id="7146e-570">Waits for the pending asynchronous unload operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-571">呼叫這個方法即可判斷 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="7146e-571">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful.</span></span> <span data-ttu-id="7146e-572">如果在卸載作業完成之前呼叫，它會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-572">If called before the unload operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7146e-573">這個方法會使用 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 非同步設計模式來完成非同步的 <xref:System.IAsyncResult> 作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-573">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="7146e-574">如需詳細資訊，請參閱 <<c0> [ 非同步程式設計的概觀](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-574">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Activities.Hosting.WorkflowInstanceExtensionManager" Usage="System.Activities.WorkflowApplication.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-575">取得目前工作流程執行個體延伸的集合。</span><span class="sxs-lookup"><span data-stu-id="7146e-575">Gets the collection of extensions for the current workflow instance.</span></span></summary>
        <value><span data-ttu-id="7146e-576">物件的集合。</span><span class="sxs-lookup"><span data-stu-id="7146e-576">A collection of objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-577">傳回工作流程執行個體的書籤集合。</span><span class="sxs-lookup"><span data-stu-id="7146e-577">Returns the collection of bookmarks for the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberSignature Language="F#" Value="member this.GetBookmarks : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="workflowApplication.GetBookmarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7146e-578">傳回工作流程執行個體的書籤集合。</span><span class="sxs-lookup"><span data-stu-id="7146e-578">Returns the collection of bookmarks for the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="7146e-579">工作流程執行個體的書籤唯讀集合。</span><span class="sxs-lookup"><span data-stu-id="7146e-579">A read-only collection of bookmarks for the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-580">如果這個作業沒有在 30 秒內完成，則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-580">If this operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-581">下列範例會建立使用 `ReadLine` 活動的工作流程，而這個活動會建立 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="7146e-581">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="7146e-582">系統會啟動工作流程，而且一旦建立 <xref:System.Activities.Bookmark> 並且工作流程處於閒置狀態之後，就會呼叫 <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-582">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="7146e-583">當工作流程完成時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-583">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetBookmarks : TimeSpan -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="workflowApplication.GetBookmarks timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-584">這個方法必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-584">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-585">傳回使用指定逾時間隔的工作流程執行個體書籤集合。</span><span class="sxs-lookup"><span data-stu-id="7146e-585">Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</span></span></summary>
        <returns><span data-ttu-id="7146e-586">工作流程執行個體的書籤唯讀集合。</span><span class="sxs-lookup"><span data-stu-id="7146e-586">A read-only collection of bookmarks for the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-587">下列範例會建立使用 `ReadLine` 活動的工作流程，而這個活動會建立 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="7146e-587">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="7146e-588">系統會啟動工作流程，而且一旦建立 <xref:System.Activities.Bookmark> 並且工作流程處於閒置狀態之後，就會呼叫 <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-588">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="7146e-589">當工作流程完成時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-589">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-590">擷取工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-590">Retrieves the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member GetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetInstance (instanceId, instanceStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="7146e-591">執行個體識別項。</span><span class="sxs-lookup"><span data-stu-id="7146e-591">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="7146e-592">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-592">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <summary><span data-ttu-id="7146e-593">使用指定的執行個體識別項和執行個體存放區擷取工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-593">Retrieves the workflow instance using specified instance identifier and instance store.</span></span></summary>
        <returns><span data-ttu-id="7146e-594">擷取的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-594">The retrieved instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member GetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetInstance (instanceId, instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="7146e-595">執行個體識別項。</span><span class="sxs-lookup"><span data-stu-id="7146e-595">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="7146e-596">目前工作流程應用程式執行個體的永續性狀態的存取權。</span><span class="sxs-lookup"><span data-stu-id="7146e-596">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-597">開始載入作業必須在作業取消前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-597">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="7146e-598">使用指定的執行個體識別項、執行個體存放區和逾時間隔擷取工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-598">Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</span></span></summary>
        <returns><span data-ttu-id="7146e-599">非同步作業的參考。</span><span class="sxs-lookup"><span data-stu-id="7146e-599">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-600">擷取工作流程的可執行執行個體狀態。</span><span class="sxs-lookup"><span data-stu-id="7146e-600">Retrieves the runnable instance of the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member GetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetRunnableInstance instanceStore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-601">目前工作流程應用程式執行個體的永續性狀態的存取權</span><span class="sxs-lookup"><span data-stu-id="7146e-601">The access to the persisted state of the current instance of the workflow application</span></span></param>
        <summary><span data-ttu-id="7146e-602">以指定的執行個體存放區擷取工作流程的可執行執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-602">Retrieves the runnable instance of the workflow with specified instance store.</span></span></summary>
        <returns><span data-ttu-id="7146e-603">可執行的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-603">The runnable instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member GetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetRunnableInstance (instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="7146e-604">目前工作流程應用程式執行個體的永續性狀態的存取權</span><span class="sxs-lookup"><span data-stu-id="7146e-604">The access to the persisted state of the current instance of the workflow application</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-605">開始載入作業必須在作業取消前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-605">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="7146e-606">以指定的執行個體存放區和逾時間隔，擷取工作流程的可執行執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-606">Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</span></span></summary>
        <returns><span data-ttu-id="7146e-607">可執行的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-607">The runnable instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Activities.WorkflowApplication.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-608">取得目前工作流程應用程式執行個體中的 128 位元 GUID 識別碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-608">Gets the 128-bit GUID identifier of the current workflow application instance.</span></span></summary>
        <value><span data-ttu-id="7146e-609">128 位元 GUID 識別碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-609">A 128-bit GUID identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-610">下列範例會建立 <xref:System.Activities.WorkflowApplication> 執行個體，然後在主控台中顯示 <xref:System.Activities.WorkflowApplication.Id%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="7146e-610">The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the <xref:System.Activities.WorkflowApplication.Id%2A> value to the console.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Idle : Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Idle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-611">取得或設定現有工作流程執行個體故障時叫用的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="7146e-611">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</span></span></summary>
        <value><span data-ttu-id="7146e-612">在工作流程執行個體閒置時執行的動作。</span><span class="sxs-lookup"><span data-stu-id="7146e-612">An action that executes when a workflow instance becomes idle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-613">下列程式碼範例會檢查傳遞給 <xref:System.Activities.WorkflowApplicationIdleEventArgs> 執行個體之 <xref:System.Activities.WorkflowApplication.Idle%2A> 處理常式的 <xref:System.Activities.WorkflowApplication>。</span><span class="sxs-lookup"><span data-stu-id="7146e-613">The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Idle%2A> handler of a <xref:System.Activities.WorkflowApplication> instance.</span></span> <span data-ttu-id="7146e-614">在此範例中，處於閒置狀態的工作流程具有一個名為 <xref:System.Activities.Bookmark> 且由名為 `EnterGuess` 之活動所擁有的 `ReadInt`。</span><span class="sxs-lookup"><span data-stu-id="7146e-614">In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`.</span></span> <span data-ttu-id="7146e-615">此程式碼範例為基礎的[How to:執行工作流程](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md)，這屬於[入門教學課程 &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-615">This code example is based off of [How to: Run a Workflow](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span> <span data-ttu-id="7146e-616">如果該步驟中的 <xref:System.Activities.WorkflowApplication.Idle%2A> 處理常式修改為包含此範例中的程式碼，就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-616">If the <xref:System.Activities.WorkflowApplication.Idle%2A> handler in that step is modified to contain the code from this example, the following output is displayed.</span></span>  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceStore : System.Runtime.DurableInstancing.InstanceStore with get, set" Usage="System.Activities.WorkflowApplication.InstanceStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-617">取得或設定物件，這個物件會針對目前工作流程應用程式之執行個體的存放狀態提供存取。</span><span class="sxs-lookup"><span data-stu-id="7146e-617">Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</span></span></summary>
        <value><span data-ttu-id="7146e-618">執行個體存放區。</span><span class="sxs-lookup"><span data-stu-id="7146e-618">An instance store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-619">下列範例會建立 WorkflowApplication 執行個體，然後使用 <xref:System.Activities.WorkflowApplication.InstanceStore%2A> 來設定 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>。</span><span class="sxs-lookup"><span data-stu-id="7146e-619">The following example creates a WorkflowApplication instance and then configures the <xref:System.Activities.WorkflowApplication.InstanceStore%2A> using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="7146e-620">此程式碼範例屬於[How to:建立並執行 a Long Running Workflow](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)，這屬於[入門教學課程 &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)。</span><span class="sxs-lookup"><span data-stu-id="7146e-620">This code example is part of [How to: Create and Run a Long Running Workflow](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-621">從執行個體存放區載入工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-621">Loads a workflow instance from an instance store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance -&gt; unit" Usage="workflowApplication.Load instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7146e-622">執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-622">The instance.</span></span></param>
        <summary><span data-ttu-id="7146e-623">以指定的執行個體，從執行個體存放區載入工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-623">Loads a workflow instance from an instance store with specified instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.Load : Guid -&gt; unit" Usage="workflowApplication.Load instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="7146e-624">工作流程執行個體的全域唯一 128 位元識別碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-624">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <summary><span data-ttu-id="7146e-625">將指定的工作流程執行個體從執行個體存放區載入記憶體中。</span><span class="sxs-lookup"><span data-stu-id="7146e-625">Loads the specified workflow instance into memory from an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-626">下列範例會呼叫 <xref:System.Activities.WorkflowApplication.Load%2A>，從 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> 中載入已保存的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-626">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="7146e-627">這個範例取自`LoadAndCompleteInstance`方法中的[保存工作流程應用程式](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)範例。</span><span class="sxs-lookup"><span data-stu-id="7146e-627">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; unit" Usage="workflowApplication.Load (instance, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7146e-628">執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-628">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="7146e-629">更新對應。</span><span class="sxs-lookup"><span data-stu-id="7146e-629">The update map.</span></span></param>
        <summary><span data-ttu-id="7146e-630">以指定的執行個體和更新對應，從執行個體存放區載入工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-630">Loads a workflow instance from an instance store with specified instance and update map.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7146e-631">執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-631">The instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-632">開始載入作業必須在作業取消前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-632">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="7146e-633">以指定的執行個體和逾時間隔，從執行個體存放區載入工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-633">Loads a workflow instance from an instance store with specified instance and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : Guid * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instanceId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="7146e-634">工作流程執行個體的全域唯一 128 位元識別碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-634">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-635">載入作業必須在載入作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-635">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-636">使用指定逾時間隔，將指定的工作流程執行個體從執行個體存放區載入記憶體。</span><span class="sxs-lookup"><span data-stu-id="7146e-636">Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-637">下列範例會呼叫 <xref:System.Activities.WorkflowApplication.Load%2A>，從 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> 中載入已保存的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-637">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="7146e-638">這個範例取自`LoadAndCompleteInstance`方法中的[保存工作流程應用程式](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)範例。</span><span class="sxs-lookup"><span data-stu-id="7146e-638">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instance, updateMap, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7146e-639">執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-639">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="7146e-640">更新對應。</span><span class="sxs-lookup"><span data-stu-id="7146e-640">The update map.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-641">開始載入作業必須在作業取消前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-641">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="7146e-642">以指定的執行個體、更新對應和逾時間隔，從執行個體存放區載入工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-642">Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-643">自 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 載入可執行工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-643">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-644">可執行執行個體是計時器或執行個體鎖定已過期的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-644">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberSignature Language="F#" Value="member this.LoadRunnableInstance : unit -&gt; unit" Usage="workflowApplication.LoadRunnableInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7146e-645">自 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 載入可執行工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-645">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-646">可執行執行個體是計時器或執行個體鎖定已過期的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-646">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="7146e-647">根據預設，載入作業必須在 30 秒內完成，否則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-647">By default, the load operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.LoadRunnableInstance : TimeSpan -&gt; unit" Usage="workflowApplication.LoadRunnableInstance timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-648">載入作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-648">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-649">使用指定逾時間隔，從 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 載入可執行工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-649">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-650">可執行執行個體是計時器或執行個體鎖定已過期的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-650">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginAssociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginAssociateKeys (keys, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="override this.OnDisassociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; -&gt; unit" Usage="workflowApplication.OnDisassociateKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndAssociateKeys : IAsyncResult -&gt; unit" Usage="workflowApplication.OnEndAssociateKeys result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndPersist : IAsyncResult -&gt; unit" Usage="workflowApplication.OnEndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.OnEndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberSignature Language="F#" Value="override this.OnNotifyPaused : unit -&gt; unit" Usage="workflowApplication.OnNotifyPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberSignature Language="F#" Value="override this.OnNotifyUnhandledException : Exception * System.Activities.Activity * string -&gt; unit" Usage="workflowApplication.OnNotifyUnhandledException (exception, exceptionSource, exceptionSourceInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="override this.OnRequestAbort : Exception -&gt; unit" Usage="workflowApplication.OnRequestAbort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnUnhandledException : Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, System.Activities.UnhandledExceptionAction&gt; with get, set" Usage="System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-651">取得或設定現有工作流程執行個體遭遇未處理例外狀況時，會叫用的 <see cref="T:System.Func`2" />。</span><span class="sxs-lookup"><span data-stu-id="7146e-651">Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception.</span></span></summary>
        <value><span data-ttu-id="7146e-652">工作流程執行個體碰上未處理例外狀況時，會叫用的委派。</span><span class="sxs-lookup"><span data-stu-id="7146e-652">The delegate that is invoked when a workflow instance encounters an unhandled exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-653">當工作流程中有未處理的例外狀況時，<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 和 <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> 都會指定執行階段的行為，不過，<xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> 可以選擇離開持續性存放區中暫止的工作流程，而 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 不能。</span><span class="sxs-lookup"><span data-stu-id="7146e-653">Both <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> and <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> has the option of leaving a suspended workflow in the persistence store, while <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> does not.</span></span> <span data-ttu-id="7146e-654">這是因為暫止的工作流程所發生的情形是主機特定的情形，而 <xref:System.Activities.WorkflowApplication> 不是。</span><span class="sxs-lookup"><span data-stu-id="7146e-654">The reason for this is that what happens to a suspended workflow is host-specific, and <xref:System.Activities.WorkflowApplication> is not.</span></span> <span data-ttu-id="7146e-655">若要使用 <xref:System.Activities.WorkflowApplication> 來實作這個功能，請建立具有這個行為的自訂 <xref:System.Activities.Persistence.PersistenceParticipant>。</span><span class="sxs-lookup"><span data-stu-id="7146e-655">To implement this functionality using <xref:System.Activities.WorkflowApplication>, create a custom <xref:System.Activities.Persistence.PersistenceParticipant> that has this behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-656">下列範例會叫用擲回例外狀況的工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-656">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="7146e-657">此例外狀況未由工作流程處理，而且叫用了 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="7146e-657">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="7146e-658">系統會檢查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供例外狀況的相關資訊，並且終止工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-658">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-659">將工作流程執行個體保存到執行個體存放區。</span><span class="sxs-lookup"><span data-stu-id="7146e-659">Persists a workflow instance to an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-660">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-660">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-661">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-661">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberSignature Language="F#" Value="member this.Persist : unit -&gt; unit" Usage="workflowApplication.Persist " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7146e-662">將工作流程執行個體保存到執行個體存放區。</span><span class="sxs-lookup"><span data-stu-id="7146e-662">Persists a workflow instance to an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-663">如果保存作業沒有在 30 秒內完成，則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-663">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="7146e-664">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-664">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-665">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-665">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-666">下列範例會呼叫 <xref:System.Activities.WorkflowApplication.Persist%2A>，以便在工作流程啟動之前保存工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-666">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="7146e-667">此範例中是屬於`StartAndUnloadInstance`方法中的[保存工作流程應用程式](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)範例。</span><span class="sxs-lookup"><span data-stu-id="7146e-667">This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Persist : TimeSpan -&gt; unit" Usage="workflowApplication.Persist timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-668">保存作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-668">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-669">使用指定逾時間隔，將工作流程執行個體保存到執行個體存放區。</span><span class="sxs-lookup"><span data-stu-id="7146e-669">Persists a workflow instance to an instance store using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-670">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-670">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-671">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-671">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-672">下列範例會呼叫 <xref:System.Activities.WorkflowApplication.Persist%2A>，以便在工作流程啟動之前保存工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-672">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="7146e-673">這個範例取自`StartAndUnloadInstance`方法中的[保存工作流程應用程式](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)範例。</span><span class="sxs-lookup"><span data-stu-id="7146e-673">This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PersistableIdle : Func&lt;System.Activities.WorkflowApplicationIdleEventArgs, System.Activities.PersistableIdleAction&gt; with get, set" Usage="System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-674">取得或設定當目前工作流程執行個體閒置且可保存時叫用的委派。</span><span class="sxs-lookup"><span data-stu-id="7146e-674">Gets or sets the delegate that is invoked when the current workflow instance is idle and can be persisted.</span></span></summary>
        <value><span data-ttu-id="7146e-675">目前的工作流程執行個體閒置且保存時叫用委派。</span><span class="sxs-lookup"><span data-stu-id="7146e-675">The delegate that is invoked when the current workflow instance is idle and can be persisted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-676">當工作流程變成閒置而且可保存時，系統就會依序叫用 <xref:System.Activities.WorkflowApplication.Idle%2A> 和 <xref:System.Activities.WorkflowApplication.PersistableIdle%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-676">When a workflow becomes idle and can be persisted, both <xref:System.Activities.WorkflowApplication.Idle%2A> and <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> are invoked, in that order.</span></span> <span data-ttu-id="7146e-677"><xref:System.Activities.WorkflowApplication.PersistableIdle%2A> 處理常式會傳回其中一個 <xref:System.Activities.PersistableIdleAction> 列舉值：<xref:System.Activities.PersistableIdleAction.None>、<xref:System.Activities.PersistableIdleAction.Persist> 或 <xref:System.Activities.PersistableIdleAction.Unload>。</span><span class="sxs-lookup"><span data-stu-id="7146e-677">The <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler returns one of the <xref:System.Activities.PersistableIdleAction> enumeration values of <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist>, or <xref:System.Activities.PersistableIdleAction.Unload>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-678">下列範例會處理 <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> 處理常式，並且指示執行階段保存和卸載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-678">The following example handles the <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler and instructs the runtime to persist and unload the workflow.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-679">啟始繼續書籤的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-679">Initiates an operation to resume a bookmark.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmark, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="7146e-680">要繼續的書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-680">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="7146e-681">繼續書籤時，做為參數傳遞至所叫用方法的物件。</span><span class="sxs-lookup"><span data-stu-id="7146e-681">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <summary><span data-ttu-id="7146e-682">使用指定的值啟始繼續指定書籤的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-682">Initiates an operation to resume the specified bookmark, using the specified value.</span></span> <span data-ttu-id="7146e-683">要繼續的書籤是由工作流程執行個體中的活動事先建立的。</span><span class="sxs-lookup"><span data-stu-id="7146e-683">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="7146e-684">書籤繼續作業的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-684">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-685">書籤結果會指出繼續作業是成功或是失敗。</span><span class="sxs-lookup"><span data-stu-id="7146e-685">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-686">下列範例會建立使用 `ReadLine` 活動的工作流程，而這個活動會建立 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="7146e-686">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="7146e-687">系統會啟動工作流程，而且一旦建立 <xref:System.Activities.Bookmark> 並且工作流程處於閒置狀態之後，就會蒐集使用者的輸入並繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-687">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : string * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmarkName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="7146e-688">要繼續的書籤名稱。</span><span class="sxs-lookup"><span data-stu-id="7146e-688">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="7146e-689">繼續書籤時，做為參數傳遞至所叫用方法的物件。</span><span class="sxs-lookup"><span data-stu-id="7146e-689">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <summary><span data-ttu-id="7146e-690">使用指定的值啟始繼續書籤 (具有指定名稱) 的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-690">Initiates an operation to resume the bookmark with the specified name, using the specified value.</span></span> <span data-ttu-id="7146e-691">要繼續的書籤是由工作流程執行個體中的活動事先建立的。</span><span class="sxs-lookup"><span data-stu-id="7146e-691">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="7146e-692">書籤繼續作業的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-692">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-693">書籤結果會指出繼續作業是成功或是失敗。</span><span class="sxs-lookup"><span data-stu-id="7146e-693">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-694">下列範例會建立使用 `ReadLine` 活動的工作流程，而這個活動會建立 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="7146e-694">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="7146e-695">系統會啟動工作流程，而且一旦建立 <xref:System.Activities.Bookmark> 並且工作流程處於閒置狀態之後，就會蒐集使用者的輸入並繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-695">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj * TimeSpan -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmark, value, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="7146e-696">要繼續的書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-696">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="7146e-697">繼續書籤時，做為參數傳遞至所叫用方法的物件。</span><span class="sxs-lookup"><span data-stu-id="7146e-697">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-698">書籤必須在期間內繼續的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-698">The time interval during which the bookmark must be resumed.</span></span></param>
        <summary><span data-ttu-id="7146e-699">使用指定的值與逾時間隔啟始繼續指定書籤的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-699">Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</span></span> <span data-ttu-id="7146e-700">要繼續的書籤是由工作流程執行個體中的活動事先建立的。</span><span class="sxs-lookup"><span data-stu-id="7146e-700">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="7146e-701">書籤繼續作業的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-701">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-702">書籤結果會指出繼續作業是成功或是失敗。</span><span class="sxs-lookup"><span data-stu-id="7146e-702">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-703">下列範例會建立使用 `ReadLine` 活動的工作流程，而這個活動會建立 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="7146e-703">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="7146e-704">系統會啟動工作流程，而且一旦建立 <xref:System.Activities.Bookmark> 並且工作流程處於閒置狀態之後，就會蒐集使用者的輸入並繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-704">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : string * obj * TimeSpan -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmarkName, value, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="7146e-705">要繼續的書籤名稱。</span><span class="sxs-lookup"><span data-stu-id="7146e-705">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="7146e-706">繼續書籤時，做為參數傳遞至所叫用方法的物件。</span><span class="sxs-lookup"><span data-stu-id="7146e-706">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-707">書籤必須在期間內繼續的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-707">The time interval during which the bookmark must be resumed.</span></span></param>
        <summary><span data-ttu-id="7146e-708">使用指定的值與逾時間隔啟始繼續書籤 (具有指定名稱) 的作業。</span><span class="sxs-lookup"><span data-stu-id="7146e-708">Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</span></span> <span data-ttu-id="7146e-709">要繼續的書籤是由工作流程執行個體中的活動事先建立的。</span><span class="sxs-lookup"><span data-stu-id="7146e-709">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="7146e-710">書籤繼續作業的結果。</span><span class="sxs-lookup"><span data-stu-id="7146e-710">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-711">書籤結果會指出繼續作業是成功或是失敗。</span><span class="sxs-lookup"><span data-stu-id="7146e-711">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-712">下列範例會建立使用 `ReadLine` 活動的工作流程，而這個活動會建立 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="7146e-712">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="7146e-713">系統會啟動工作流程，而且一旦建立 <xref:System.Activities.Bookmark> 並且工作流程處於閒置狀態之後，就會蒐集使用者的輸入並繼續書籤。</span><span class="sxs-lookup"><span data-stu-id="7146e-713">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-714">開始或繼續執行工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-714">Begins or resumes the execution of a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-715">呼叫此方法以啟始執行最新建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-715">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberSignature Language="F#" Value="member this.Run : unit -&gt; unit" Usage="workflowApplication.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7146e-716">開始或繼續執行工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-716">Begins or resumes the execution of a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-717">呼叫此方法以啟始執行最新建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-717">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="7146e-718">如果執行作業沒有在 30 秒內完成，則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-718">If the run operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-719">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-719">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-720">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-720">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-721">當工作流程完成時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-721">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Run : TimeSpan -&gt; unit" Usage="workflowApplication.Run timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-722">呼叫此方法以啟始執行最新建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-722">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
<span data-ttu-id="7146e-723">必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成執行作業的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-723">The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-724">開始或繼續執行使用指定逾時間隔的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-724">Begins or resumes the execution of a workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-725">請注意，不同於 <xref:System.Activities.WorkflowInvoker.Invoke%2A>，這個方法只會在工作流程未在指定的時間內啟動時逾時，而不是在必須於指定的時間內完成卻未完成時逾時。</span><span class="sxs-lookup"><span data-stu-id="7146e-725">Note that unlike <xref:System.Activities.WorkflowInvoker.Invoke%2A>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</span></span> <span data-ttu-id="7146e-726">這是因為 <xref:System.Activities.WorkflowInvoker.Invoke%2A> 會以同步方式 (封鎖主執行緒) 執行工作流程，而 <xref:System.Activities.WorkflowApplication.Run%2A> 是以非同步方式執行，即只封鎖主執行緒到工作流程啟動為止。</span><span class="sxs-lookup"><span data-stu-id="7146e-726">The reason for this is that <xref:System.Activities.WorkflowInvoker.Invoke%2A> executes the workflow synchronously (blocking the host thread), while <xref:System.Activities.WorkflowApplication.Run%2A> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-727">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-727">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-728">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-728">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-729">當工作流程完成時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-729">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInstanceKeys : bool" Usage="System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-730">終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-730">Terminates a workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Terminate : Exception -&gt; unit" Usage="workflowApplication.Terminate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-731">終止工作流程執行個體的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-731">The reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="7146e-732">使用指定的例外狀況，終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-732">Terminates a workflow instance using the specified exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-733">此方法會排程工作流程執行個體的終止。</span><span class="sxs-lookup"><span data-stu-id="7146e-733">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="7146e-734">若要在終止完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-734">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="7146e-735">根據預設，<xref:System.Activities.WorkflowApplication.Terminate%2A> 作業必須在 30 秒內完成，否則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-735">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-736">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-736">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-737">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-737">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-738">啟動工作流程之後，就會呼叫 <xref:System.Activities.WorkflowApplication.Terminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-738">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="7146e-739">當工作流程終止時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-739">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowApplication.Terminate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-740">終止工作流程執行個體的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-740">The reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="7146e-741">使用指定的錯誤訊息，終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-741">Terminates a workflow instance using the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-742">此方法會排程工作流程執行個體的終止。</span><span class="sxs-lookup"><span data-stu-id="7146e-742">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="7146e-743">若要在終止完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-743">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="7146e-744">根據預設，<xref:System.Activities.WorkflowApplication.Terminate%2A> 作業必須在 30 秒內完成，否則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-744">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-745">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-745">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-746">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-746">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-747">啟動工作流程之後，就會呼叫 <xref:System.Activities.WorkflowApplication.Terminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-747">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="7146e-748">當工作流程終止時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-748">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Terminate : Exception * TimeSpan -&gt; unit" Usage="workflowApplication.Terminate (reason, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-749">終止工作流程執行個體的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-749">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-750"><see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> 作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-750">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-751">使用指定的例外狀況和逾時間隔，終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-751">Terminates a workflow instance using the specified exception and time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-752">此方法會排程終止工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-752">This method schedules the termination of the workflow.</span></span> <span data-ttu-id="7146e-753">若要在終止完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-753">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-754">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-754">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-755">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-755">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-756">啟動工作流程之後，就會呼叫 <xref:System.Activities.WorkflowApplication.Terminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-756">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="7146e-757">當工作流程終止時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-757">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string * TimeSpan -&gt; unit" Usage="workflowApplication.Terminate (reason, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="7146e-758">終止工作流程執行個體的原因。</span><span class="sxs-lookup"><span data-stu-id="7146e-758">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="7146e-759"><see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> 作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-759">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-760">使用指定的錯誤訊息和逾時間隔，終止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-760">Terminates a workflow instance using the specified error message and time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-761">此方法會排程工作流程執行個體的終止。</span><span class="sxs-lookup"><span data-stu-id="7146e-761">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="7146e-762">若要在終止完成時收到通知，請使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="7146e-762">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-763">下列範例會使用 <xref:System.Activities.WorkflowApplication> 來裝載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-763">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="7146e-764">系統會使用指定的工作流程定義來建構 <xref:System.Activities.WorkflowApplication> 執行個體、處理所需的工作流程開發週期事件，並且透過呼叫 <xref:System.Activities.WorkflowApplication.Run%2A> 叫用此工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-764">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="7146e-765">啟動工作流程之後，就會呼叫 <xref:System.Activities.WorkflowApplication.Terminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-765">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="7146e-766">當工作流程終止時，主控台就會顯示下列輸出。</span><span class="sxs-lookup"><span data-stu-id="7146e-766">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7146e-767">保存或卸載工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-767">Persists and unloads a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-768">根據預設，卸載作業必須在 30 秒內完成，否則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-768">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="7146e-769">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-769">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-770">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-770">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowApplication.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7146e-771">保存或卸載工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-771">Persists and unloads a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-772">根據預設，卸載作業必須在 30 秒內完成，否則會擲回 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-772">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="7146e-773">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-773">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-774">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-774">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-775">下列程式碼範例屬於[NoPersistScope 活動](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)範例。</span><span class="sxs-lookup"><span data-stu-id="7146e-775">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="7146e-776">在這個範例中，工作流程已閒置而且主應用程式正等候使用者輸入。</span><span class="sxs-lookup"><span data-stu-id="7146e-776">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="7146e-777">如果使用者選擇卸載，就會呼叫 <xref:System.Activities.WorkflowApplication.Unload%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-777">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="7146e-778">如果呼叫成功，就會保存工作流程並從記憶體中卸載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-778">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Unload : TimeSpan -&gt; unit" Usage="workflowApplication.Unload timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="7146e-779">卸載作業必須在作業取消並擲回 <see cref="T:System.TimeoutException" /> 前完成的間隔。</span><span class="sxs-lookup"><span data-stu-id="7146e-779">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="7146e-780">保存與卸載使用指定逾時間隔的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="7146e-780">Persists and unloads a workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7146e-781">如果先前已從持續性載入工作流程執行個體，則會使用用來載入工作流程的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 做為保存。</span><span class="sxs-lookup"><span data-stu-id="7146e-781">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="7146e-782">如果工作流程已建立但尚未保存，則必須在呼叫這個方法之前設定 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否則呼叫這個方法時會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7146e-782">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7146e-783">下列程式碼範例屬於[NoPersistScope 活動](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)範例。</span><span class="sxs-lookup"><span data-stu-id="7146e-783">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="7146e-784">在這個範例中，工作流程已閒置而且主應用程式正等候使用者輸入。</span><span class="sxs-lookup"><span data-stu-id="7146e-784">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="7146e-785">如果使用者選擇卸載，就會呼叫 <xref:System.Activities.WorkflowApplication.Unload%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-785">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="7146e-786">如果呼叫成功，就會保存工作流程並從記憶體中卸載工作流程。</span><span class="sxs-lookup"><span data-stu-id="7146e-786">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Unloaded : Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Unloaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7146e-787">取得或設定現有工作流程卸載時叫用的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="7146e-787">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</span></span></summary>
        <value><span data-ttu-id="7146e-788">卸載工作流程執行個體時叫用的動作。</span><span class="sxs-lookup"><span data-stu-id="7146e-788">An action that is invoked when a workflow instance is unloaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7146e-789">下列程式碼範例會檢查傳遞給 <xref:System.Activities.WorkflowApplicationEventArgs> 執行個體之 <xref:System.Activities.WorkflowApplication.Unloaded%2A> 處理常式的 <xref:System.Activities.WorkflowApplication>，並且顯示已卸載之工作流程的 <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A>。</span><span class="sxs-lookup"><span data-stu-id="7146e-789">The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Unloaded%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>