<Type Name="Group" FullName="System.Text.RegularExpressions.Group">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d419949557362ea99e111f8ecf7db76acb7f2b0f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Group : System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Group extends System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Group" />
  <TypeSignature Language="VB.NET" Value="Public Class Group&#xA;Inherits Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Group : System::Text::RegularExpressions::Capture" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Capture</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>代表單一擷取群組的結果。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 擷取的群組可以擷取零、 一或多個在單一比對字串，因為數量詞。 (如需詳細資訊，請參閱[數量詞](~/docs/standard/base-types/quantifiers-in-regular-expressions.md)。)單一擷取群組相符的子字串都是從<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>屬性。 擷取的最後一個子字串的相關資訊可直接從`Value`和`Index`屬性。 (也就是說，<xref:System.Text.RegularExpressions.Group>執行個體所傳回的集合的最後一個項目相當<xref:System.Text.RegularExpressions.Group.Captures%2A>會反映擷取群組所做的最後一個擷取的屬性。)  
  
 範例有助於釐清之間的關聯性<xref:System.Text.RegularExpressions.Group>物件和<xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=nameWithType>所傳回<xref:System.Text.RegularExpressions.Group.Captures%2A>屬性。 規則運算式模式`(\b(\w+?)[,:;]?\s?)+[?.!]`符合整個句子。 規則運算式的定義如下表所示。  
  
|模式|描述|  
|-------------|-----------------|  
|`\b`|開始字緣比對。|  
|`(\w+?)`|比對一或多個字元，但字元數愈少愈好。 這是第二個 （內部） 擷取群組。 (這是第一個擷取群組包含`\b`語言項目。)|  
|`[,:;]?`|比對零個或一個逗號、 冒號或分號。|  
|`\s?`|比對零個或一個空格字元。|  
|`(\b(\w+?)[,:;]?\s?)+`|比對字邊界、 一個或多個文字字元、 標點符號，以及組成空格字元一或多次的模式。 這是第一個擷取群組。|  
|`[?.!]`|任何比對句號、 問號或驚嘆號。|  
  
 在規則運算式模式中，子模式`(\w+?)`設計為比對句子內的多個字。 不過，值<xref:System.Text.RegularExpressions.Group>只有最後一個相符的物件都代表`(\w+?)`會擷取，而<xref:System.Text.RegularExpressions.Group.Captures%2A>屬性會傳回<xref:System.Text.RegularExpressions.CaptureCollection>，代表所有擷取的文字。 如輸出所示，<xref:System.Text.RegularExpressions.CaptureCollection>第二個擷取群組包含四個物件。 最後一種對應至<xref:System.Text.RegularExpressions.Group>物件。  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Captures">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.CaptureCollection Captures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.CaptureCollection Captures" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Captures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captures As CaptureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::CaptureCollection ^ Captures { System::Text::RegularExpressions::CaptureCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.CaptureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>依照最內層最左邊為優先的順序，取得符合擷取群組的所有擷取的集合 (如果規則運算式使用 <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> 選項修改，則依照最內層最右邊為優先的順序)， 集合可能有零個或更多項目。</summary>
        <value>符合群組的子字串集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果將數量詞不會套用至擷取群組，所傳回的集合<xref:System.Text.RegularExpressions.Group.Captures%2A>屬性包含單一<xref:System.Text.RegularExpressions.Capture>提供為相同的子字串的相關資訊的物件<xref:System.Text.RegularExpressions.Group>物件。 下列範例可說明此點。 它會定義規則運算式， `\b(\w+)\b`，擷取單一 word 從句子。 <xref:System.Text.RegularExpressions.Group>物件中擷取文字"This"和中的單一物件<xref:System.Text.RegularExpressions.CaptureCollection>包含相同的擷取的相關資訊。  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  
  
 實際的公用程式的<xref:System.Text.RegularExpressions.Group.Captures%2A>數量詞套用至擷取群組，讓群組擷取單一規則運算式中的多個子字串時，就會發生屬性。 在此情況下，<xref:System.Text.RegularExpressions.Group>物件包含的最後一個擷取子字串的相關資訊，而<xref:System.Text.RegularExpressions.Group.Captures%2A>屬性包含群組所擷取的子字串相關資訊。 在下列範例中，規則運算式`\b(\w+\s*)+\.`符合以句點結尾了整個句子。 群組`(\w+\s*)+`擷取集合中個別的文字。 因為<xref:System.Text.RegularExpressions.Group>集合包含最後擷取的子字串的相關資訊，它會擷取在句子，"句子 」 的最後一個字。 不過，群組所擷取的每個字，可以從所傳回的集合<xref:System.Text.RegularExpressions.Group.Captures%2A>屬性。  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回目前執行個體所代表的擷取群組名稱。</summary>
        <value>目前執行個體所代表的擷取群組名稱。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出比對是否成功。</summary>
        <value>
          如果比對成功，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Success`屬性為 true，如果至少一個子字串此群組所擷取。 它相當於布林運算式 (Group.Captures.Count > 0)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Group) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Group ^ Synchronized(System::Text::RegularExpressions::Group ^ inner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" />
      </Parameters>
      <Docs>
        <param name="inner">輸入的 <see cref="T:System.Text.RegularExpressions.Group" /> 物件。</param>
        <summary>傳回 <see langword="Group" /> 物件，相等於可安全地在多個執行緒之間共用而提供的物件。</summary>
        <returns>規則運算式 <see langword="Group" /> 物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="inner" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>