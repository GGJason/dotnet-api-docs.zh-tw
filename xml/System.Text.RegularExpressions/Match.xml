<Type Name="Match" FullName="System.Text.RegularExpressions.Match">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a4afd338726e6cbc56580f217ff53e06d3c1697" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51925105" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Match : System.Text.RegularExpressions.Group" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Match extends System.Text.RegularExpressions.Group" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Match" />
  <TypeSignature Language="VB.NET" Value="Public Class Match&#xA;Inherits Group" />
  <TypeSignature Language="C++ CLI" Value="public ref class Match : System::Text::RegularExpressions::Group" />
  <TypeSignature Language="F#" Value="type Match = class&#xA;    inherit Group" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Group</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="26ce5-101">表示單一規則運算式 (Regular Expression) 比對的結果。</span>
      <span class="sxs-lookup">
        <span data-stu-id="26ce5-101">Represents the results from a single regular expression match.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26ce5-102"><xref:System.Text.RegularExpressions.Match>物件是不可變，而且沒有公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="26ce5-102">The <xref:System.Text.RegularExpressions.Match> object is immutable and has no public constructor.</span></span> <span data-ttu-id="26ce5-103">執行個體<xref:System.Text.RegularExpressions.Match>類別由<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>方法，並代表字串中的第一個模式比對。</span><span class="sxs-lookup"><span data-stu-id="26ce5-103">An instance of the <xref:System.Text.RegularExpressions.Match> class is returned by the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method and represents the first pattern match in a string.</span></span> <span data-ttu-id="26ce5-104">後續的相符項目都由<xref:System.Text.RegularExpressions.Match>所傳回的物件<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="26ce5-104">Subsequent matches are represented by <xref:System.Text.RegularExpressions.Match> objects returned by the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="26ce5-105">颾魤 ㄛ<xref:System.Text.RegularExpressions.MatchCollection>物件，包含零個、 一個或多個<xref:System.Text.RegularExpressions.Match>物件由<xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="26ce5-105">In addition, a <xref:System.Text.RegularExpressions.MatchCollection> object that consists of zero, one, or more <xref:System.Text.RegularExpressions.Match> objects is returned by the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="26ce5-106">如果<xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType>方法，就無法比對輸入字串中的規則運算式模式，它會傳回空<xref:System.Text.RegularExpressions.MatchCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="26ce5-106">If the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method fails to match a regular expression pattern in an input string, it returns an empty <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="26ce5-107">然後您可以使用`foreach`C# 中建構或`For Each`建構來逐一查看集合的 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="26ce5-107">You can then use a `foreach` construct in C# or a `For Each` construct in Visual Basic to iterate the collection.</span></span>  
  
 <span data-ttu-id="26ce5-108">如果<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>方法，就無法比對規則運算式模式，它會傳回<xref:System.Text.RegularExpressions.Match>物件，等於<xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="26ce5-108">If the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method fails to match the regular expression pattern, it returns a <xref:System.Text.RegularExpressions.Match> object that is equal to <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="26ce5-109">您可以使用<xref:System.Text.RegularExpressions.Group.Success%2A>屬性來判斷比對是否成功。</span><span class="sxs-lookup"><span data-stu-id="26ce5-109">You can use the <xref:System.Text.RegularExpressions.Group.Success%2A> property to determine whether the match was successful.</span></span> <span data-ttu-id="26ce5-110">下列範例提供一個實例。</span><span class="sxs-lookup"><span data-stu-id="26ce5-110">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match1.vb#1)]  
  
 <span data-ttu-id="26ce5-111">如果成功，模式比對<xref:System.Text.RegularExpressions.Capture.Value%2A>屬性包含相符的子字串，<xref:System.Text.RegularExpressions.Capture.Index%2A>屬性會指出以零為起始在輸入字串中，相符的子字串的起始位置和<xref:System.Text.RegularExpressions.Capture.Length%2A>屬性會指出輸入字串中相符的子字串的長度。</span><span class="sxs-lookup"><span data-stu-id="26ce5-111">If a pattern match is successful, the <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the matched substring, the <xref:System.Text.RegularExpressions.Capture.Index%2A> property indicates the zero-based starting position of the matched substring in the input string, and the <xref:System.Text.RegularExpressions.Capture.Length%2A> property indicates the length of matched substring in the input string.</span></span>  
  
 <span data-ttu-id="26ce5-112">單一相符項目可以包含多個擷取群組，因為<xref:System.Text.RegularExpressions.Match>已經<xref:System.Text.RegularExpressions.Match.Groups%2A>屬性，傳回<xref:System.Text.RegularExpressions.GroupCollection>。</span><span class="sxs-lookup"><span data-stu-id="26ce5-112">Because a single match can involve multiple capturing groups, <xref:System.Text.RegularExpressions.Match> has a <xref:System.Text.RegularExpressions.Match.Groups%2A> property that returns the <xref:System.Text.RegularExpressions.GroupCollection>.</span></span> <span data-ttu-id="26ce5-113"><xref:System.Text.RegularExpressions.Match>執行個體本身就相當於第一個物件在集合中，於`Match.Groups[0]`(`Match.Groups(0)` Visual Basic 中)，代表整個相符項目。</span><span class="sxs-lookup"><span data-stu-id="26ce5-113">The <xref:System.Text.RegularExpressions.Match> instance itself is equivalent to the first object in the collection, at `Match.Groups[0]` (`Match.Groups(0)` in Visual Basic), which represents the entire match.</span></span> <span data-ttu-id="26ce5-114">您可以透過下列方式存取比對中的擷取的群組：</span><span class="sxs-lookup"><span data-stu-id="26ce5-114">You can access the captured groups in a match in the following ways:</span></span>  
  
-   <span data-ttu-id="26ce5-115">您可以逐一查看的成員清單<xref:System.Text.RegularExpressions.GroupCollection>使用的物件`foreach`(C#) 或`For Each`(Visual Basic) 建構。</span><span class="sxs-lookup"><span data-stu-id="26ce5-115">You can iterate the members of the <xref:System.Text.RegularExpressions.GroupCollection> object  by using a `foreach` (C#) or `For Each` (Visual Basic) construct.</span></span>  
  
-   <span data-ttu-id="26ce5-116">您可以使用<xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=nameWithType>屬性來擷取群組所擷取的群組數目。</span><span class="sxs-lookup"><span data-stu-id="26ce5-116">You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=nameWithType> property to retrieve groups by the number of the capturing group.</span></span> <span data-ttu-id="26ce5-117">請注意，您可以決定哪些編號的群組會出現在規則運算式，藉由呼叫執行個體<xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="26ce5-117">Note that you can determine which numbered groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="26ce5-118">您可以使用<xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=nameWithType>屬性來擷取群組所擷取的群組的名稱。</span><span class="sxs-lookup"><span data-stu-id="26ce5-118">You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=nameWithType> property to retrieve groups by the name of the capturing group.</span></span> <span data-ttu-id="26ce5-119">請注意，您可以決定哪些具名的群組會出現在規則運算式，藉由呼叫執行個體<xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="26ce5-119">Note that you can determine which named groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26ce5-120">下列範例會使用規則運算式`Console\.Write(Line)?`。</span><span class="sxs-lookup"><span data-stu-id="26ce5-120">The following examples use the regular expression `Console\.Write(Line)?`.</span></span> <span data-ttu-id="26ce5-121">規則運算式解譯如下：</span><span class="sxs-lookup"><span data-stu-id="26ce5-121">The regular expression is interpreted as follows:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26ce5-122">主控台\\。寫入</span><span class="sxs-lookup"><span data-stu-id="26ce5-122">Console\\.Write</span></span>|<span data-ttu-id="26ce5-123">比對字串 "Console.Write"。</span><span class="sxs-lookup"><span data-stu-id="26ce5-123">Match the string "Console.Write".</span></span> <span data-ttu-id="26ce5-124">請注意，"。"，以便將它解譯為常值句號，而不是做為萬用字元，符合任何字元逸出字元。</span><span class="sxs-lookup"><span data-stu-id="26ce5-124">Note that the "." character is escaped so that it is interpreted as a literal period rather than as a wildcard that matches any character.</span></span>|  
|<span data-ttu-id="26ce5-125">（行）？</span><span class="sxs-lookup"><span data-stu-id="26ce5-125">(Line)?</span></span>|<span data-ttu-id="26ce5-126">比對出現零或一次的字串 "Line"。</span><span class="sxs-lookup"><span data-stu-id="26ce5-126">Match zero or one occurrence of the string "Line".</span></span>|  
  
 <span data-ttu-id="26ce5-127">**範例 1**</span><span class="sxs-lookup"><span data-stu-id="26ce5-127">**Example 1**</span></span>  
  
 <span data-ttu-id="26ce5-128">下列範例會呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType>方法來擷取所有的模式比對輸入字串中。</span><span class="sxs-lookup"><span data-stu-id="26ce5-128">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method to retrieve all pattern matches in an input string.</span></span> <span data-ttu-id="26ce5-129">然後逐一查看<xref:System.Text.RegularExpressions.Match>中所傳回的物件<xref:System.Text.RegularExpressions.MatchCollection>物件，以顯示每個相符項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="26ce5-129">It then iterates the <xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> object to display information about each match.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match2.vb#2)]  
  
 <span data-ttu-id="26ce5-130">**範例 2**</span><span class="sxs-lookup"><span data-stu-id="26ce5-130">**Example 2**</span></span>  
  
 <span data-ttu-id="26ce5-131">下列範例會呼叫<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>和<xref:System.Text.RegularExpressions.Match.NextMatch%2A>方法一次擷取一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="26ce5-131">The following example calls the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> and <xref:System.Text.RegularExpressions.Match.NextMatch%2A> methods to retrieve one match at a time.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Match.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.MatchCollection" />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.RegularExpressions.Match Empty" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Match.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::RegularExpressions::Match ^ Empty { System::Text::RegularExpressions::Match ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Match.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26ce5-132">取得空白群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-132">Gets the empty group.</span>
          </span>
          <span data-ttu-id="26ce5-133">所有失敗的比對會傳回這個空白比對。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-133">All failed matches return this empty match.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26ce5-134">空的符合項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-134">An empty match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26ce5-135">這個屬性不應該用來判斷相符項目是否成功。</span><span class="sxs-lookup"><span data-stu-id="26ce5-135">This property should not be used to determine if a match is successful.</span></span> <span data-ttu-id="26ce5-136">請改用`Match.Success`屬性 (繼承自<xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="26ce5-136">Instead, use the `Match.Success` property (which is inherited from <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public virtual System.Text.RegularExpressions.GroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.GroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Match.Groups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Groups As GroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::RegularExpressions::GroupCollection ^ Groups { System::Text::RegularExpressions::GroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Text.RegularExpressions.GroupCollection" Usage="System.Text.RegularExpressions.Match.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.GroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26ce5-137">取得符合規則運算式的群組集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-137">Gets a collection of groups matched by the regular expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26ce5-138">符合模式的字元群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-138">The character groups matched by the pattern.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26ce5-139">規則運算式模式中可以包含子運算式，由以括弧括住的規則運算式模式的一部分。</span><span class="sxs-lookup"><span data-stu-id="26ce5-139">A regular expression pattern can include subexpressions, which are defined by enclosing a portion of the regular expression pattern in parentheses.</span></span> <span data-ttu-id="26ce5-140">每個這類的子運算式形成一個群組。</span><span class="sxs-lookup"><span data-stu-id="26ce5-140">Every such subexpression forms a group.</span></span> <span data-ttu-id="26ce5-141"><xref:System.Text.RegularExpressions.Match.Groups%2A>屬性可存取這些子運算式相符項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="26ce5-141">The <xref:System.Text.RegularExpressions.Match.Groups%2A> property provides access to information about those subexpression matches.</span></span> <span data-ttu-id="26ce5-142">例如，規則運算式模式`(\d{3})-(\d{3}-\d{4})`，它會比對北美地區的電話號碼，有兩個的子運算式。</span><span class="sxs-lookup"><span data-stu-id="26ce5-142">For example, the regular expression pattern `(\d{3})-(\d{3}-\d{4})`, which matches North American telephone numbers, has two subexpressions.</span></span> <span data-ttu-id="26ce5-143">第一個是由區域程式碼，撰寫的電話號碼的第一次三個數字所組成。</span><span class="sxs-lookup"><span data-stu-id="26ce5-143">The first consists of the area code, which composes the first three digits of the telephone number.</span></span> <span data-ttu-id="26ce5-144">為規則運算式的第一個部分會擷取此群組`(\d{3})`。第二個是由個別的電話號碼，其會撰寫的電話號碼的末七所組成。</span><span class="sxs-lookup"><span data-stu-id="26ce5-144">This group is captured by the first portion of the regular expression, `(\d{3})`.The second consists of the individual telephone number, which composes the last seven digits of the telephone number.</span></span> <span data-ttu-id="26ce5-145">規則運算式中，第二個部分所擷取此群組`(\d{3}-\d{4})`。</span><span class="sxs-lookup"><span data-stu-id="26ce5-145">This group is captured by the second portion of the regular expression, `(\d{3}-\d{4})`.</span></span> <span data-ttu-id="26ce5-146">然後可以從擷取這兩個群組<xref:System.Text.RegularExpressions.GroupCollection>所傳回的物件<xref:System.Text.RegularExpressions.Match.Groups%2A>屬性，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="26ce5-146">These two groups can then be retrieved from the <xref:System.Text.RegularExpressions.GroupCollection> object that is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property, as the following example shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/cs/groups1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/vb/groups1.vb#1)]  
  
 <span data-ttu-id="26ce5-147"><xref:System.Text.RegularExpressions.GroupCollection>所傳回的物件<xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType>屬性是一律會有至少一個成員以零為起始的集合物件。</span><span class="sxs-lookup"><span data-stu-id="26ce5-147">The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property is a zero-based collection object that always has at least one member.</span></span> <span data-ttu-id="26ce5-148">如果規則運算式引擎在特定的輸入字串中，找不到任何相符項目<xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType>屬性的單一<xref:System.Text.RegularExpressions.Group>物件集合 （位於索引 0 的物件） 中設定為`false`而<xref:System.Text.RegularExpressions.Group>物件的<xref:System.Text.RegularExpressions.Capture.Value%2A>屬性設定為<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="26ce5-148">If the regular expression engine cannot find any matches in a particular input string, the <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property of the single <xref:System.Text.RegularExpressions.Group> object in the collection (the object at index 0) is set to `false` and the <xref:System.Text.RegularExpressions.Group> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property is set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="26ce5-149">如果規則運算式引擎可以找到相符項目，第一個項目<xref:System.Text.RegularExpressions.GroupCollection>所傳回的物件 （索引 0 處的項目）<xref:System.Text.RegularExpressions.Match.Groups%2A>屬性包含符合整個規則運算式模式的字串。</span><span class="sxs-lookup"><span data-stu-id="26ce5-149">If the regular expression engine can find a match, the first element of the <xref:System.Text.RegularExpressions.GroupCollection> object (the element at index 0) returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property contains a string that matches the entire regular expression pattern.</span></span> <span data-ttu-id="26ce5-150">每個後續項目，從一個索引向上周游代表擷取的群組，如果規則運算式包含擷取群組。</span><span class="sxs-lookup"><span data-stu-id="26ce5-150">Each subsequent element, from index one upward, represents a captured group, if the regular expression includes capturing groups.</span></span> <span data-ttu-id="26ce5-151">如需詳細資訊，請參閱 「 群組建構和規則運算式物件 」 一節[的群組建構](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)文章。</span><span class="sxs-lookup"><span data-stu-id="26ce5-151">For more information, see the "Grouping Constructs and Regular Expression Objects" section of the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26ce5-152">下列範例會嘗試比對規則運算式模式的範例字串對。</span><span class="sxs-lookup"><span data-stu-id="26ce5-152">The following example attempts to match a regular expression pattern against a sample string.</span></span> <span data-ttu-id="26ce5-153">此範例會使用<xref:System.Text.RegularExpressions.Match.Groups%2A>屬性來儲存所擷取的相符項目顯示於主控台的資訊。</span><span class="sxs-lookup"><span data-stu-id="26ce5-153">The example uses the <xref:System.Text.RegularExpressions.Match.Groups%2A> property to store information that is retrieved by the match for display to the console.</span></span>  
  
 [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]
 [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]
 [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMatch">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match NextMatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match NextMatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.NextMatch" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMatch () As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ NextMatch();" />
      <MemberSignature Language="F#" Value="member this.NextMatch : unit -&gt; System.Text.RegularExpressions.Match" Usage="match.NextMatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26ce5-154">自最後一個比對結束的位置 (在最後符合字元之後的字元) 開始，傳回具有下一個比對結果的新 <see cref="T:System.Text.RegularExpressions.Match" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-154">Returns a new <see cref="T:System.Text.RegularExpressions.Match" /> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26ce5-155">下一個規則運算式相符項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-155">The next regular expression match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26ce5-156">這個方法很類似於呼叫<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>再次和傳遞 (`Index+Length`) 為新起始位置。</span><span class="sxs-lookup"><span data-stu-id="26ce5-156">This method is similar to calling <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> again and passing (`Index+Length`) as the new starting position.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26ce5-157">這個方法不會修改目前的執行個體。</span><span class="sxs-lookup"><span data-stu-id="26ce5-157">This method does not modify the current instance.</span></span> <span data-ttu-id="26ce5-158">相反地，它會傳回新<xref:System.Text.RegularExpressions.Match>物件，其中包含下一個相符項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="26ce5-158">Instead, it returns a new <xref:System.Text.RegularExpressions.Match> object that contains information about the next match.</span></span>  
  
 <span data-ttu-id="26ce5-159">嘗試擷取下一個相符項目可能會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果比對作業的逾時值作用中，嘗試尋找下一個相符項目超過該逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="26ce5-159">Attempting to retrieve the next match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> if a time-out value for matching operations is in effect and the attempt to find the next match exceeds that time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26ce5-160">下列範例會使用<xref:System.Text.RegularExpressions.Match.NextMatch%2A>方法來擷取規則運算式比對第一個相符項目以外。</span><span class="sxs-lookup"><span data-stu-id="26ce5-160">The following example uses the <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method to capture regular expression matches beyond the first match.</span></span>  
  
 [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]
 [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]
 [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <span data-ttu-id="26ce5-161">發生逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-161">A time-out occurred.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="26ce5-162">在比對嘗試藉由呼叫的重複當<see cref="M:System.Text.RegularExpressions.Match.NextMatch" />方法，規則運算式引擎會提供空白比對特殊處理。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-162">When a match attempt is repeated by calling the <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> method, the regular expression engine gives empty matches special treatment.</span>
            </span>
            <span data-ttu-id="26ce5-163">通常，<see cref="M:System.Text.RegularExpressions.Match.NextMatch" />開始搜尋下一個相符項目，並完全先前比對停止的地方。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-163">Usually, <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> begins the search for the next match exactly where the previous match left off.</span>
            </span>
            <span data-ttu-id="26ce5-164">不過之後在空白比對，,<see cref="M:System.Text.RegularExpressions.Match.NextMatch" />方法前移一個字元之前嘗試下一個相符項目。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-164">However, after an empty match, the <see cref="M:System.Text.RegularExpressions.Match.NextMatch" /> method advances by one character before trying the next match.</span>
            </span>
            <span data-ttu-id="26ce5-165">此行為可確保規則運算式引擎將循序進行的字串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-165">This behavior guarantees that the regular expression engine will progress through the string.</span>
            </span>
            <span data-ttu-id="26ce5-166">否則，在空白比對不會導致任何順向移動，因為下一個相符項目會在上一個相符項目完全相同的位置開始，而且它將會重複比對相同的空字串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-166">Otherwise, because an empty match does not result in any forward movement, the next match would start in exactly the same place as the previous match, and it would match the same empty string repeatedly.</span>
            </span>
            <span data-ttu-id="26ce5-167">下列範例提供一個實例。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-167">The following example provides an illustration.</span>
            </span>
            <span data-ttu-id="26ce5-168">規則運算式模式<c>\*</c>搜尋零或多個出現字母"a"，"abaabb"的字串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-168">The regular expression pattern <c>a\*</c> searches for zero or more occurrences of the letter "a" in the string "abaabb".</span>
            </span>
            <span data-ttu-id="26ce5-169">如範例輸出所示，搜尋會尋找六個相符項目。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-169">As the output from the example shows, the search finds six matches.</span>
            </span>
            <span data-ttu-id="26ce5-170">第一的比對嘗試尋找第一個"a"。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-170">The first match attempt finds the first "a".</span>
            </span>
            <span data-ttu-id="26ce5-171">在完全其中第一個符合結束，第一次的 b; 之前的第二個相符項目啟動它會尋找"a"的零個項目，並傳回空字串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-171">The second match starts exactly where the first match ends, before the first b; it finds zero occurrences of "a" and returns an empty string.</span>
            </span>
            <span data-ttu-id="26ce5-172">第三個相符項目不會開始完全第二個比對結束的位置，因為第二個相符項目會傳回空字串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-172">The third match does not begin exactly where the second match ended, because the second match returned an empty string.</span>
            </span>
            <span data-ttu-id="26ce5-173">相反地，它會更新版本中之後第一個"b", 開始一個字元。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-173">Instead, it begins one character later, after the first "b".</span>
            </span>
            <span data-ttu-id="26ce5-174">第三個相符項目尋找兩個"a"，並傳回"aa"。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-174">The third match finds two occurrences of "a" and returns "aa".</span>
            </span>
            <span data-ttu-id="26ce5-175">第四個比對嘗試開始位置的第三個相符項目之前已結束，第二個"b"，並傳回空字串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-175">The fourth match attempt begins where the third match ended, before the second "b", and returns an empty string.</span>
            </span>
            <span data-ttu-id="26ce5-176">第五個比對嘗試一次前進一個字元，使其開始之前第三個"b"，並傳回空字串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-176">The fifth match attempt again advances one character so that it begins before the third "b" and returns an empty string.</span>
            </span>
            <span data-ttu-id="26ce5-177">第六個的相符項目開始之後最後一個"b"，並再次傳回空字串。</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-177">The sixth match begins after the last "b" and returns an empty string again.</span>
            </span>
            <span data-ttu-id="26ce5-178">[！ 的程式碼 csharp[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/cs/nextmatch1.cs#1)] [！ 的程式碼 vb[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/vb/nextmatch1.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="26ce5-178">[!code-csharp[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/cs/nextmatch1.cs#1)] [!code-vb[System.Text.RegularExpressions.Match.NextMatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.nextmatch/vb/nextmatch1.vb#1)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual string Result (string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Result(string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.Result(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Result (replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Result(System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="abstract member Result : string -&gt; string&#xA;override this.Result : string -&gt; string" Usage="match.Result replacement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="replacement">
          <span data-ttu-id="26ce5-179">要使用的取代模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-179">The replacement pattern to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26ce5-180">傳回所指定取代模式的展開 (Expansion)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-180">Returns the expansion of the specified replacement pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26ce5-181">
            <paramref name="replacement" /> 參數的展開版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-181">The expanded version of the <paramref name="replacement" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26ce5-182">然而<xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=nameWithType>方法會取代為指定的取代模式中，輸入字串中的所有相符項目<xref:System.Text.RegularExpressions.Match.Result%2A>方法會取代在指定的取代模式中的單一相符項目。</span><span class="sxs-lookup"><span data-stu-id="26ce5-182">Whereas the <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=nameWithType> method replaces all matches in an input string with a specified replacement pattern, the <xref:System.Text.RegularExpressions.Match.Result%2A> method replaces a single match with a specified replacement pattern.</span></span> <span data-ttu-id="26ce5-183">因為它作個別的相符項目時，它也可在相符字串上執行處理，才能呼叫<xref:System.Text.RegularExpressions.Match.Result%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="26ce5-183">Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <xref:System.Text.RegularExpressions.Match.Result%2A> method.</span></span>  
  
 <span data-ttu-id="26ce5-184">`replacement`參數是標準的規則運算式取代模式。</span><span class="sxs-lookup"><span data-stu-id="26ce5-184">The `replacement` parameter is a standard regular expression replacement pattern.</span></span> <span data-ttu-id="26ce5-185">它可以包含常值字元和規則運算式的替代項目。</span><span class="sxs-lookup"><span data-stu-id="26ce5-185">It can consist of literal characters and regular expression substitutions.</span></span> <span data-ttu-id="26ce5-186">如需詳細資訊，請參閱 [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="26ce5-186">For more information, see [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26ce5-187">下列範例會將連字號的開頭和結尾括號放在括號運算式。</span><span class="sxs-lookup"><span data-stu-id="26ce5-187">The following example replaces the hyphens that begin and end a parenthetical expression with parentheses.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Match.Result#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.result/cs/result1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Match.Result#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.result/vb/result1.vb#1)]  
  
 <span data-ttu-id="26ce5-188">規則運算式模式 `--(.+?)--` 的解譯方式如下表所示。</span><span class="sxs-lookup"><span data-stu-id="26ce5-188">The regular expression pattern `--(.+?)--` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="26ce5-189">模式</span><span class="sxs-lookup"><span data-stu-id="26ce5-189">Pattern</span></span>|<span data-ttu-id="26ce5-190">描述</span><span class="sxs-lookup"><span data-stu-id="26ce5-190">Description</span></span>|  
|-------------|-----------------|  
|`--`|<span data-ttu-id="26ce5-191">比對兩個連字號。</span><span class="sxs-lookup"><span data-stu-id="26ce5-191">Match two hyphens.</span></span>|  
|`(.+?)`|<span data-ttu-id="26ce5-192">比對任何字元一或多次，但越少次越好。</span><span class="sxs-lookup"><span data-stu-id="26ce5-192">Match any character one or more times, but as few times as possible.</span></span> <span data-ttu-id="26ce5-193">這是第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="26ce5-193">This is the first capturing group.</span></span>|  
|`--`|<span data-ttu-id="26ce5-194">比對兩個連字號。</span><span class="sxs-lookup"><span data-stu-id="26ce5-194">Match two hyphens.</span></span>|  
  
 <span data-ttu-id="26ce5-195">請注意，規則運算式模式`--(.+?)--`lazy 數量詞會使用`+?`。</span><span class="sxs-lookup"><span data-stu-id="26ce5-195">Note that the regular expression pattern `--(.+?)--` uses the lazy quantifier `+?`.</span></span> <span data-ttu-id="26ce5-196">如果 greedy （窮盡） 數量詞`+`用相反地，規則運算式引擎會發現單一比對輸入字串中。</span><span class="sxs-lookup"><span data-stu-id="26ce5-196">If the greedy quantifier `+` were used instead, the regular expression engine would find only a single match in the input string.</span></span>  
  
 <span data-ttu-id="26ce5-197">取代字串`($1)`取代第一個擷取群組，以括弧括住的相符項目。</span><span class="sxs-lookup"><span data-stu-id="26ce5-197">The replacement string `($1)` replaces the match with the first captured group, which is enclosed in parentheses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="26ce5-198">
            <paramref name="replacement" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-198">
              <paramref name="replacement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="26ce5-199">這種模式不允許展開。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-199">Expansion is not allowed for this pattern.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e">
          <span data-ttu-id="26ce5-200">替代</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-200">Substitutions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Synchronized (System.Text.RegularExpressions.Match inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Synchronized(class System.Text.RegularExpressions.Match inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Match) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Synchronized(System::Text::RegularExpressions::Match ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Match -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Match.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Match" />
      </Parameters>
      <Docs>
        <param name="inner">
          <span data-ttu-id="26ce5-201">相當於所需項目的規則運算式相符項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-201">A regular expression match equivalent to the one expected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26ce5-202">傳回 <see cref="T:System.Text.RegularExpressions.Match" /> 執行個體，相當於可在多個執行緒之間提供一個可共用的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-202">Returns a <see cref="T:System.Text.RegularExpressions.Match" /> instance equivalent to the one supplied that is suitable to share between multiple threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26ce5-203">適合在多個執行緒之間共用的規則運算式相符項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-203">A regular expression match that is suitable to share between multiple threads.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="26ce5-204">
            <paramref name="inner" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ce5-204">
              <paramref name="inner" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>