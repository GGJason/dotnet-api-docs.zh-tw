<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MatchCollection.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e87525df368996e12afb05786542f35ef70697a6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e87525df368996e12afb05786542f35ef70697a6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.</source>
          <target state="translated">表示藉由重複套用規則運算式 (Regular Expression) 模式至輸入字串，所找到的成功比對的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The collection is immutable (read-only) and has no public constructor.</source>
          <target state="translated">集合是不可變 （唯讀） 並沒有公用建構函式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType&gt;</ph> 方法會傳回 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The collection contains zero or more <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">集合包含零或多個<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>If the match is successful, the collection is populated with one <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> object for each match found in the input string.</source>
          <target state="translated">如果比對成功，集合會填入一個<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph>每次比對輸入字串中找到的物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>If the match is unsuccessful, the collection contains no <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> objects, and its <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property equals zero.</source>
          <target state="translated">如果比對失敗時，不含集合<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph>物件，並將其<ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph>屬性等於零。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>When applying a regular expression pattern to a particular input string, the regular expression engine uses either of two techniques to build the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object:</source>
          <target state="translated">當套用至特定的輸入字串的規則運算式模式，規則運算式引擎會使用其中兩項技術來建置<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>Direct evaluation.</source>
          <target state="translated">直接評估。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is populated all at once, with all matches resulting from a particular call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件一次填入所有相符項目所產生的特定呼叫<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>This technique is used when the collection's <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property is accessed.</source>
          <target state="translated">在使用這項技術時的集合<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph>屬性存取。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>It typically is the more expensive method of populating the collection and entails a greater performance hit.</source>
          <target state="translated">它通常會填入集合的更耗費資源的方法，並牽涉到更高的效能影響。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>Lazy evaluation.</source>
          <target state="translated">延遲評估。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is populated as needed on a match-by-match basis.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件的填入方式視需要以比對的相符項目為基礎。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>It is equivalent to the regular expression engine calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> method repeatedly and adding each match to the collection.</source>
          <target state="translated">它相當於規則運算式引擎呼叫<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph>方法重複並將每個相符項目加入至集合。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>This technique is used when the collection is accessed through its <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method, or when it is accessed using the <ph id="ph2">`foreach`</ph> statement (in C#) or the <ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph> statement (in Visual Basic).</source>
          <target state="translated">透過存取集合時，使用這項技術其<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph>方法，或使用存取時<ph id="ph2">`foreach`</ph>陳述式 （C# 中） 或<ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph> （在 Visual Basic) 陳述式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <ph id="ph1">`foreach`</ph> in C# and <ph id="ph2">`For Each`</ph>…<ph id="ph3">`Next`</ph></source>
          <target state="translated">若要逐一查看集合的成員，您應該使用您的語言所提供的反覆項目集合建構 (例如<ph id="ph1">`foreach`</ph>在 C# 和<ph id="ph2">`For Each`</ph>...<ph id="ph3">`Next`</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>in Visual Basic) instead of retrieving the enumerator that is returned by the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">在 Visual Basic 中) 而不是擷取所傳回的列舉值<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> class to interrogate a set of <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> instances.</source>
          <target state="translated">下列範例說明使用<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>詢問的一組類別<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>The array the collection is to be copied into.</source>
          <target state="translated">複製集合的目標陣列。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>The position in the array where copying is to begin.</source>
          <target state="translated">在陣列中要開始複製的位置。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies all the elements of the collection to the given array starting at the given index.</source>
          <target state="translated">複製集合的所有元素到指定索引處開始的指定陣列。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the collection is copied into the array starting at the given index, the destination array must be at least as large as the entire collection.</source>
          <target state="translated">因為集合複製到陣列的指定索引處開始，目的陣列必須至少與整個集合一樣大。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">這個成員是不存在於<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">如果您正在開發的應用程式目標<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>，使用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is generally populated by using lazy evaluation, trying to copy the collection before it has been fully populated may throw a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件通常填入藉由使用延遲評估，嘗試將集合複製之前已經完全擴展可能會擲回<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</source>
          <target state="translated">如果比對作業的逾時值是作用中，而且嘗試尋找單一相符項目超過的逾時間隔，可能擲回這個例外狀況。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is a multi-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維陣列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is outside the bounds of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> 不在 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 範圍內。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /&gt;</ph> is outside the bounds of <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> 加上 <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /&gt;</ph> 落在 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 範圍以外。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>A time-out occurred.</source>
          <target state="translated">發生逾時。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Gets the number of matches.</source>
          <target state="translated">取得符合項的數目。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>The number of matches.</source>
          <target state="translated">符合項的數目。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Accessing individual members of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object by retrieving the value of the collection's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property causes the regular expression engine to populate the collection using direct evaluation.</source>
          <target state="translated">存取的個別成員<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>所擷取的值集合的物件<ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph>屬性使規則運算式引擎填入使用直接評估集合。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>ln contrast, calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method (or using the <ph id="ph2">`foreach`</ph> statement in C# and the <ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph> statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation.</source>
          <target state="translated">ln 對比，並呼叫<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph>方法 (或使用<ph id="ph2">`foreach`</ph>C# 中的陳述式和<ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph>陳述式在 Visual Basic 中的) 使規則運算式引擎填入上做為集合所需的基礎使用延遲評估。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Direct evaluation can be a much more expensive method of building the collection than lazy evaluation.</source>
          <target state="translated">直接評估可以更為昂貴的方法，在建置比延遲評估集合。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is generally populated by using lazy evaluation, trying to determine the number of elements in the collection before it has been fully populated may throw a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件通常使用延遲評估，嘗試判斷之前已經完全填入集合中的項目數可能會擲回填入<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</source>
          <target state="translated">如果比對作業的逾時值是作用中，而且嘗試尋找單一相符項目超過的逾時間隔，可能擲回這個例外狀況。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property to determine whether the call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> method found any matches.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph>屬性來判斷是否要呼叫<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph>方法找到符合項目。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>If not, it indicates that no matches were found.</source>
          <target state="translated">如果沒有，它表示找到符合項目。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Otherwise, it enumerates the matches and displays their value and the position in the input string at which they were found.</source>
          <target state="translated">否則，它會列舉相符項目，並顯示其值，此時它們找不到輸入字串中的位置。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>The regular expression pattern <ph id="ph1">`\d+`</ph> matches one or more decimal characters in an input string.</source>
          <target state="translated">規則運算式模式<ph id="ph1">`\d+`</ph>比對輸入字串中的一個或多個十進位字元。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>A time-out occurred.</source>
          <target state="translated">發生逾時。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>Provides an enumerator that iterates through the collection.</source>
          <target state="translated">提供逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>An object that contains all <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> objects within the <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.MatchCollection" /&gt;</ph>.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> 內的所有 <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.MatchCollection" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>Instead of  calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method to retrieve an enumerator that lets you iterate through the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> objects in the collection, you should use the group iteration construct (such as <ph id="ph3">`foreach`</ph> in C# and <ph id="ph4">`For Each`</ph>…<ph id="ph5">`Next`</ph></source>
          <target state="translated">而不是呼叫<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph>方法來擷取列舉值，可讓您逐一<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph>物件在集合中，您應該使用群組反覆項目建構 (例如<ph id="ph3">`foreach`</ph>在 C# 和<ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>in Visual Basic) provided by your programming language.</source>
          <target state="translated">在 Visual Basic) 中提供您的程式語言。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>Iterating the members of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object using the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method (or the <ph id="ph3">`foreach`</ph> statement in C# and the <ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph> statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation.</source>
          <target state="translated">逐一查看的成員<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件使用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph>方法 (或<ph id="ph3">`foreach`</ph>C# 中的陳述式和<ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph>陳述式在 Visual Basic 中的) 使規則運算式引擎填入上做為集合所需的基礎使用延遲評估。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>This is analogous to repeatedly calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> method, and then adding the resulting match to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object.</source>
          <target state="translated">這是類似於重複呼叫<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph>方法，這個方法，然後將 要比對結果<ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>In contrast, the regular expression engine uses direct evaluation to populate the collection all at once when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property is accessed.</source>
          <target state="translated">相反地，規則運算式引擎會使用直接評估來填入集合一次當<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph>屬性存取。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>This can be a much more expensive method of building the collection than lazy evaluation.</source>
          <target state="translated">這可以是更昂貴的方法，建置與延遲評估集合。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is generally populated by using lazy evaluation, trying to navigate to the next member of the collection may throw a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件通常填入藉由使用延遲評估，嘗試瀏覽到下一個集合的成員可能會擲回<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find the next match exceeds that time-out interval.</source>
          <target state="translated">如果比對作業的逾時值是作用中，而且嘗試尋找下一個相符項目超過的逾時間隔，可能擲回這個例外狀況。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>A time-out occurred.</source>
          <target state="translated">發生逾時。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
          <source>Gets a value that indicates whether the collection is read only.</source>
          <target state="translated">取得值，這個值會指出集合是否唯讀。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated">所有情況下都是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
          <source>Gets a value indicating whether access to the collection is synchronized (thread-safe).</source>
          <target state="translated">取得值，指出對集合的存取是否為同步的 (安全執行緒)。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">所有情況下都是 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">這個成員是不存在於<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">如果您正在開發的應用程式目標<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>，使用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph>屬性改為。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>Index into the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> 集合內的索引。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>Gets an individual member of the collection.</source>
          <target state="translated">取得集合的個別成員。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>The captured substring at position <ph id="ph1">&lt;paramref name="i" /&gt;</ph> in the collection.</source>
          <target state="translated">在集合中位置 <ph id="ph1">&lt;paramref name="i" /&gt;</ph> 上的擷取的子字串。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>In C#, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Item%2A&gt;</ph> property is an indexer; it is not explicitly referenced in code, but instead allows the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> collection to be accessed as if it were an array.</source>
          <target state="translated">在 C# 中，<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Item%2A&gt;</ph>屬性是索引子，則它在程式碼中未明確參考，但改為允許<ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>好像陣列能夠存取集合以便。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>Typically, individual items in the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object are accessed by their index only after the total number of items in the collection has been determined from the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">一般而言，個別項目中<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>由其索引存取物件的集合中的項目總數由之後才<ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>However, accessing the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property causes the regular expression engine to use direct evaluation to build the collection all at once.</source>
          <target state="translated">不過，存取<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph>屬性使規則運算式引擎使用直接評估建置一次的集合。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>This is typically more expensive than iterating the collection using the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method, the C# <ph id="ph2">`foreach`</ph> statement, or the Visual Basic <ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph> statement.</source>
          <target state="translated">這是通常比逐一查看集合的使用更為昂貴<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph>方法的 C#<ph id="ph2">`foreach`</ph>陳述式或 Visual Basic <ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is generally populated by using lazy evaluation, trying to navigate to a specific match may throw a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件通常填入藉由使用延遲評估，嘗試瀏覽到特定的相符項目可能會擲回<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a specific match exceeds that time-out interval.</source>
          <target state="translated">如果比對作業的逾時值是作用中，而且嘗試尋找特定的符合項目超過的逾時間隔，可能擲回這個例外狀況。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>The following example parses the first sentence of Nathaniel Hawthorne's <bpt id="p1">*</bpt>House of the Seven Gables<ept id="p1">*</ept> and returns a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object that contains all words that begin with either an uppercase or lowercase "h".</source>
          <target state="translated">下列範例會剖析 Nathaniel Hawthorne 第一個句子<bpt id="p1">*</bpt>房子的七個 Gables<ept id="p1">*</ept>並傳回<ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>物件，其中包含與其中一個大寫或小寫"h"開頭的所有文字。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Item%2A&gt;</ph> property is then used to retrieve each word and display it to the console.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Item%2A&gt;</ph>屬性然後用於擷取每個字，並顯示到主控台。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>The example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="i" /&gt;</ph> is less than 0 or greater than or equal to <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> 小於 0，或大於等於 <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>A time-out occurred.</source>
          <target state="translated">發生逾時。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the collection.</source>
          <target state="translated">取得物件，這個物件可以用來對集合進行同步存取。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>An object that can be used to synchronize access to the collection.</source>
          <target state="translated">Object，可用來對集合同步存取。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>This property always returns the object itself.</source>
          <target state="translated">這個屬性永遠傳回物件本身。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">這個成員是不存在於<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">如果您正在開發的應用程式目標<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>，使用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph>屬性改為。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>