<Type Name="Regex" FullName="System.Text.RegularExpressions.Regex">
  <Metadata><Meta Name="ms.openlocfilehash" Value="517657d5c9b0e58ce68b4057b652e59f2b7ef87d" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014343" /></Metadata><TypeSignature Language="C#" Value="public class Regex : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Regex extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="VB.NET" Value="Public Class Regex&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Regex : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Regex = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="623b6-101">表示不變的規則運算式 (Regular Expression)。</span><span class="sxs-lookup"><span data-stu-id="623b6-101">Represents an immutable regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-102"><xref:System.Text.RegularExpressions.Regex>類別代表.NET Framework 規則運算式引擎。</span><span class="sxs-lookup"><span data-stu-id="623b6-102">The <xref:System.Text.RegularExpressions.Regex> class represents the .NET Framework's regular expression engine.</span></span> <span data-ttu-id="623b6-103">它可用來快速剖析大量文字以尋找特定的字元模式;若要擷取、 編輯、 取代或刪除文字子字串;並將擷取的字串新增至集合，以便產生報表。</span><span class="sxs-lookup"><span data-stu-id="623b6-103">It can be used to quickly parse large amounts of text to find specific character patterns; to extract, edit, replace, or delete text substrings; and to add the extracted strings to a collection to generate a report.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-104">如果您的主要興趣是要判斷它是否符合特定模式來驗證字串中，您可以使用<xref:System.Configuration.RegexStringValidator?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-104">If your primary interest is to validate a string by determining whether it conforms to a particular pattern, you can use the <xref:System.Configuration.RegexStringValidator?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="623b6-105">若要使用規則運算式，您會定義您想要使用所述的語法來識別文字資料流中的模式[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-105">To use regular expressions, you define the pattern that you want to identify in a text stream by using the syntax documented in [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span> <span data-ttu-id="623b6-106">接下來，您可以選擇性地具現化<xref:System.Text.RegularExpressions.Regex>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-106">Next, you can optionally instantiate a <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="623b6-107">最後，您可以呼叫執行某項作業，例如取代符合規則運算式模式的文字，或識別模式比對的方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-107">Finally, you call a method that performs some operation, such as replacing text that matches the regular expression pattern, or identifying a pattern match.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-108">一些常見的規則運算式模式，請參閱 <<c0> [ 規則運算式範例](~/docs/standard/base-types/regular-expression-examples.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-108">For some common regular expression patterns, see [Regular Expression Examples](~/docs/standard/base-types/regular-expression-examples.md).</span></span> <span data-ttu-id="623b6-109">另外還有幾個的線上程式庫的規則運算式模式，例如在[一般 Expressions.info](https://www.regular-expressions.info/examples.html)。</span><span class="sxs-lookup"><span data-stu-id="623b6-109">There are also a number of online libraries of regular expression patterns, such as the one at [Regular-Expressions.info](https://www.regular-expressions.info/examples.html).</span></span>  
  
<a name="remarks"></a> <span data-ttu-id="623b6-110">如需有關使用<xref:System.Text.RegularExpressions.Regex>類別，請參閱本主題中的下列章節：</span><span class="sxs-lookup"><span data-stu-id="623b6-110">For more information about using the <xref:System.Text.RegularExpressions.Regex> class, see the following sections in this topic:</span></span>  
  
-   [<span data-ttu-id="623b6-111">Regex vs。字串方法</span><span class="sxs-lookup"><span data-stu-id="623b6-111">Regex vs. String Methods</span></span>](#regex_vs_string)  
  
-   [<span data-ttu-id="623b6-112">靜態與執行個體方法</span><span class="sxs-lookup"><span data-stu-id="623b6-112">Static vs. Instance Methods</span></span>](#static_vs_instance)  
  
-   [<span data-ttu-id="623b6-113">執行規則運算式作業</span><span class="sxs-lookup"><span data-stu-id="623b6-113">Performing Regular Expression Operations</span></span>](#regex_ops)  
  
-   [<span data-ttu-id="623b6-114">定義的逾時值</span><span class="sxs-lookup"><span data-stu-id="623b6-114">Defining a Time-Out Value</span></span>](#define_timeout)  
  
 <span data-ttu-id="623b6-115">如需規則運算式語言的詳細資訊，請參閱[規則運算式語言 - 快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)，或下載並列印下列其中一本小手冊：</span><span class="sxs-lookup"><span data-stu-id="623b6-115">For more information about the regular expression language, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md) or download and print one of these brochures:</span></span>  
  
 [<span data-ttu-id="623b6-116">Word (.docx) 格式的快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-116">Quick Reference in Word (.docx) format</span></span>](https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular%20expressions%20quick%20reference.docx)  
 [<span data-ttu-id="623b6-117">PDF (.pdf) 格式的快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-117">Quick Reference in PDF (.pdf) format</span></span>](https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular%20expressions%20quick%20reference.pdf)  
  
<a name="regex_vs_string"></a>   
## <a name="regex-vs-string-methods"></a><span data-ttu-id="623b6-118">Regex vs。字串方法</span><span class="sxs-lookup"><span data-stu-id="623b6-118">Regex vs. String Methods</span></span>  
 <span data-ttu-id="623b6-119"><xref:System.String?displayProperty=nameWithType>類別包含數個搜尋和比較方法，您可以使用執行模式比對文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-119">The <xref:System.String?displayProperty=nameWithType> class includes several search and comparison methods that you can use to perform pattern matching with text.</span></span> <span data-ttu-id="623b6-120">例如， <xref:System.String.Contains%2A?displayProperty=nameWithType>， <xref:System.String.EndsWith%2A?displayProperty=nameWithType>，和<xref:System.String.StartsWith%2A?displayProperty=nameWithType>判斷方法的字串執行個體是否包含指定的子字串; 和<xref:System.String.IndexOf%2A?displayProperty=nameWithType>， <xref:System.String.IndexOfAny%2A?displayProperty=nameWithType>， <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>，和<xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>方法傳回的起始在字串中指定的子字串的位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-120">For example, the <xref:System.String.Contains%2A?displayProperty=nameWithType>, <xref:System.String.EndsWith%2A?displayProperty=nameWithType>, and <xref:System.String.StartsWith%2A?displayProperty=nameWithType> methods determine whether a string instance contains a specified substring; and the <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType> methods return the starting position of a specified substring in a string.</span></span> <span data-ttu-id="623b6-121">使用的方法<xref:System.String?displayProperty=nameWithType>類別，在您要搜尋特定字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-121">Use the methods of the <xref:System.String?displayProperty=nameWithType> class when you are searching for a specific string.</span></span> <span data-ttu-id="623b6-122">使用<xref:System.Text.RegularExpressions.Regex>類別，在您要搜尋特定的模式字串中。</span><span class="sxs-lookup"><span data-stu-id="623b6-122">Use the <xref:System.Text.RegularExpressions.Regex> class when you are searching for a specific pattern in a string.</span></span> <span data-ttu-id="623b6-123">如需詳細資訊和範例，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-123">For more information and examples, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
 [<span data-ttu-id="623b6-124">回到 < 備註 ></span><span class="sxs-lookup"><span data-stu-id="623b6-124">Back to Remarks</span></span>](#remarks)  
  
<a name="static_vs_instance"></a>   
## <a name="static-vs-instance-methods"></a><span data-ttu-id="623b6-125">靜態與執行個體方法</span><span class="sxs-lookup"><span data-stu-id="623b6-125">Static vs. Instance Methods</span></span>  
 <span data-ttu-id="623b6-126">定義規則運算式模式之後，您可以提供規則運算式引擎在兩種方式之一：</span><span class="sxs-lookup"><span data-stu-id="623b6-126">After you define a regular expression pattern, you can provide it to the regular expression engine in either of two ways:</span></span>  
  
-   <span data-ttu-id="623b6-127">藉由執行個體化<xref:System.Text.RegularExpressions.Regex>代表規則運算式的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-127">By instantiating a <xref:System.Text.RegularExpressions.Regex> object that represents the regular expression.</span></span> <span data-ttu-id="623b6-128">若要這樣做，您會傳遞至規則運算式模式<xref:System.Text.RegularExpressions.Regex.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-128">To do this, you pass the regular expression pattern to a <xref:System.Text.RegularExpressions.Regex.%23ctor%2A> constructor.</span></span> <span data-ttu-id="623b6-129">A<xref:System.Text.RegularExpressions.Regex>物件是不可變，當您具現化<xref:System.Text.RegularExpressions.Regex>物件的規則運算式物件的規則運算式不能變更。</span><span class="sxs-lookup"><span data-stu-id="623b6-129">A <xref:System.Text.RegularExpressions.Regex> object is immutable; when you instantiate a <xref:System.Text.RegularExpressions.Regex> object with a regular expression, that object's regular expression cannot be changed.</span></span>  
  
-   <span data-ttu-id="623b6-130">提供規則運算式和要搜尋的文字`static`(`Shared` Visual Basic 中)<xref:System.Text.RegularExpressions.Regex>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-130">By supplying both the regular expression and the text to search to a `static` (`Shared` in Visual Basic) <xref:System.Text.RegularExpressions.Regex> method.</span></span> <span data-ttu-id="623b6-131">這可讓您使用規則運算式，而不需要明確建立<xref:System.Text.RegularExpressions.Regex>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-131">This enables you to use a regular expression without explicitly creating a <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="623b6-132">所有<xref:System.Text.RegularExpressions.Regex>模式識別方法包含兩個靜態和執行個體的多載。</span><span class="sxs-lookup"><span data-stu-id="623b6-132">All <xref:System.Text.RegularExpressions.Regex> pattern identification methods include both static and instance overloads.</span></span>  
  
 <span data-ttu-id="623b6-133">規則運算式引擎必須編譯特定模式，才能使用此模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-133">The regular expression engine must compile a particular pattern before the pattern can be used.</span></span> <span data-ttu-id="623b6-134">因為<xref:System.Text.RegularExpressions.Regex>物件是不可變，這樣一來，就會發生的一次性程序時<xref:System.Text.RegularExpressions.Regex>呼叫類別建構函式或靜態方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-134">Because <xref:System.Text.RegularExpressions.Regex> objects are immutable, this is a one-time procedure that occurs when a <xref:System.Text.RegularExpressions.Regex> class constructor or a static method is called.</span></span> <span data-ttu-id="623b6-135">若要排除不需要進行重複編譯單一規則運算式，規則運算式引擎會快取已編譯的規則運算式的靜態方法呼叫中使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-135">To eliminate the need to repeatedly compile a single regular expression, the regular expression engine caches the compiled regular expressions used in static method calls.</span></span> <span data-ttu-id="623b6-136">如此一來，規則運算式模式比對方法會提供相當的效能，若為靜態和執行個體方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-136">As a result, regular expression pattern-matching methods offer comparable performance for static and instance methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="623b6-137">在.NET Framework 1.0 和 1.1 中，所有已編譯規則運算式，它們是否已使用執行個體或靜態方法中呼叫，快取。</span><span class="sxs-lookup"><span data-stu-id="623b6-137">In the .NET Framework versions 1.0 and 1.1, all compiled regular expressions, whether they were used in instance or static method calls, were cached.</span></span> <span data-ttu-id="623b6-138">從.NET Framework 2.0 開始，只有在靜態方法呼叫中使用的規則運算式會快取。</span><span class="sxs-lookup"><span data-stu-id="623b6-138">Starting with the .NET Framework 2.0, only regular expressions used in static method calls are cached.</span></span>  
  
 <span data-ttu-id="623b6-139">不過，快取可能會影響效能，在下列兩種情況：</span><span class="sxs-lookup"><span data-stu-id="623b6-139">However, caching can adversely affect performance in the following two cases:</span></span>  
  
-   <span data-ttu-id="623b6-140">當您使用靜態方法呼叫，且含有大量的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-140">When you use static method calls with a large number of regular expressions.</span></span> <span data-ttu-id="623b6-141">根據預設，規則運算式引擎會快取 15 的最近使用過靜態規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-141">By default, the regular expression engine caches the 15 most recently used static regular expressions.</span></span> <span data-ttu-id="623b6-142">如果您的應用程式會使用 15 個以上的靜態規則運算式，就必須重新編譯一些規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-142">If your application uses more than 15 static regular expressions, some regular expressions must be recompiled.</span></span> <span data-ttu-id="623b6-143">若要避免此重新編譯，您可以增加<xref:System.Text.RegularExpressions.Regex.CacheSize%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-143">To prevent this recompilation, you can increase the <xref:System.Text.RegularExpressions.Regex.CacheSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="623b6-144">當您具現化新<xref:System.Text.RegularExpressions.Regex>使用先前已編譯的規則運算式的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-144">When you instantiate new <xref:System.Text.RegularExpressions.Regex> objects with regular expressions that have previously been compiled.</span></span> <span data-ttu-id="623b6-145">例如，下列程式碼會定義規則運算式，以在文字資料流中找出重複的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-145">For example, the following code defines a regular expression to locate duplicated words in a text stream.</span></span> <span data-ttu-id="623b6-146">雖然此範例會使用單一規則運算式，它會具現化新<xref:System.Text.RegularExpressions.Regex>物件來處理每一行文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-146">Although the example uses a single regular expression, it instantiates a new <xref:System.Text.RegularExpressions.Regex> object to process each line of text.</span></span> <span data-ttu-id="623b6-147">這會導致重新編譯的規則運算式與迴圈的每個反覆項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-147">This results in the recompilation of the regular expression with each iteration of the loop.</span></span>  
  
     [!code-csharp[System.Text.RegularExpressions.Class.Caching#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/cs/caching1.cs#1)]
     [!code-vb[System.Text.RegularExpressions.Class.Caching#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/vb/caching1.vb#1)]  
  
     <span data-ttu-id="623b6-148">若要避免重新編譯，您應該具現化一個<xref:System.Text.RegularExpressions.Regex>是可存取所有的程式碼時需要它，如下列重寫範例所示的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-148">To prevent recompilation, you should instantiate a single <xref:System.Text.RegularExpressions.Regex> object that is accessible to all code that requires it, as shown in the following rewritten example.</span></span>  
  
     [!code-csharp[System.Text.RegularExpressions.Class.Caching#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/cs/caching1.cs#2)]
     [!code-vb[System.Text.RegularExpressions.Class.Caching#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/vb/caching1.vb#2)]  
  
 [<span data-ttu-id="623b6-149">回到 < 備註 ></span><span class="sxs-lookup"><span data-stu-id="623b6-149">Back to Remarks</span></span>](#remarks)  
  
<a name="regex_ops"></a>   
## <a name="performing-regular-expression-operations"></a><span data-ttu-id="623b6-150">執行規則運算式作業</span><span class="sxs-lookup"><span data-stu-id="623b6-150">Performing Regular Expression Operations</span></span>  
 <span data-ttu-id="623b6-151">您是否決定具現化<xref:System.Text.RegularExpressions.Regex>物件並呼叫其方法或呼叫靜態方法，<xref:System.Text.RegularExpressions.Regex>類別提供下列的模式比對功能：</span><span class="sxs-lookup"><span data-stu-id="623b6-151">Whether you decide to instantiate a <xref:System.Text.RegularExpressions.Regex> object and call its methods or call static methods, the <xref:System.Text.RegularExpressions.Regex> class offers the following pattern-matching functionality:</span></span>  
  
-   <span data-ttu-id="623b6-152">驗證的相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-152">Validation of a match.</span></span> <span data-ttu-id="623b6-153">您呼叫<xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法，以判斷是否有相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-153">You call the <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method to determine whether a match is present.</span></span>  
  
-   <span data-ttu-id="623b6-154">擷取單一相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-154">Retrieval of a single match.</span></span> <span data-ttu-id="623b6-155">您呼叫<xref:System.Text.RegularExpressions.Regex.Match%2A>方法來擷取<xref:System.Text.RegularExpressions.Match>物件，表示字串中或部分字串的第一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-155">You call the <xref:System.Text.RegularExpressions.Regex.Match%2A> method to retrieve a <xref:System.Text.RegularExpressions.Match> object that represents the first match in a string or in part of a string.</span></span> <span data-ttu-id="623b6-156">可以藉由呼叫擷取後續相符項目的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-156">Subsequent matches can be retrieved by calling the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="623b6-157">擷取所有相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-157">Retrieval of all matches.</span></span> <span data-ttu-id="623b6-158">您呼叫<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法來擷取<xref:System.Text.RegularExpressions.MatchCollection?displayProperty=nameWithType>物件，表示為字串或字串的部分所找到的所有相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-158">You call the <xref:System.Text.RegularExpressions.Regex.Matches%2A> method to retrieve a <xref:System.Text.RegularExpressions.MatchCollection?displayProperty=nameWithType> object that represents all the matches found in a string or in part of a string.</span></span>  
  
-   <span data-ttu-id="623b6-159">取代相符的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-159">Replacement of matched text.</span></span> <span data-ttu-id="623b6-160">您呼叫<xref:System.Text.RegularExpressions.Regex.Replace%2A>來取代相符的文字的方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-160">You call the <xref:System.Text.RegularExpressions.Regex.Replace%2A> method to replace matched text.</span></span> <span data-ttu-id="623b6-161">取代文字也可以定義規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-161">The replacement text can also be defined by a regular expression.</span></span> <span data-ttu-id="623b6-162">此外，某些<xref:System.Text.RegularExpressions.Regex.Replace%2A>方法包括<xref:System.Text.RegularExpressions.MatchEvaluator>參數，可讓您以程式設計方式定義的替代文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-162">In addition, some of the <xref:System.Text.RegularExpressions.Regex.Replace%2A> methods include a <xref:System.Text.RegularExpressions.MatchEvaluator> parameter that enables you to programmatically define the replacement text.</span></span>  
  
-   <span data-ttu-id="623b6-163">建立的字串陣列，由輸入字串的一部分。</span><span class="sxs-lookup"><span data-stu-id="623b6-163">Creation of a string array that is formed from parts of an input string.</span></span> <span data-ttu-id="623b6-164">您呼叫<xref:System.Text.RegularExpressions.Regex.Split%2A>方法來分割輸入的字串的規則運算式所定義的位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-164">You call the <xref:System.Text.RegularExpressions.Regex.Split%2A> method to split an input string at positions that are defined by the regular expression.</span></span>  
  
 <span data-ttu-id="623b6-165">其模式比對的方法，除了<xref:System.Text.RegularExpressions.Regex>類別包含數個特殊用途的方法：</span><span class="sxs-lookup"><span data-stu-id="623b6-165">In addition to its pattern-matching methods, the <xref:System.Text.RegularExpressions.Regex> class includes several special-purpose methods:</span></span>  
  
-   <span data-ttu-id="623b6-166"><xref:System.Text.RegularExpressions.Regex.Escape%2A>方法會逸出任何可能會解譯為規則運算式或輸入的字串中的規則運算式運算子的字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-166">The <xref:System.Text.RegularExpressions.Regex.Escape%2A> method escapes any characters that may be interpreted as regular expression operators in a regular expression or input string.</span></span>  
  
-   <span data-ttu-id="623b6-167"><xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法會移除這些逸出字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-167">The <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method removes these escape characters.</span></span>  
  
-   <span data-ttu-id="623b6-168"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法會建立包含預先定義的規則運算式的組件。</span><span class="sxs-lookup"><span data-stu-id="623b6-168">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method creates an assembly that contains predefined regular expressions.</span></span> <span data-ttu-id="623b6-169">.NET Framework 包含這些特殊用途的組件中的範例<xref:System.Web.RegularExpressions?displayProperty=nameWithType>命名空間。</span><span class="sxs-lookup"><span data-stu-id="623b6-169">The .NET Framework contains examples of these special-purpose assemblies in the <xref:System.Web.RegularExpressions?displayProperty=nameWithType> namespace.</span></span>  
  
 [<span data-ttu-id="623b6-170">回到 < 備註 ></span><span class="sxs-lookup"><span data-stu-id="623b6-170">Back to Remarks</span></span>](#remarks)  
  
<a name="define_timeout"></a>   
## <a name="defining-a-time-out-value"></a><span data-ttu-id="623b6-171">定義的逾時值</span><span class="sxs-lookup"><span data-stu-id="623b6-171">Defining a Time-Out Value</span></span>  
 <span data-ttu-id="623b6-172">.NET Framework 支援完整的規則運算式語言提供大幅的功能與彈性在模式比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-172">The .NET Framework supports a full-featured regular expression language that provides substantial power and flexibility in pattern matching.</span></span> <span data-ttu-id="623b6-173">不過，支援與彈性是有代價： 效能不佳的風險。</span><span class="sxs-lookup"><span data-stu-id="623b6-173">However, the power and flexibility come at a cost: the risk of poor performance.</span></span> <span data-ttu-id="623b6-174">執行效能不佳的規則運算式是非常容易建立。</span><span class="sxs-lookup"><span data-stu-id="623b6-174">Regular expressions that perform poorly are surprisingly easy to create.</span></span> <span data-ttu-id="623b6-175">在某些情況下，依賴大量回溯規則運算式作業似乎停止回應時它們會處理幾乎符合規則運算式模式的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-175">In some cases, regular expression operations that rely on excessive backtracking can appear to stop responding when they process text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-176">如需有關.NET Framework 規則運算式引擎的詳細資訊，請參閱 <<c0> [ 規則運算式行為的詳細資料](~/docs/standard/base-types/details-of-regular-expression-behavior.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-176">For more information about the .NET Framework regular expression engine, see [Details of Regular Expression Behavior](~/docs/standard/base-types/details-of-regular-expression-behavior.md).</span></span> <span data-ttu-id="623b6-177">如需有關大量回溯的詳細資訊，請參閱 <<c0> [ 回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-177">For more information about excessive backtracking, see [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span>  
  
 <span data-ttu-id="623b6-178">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，您可以定義逾時間隔，規則運算式相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-178">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can define a time-out interval for regular expression matches.</span></span> <span data-ttu-id="623b6-179">如果規則運算式引擎無法識別此時間間隔內的相符項目，比對作業會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-179">If the regular expression engine cannot identify a match within this time interval, the matching operation throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-180">在大部分情況下，這可防止規則運算式引擎嘗試比對幾乎符合規則運算式模式的文字所浪費的處理能力。</span><span class="sxs-lookup"><span data-stu-id="623b6-180">In most cases, this prevents the regular expression engine from wasting processing power by trying to match text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-181">它也可能表示，不過，，已設定的逾時間隔太低，或目前的電腦負載的效能，導致整體效能降低。</span><span class="sxs-lookup"><span data-stu-id="623b6-181">It also could indicate, however, that the timeout interval has been set too low, or that the current machine load has caused an overall degradation in performance.</span></span>  
  
 <span data-ttu-id="623b6-182">處理例外狀況的方式，取決於例外狀況的原因。</span><span class="sxs-lookup"><span data-stu-id="623b6-182">How you handle the exception depends on the cause of the exception.</span></span> <span data-ttu-id="623b6-183">如果因為逾時間隔設得太低，就會發生例外狀況，或因為過多的電腦工作負載，您可以增加逾時間隔並重試比對的作業。</span><span class="sxs-lookup"><span data-stu-id="623b6-183">If the exception occurs because the time-out interval is set too low or because of excessive machine load, you can increase the time-out interval and retry the matching operation.</span></span> <span data-ttu-id="623b6-184">如果規則運算式依賴大量回溯，就會發生例外狀況，您可以假設相符項目不存在，而且 （選擇性） 您可以在此記錄可協助您修改規則運算式模式的資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-184">If the exception occurs because the regular expression relies on excessive backtracking, you can assume that a match does not exist, and, optionally, you can log information that will help you modify the regular expression pattern.</span></span>  
  
 <span data-ttu-id="623b6-185">您可以藉由呼叫設定的逾時間隔<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>建構函式，當您具現化規則運算式物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-185">You can set a time-out interval by calling the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> constructor when you instantiate a regular expression object.</span></span> <span data-ttu-id="623b6-186">對於靜態方法，您可以設定逾時間隔，藉由呼叫的比對方法的多載`matchTimeout`參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-186">For static methods, you can set a time-out interval by calling an overload of a matching method that has a `matchTimeout` parameter.</span></span> <span data-ttu-id="623b6-187">如果您未明確設定的逾時值，預設的逾時值是以下列方式決定：</span><span class="sxs-lookup"><span data-stu-id="623b6-187">If you do not set a time-out value explicitly, the default time-out value  is determined as follows:</span></span>  
  
-   <span data-ttu-id="623b6-188">使用整個應用程式的逾時的值，如果有一個存在。</span><span class="sxs-lookup"><span data-stu-id="623b6-188">By using the application-wide time-out value, if one exists.</span></span> <span data-ttu-id="623b6-189">這可以是應用程式定義域，適用於任何逾時值<xref:System.Text.RegularExpressions.Regex>物件具現化或靜態方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="623b6-189">This can be any time-out value that applies to the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is instantiated or the static method call is made.</span></span> <span data-ttu-id="623b6-190">您可以藉由呼叫設定整個應用程式的逾時值<xref:System.AppDomain.SetData%2A?displayProperty=nameWithType>方法，以指派的字串表示<xref:System.TimeSpan>"REGEX_DEFAULT_MATCH_TIMEOUT"屬性值。</span><span class="sxs-lookup"><span data-stu-id="623b6-190">You can set the application-wide time-out value by calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method to assign the string representation of a <xref:System.TimeSpan> value to the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</span></span>  
  
-   <span data-ttu-id="623b6-191">使用值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>，如果已不設定任何全應用程式的逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-191">By using the value <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>, if no application-wide time-out value has been set.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="623b6-192">我們建議您所有的規則運算式模式比對作業中設定的逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-192">We recommend that you set a time-out value in all regular expression pattern-matching operations.</span></span> <span data-ttu-id="623b6-193">如需詳細資訊，請參閱 <<c0> [ 規則運算式的最佳做法](~/docs/standard/base-types/best-practices.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-193">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md).</span></span>  
  
 [<span data-ttu-id="623b6-194">回到 < 備註 ></span><span class="sxs-lookup"><span data-stu-id="623b6-194">Back to Remarks</span></span>](#remarks)  
  
   
  
## Examples  
 <span data-ttu-id="623b6-195">下列範例會使用規則運算式，檢查有重複出現的文字字串中。</span><span class="sxs-lookup"><span data-stu-id="623b6-195">The following example uses a regular expression to check for repeated occurrences of words in a string.</span></span> <span data-ttu-id="623b6-196">規則運算式`\b(?<word>\w+)\s+(\k<word>)\b`可以解譯為下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-196">The regular expression `\b(?<word>\w+)\s+(\k<word>)\b` can be interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-197">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-197">Pattern</span></span>|<span data-ttu-id="623b6-198">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-198">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-199">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-199">Start the match at a word boundary.</span></span>|  
|`(?<word>\w+)`|<span data-ttu-id="623b6-200">比對到字邊界的一或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-200">Match one or more word characters up to a word boundary.</span></span> <span data-ttu-id="623b6-201">此擷取的群組命名為`word`。</span><span class="sxs-lookup"><span data-stu-id="623b6-201">Name this captured group `word`.</span></span>|  
|`\s+`|<span data-ttu-id="623b6-202">比對一或多個空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-202">Match one or more white-space characters.</span></span>|  
|`(\k<word>)`|<span data-ttu-id="623b6-203">比對擷取的群組，稱為`word`。</span><span class="sxs-lookup"><span data-stu-id="623b6-203">Match the captured group that is named `word`.</span></span>|  
|`\b`|<span data-ttu-id="623b6-204">比對字邊界。</span><span class="sxs-lookup"><span data-stu-id="623b6-204">Match a word boundary.</span></span>|  
  
 [!code-cpp[Regex_Words#0](~/samples/snippets/cpp/VS_Snippets_CLR/Regex_Words/CPP/words.cpp#0)]
 [!code-csharp[Regex_Words#0](~/samples/snippets/csharp/VS_Snippets_CLR/Regex_Words/CS/words.cs#0)]
 [!code-vb[Regex_Words#0](~/samples/snippets/visualbasic/VS_Snippets_CLR/Regex_Words/VB/words.vb#0)]  
  
 <span data-ttu-id="623b6-205">下列範例說明如何使用規則運算式，以檢查是否為字串表示貨幣值，或者具有正確的格式來表示貨幣值。</span><span class="sxs-lookup"><span data-stu-id="623b6-205">The following example illustrates the use of a regular expression to check whether a string either represents a currency value or has the correct format to represent a currency value.</span></span> <span data-ttu-id="623b6-206">在此情況下，規則運算式，會動態建立從<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>，和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>使用者目前的文化特性的屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-206">In this case, the regular expression is built dynamically from the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties for the user's current culture.</span></span> <span data-ttu-id="623b6-207">如果系統的目前文化特性是 EN-US，產生的規則運算式是`^\s*[\+-]?\s?\$?\s?(\d*\.?\d{2}?){1}$`。</span><span class="sxs-lookup"><span data-stu-id="623b6-207">If the system's current culture is en-US, the resulting regular expression is `^\s*[\+-]?\s?\$?\s?(\d*\.?\d{2}?){1}$`.</span></span> <span data-ttu-id="623b6-208">下表所示，可以解譯這個規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-208">This regular expression can be interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-209">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-209">Pattern</span></span>|<span data-ttu-id="623b6-210">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-210">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="623b6-211">字串的開頭開始。</span><span class="sxs-lookup"><span data-stu-id="623b6-211">Start at the beginning of the string.</span></span>|  
|`\s*`|<span data-ttu-id="623b6-212">比對零個以上的空白字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-212">Match zero or more white-space characters.</span></span>|  
|`[\+-]?`|<span data-ttu-id="623b6-213">比對零個或一個出現的正號或負號。</span><span class="sxs-lookup"><span data-stu-id="623b6-213">Match zero or one occurrence of either the positive sign or the negative sign.</span></span>|  
|`\s?`|<span data-ttu-id="623b6-214">比對零個或一個空白字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-214">Match zero or one white-space character.</span></span>|  
|`\$?`|<span data-ttu-id="623b6-215">比對零個或一個出現的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="623b6-215">Match zero or one occurrence of the dollar sign.</span></span>|  
|`\s?`|<span data-ttu-id="623b6-216">比對零個或一個空白字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-216">Match zero or one white-space character.</span></span>|  
|`\d*`|<span data-ttu-id="623b6-217">比對零個或多個十進位數字。</span><span class="sxs-lookup"><span data-stu-id="623b6-217">Match zero or more decimal digits.</span></span>|  
|`\.?`|<span data-ttu-id="623b6-218">比對零個或一個小數點符號。</span><span class="sxs-lookup"><span data-stu-id="623b6-218">Match zero or one decimal point symbol.</span></span>|  
|`\d{2}?`|<span data-ttu-id="623b6-219">比對兩個十進位數字零或一次。</span><span class="sxs-lookup"><span data-stu-id="623b6-219">Match two decimal digits zero or one time.</span></span>|  
|`(\d*\.?\d{2}?){1}`|<span data-ttu-id="623b6-220">比對整數和小數的位數，小數點符號來分隔至少一次的模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-220">Match the pattern of integral and fractional digits separated by a decimal point symbol at least one time.</span></span>|  
|`$`|<span data-ttu-id="623b6-221">比對字串的結尾。</span><span class="sxs-lookup"><span data-stu-id="623b6-221">Match the end of the string.</span></span>|  
  
 <span data-ttu-id="623b6-222">在此情況下，規則運算式假設有效貨幣字串不包含群組分隔符號，而且它有沒有小數位數或目前的文化特性所定義的小數位數數目<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-222">In this case, the regular expression assumes that a valid currency string does not contain group separator symbols, and that it has either no fractional digits or the number of fractional digits defined by the current culture's <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> property.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.class/cs/regex_example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.class/vb/regex_example1.vb#1)]  
  
 <span data-ttu-id="623b6-223">由於動態建置規則運算式，在此範例中，我們不知道在設計階段是否目前文化特性的貨幣符號、 小數符號或正的和負號可能會被錯誤解譯為一般的規則運算式引擎運算式語言的運算子。</span><span class="sxs-lookup"><span data-stu-id="623b6-223">Because the regular expression in this example is built dynamically, we do not know at design time whether the current culture's currency symbol, decimal sign, or positive and negative signs might be misinterpreted by the regular expression engine as regular expression language operators.</span></span> <span data-ttu-id="623b6-224">若要避免任何的錯譯，範例會傳遞至每個動態產生的字串<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-224">To prevent any misinterpretation, the example passes each dynamically generated string to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="623b6-225"><see cref="T:System.Text.RegularExpressions.Regex" />類別是不可變 （唯讀） 和安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="623b6-225">The <see cref="T:System.Text.RegularExpressions.Regex" /> class is immutable (read-only) and thread safe.</span></span> <span data-ttu-id="623b6-226"><see cref="T:System.Text.RegularExpressions.Regex" /> 物件可以在任何執行緒上建立與執行緒之間共用。</span><span class="sxs-lookup"><span data-stu-id="623b6-226"><see cref="T:System.Text.RegularExpressions.Regex" /> objects can be created on any thread and shared between threads.</span></span> <span data-ttu-id="623b6-227">如需詳細資訊，請參閱 &lt;&lt;c0&gt; [ 的執行緒安全](~/docs/standard/base-types/thread-safety-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-227">For more information, see [Thread Safety](~/docs/standard/base-types/thread-safety-in-regular-expressions.md).</span></span></threadsafe>
    <altmember cref="T:System.Configuration.RegexStringValidator" />
    <related type="Article" href="~/docs/standard/base-types/regular-expressions.md"><span data-ttu-id="623b6-228">.NET Framework 規則運算式</span><span class="sxs-lookup"><span data-stu-id="623b6-228">.NET Framework Regular Expressions</span></span></related>
    <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-229">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-229">Regular Expression Language Elements</span></span></related>
    <related type="ExternalDocumentation" href="https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular expressions quick reference.docx"><span data-ttu-id="623b6-230">規則運算式 - 快速參考 (以 Word 格式下載)</span><span class="sxs-lookup"><span data-stu-id="623b6-230">Regular Expressions - Quick Reference (download in Word format)</span></span></related>
    <related type="ExternalDocumentation" href="https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular expressions quick reference.pdf"><span data-ttu-id="623b6-231">規則運算式 - 快速參考 (以 PDF 格式下載)</span><span class="sxs-lookup"><span data-stu-id="623b6-231">Regular Expressions - Quick Reference (download in PDF format)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="623b6-232">初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-232">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-233">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-233">Regular Expression Language Elements</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Regex ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Regex();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="623b6-234">初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-234">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-235">請注意，受到這個建構函式;它只由衍生自的類別呼叫<xref:System.Text.RegularExpressions.Regex>類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-235">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="623b6-236">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-236">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="623b6-237">初始化的新執行個體<see cref="T:System.Text.RegularExpressions.Regex" />指定的規則運算式的類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-237">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-238">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-238">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-239">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)主題。</span><span class="sxs-lookup"><span data-stu-id="623b6-239">For more information about regular expressions, see the [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md) topics.</span></span>  
  
 <span data-ttu-id="623b6-240">呼叫<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%29>建構函式相當於呼叫<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29>建構函式值是<xref:System.Text.RegularExpressions.RegexOptions.None>如`options`引數。</span><span class="sxs-lookup"><span data-stu-id="623b6-240">Calling the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%29> constructor is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29> constructor with a value of <xref:System.Text.RegularExpressions.RegexOptions.None> for the `options` argument.</span></span>  
  
 <span data-ttu-id="623b6-241">A<xref:System.Text.RegularExpressions.Regex>物件是不可變的也就是說，它可以僅適用於您在建立時定義的比對模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-241">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match pattern you define when you create it.</span></span> <span data-ttu-id="623b6-242">不過，它可以使用任意數目的時間，而不需要重新編譯。</span><span class="sxs-lookup"><span data-stu-id="623b6-242">However, it can be used any number of times without being recompiled.</span></span>  
  
 <span data-ttu-id="623b6-243">這個建構函式會嘗試定義中的任何字母字元的區分大小寫比對規則運算式物件具現化`pattern`。</span><span class="sxs-lookup"><span data-stu-id="623b6-243">This constructor instantiates a regular expression object that attempts a case-sensitive match of any alphabetical characters defined in `pattern`.</span></span> <span data-ttu-id="623b6-244">不區分大小寫的比對中，使用<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-244">For a case-insensitive match, use the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-245">下列範例說明如何使用這個建構函式來具現化規則運算式比對任何以字母開頭的字組"a"或"t"。</span><span class="sxs-lookup"><span data-stu-id="623b6-245">The following example illustrates how to use this constructor to instantiate a regular expression that matches any word that begins with the letters "a" or "t".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/cs/constructors1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/vb/constructors1.vb#1)]  
  
 <span data-ttu-id="623b6-246">請注意，規則運算式模式無法符合這個字"The"開頭的文字，因為預設區分大小寫比較。</span><span class="sxs-lookup"><span data-stu-id="623b6-246">Note that the regular expression pattern cannot match the word "The" at the beginning of the text, because comparisons are case-sensitive by default.</span></span> <span data-ttu-id="623b6-247">如需範例的不區分大小寫的比較，請參閱<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-247">For an example of case-insensitive comparison, see the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-248">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-248">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-249"><paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-249"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-250">這個建構函式會建立<see cref="T:System.Text.RegularExpressions.Regex" />會使用預設的逾時值，在其中建立應用程式定義域的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-250">This constructor creates a <see cref="T:System.Text.RegularExpressions.Regex" /> object that uses the default time-out value of the application domain in which it is created.</span></span> <span data-ttu-id="623b6-251">如果應用程式定義域中，尚未定義的逾時值<see cref="T:System.Text.RegularExpressions.Regex" />物件會使用值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，這樣就不會逾時的作業。建立建議建構函式<see cref="T:System.Text.RegularExpressions.Regex" />物件是<see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-251">If a time-out value has not been defined for the application domain,  the <see cref="T:System.Text.RegularExpressions.Regex" /> object uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the operation from timing out. The recommended constructor for creating a <see cref="T:System.Text.RegularExpressions.Regex" /> object is <see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-252">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-252">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Regex (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Regex(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="623b6-253">包含序列化模式和 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-253">The object that contains a serialized pattern and <see cref="T:System.Text.RegularExpressions.RegexOptions" /> information.</span></span></param>
        <param name="context"><span data-ttu-id="623b6-254">這個序列化的目的端。</span><span class="sxs-lookup"><span data-stu-id="623b6-254">The destination for this serialization.</span></span> <span data-ttu-id="623b6-255">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="623b6-255">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="623b6-256">使用序列化的資料，初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-256">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class by using serialized data.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-257">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-257">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-258">此模式可<paramref name="info" />包含是<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-258">The pattern that <paramref name="info" /> contains is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-259"><paramref name="info" /> 包含無效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 旗標。</span><span class="sxs-lookup"><span data-stu-id="623b6-259"><paramref name="info" /> contains an invalid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> flag.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (pattern, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="623b6-260">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-260">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-261">列舉值的位元組合，這些值會修改規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-261">A bitwise combination of the enumeration values that modify the regular expression.</span></span></param>
        <summary><span data-ttu-id="623b6-262">初始化的新執行個體<see cref="T:System.Text.RegularExpressions.Regex" />類別，針對指定的規則運算式，使用修改模式的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-262">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression, with options that modify the pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-263">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-263">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-264">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)主題。</span><span class="sxs-lookup"><span data-stu-id="623b6-264">For more information about regular expressions, see the [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md) topics.</span></span>  
  
 <span data-ttu-id="623b6-265">A<xref:System.Text.RegularExpressions.Regex>物件是不可變的也就是說，它可以僅適用於您在建立時定義的比對參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-265">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match parameters you define when you create it.</span></span> <span data-ttu-id="623b6-266">不過，它可以使用任意數目的時間，而不需要重新編譯。</span><span class="sxs-lookup"><span data-stu-id="623b6-266">However, it can be used any number of times without being recompiled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-267">下列範例說明如何使用這個建構函式來具現化規則運算式比對任何以字母開頭的字組"a"或"t"。</span><span class="sxs-lookup"><span data-stu-id="623b6-267">The following example illustrates how to use this constructor to instantiate a regular expression that matches any word that begins with the letters "a" or "t".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Constructors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/cs/Constructors2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Constructors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/vb/Constructors2.vb#2)]  
  
 <span data-ttu-id="623b6-268">請注意，比對集合包含的文字"The"開頭的文字，因為`options`已定義參數不區分大小寫的比較。</span><span class="sxs-lookup"><span data-stu-id="623b6-268">Note that the match collection includes the word "The" that begins the text because the `options` parameter has defined case-insensitive comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-269">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-269">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-270"><paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-270"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-271"><paramref name="options" /> 包含無效的旗標。</span><span class="sxs-lookup"><span data-stu-id="623b6-271"><paramref name="options" /> contains an invalid flag.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-272">這個建構函式會建立<see cref="T:System.Text.RegularExpressions.Regex" />會使用預設的逾時值，在其中建立應用程式定義域的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-272">This constructor creates a <see cref="T:System.Text.RegularExpressions.Regex" /> object that uses the default time-out value of the application domain in which it is created.</span></span> <span data-ttu-id="623b6-273">如果應用程式定義域中，尚未定義的逾時值<see cref="T:System.Text.RegularExpressions.Regex" />物件會使用值<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，這樣就不會逾時的作業。建立建議建構函式<see cref="T:System.Text.RegularExpressions.Regex" />物件是<see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-273">If a time-out value has not been defined for the application domain, the <see cref="T:System.Text.RegularExpressions.Regex" /> object uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the operation from timing out. The recommended constructor for creating a <see cref="T:System.Text.RegularExpressions.Regex" /> object is <see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-274">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-274">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (pattern, options, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="623b6-275">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-275">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-276">列舉值的位元組合，這些值會修改規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-276">A bitwise combination of the enumeration values that modify the regular expression.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="623b6-277">逾時間隔，若要表示此方法不應逾時則為 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-277">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="623b6-278">初始化的新執行個體<see cref="T:System.Text.RegularExpressions.Regex" />逾時前，針對指定的規則運算式，會修改模式和值，指定多久模式比對方法的選項類別應該嘗試比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-278">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-279">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-279">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-280">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)主題。</span><span class="sxs-lookup"><span data-stu-id="623b6-280">For more information about regular expressions, see the [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md) topics.</span></span>  
  
 <span data-ttu-id="623b6-281">A<xref:System.Text.RegularExpressions.Regex>物件是不可變的也就是說，它可以僅適用於您定義當您建立比對模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-281">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match pattern that you define when you create it.</span></span> <span data-ttu-id="623b6-282">不過，它可以使用任意數目的時間，而不需要重新編譯。</span><span class="sxs-lookup"><span data-stu-id="623b6-282">However, it can be used any number of times without being recompiled.</span></span>  
  
 <span data-ttu-id="623b6-283">`matchTimeout`參數會指定多久模式比對方法應該嘗試逾時之前，尋找相符項目。如果沒有相符項目位於該時間間隔，模式比對的方法會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-283">The `matchTimeout` parameter specifies how long a pattern-matching method should try to find a match before it times out. If no match is found in that time interval, the pattern-matching method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-284">`matchTimeout` 覆寫應用程式定義域中定義任何預設的逾時值<xref:System.Text.RegularExpressions.Regex>建立物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-284">`matchTimeout` overrides any default time-out value defined for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-285">執行個體模式比對方法觀察`matchTimeout`逾時間隔包括下列：</span><span class="sxs-lookup"><span data-stu-id="623b6-285">The instance pattern-matching methods that observe the `matchTimeout` time-out interval include the following:</span></span>  
  
-   <xref:System.Text.RegularExpressions.Regex.IsMatch%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Match%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Matches%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Split%2A>  
  
-   <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="623b6-286">將逾時間隔可防止依賴大量回溯不會出現停止回應時它們會處理輸入的規則運算式，其中包含相符項目附近。</span><span class="sxs-lookup"><span data-stu-id="623b6-286">Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="623b6-287">如需詳細資訊，請參閱 <<c0> [ 規則運算式的最佳做法](~/docs/standard/base-types/best-practices.md)並[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-287">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-288">若要設定合理的逾時間隔，請考慮下列因素：</span><span class="sxs-lookup"><span data-stu-id="623b6-288">To set a reasonable time-out interval, consider the following factors:</span></span>  
  
-   <span data-ttu-id="623b6-289">長度和複雜度的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-289">The length and complexity of the regular expression pattern.</span></span> <span data-ttu-id="623b6-290">時間更長、 更複雜的規則運算式需要更多的時間比比較簡短而簡單的項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-290">Longer and more complex regular expressions require more time than shorter and simpler ones.</span></span>  
  
-   <span data-ttu-id="623b6-291">預期的電腦工作負載。</span><span class="sxs-lookup"><span data-stu-id="623b6-291">The expected machine load.</span></span> <span data-ttu-id="623b6-292">處理會有 CPU 和記憶體使用率過高的系統上的更多的時間。</span><span class="sxs-lookup"><span data-stu-id="623b6-292">Processing takes more time on systems that have high CPU and memory utilization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-293">下列範例會呼叫<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>建構函式來具現化<xref:System.Text.RegularExpressions.Regex>逾時值為一秒的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-293">The following example calls the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> constructor to instantiate a <xref:System.Text.RegularExpressions.Regex> object with a time-out value of one second.</span></span> <span data-ttu-id="623b6-294">規則運算式模式 `(a+)+$`會在行尾比對一個或多個 "a" 字元的一個或多個序列，並且受限於大量回溯。</span><span class="sxs-lookup"><span data-stu-id="623b6-294">The regular expression pattern `(a+)+$`, which matches one or more sequences of one or more "a" characters at the end of a line, is subject to excessive backtracking.</span></span> <span data-ttu-id="623b6-295">如果<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>會擲回，則範例會增加逾時值，最多三秒的最大值。</span><span class="sxs-lookup"><span data-stu-id="623b6-295">If a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> is thrown, the example increases the time-out value up to the maximum value of three seconds.</span></span> <span data-ttu-id="623b6-296">否則，它會放棄嘗試比對模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-296">Otherwise, it abandons the attempt to match the pattern.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ctor/cs/ctor1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ctor/vb/ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-297">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-297">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-298"><paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-298"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-299"><paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="623b6-299"><paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span></span>  
  
<span data-ttu-id="623b6-300">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-300">-or-</span></span> 
 <span data-ttu-id="623b6-301"><paramref name="matchTimeout" /> 為負數、零或約大於 24 天。</span><span class="sxs-lookup"><span data-stu-id="623b6-301"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-302">我們建議您設定<paramref name="matchTimeout" />參數設為適當的值，例如兩秒。</span><span class="sxs-lookup"><span data-stu-id="623b6-302">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="623b6-303">如果您停用逾時指定<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，規則運算式引擎可讓您稍微提升效能。</span><span class="sxs-lookup"><span data-stu-id="623b6-303">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="623b6-304">不過，您應該停用逾時，只有在下列情況下：</span><span class="sxs-lookup"><span data-stu-id="623b6-304">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="623b6-305">-當規則運算式所處理的輸入來自已知且受信任的來源，或包含靜態文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-305">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="623b6-306">這會排除已動態由使用者輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-306">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="623b6-307">-當規則運算式模式徹底測試以確保有效率地處理符合時，不符合，而且不久符合。</span><span class="sxs-lookup"><span data-stu-id="623b6-307">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="623b6-308">-當規則運算式模式包含已知會造成大量回溯處理接近的相符項目時沒有語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-308">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/34df1152-0b22-4a1c-a76c-3c28c47b70d8"><span data-ttu-id="623b6-309">回溯</span><span class="sxs-lookup"><span data-stu-id="623b6-309">Backtracking</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-310">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-310">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CacheSize">
      <MemberSignature Language="C#" Value="public static int CacheSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CacheSize" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.CacheSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CacheSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CacheSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheSize : int with get, set" Usage="System.Text.RegularExpressions.Regex.CacheSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-311">取得或設定在已編譯規則運算式目前靜態快取中項目的最大數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-311">Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.</span></span></summary>
        <value><span data-ttu-id="623b6-312">靜態快取中項目的最大數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-312">The maximum number of entries in the static cache.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-313"><xref:System.Text.RegularExpressions.Regex>類別會負責維護內部的靜態方法呼叫中使用的已編譯規則運算式快取。</span><span class="sxs-lookup"><span data-stu-id="623b6-313">The <xref:System.Text.RegularExpressions.Regex> class maintains an internal cache of compiled regular expressions used in static method calls.</span></span> <span data-ttu-id="623b6-314">如果在設定作業中指定的值小於目前的快取大小，快取項目都會被捨棄，直到快取大小是否等於指定的值。</span><span class="sxs-lookup"><span data-stu-id="623b6-314">If the value specified in a set operation is less than the current cache size, cache entries are discarded until the cache size is equal to the specified value.</span></span>  
  
 <span data-ttu-id="623b6-315">根據預設，快取會儲存 15 個已編譯的靜態規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-315">By default, the cache holds 15 compiled static regular expressions.</span></span> <span data-ttu-id="623b6-316">您的應用程式通常不會修改快取的大小。</span><span class="sxs-lookup"><span data-stu-id="623b6-316">Your application typically will not have to modify the size of the cache.</span></span> <span data-ttu-id="623b6-317">使用<xref:System.Text.RegularExpressions.Regex.CacheSize%2A>只有當您想要關閉 快取，或當您有非常大的快取的屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-317">Use the <xref:System.Text.RegularExpressions.Regex.CacheSize%2A> property only when you want to turn off caching or when you have an unusually large cache.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-318">設定作業中的值小於零。</span><span class="sxs-lookup"><span data-stu-id="623b6-318">The value in a set operation is less than zero.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-319">在.NET Framework 之前[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]、 規則運算式用於這兩個靜態和快取執行個體方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="623b6-319">In the .NET Framework prior to the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], regular expressions used in both static and instance method calls were cached.</span></span> <span data-ttu-id="623b6-320">開頭為[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]、 一般只會快取靜態方法呼叫中使用的運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-320">Beginning with the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], only regular expressions used in static method calls are cached.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="capnames">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable capnames;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Collections.Hashtable capnames" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capnames" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capnames As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Collections::Hashtable ^ capnames;" />
      <MemberSignature Language="F#" Value="val mutable capnames : System.Collections.Hashtable" Usage="System.Text.RegularExpressions.Regex.capnames" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-321">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-321">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapNames">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary CapNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary CapNames" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.CapNames" />
      <MemberSignature Language="VB.NET" Value="Protected Property CapNames As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ CapNames { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CapNames : System.Collections.IDictionary with get, set" Usage="System.Text.RegularExpressions.Regex.CapNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-322">取得或設定字典，對應具名擷取群組及其索引值。</span><span class="sxs-lookup"><span data-stu-id="623b6-322">Gets or sets a dictionary that maps named capturing groups to their index values.</span></span></summary>
        <value><span data-ttu-id="623b6-323">對應具名擷取群組及其索引值的字典。</span><span class="sxs-lookup"><span data-stu-id="623b6-323">A dictionary that maps named capturing groups to their index values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-324">請注意，這個屬性會受到保護;它只能從衍生自的類別存取<xref:System.Text.RegularExpressions.Regex>類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-324">Note that this property is protected; it can only be accessed from a class derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 <span data-ttu-id="623b6-325">設定作業會嘗試將指派給屬性的值<xref:System.Collections.Hashtable>物件; 如果這項轉換會失敗，則會呼叫<xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%29?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-325">A set operation attempts to convert the value assigned to the property to a <xref:System.Collections.Hashtable> object; if this conversion fails, it calls the <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%29?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-326">在設定作業中指派給 <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> 的屬性值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-326">The value assigned to the <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> property in a set operation is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="caps">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable caps;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Collections.Hashtable caps" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.caps" />
      <MemberSignature Language="VB.NET" Value="Protected Friend caps As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Collections::Hashtable ^ caps;" />
      <MemberSignature Language="F#" Value="val mutable caps : System.Collections.Hashtable" Usage="System.Text.RegularExpressions.Regex.caps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-327">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-327">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caps">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary Caps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Caps" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.Caps" />
      <MemberSignature Language="VB.NET" Value="Protected Property Caps As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ Caps { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caps : System.Collections.IDictionary with get, set" Usage="System.Text.RegularExpressions.Regex.Caps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-328">取得或設定字典，對應編號的擷取群組及其索引值。</span><span class="sxs-lookup"><span data-stu-id="623b6-328">Gets or sets a dictionary that maps numbered capturing groups to their index values.</span></span></summary>
        <value><span data-ttu-id="623b6-329">對應編號的擷取群組及其索引值的字典。</span><span class="sxs-lookup"><span data-stu-id="623b6-329">A dictionary that maps numbered capturing groups to their index values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-330">請注意，這個屬性會受到保護;它只能從衍生自的類別存取<xref:System.Text.RegularExpressions.Regex>類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-330">Note that this property is protected; it can only be accessed from a class derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 <span data-ttu-id="623b6-331">設定作業會嘗試將指派給屬性的值<xref:System.Collections.Hashtable>物件; 如果這項轉換會失敗，則會呼叫<xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%29?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-331">A set operation attempts to convert the value assigned to the property to a <xref:System.Collections.Hashtable> object; if this conversion fails, it calls the <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%29?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-332">在設定作業中指派給 <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> 的屬性值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-332">The value assigned to the <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> property in a set operation is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="capsize">
      <MemberSignature Language="C#" Value="protected internal int capsize;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly int32 capsize" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capsize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capsize As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected public: int capsize;" />
      <MemberSignature Language="F#" Value="val mutable capsize : int" Usage="System.Text.RegularExpressions.Regex.capsize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-333">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-333">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="capslist">
      <MemberSignature Language="C#" Value="protected internal string[] capslist;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly string[] capslist" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capslist" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capslist As String() " />
      <MemberSignature Language="C++ CLI" Value="protected public: cli::array &lt;System::String ^&gt; ^ capslist;" />
      <MemberSignature Language="F#" Value="val mutable capslist : string[]" Usage="System.Text.RegularExpressions.Regex.capslist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-334">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-334">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileToAssembly">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="623b6-335">編譯規則運算式並將它們以單一組件 (Assembly) 儲存至磁碟。</span><span class="sxs-lookup"><span data-stu-id="623b6-335">Compiles regular expressions and saves them to disk in a single assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="623b6-336">在.NET Core 上呼叫`Regex.CompileToAssembly`方法擲回<xref:System.PlatformNotSupportedException>; 不支援寫出組件。</span><span class="sxs-lookup"><span data-stu-id="623b6-336">On .NET Core, calls to the `Regex.CompileToAssembly` method throw a <xref:System.PlatformNotSupportedException>; writing out an assembly is not supported.</span></span>
  
       ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="regexinfos"><span data-ttu-id="623b6-337">陣列，描述要編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-337">An array that describes the regular expressions to compile.</span></span></param>
        <param name="assemblyname"><span data-ttu-id="623b6-338">組件的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-338">The file name of the assembly.</span></span></param>
        <summary><span data-ttu-id="623b6-339">會編譯一或多個指定<see cref="T:System.Text.RegularExpressions.Regex" />的具名組件的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-339">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-340"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%29>方法會產生.NET Framework 組件中定義的每個規則運算式中`regexinfos`陣列由一個類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-340">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%29> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="623b6-341">一般而言，<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%29>從個別的應用程式所產生的已編譯的規則運算式的組件呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-341">Typically, the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%29> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="623b6-342">每個組件中包含的規則運算式具有下列特性：</span><span class="sxs-lookup"><span data-stu-id="623b6-342">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="623b6-343">它衍生自<xref:System.Text.RegularExpressions.Regex>類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-343">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="623b6-344">它指派所定義的完整限定的名稱`fullnamespace`並`name`對應的參數<xref:System.Text.RegularExpressions.RegexCompilationInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-344">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="623b6-345">它有預設值 （或無參數） 建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-345">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="623b6-346">一般情況下，組件或應用程式分開建立組件的程式碼中找到的程式碼會具現化，並使用已編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-346">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-347">下列範例會建立名為 RegexLib.dll 組件。</span><span class="sxs-lookup"><span data-stu-id="623b6-347">The following example creates an assembly named RegexLib.dll.</span></span> <span data-ttu-id="623b6-348">組件包含兩個已編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-348">The assembly includes two compiled regular expressions.</span></span> <span data-ttu-id="623b6-349">第一天， `Utilities.RegularExpressions.DuplicatedString`，比對兩個相同的連續文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-349">The first, `Utilities.RegularExpressions.DuplicatedString`, matches two identical contiguous words.</span></span> <span data-ttu-id="623b6-350">第二個， `Utilities.RegularExpressions.EmailAddress`，檢查字串是否具有正確格式的電子郵件地址。</span><span class="sxs-lookup"><span data-stu-id="623b6-350">The second, `Utilities.RegularExpressions.EmailAddress`, checks whether a string has the correct format to be an email address.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile1.vb#1)]  
  
 <span data-ttu-id="623b6-351">檢查重複的文字字串的規則運算式然後具現化，並使用下列的範例。</span><span class="sxs-lookup"><span data-stu-id="623b6-351">The regular expression that checks a string for duplicate words is then instantiated and used by the following example.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile2.vb#2)]  
  
 <span data-ttu-id="623b6-352">成功編譯此第二個範例需要的 RegexLib.dll （第一個範例所建立的組件） 的參考加入至專案。</span><span class="sxs-lookup"><span data-stu-id="623b6-352">Successful compilation of this second example requires a reference to RegexLib.dll (the assembly created by the first example) to be added to the project.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-353">值<paramref name="assemblyname" />參數的<see cref="P:System.Reflection.AssemblyName.Name" />屬性為空白或 null 字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-353">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span></span>  
  
<span data-ttu-id="623b6-354">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-354">-or-</span></span> 
<span data-ttu-id="623b6-355">規則運算式模式中的一或多個物件的<paramref name="regexinfos" />包含無效的語法。</span><span class="sxs-lookup"><span data-stu-id="623b6-355">The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-356"><paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-356"><paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="623b6-357">僅限 .NET Core：不支援為編譯的規則運算式建立其組件。</span><span class="sxs-lookup"><span data-stu-id="623b6-357">.NET Core only: Creating an assembly of compiled regular expressions is not supported.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-358">如果您正在開發的系統上，具有[!INCLUDE[net_v45](~/includes/net-v45-md.md)]或其點發行版本安裝目標[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，而且您使用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />方法用來建立包含的組件編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-358">If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="623b6-359">嘗試使用其中一個規則運算式，因為在系統上的組件具有[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-359">Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception.</span></span> <span data-ttu-id="623b6-360">若要解決這個問題，您可以執行下列任何一項操作：</span><span class="sxs-lookup"><span data-stu-id="623b6-360">To work around this problem, you can do either of the following:</span></span> 
<span data-ttu-id="623b6-361">-組建包含的系統上，已編譯的規則運算式的組件[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]而不是安裝的更新版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-361">-   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.</span></span>  
  
<span data-ttu-id="623b6-362">-而不是呼叫<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />並從組件中擷取已編譯的規則運算式，使用靜態或執行個體<see cref="T:System.Text.RegularExpressions.Regex" />方法使用<see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />選項，當您具現化<see cref="T:System.Text.RegularExpressions.Regex" />物件或呼叫規則運算式模式比對方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-362">-   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/compilation-and-reuse-in-regular-expressions.md"><span data-ttu-id="623b6-363">編譯和重複使用</span><span class="sxs-lookup"><span data-stu-id="623b6-363">Compilation and Reuse</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname, class System.Reflection.Emit.CustomAttributeBuilder[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname, cli::array &lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName * System.Reflection.Emit.CustomAttributeBuilder[] -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.Emit.CustomAttributeBuilder[]" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="regexinfos"><span data-ttu-id="623b6-364">陣列，描述要編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-364">An array that describes the regular expressions to compile.</span></span></param>
        <param name="assemblyname"><span data-ttu-id="623b6-365">組件的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-365">The file name of the assembly.</span></span></param>
        <param name="attributes"><span data-ttu-id="623b6-366">陣列，定義要套用至組件的屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-366">An array that defines the attributes to apply to the assembly.</span></span></param>
        <summary><span data-ttu-id="623b6-367">會編譯一或多個指定<see cref="T:System.Text.RegularExpressions.Regex" />具有指定之屬性的具名組件的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-367">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly with the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-368"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29>方法會產生.NET Framework 組件中定義的每個規則運算式中`regexinfos`陣列由一個類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-368">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="623b6-369">一般而言，<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29>從個別的應用程式所產生的已編譯的規則運算式的組件呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-369">Typically, the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="623b6-370">每個組件中包含的規則運算式具有下列特性：</span><span class="sxs-lookup"><span data-stu-id="623b6-370">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="623b6-371">它衍生自<xref:System.Text.RegularExpressions.Regex>類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-371">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="623b6-372">它指派所定義的完整限定的名稱`fullnamespace`並`name`對應的參數<xref:System.Text.RegularExpressions.RegexCompilationInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-372">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="623b6-373">它有預設值 （或無參數） 建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-373">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="623b6-374">一般情況下，組件或應用程式分開建立組件的程式碼中找到的程式碼會具現化，並使用已編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-374">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
 <span data-ttu-id="623b6-375">因為<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法會產生.NET Framework 組件，而不是使用特定語言的類別定義關鍵字的方法呼叫 (例如`class`在 C# 或`Class`...`End Class`</span><span class="sxs-lookup"><span data-stu-id="623b6-375">Because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates a .NET Framework assembly from a method call instead of using a particular language's class definition keyword (such as `class` in C# or `Class`…`End Class`</span></span> <span data-ttu-id="623b6-376">在 Visual Basic 中)，它不允許使用的開發語言的標準屬性語法來指派給組件的.NET Framework 屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-376">in Visual Basic), it does not allow .NET Framework attributes to be assigned to the assembly by using the development language's standard attribute syntax.</span></span> <span data-ttu-id="623b6-377">`attributes`參數提供的替代方法來定義將套用至組件的屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-377">The `attributes` parameter provides an alternative method for defining the attributes that apply to the assembly.</span></span> <span data-ttu-id="623b6-378">針對每個您想要套用至組件的屬性，執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="623b6-378">For each attribute that you want to apply to the assembly, do the following:</span></span>  
  
1.  <span data-ttu-id="623b6-379">建立陣列<xref:System.Type>代表您想要呼叫的屬性建構函式的參數類型的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-379">Create an array of <xref:System.Type> objects representing the parameter types of the attribute constructor that you want to call.</span></span>  
  
2.  <span data-ttu-id="623b6-380">擷取<xref:System.Type>物件，表示您想要套用至新的組件的屬性類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-380">Retrieve a <xref:System.Type> object representing the attribute class that you want to apply to the new assembly.</span></span>  
  
3.  <span data-ttu-id="623b6-381">呼叫<xref:System.Type.GetConstructor%2A>屬性的方法<xref:System.Type>物件來擷取<xref:System.Reflection.ConstructorInfo>物件，表示您想要呼叫的屬性建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-381">Call the <xref:System.Type.GetConstructor%2A> method of the attribute <xref:System.Type> object to retrieve a <xref:System.Reflection.ConstructorInfo> object representing the attribute constructor that you want to call.</span></span> <span data-ttu-id="623b6-382">傳遞<xref:System.Type.GetConstructor%2A>方法的陣列的<xref:System.Type>表示建構函式的參數類型的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-382">Pass the <xref:System.Type.GetConstructor%2A> method the array of <xref:System.Type> objects that represents the constructor's parameter types.</span></span>  
  
4.  <span data-ttu-id="623b6-383">建立<xref:System.Object>陣列，定義要傳遞給屬性的建構函式的參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-383">Create a <xref:System.Object> array that defines the parameters to pass to the attribute's constructor.</span></span>  
  
5.  <span data-ttu-id="623b6-384">具現化<xref:System.Reflection.Emit.CustomAttributeBuilder>物件，並傳遞其建構函式<xref:System.Reflection.ConstructorInfo>擷取在步驟 3 中的物件和<xref:System.Object>步驟 4 中建立的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-384">Instantiate a <xref:System.Reflection.Emit.CustomAttributeBuilder> object by passing its constructor the <xref:System.Reflection.ConstructorInfo> object retrieved in step 3 and the <xref:System.Object> array created in step 4.</span></span>  
  
 <span data-ttu-id="623b6-385">然後，您就可以傳遞這些陣列<xref:System.Reflection.Emit.CustomAttributeBuilder>而不是物件`attributes`參數來<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-385">You can then pass an array of these <xref:System.Reflection.Emit.CustomAttributeBuilder> objects instead of the `attributes` parameter to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-386">下列範例會建立名為 RegexLib.dll 組件，並套用<xref:System.Reflection.AssemblyTitleAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-386">The following example creates an assembly named RegexLib.dll and applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to it.</span></span> <span data-ttu-id="623b6-387">組件包含兩個已編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-387">The assembly includes two compiled regular expressions.</span></span> <span data-ttu-id="623b6-388">第一天， `Utilities.RegularExpressions.DuplicatedString`，比對兩個相同的連續文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-388">The first, `Utilities.RegularExpressions.DuplicatedString`, matches two identical contiguous words.</span></span> <span data-ttu-id="623b6-389">第二個， `Utilities.RegularExpressions.EmailAddress`，檢查字串是否具有正確格式的電子郵件地址。</span><span class="sxs-lookup"><span data-stu-id="623b6-389">The second, `Utilities.RegularExpressions.EmailAddress`, checks whether a string has the correct format to be an email address.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile3.vb#3)]  
  
 <span data-ttu-id="623b6-390">您可以確認<xref:System.Reflection.AssemblyTitleAttribute>藉由檢查它的資訊清單，使用反映公用程式，例如 ILDasm 屬性套用至組件。</span><span class="sxs-lookup"><span data-stu-id="623b6-390">You can verify that the <xref:System.Reflection.AssemblyTitleAttribute> attribute has been applied to the assembly by examining its manifest with a reflection utility such as ILDasm.</span></span>  
  
 <span data-ttu-id="623b6-391">檢查重複的文字字串的規則運算式然後具現化，並使用下列的範例。</span><span class="sxs-lookup"><span data-stu-id="623b6-391">The regular expression that checks a string for duplicate words is then instantiated and used by the following example.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile2.vb#2)]  
  
 <span data-ttu-id="623b6-392">成功編譯此第二個範例需要的 RegexLib.dll （第一個範例所建立的組件） 的參考加入至專案。</span><span class="sxs-lookup"><span data-stu-id="623b6-392">Successful compilation of this second example requires a reference to RegexLib.dll (the assembly created by the first example) to be added to the project.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-393">值<paramref name="assemblyname" />參數的<see cref="P:System.Reflection.AssemblyName.Name" />屬性為空白或 null 字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-393">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span></span>  
  
<span data-ttu-id="623b6-394">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-394">-or-</span></span> 
<span data-ttu-id="623b6-395">規則運算式模式中的一或多個物件的<paramref name="regexinfos" />包含無效的語法。</span><span class="sxs-lookup"><span data-stu-id="623b6-395">The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-396"><paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-396"><paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="623b6-397">僅限 .NET Core：不支援為編譯的規則運算式建立其組件。</span><span class="sxs-lookup"><span data-stu-id="623b6-397">.NET Core only: Creating an assembly of compiled regular expressions is not supported.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-398">如果您正在開發的系統上，具有[!INCLUDE[net_v45](~/includes/net-v45-md.md)]或其點發行版本安裝目標[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，而且您使用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />方法用來建立包含的組件編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-398">If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="623b6-399">嘗試使用其中一個規則運算式，因為在系統上的組件具有[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-399">Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception.</span></span> <span data-ttu-id="623b6-400">若要解決這個問題，您可以執行下列任何一項操作：</span><span class="sxs-lookup"><span data-stu-id="623b6-400">To work around this problem, you can do either of the following:</span></span> 
<span data-ttu-id="623b6-401">-組建包含的系統上，已編譯的規則運算式的組件[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]而不是安裝的更新版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-401">-   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.</span></span>  
  
<span data-ttu-id="623b6-402">-而不是呼叫<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />並從組件中擷取已編譯的規則運算式，使用靜態或執行個體<see cref="T:System.Text.RegularExpressions.Regex" />方法使用<see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />選項，當您具現化<see cref="T:System.Text.RegularExpressions.Regex" />物件或呼叫規則運算式模式比對方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-402">-   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/compilation-and-reuse-in-regular-expressions.md"><span data-ttu-id="623b6-403">編譯和重複使用</span><span class="sxs-lookup"><span data-stu-id="623b6-403">Compilation and Reuse</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[] attributes, string resourceFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname, class System.Reflection.Emit.CustomAttributeBuilder[] attributes, string resourceFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname, cli::array &lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ attributes, System::String ^ resourceFile);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName * System.Reflection.Emit.CustomAttributeBuilder[] * string -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname, attributes, resourceFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.Emit.CustomAttributeBuilder[]" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="resourceFile" Type="System.String" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="regexinfos"><span data-ttu-id="623b6-404">陣列，描述要編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-404">An array that describes the regular expressions to compile.</span></span></param>
        <param name="assemblyname"><span data-ttu-id="623b6-405">組件的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-405">The file name of the assembly.</span></span></param>
        <param name="attributes"><span data-ttu-id="623b6-406">陣列，定義要套用至組件的屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-406">An array that defines the attributes to apply to the assembly.</span></span></param>
        <param name="resourceFile"><span data-ttu-id="623b6-407">要包括在組件中的 Win32 資源檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-407">The name of the Win32 resource file to include in the assembly.</span></span></param>
        <summary><span data-ttu-id="623b6-408">會編譯一或多個指定<see cref="T:System.Text.RegularExpressions.Regex" />物件和指定的資源檔具有指定之屬性的具名組件。</span><span class="sxs-lookup"><span data-stu-id="623b6-408">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects and a specified resource file to a named assembly with the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-409">The [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span><span class="sxs-lookup"><span data-stu-id="623b6-409">The [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="623b6-410">Typically, the [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method is called from a separate application that generates an assembly of compiled regular expressions.</span><span class="sxs-lookup"><span data-stu-id="623b6-410">Typically, the [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="623b6-411">每個組件中包含的規則運算式具有下列特性：</span><span class="sxs-lookup"><span data-stu-id="623b6-411">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="623b6-412">它衍生自<xref:System.Text.RegularExpressions.Regex>類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-412">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="623b6-413">它指派所定義的完整限定的名稱`fullnamespace`並`name`對應的參數<xref:System.Text.RegularExpressions.RegexCompilationInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-413">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="623b6-414">它有預設值 （或無參數） 建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-414">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="623b6-415">一般情況下，組件或應用程式分開建立組件的程式碼中找到的程式碼會具現化，並使用已編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-415">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
 <span data-ttu-id="623b6-416">因為<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法會產生.NET Framework 組件，而不是使用特定語言的類別定義關鍵字的方法呼叫 (例如`class`在 C# 或`Class`...`End Class`</span><span class="sxs-lookup"><span data-stu-id="623b6-416">Because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates a .NET Framework assembly from a method call instead of using a particular language's class definition keyword (such as `class` in C# or `Class`…`End Class`</span></span> <span data-ttu-id="623b6-417">在 Visual Basic 中)，它不允許使用的開發語言的標準屬性語法來指派給組件的.NET Framework 屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-417">in Visual Basic), it does not allow .NET Framework attributes to be assigned to the assembly by using the development language's standard attribute syntax.</span></span> <span data-ttu-id="623b6-418">`attributes`參數提供的替代方法來定義將套用至組件的屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-418">The `attributes` parameter provides an alternative method for defining the attributes that apply to the assembly.</span></span> <span data-ttu-id="623b6-419">針對每個您想要套用至組件的屬性，執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="623b6-419">For each attribute that you want to apply to the assembly, do the following:</span></span>  
  
1.  <span data-ttu-id="623b6-420">建立陣列<xref:System.Type>代表您想要呼叫的屬性建構函式的參數類型的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-420">Create an array of <xref:System.Type> objects representing the parameter types of the attribute constructor that you want to call.</span></span>  
  
2.  <span data-ttu-id="623b6-421">擷取<xref:System.Type>物件，表示您想要套用至新的組件的屬性類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-421">Retrieve a <xref:System.Type> object representing the attribute class that you want to apply to the new assembly.</span></span>  
  
3.  <span data-ttu-id="623b6-422">呼叫<xref:System.Type.GetConstructor%2A>屬性的方法<xref:System.Type>物件來擷取<xref:System.Reflection.ConstructorInfo>物件，表示您想要呼叫的屬性建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-422">Call the <xref:System.Type.GetConstructor%2A> method of the attribute <xref:System.Type> object to retrieve a <xref:System.Reflection.ConstructorInfo> object representing the attribute constructor that you want to call.</span></span> <span data-ttu-id="623b6-423">傳遞<xref:System.Type.GetConstructor%2A>方法的陣列的<xref:System.Type>表示建構函式的參數類型的物件</span><span class="sxs-lookup"><span data-stu-id="623b6-423">Pass the <xref:System.Type.GetConstructor%2A> method the array of <xref:System.Type> objects that represents the constructor's parameter types</span></span>  
  
4.  <span data-ttu-id="623b6-424">建立<xref:System.Object>陣列，定義要傳遞給屬性的建構函式的參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-424">Create a <xref:System.Object> array that defines the parameters to pass to the attribute's constructor.</span></span>  
  
5.  <span data-ttu-id="623b6-425">具現化<xref:System.Reflection.Emit.CustomAttributeBuilder>物件，並傳遞其建構函式<xref:System.Reflection.ConstructorInfo>擷取在步驟 3 中的物件和<xref:System.Object>步驟 4 中建立的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-425">Instantiate a <xref:System.Reflection.Emit.CustomAttributeBuilder> object by passing its constructor the <xref:System.Reflection.ConstructorInfo> object retrieved in step 3 and the <xref:System.Object> array created in step 4.</span></span>  
  
 <span data-ttu-id="623b6-426">You can then pass an array of these <xref:System.Reflection.Emit.CustomAttributeBuilder> objects instead of the `attributes` parameter to the [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method.</span><span class="sxs-lookup"><span data-stu-id="623b6-426">You can then pass an array of these <xref:System.Reflection.Emit.CustomAttributeBuilder> objects instead of the `attributes` parameter to the [\], AssemblyName, CustomAttributeBuilder\<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%28System.Text.RegularExpressions.RegexCompilationInfo%5B%5D%2CSystem.Reflection.AssemblyName%2CSystem.Reflection.Emit.CustomAttributeBuilder%5B%5D%2CSystem.String%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-427">值<paramref name="assemblyname" />參數的<see cref="P:System.Reflection.AssemblyName.Name" />屬性為空白或 null 字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-427">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span></span>  
  
<span data-ttu-id="623b6-428">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-428">-or-</span></span> 
<span data-ttu-id="623b6-429">規則運算式模式中的一或多個物件的<paramref name="regexinfos" />包含無效的語法。</span><span class="sxs-lookup"><span data-stu-id="623b6-429">The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-430"><paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-430"><paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="623b6-431"><paramref name="resourceFile" />參數會指定無效的 Win32 資源檔。</span><span class="sxs-lookup"><span data-stu-id="623b6-431">The <paramref name="resourceFile" /> parameter designates an invalid Win32 resource file.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="623b6-432">所指定的檔案<paramref name="resourceFile" />找不到參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-432">The file designated by the <paramref name="resourceFile" /> parameter cannot be found.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="623b6-433">僅限 .NET Core：不支援為編譯的規則運算式建立其組件。</span><span class="sxs-lookup"><span data-stu-id="623b6-433">.NET Core only: Creating an assembly of compiled regular expressions is not supported.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-434">如果您正在開發的系統上，具有[!INCLUDE[net_v45](~/includes/net-v45-md.md)]或其點發行版本安裝目標[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，而且您使用<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />方法用來建立包含的組件編譯的規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-434">If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="623b6-435">嘗試使用其中一個規則運算式，因為在系統上的組件具有[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-435">Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception.</span></span> <span data-ttu-id="623b6-436">若要解決這個問題，您可以執行下列任何一項操作：</span><span class="sxs-lookup"><span data-stu-id="623b6-436">To work around this problem, you can do either of the following:</span></span> 
<span data-ttu-id="623b6-437">-組建包含的系統上，已編譯的規則運算式的組件[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]而不是安裝的更新版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-437">-   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.</span></span>  
  
<span data-ttu-id="623b6-438">-而不是呼叫<see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />並從組件中擷取已編譯的規則運算式，使用靜態或執行個體<see cref="T:System.Text.RegularExpressions.Regex" />方法使用<see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />選項，當您具現化<see cref="T:System.Text.RegularExpressions.Regex" />物件或呼叫規則運算式模式比對方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-438">-   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/compilation-and-reuse-in-regular-expressions.md"><span data-ttu-id="623b6-439">編譯和重複使用</span><span class="sxs-lookup"><span data-stu-id="623b6-439">Compilation and Reuse</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="623b6-440">輸入字串，包含要轉換的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-440">The input string that contains the text to convert.</span></span></param>
        <summary><span data-ttu-id="623b6-441">以逸出程式碼取代字元 (\\、\*、+、?、|、{、[、(、)、^、$、.、# 和空白字元) 的最小集合，以便逸出這些字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-441">Escapes a minimal set of characters (\\, \*, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes.</span></span> <span data-ttu-id="623b6-442">這樣會指示規則運算式引擎將這些字元解譯為常值，而非解譯為中繼字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-442">This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.</span></span></summary>
        <returns><span data-ttu-id="623b6-443">字元字串，其中中繼字元已轉換為逸出格式。</span><span class="sxs-lookup"><span data-stu-id="623b6-443">A string of characters with metacharacters converted to their escaped form.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-444"><xref:System.Text.RegularExpressions.Regex.Escape%2A> 將字串轉換，讓規則運算式引擎會解譯為字元常值可能包含任何中繼字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-444"><xref:System.Text.RegularExpressions.Regex.Escape%2A> converts a string so that the regular expression engine will interpret any metacharacters that it may contain as character literals.</span></span> <span data-ttu-id="623b6-445">例如，請考慮規則運算式是設計用來擷取所直接左右方括號 （[和]） 從文字分隔的註解。</span><span class="sxs-lookup"><span data-stu-id="623b6-445">For example, consider a regular expression that is designed to extract comments that are delimited by straight opening and closing brackets ([ and ]) from text.</span></span> <span data-ttu-id="623b6-446">在下列範例中，規則運算式 「 [(.\*?)]"會解譯為字元類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-446">In the following example, the regular expression "[(.\*?)]" is interpreted as a character class.</span></span> <span data-ttu-id="623b6-447">而不是比對輸入文字中內嵌的註解，規則運算式比對每個左或右括號、 句號、 星號或問號。</span><span class="sxs-lookup"><span data-stu-id="623b6-447">Rather than matching comments embedded in the input text, the regular expression matches each opening or closing parenthesis, period, asterisk, or question mark.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape1.vb#1)]  
  
 <span data-ttu-id="623b6-448">不過，如果左括號會逸出，傳遞至<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法中，規則運算式成功比對輸入字串中內嵌的註解。</span><span class="sxs-lookup"><span data-stu-id="623b6-448">However, if the opening bracket is escaped by passing it to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method, the regular expression succeeds in matching comments that are embedded in the input string.</span></span> <span data-ttu-id="623b6-449">下列範例將說明這點。</span><span class="sxs-lookup"><span data-stu-id="623b6-449">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape1.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape1.vb#2)]  
  
 <span data-ttu-id="623b6-450">在所使用的靜態文字定義規則運算式中，會被解譯字面意義，而不是為中繼字元的字元可以逸出前加上反斜線符號 (\\) 以及透過呼叫<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-450">In a regular expression that is defined by using static text, characters that are to be interpreted literally rather than as metacharacters can be escaped by preceding them with a backslash symbol (\\) as well as by calling the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method.</span></span> <span data-ttu-id="623b6-451">以動態方式使用在設計階段未知的字元定義的規則運算式中呼叫<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法是特別重要，以確保該規則運算式引擎會解譯個別字元做為常值而不是比為中繼字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-451">In a regular expression that is defined dynamically using characters that are not known at design time, calling the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method is particularly important to ensure that the regular expression engine interprets individual characters as literals rather than as metacharacters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-452">如果規則運算式模式包含數字符號 （#） 或常值空白字元，則必須逸出如果輸入的文字會剖析與<xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType>啟用的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-452">If a regular expression pattern includes either the number sign (#) or literal white-space characters, they must be escaped if input text is parsed with the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option enabled.</span></span>  
  
 <span data-ttu-id="623b6-453">雖然<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法會逸出直接開啟括號 ([)，並開啟括號 （{}） 字元，它不會逸出其對應的結尾字元 (] 和})。</span><span class="sxs-lookup"><span data-stu-id="623b6-453">While the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method escapes the straight opening bracket ([) and opening brace ({) characters, it does not escape their corresponding closing characters (] and }).</span></span> <span data-ttu-id="623b6-454">在大部分情況下，逸出這些不需要。</span><span class="sxs-lookup"><span data-stu-id="623b6-454">In most cases, escaping these is not necessary.</span></span> <span data-ttu-id="623b6-455">如果右括號或大括號前面並沒有其對應的開頭字元，規則運算式引擎會將它解譯常值。</span><span class="sxs-lookup"><span data-stu-id="623b6-455">If a closing bracket or brace is not preceded by its corresponding opening character, the regular expression engine interprets it literally.</span></span> <span data-ttu-id="623b6-456">如果左括號或大括號會解譯為中繼字元中，規則運算式引擎會解譯第一個對應的結尾字元做為中繼字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-456">If an opening bracket or brace is interpreted as a metacharacter, the regular expression engine interprets the first corresponding closing character as a metacharacter.</span></span> <span data-ttu-id="623b6-457">如果不想要的行為，右括號或大括號應該逸出明確前面加上反斜線 (\\) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-457">If this is not the desired behavior, the closing bracket or brace should be escaped by explicitly prepending the backslash (\\) character.</span></span> <span data-ttu-id="623b6-458">如需圖例，請參閱 < 範例 > 一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-458">For an illustration, see the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-459">下列範例會從文字擷取註解。</span><span class="sxs-lookup"><span data-stu-id="623b6-459">The following example extracts comments from text.</span></span> <span data-ttu-id="623b6-460">它會假設註解以開始註解符號並選取使用者結束註解符號分隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-460">It assumes that the comments are delimited by a begin comment symbol and an end comment symbol that is selected by the user.</span></span> <span data-ttu-id="623b6-461">註解符號要解譯為常值，因為它們會傳遞至<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法，以確保，它們無法被錯誤解譯為中繼字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-461">Because the comment symbols are to be interpreted literally, they are passed to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method to ensure that they cannot be misinterpreted as metacharacters.</span></span> <span data-ttu-id="623b6-462">此外，範例明確檢查使用者輸入的結尾註解符號是右括號 (]) 或大括號 （}）。</span><span class="sxs-lookup"><span data-stu-id="623b6-462">In addition, the example explicitly checks whether the end comment symbol entered by the user is a closing bracket (]) or brace (}).</span></span> <span data-ttu-id="623b6-463">如果是，反斜線字元 (\\) 前面加上括號或大括號，因此它解譯為常值。</span><span class="sxs-lookup"><span data-stu-id="623b6-463">If it is, a backslash character (\\) is prepended to the bracket or brace so that it is interpreted literally.</span></span> <span data-ttu-id="623b6-464">請注意，此範例也會使用<xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType>顯示註解，而不是其開頭和結尾的註解符號以及註解的集合。</span><span class="sxs-lookup"><span data-stu-id="623b6-464">Note that the example also uses the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> collection to display the comment only, rather than the comment together with its opening and closing comment symbols.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-465"><paramref name="str" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-465"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Unescape(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-466">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-466">Regular Expression Language - Quick Reference</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f49cc9cc-db7d-4058-8b8a-422bc08b29b0"><span data-ttu-id="623b6-467">在規則運算式中執行字元逸出</span><span class="sxs-lookup"><span data-stu-id="623b6-467">Character Escapes in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="factory">
      <MemberSignature Language="C#" Value="protected internal System.Text.RegularExpressions.RegexRunnerFactory factory;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Text.RegularExpressions.RegexRunnerFactory factory" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.factory" />
      <MemberSignature Language="VB.NET" Value="Protected Friend factory As RegexRunnerFactory " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Text::RegularExpressions::RegexRunnerFactory ^ factory;" />
      <MemberSignature Language="F#" Value="val mutable factory : System.Text.RegularExpressions.RegexRunnerFactory" Usage="System.Text.RegularExpressions.Regex.factory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexRunnerFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-468">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-468">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Regex ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Regex ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="regex.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="623b6-469">這個成員會覆寫 <see cref="M:System.Object.Finalize" />，您可以在該主題中找到更完整的文件。</span><span class="sxs-lookup"><span data-stu-id="623b6-469">This member overrides <see cref="M:System.Object.Finalize" />, and more complete documentation might be available in that topic.</span></span>

<span data-ttu-id="623b6-470">可讓<see cref="T:System.Object" />嘗試釋放資源並執行其他清除作業後的<see cref="T:System.Object" />記憶體回收 （gc） 回收。</span><span class="sxs-lookup"><span data-stu-id="623b6-470">Allows an <see cref="T:System.Object" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Object" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGroupNames">
      <MemberSignature Language="C#" Value="public string[] GetGroupNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetGroupNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GetGroupNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGroupNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetGroupNames();" />
      <MemberSignature Language="F#" Value="member this.GetGroupNames : unit -&gt; string[]" Usage="regex.GetGroupNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="623b6-471">傳回規則運算式的擷取群組名稱的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-471">Returns an array of capturing group names for the regular expression.</span></span></summary>
        <returns><span data-ttu-id="623b6-472">群組名稱的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-472">A string array of group names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-473">群組名稱的集合包含一組用來在運算式中的擷取群組命名的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-473">The collection of group names contains the set of strings used to name capturing groups in the expression.</span></span> <span data-ttu-id="623b6-474">即使沒有明確命名的擷取群組，它們會自動指派數值名稱 （"0"、"1"、"2"、"3"，等等）。</span><span class="sxs-lookup"><span data-stu-id="623b6-474">Even if capturing groups are not explicitly named, they are automatically assigned numerical names ("0", "1", "2", "3", and so on).</span></span> <span data-ttu-id="623b6-475">"0"具名群組代表規則運算式模式所比對的所有文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-475">The "0" named group represents all text matched by the regular expression pattern.</span></span> <span data-ttu-id="623b6-476">編號的群組的前面明確具名的群組是在集合中，而具名的群組會出現在規則運算式模式中定義的順序。</span><span class="sxs-lookup"><span data-stu-id="623b6-476">Numbered groups precede explicitly named groups in the collection, and named groups appear in the order in which they are defined in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="623b6-477">您可以使用<xref:System.Array.Length%2A>屬性在這個方法來判斷規則運算式中的群組數目所傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-477">You can use the <xref:System.Array.Length%2A> property on the array returned by this method to determine the number of groups in a regular expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-478">下列範例會定義一般用途`ShowMatches`方法，以顯示群組的名稱的規則運算式，其相符的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-478">The following example defines a general-purpose `ShowMatches` method that displays the names of regular expression groups and their matched text.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.GetGroupNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnames/cs/getgroupnames1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.GetGroupNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnames/vb/getgroupnames1.vb#1)]  
  
 <span data-ttu-id="623b6-479">在此情況下，規則運算式模式`\b(?<FirstWord>\w+)\s?((\w+)\s)*(?<LastWord>\w+)?(?<Punctuation>\p{Po})`旨在剖析簡單的句子，並識別其第一個字，最後一個字，並結束的標點符號。</span><span class="sxs-lookup"><span data-stu-id="623b6-479">In this case, the regular expression pattern `\b(?<FirstWord>\w+)\s?((\w+)\s)*(?<LastWord>\w+)?(?<Punctuation>\p{Po})` is intended to parse a simple sentence, and to identify its first word, last word, and ending punctuation mark.</span></span> <span data-ttu-id="623b6-480">下表顯示規則運算式模式的解譯方式：</span><span class="sxs-lookup"><span data-stu-id="623b6-480">The following table shows how the regular expression pattern is interpreted:</span></span>  
  
|<span data-ttu-id="623b6-481">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-481">Pattern</span></span>|<span data-ttu-id="623b6-482">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-482">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-483">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-483">Begin the match at a word boundary.</span></span>|  
|`(?<FirstWord>\w+)`|<span data-ttu-id="623b6-484">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-484">Match one or more word characters.</span></span> <span data-ttu-id="623b6-485">這是`FirstWord`具名群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-485">This is the `FirstWord` named group.</span></span>|  
|<span data-ttu-id="623b6-486">\s?</span><span class="sxs-lookup"><span data-stu-id="623b6-486">\s?</span></span>|<span data-ttu-id="623b6-487">比對零個或一個空白字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-487">Match zero or one white-space characters.</span></span>|  
|<span data-ttu-id="623b6-488">(\w+)</span><span class="sxs-lookup"><span data-stu-id="623b6-488">(\w+)</span></span>|<span data-ttu-id="623b6-489">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-489">Match one or more word characters.</span></span> <span data-ttu-id="623b6-490">這是第二個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-490">This is the second capturing group.</span></span>|  
|<span data-ttu-id="623b6-491">\s</span><span class="sxs-lookup"><span data-stu-id="623b6-491">\s</span></span>|<span data-ttu-id="623b6-492">比對空白字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-492">Match a white-space character.</span></span>|  
|<span data-ttu-id="623b6-493">((\w+)\s)\*</span><span class="sxs-lookup"><span data-stu-id="623b6-493">((\w+)\s)\*</span></span>|<span data-ttu-id="623b6-494">比對一或多個文字字元後面接著空白字元的零或多個發生次數。</span><span class="sxs-lookup"><span data-stu-id="623b6-494">Match zero or more occurrences of one or more word characters followed by a white space.</span></span> <span data-ttu-id="623b6-495">這是第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-495">This is the first capturing group.</span></span>|  
|<span data-ttu-id="623b6-496">(?\<LastWord>\w+)?</span><span class="sxs-lookup"><span data-stu-id="623b6-496">(?\<LastWord>\w+)?</span></span>|<span data-ttu-id="623b6-497">比對零個或一個出現的一或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-497">Match zero or one occurrence of one or more word characters.</span></span> <span data-ttu-id="623b6-498">這是`LastWord`具名群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-498">This is the `LastWord` named group.</span></span>|  
|<span data-ttu-id="623b6-499">(?\<標點符號 > \p{Po})</span><span class="sxs-lookup"><span data-stu-id="623b6-499">(?\<Punctuation>\p{Po})</span></span>|<span data-ttu-id="623b6-500">比對的字元的 Unicode 分類為標點符號，其他。</span><span class="sxs-lookup"><span data-stu-id="623b6-500">Match a character whose Unicode category is Punctuation, Other.</span></span> <span data-ttu-id="623b6-501">這是`Punctuation`具名群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-501">This is the `Punctuation` named group.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b"><span data-ttu-id="623b6-502">規則運算式中的群組建構</span><span class="sxs-lookup"><span data-stu-id="623b6-502">Grouping Constructs in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetGroupNumbers">
      <MemberSignature Language="C#" Value="public int[] GetGroupNumbers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetGroupNumbers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GetGroupNumbers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGroupNumbers () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetGroupNumbers();" />
      <MemberSignature Language="F#" Value="member this.GetGroupNumbers : unit -&gt; int[]" Usage="regex.GetGroupNumbers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="623b6-503">傳回對應陣列中群組名稱的擷取群組編號的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-503">Returns an array of capturing group numbers that correspond to group names in an array.</span></span></summary>
        <returns><span data-ttu-id="623b6-504">群組編號的整數陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-504">An integer array of group numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-505">未具名和具名擷取群組可以存取數字。</span><span class="sxs-lookup"><span data-stu-id="623b6-505">Both unnamed and named capturing groups can be accessed by number.</span></span> <span data-ttu-id="623b6-506">未具名的群組是從左到 1 開始由左至右編號。</span><span class="sxs-lookup"><span data-stu-id="623b6-506">Unnamed groups are numbered from left to right starting with 1.</span></span> <span data-ttu-id="623b6-507">（索引 0 （零） 中的擷取群組會代表比對整個）。具名的群組則從左編號開始由左至右的數字大一比數目未具名擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-507">(The capturing group in index 0 (zero) represents the match as a whole.)  Named groups are then numbered from left to right starting with a number that is one greater than the number of unnamed capturing groups.</span></span>  
  
 <span data-ttu-id="623b6-508">依字串名稱參考它的號碼，而不是由群組可以提供更快速的存取。</span><span class="sxs-lookup"><span data-stu-id="623b6-508">Referencing a group by its number instead of by string name can provide faster access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-509">下列範例會定義規則運算式， `\b((?<word>\w+)\s*)+(?<end>[.?!])`，會比對的句子。</span><span class="sxs-lookup"><span data-stu-id="623b6-509">The following example defines a regular expression, `\b((?<word>\w+)\s*)+(?<end>[.?!])`, that matches a sentence.</span></span> <span data-ttu-id="623b6-510">規則運算式包含三個擷取群組： 擷取個別的字，以及空格字元可能會在它後面; 未命名的群組群組名稱`word`，會擷取在句子; 中的個別文字，並群組命名為`end`，捕捉結尾的句子的標點符號。</span><span class="sxs-lookup"><span data-stu-id="623b6-510">The regular expression includes three capturing groups: an unnamed group that captures an individual word along with a space character that may follow it; a group named `word` that captures the individual words in the sentence; and a group named `end` that captures the punctuation that ends the sentence.</span></span> <span data-ttu-id="623b6-511">此範例會呼叫<xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A>方法來取得所有擷取的數字分組，並接著會顯示其擷取的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-511">The example calls the <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A> method to get the numbers of all capturing groups, and then displays their captured string.</span></span> <span data-ttu-id="623b6-512">颾魤 ㄛ<xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A>方法用來指出特定編號的群組是否對應至具名的群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-512">In addition, the <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method is used to indicate whether a particular numbered group corresponds to a named group.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.GetGroupNumbers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnumbers/cs/getgroupnumbers1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.GetGroupNumbers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnumbers/vb/getgroupnumbers1.vb#1)]  
  
 <span data-ttu-id="623b6-513">規則運算式模式的解譯方式如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-513">The regular expression pattern is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-514">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-514">Pattern</span></span>|<span data-ttu-id="623b6-515">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-515">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-516">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-516">Begin the match at a word boundary.</span></span>|  
|`(?<word>\w+)`|<span data-ttu-id="623b6-517">比對一或多個文字字元，並將相符的字串指派給群組，名為`word`。</span><span class="sxs-lookup"><span data-stu-id="623b6-517">Match one or more word characters and assign the matched strings to a group named `word`.</span></span>|  
|`\s*`|<span data-ttu-id="623b6-518">比對零個以上的空白字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-518">Match zero or more white-space characters.</span></span>|  
|`((?<word>\w+)\s*)`|<span data-ttu-id="623b6-519">指派`word`後面接著任何的擷取的群組所擷取的第一個擷取群組的空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-519">Assign the `word` captured group followed by any captured white-space characters to the first captured group.</span></span>|  
|`((?<word>\w+)\s*)+`|<span data-ttu-id="623b6-520">比對後面接著任何泛空白字元一或多次的一或多個文字字元的模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-520">Match the pattern of one or more word characters followed by any white-space characters one or more times.</span></span>|  
|`(?<end>[.?!])`|<span data-ttu-id="623b6-521">比對句號、問號或驚嘆號。</span><span class="sxs-lookup"><span data-stu-id="623b6-521">Match a period, question mark, or exclamation point.</span></span> <span data-ttu-id="623b6-522">指派要比對的字元`end`擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-522">Assign the matched character to the `end` capturing group.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b"><span data-ttu-id="623b6-523">規則運算式中的群組建構</span><span class="sxs-lookup"><span data-stu-id="623b6-523">Grouping Constructs in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupNameFromNumber">
      <MemberSignature Language="C#" Value="public string GroupNameFromNumber (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GroupNameFromNumber(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupNameFromNumber (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GroupNameFromNumber(int i);" />
      <MemberSignature Language="F#" Value="member this.GroupNameFromNumber : int -&gt; string" Usage="regex.GroupNameFromNumber i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="623b6-524">群組編號，要轉換至對應群組名稱的。</span><span class="sxs-lookup"><span data-stu-id="623b6-524">The group number to convert to the corresponding group name.</span></span></param>
        <summary><span data-ttu-id="623b6-525">取得對應指定群組編號的群組名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-525">Gets the group name that corresponds to the specified group number.</span></span></summary>
        <returns><span data-ttu-id="623b6-526">字串，含有與指定群組編號相關聯的群組名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-526">A string that contains the group name associated with the specified group number.</span></span> <span data-ttu-id="623b6-527">如果沒有對應至的群組名稱<paramref name="i" />，則方法會傳回<see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-527">If there is no group name that corresponds to <paramref name="i" />, the method returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-528">規則運算式模式可能會包含具名或編號擷取群組，其中描述在模式比對的子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-528">A regular expression pattern may contain either named or numbered capturing groups, which delineate subexpressions within a pattern match.</span></span> <span data-ttu-id="623b6-529">編號的群組會分隔語法 (*subexpression*)，系統會指派數字，根據在規則運算式中的順序。</span><span class="sxs-lookup"><span data-stu-id="623b6-529">Numbered groups are delimited by the syntax (*subexpression*) and are assigned numbers based on their order in the regular expression.</span></span> <span data-ttu-id="623b6-530">具名的群組語法分隔 (？`<`*名稱*`>`*subexpression*) 或 (？ '*名稱*'*subexpression*)，其中*名稱*是子運算式會識別的名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-530">Named groups are delimited by the syntax (?`<`*name*`>`*subexpression*) or (?'*name*'*subexpression*), where *name* is the name by which the subexpression will be identified.</span></span> <span data-ttu-id="623b6-531">(如需詳細資訊，請參閱[群組建構](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)。)<xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A>方法識別命名的群組和編號的群組，由其規則運算式中的序數位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-531">(For more information, see [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md).) The <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method identifies both named groups and numbered groups by their ordinal positions in the regular expression.</span></span> <span data-ttu-id="623b6-532">序數位置 0 一律代表整個規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-532">Ordinal position zero always represents the entire regular expression.</span></span> <span data-ttu-id="623b6-533">所有已編號群組都會計算在內具名群組，不論它們在規則運算式模式中的實際位置之前。</span><span class="sxs-lookup"><span data-stu-id="623b6-533">All numbered groups are then counted before named groups, regardless of their actual position in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="623b6-534">如果`i`是數字的具名群組，方法會傳回群組的名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-534">If `i` is the number of a named group, the method returns the name of the group.</span></span> <span data-ttu-id="623b6-535">如果`i`是數字的未命名的群組，方法會傳回數字的字串表示。</span><span class="sxs-lookup"><span data-stu-id="623b6-535">If `i` is the number of an unnamed group, the method returns the string representation of the number.</span></span> <span data-ttu-id="623b6-536">例如，如果`i`為 1，則方法會傳回"1"。</span><span class="sxs-lookup"><span data-stu-id="623b6-536">For example, if `i` is 1, the method returns "1".</span></span> <span data-ttu-id="623b6-537">如果`i`不是數字的擷取群組，此方法會傳回<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-537">If `i` is not the number of a capturing group, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="623b6-538">如果找到模式比對，則這個方法所傳回的值然後用來擷取<xref:System.Text.RegularExpressions.Group>物件，表示從擷取的群組<xref:System.Text.RegularExpressions.GroupCollection.Item%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-538">If a pattern match is found, the value returned by this method can then be used to retrieve the <xref:System.Text.RegularExpressions.Group> object that represents the captured group from the <xref:System.Text.RegularExpressions.GroupCollection.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="623b6-539"><xref:System.Text.RegularExpressions.GroupCollection>物件由<xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-539">The <xref:System.Text.RegularExpressions.GroupCollection> object is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-540">下列範例會定義符合包含美國城市名稱、 狀態名稱和郵遞區號地址的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-540">The following example defines a regular expression pattern that matches an address line containing a U.S. city name, state name, and zip code.</span></span> <span data-ttu-id="623b6-541">此範例會使用<xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A>方法來擷取的擷取群組的名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-541">The example uses the <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method to retrieve the names of capturing groups.</span></span> <span data-ttu-id="623b6-542">然後會使用這些名稱擷取對應的擷取的群組相符的項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-542">It then uses these names to retrieve the corresponding captured groups for matches.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.GroupNameFromNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.groupnamefromnumber/cs/groupnamefromnumberex.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.GroupNameFromNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.groupnamefromnumber/vb/groupnamefromnumberex.vb#1)]  
  
 <span data-ttu-id="623b6-543">下列的運算式所定義的規則運算式模式：</span><span class="sxs-lookup"><span data-stu-id="623b6-543">The regular expression pattern is defined by the following expression:</span></span>  
  
 `(?<city>[A-Za-z\s]+), (?<state>[A-Za-z]{2}) (?<zip>\d{5}(-\d{4})?)`  
  
 <span data-ttu-id="623b6-544">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-544">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-545">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-545">Pattern</span></span>|<span data-ttu-id="623b6-546">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-546">Description</span></span>|  
|-------------|-----------------|  
|`(?<city>[A-Za-z\s]+)`|<span data-ttu-id="623b6-547">比對一或多個字母或空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-547">Match one or more alphabetic or white-space character.</span></span> <span data-ttu-id="623b6-548">將這個擷取的群組名稱的指派`city`。</span><span class="sxs-lookup"><span data-stu-id="623b6-548">Assign this captured group the name `city`.</span></span>|  
|`,`|<span data-ttu-id="623b6-549">比對後面接著空白字元的逗號 （，）。</span><span class="sxs-lookup"><span data-stu-id="623b6-549">Match a comma (,) followed by a white-space character.</span></span>|  
|`(?<state>[A-Za-z]{2})`|<span data-ttu-id="623b6-550">比對兩個字母的字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-550">Match two alphabetic characters.</span></span> <span data-ttu-id="623b6-551">將這個擷取的群組名稱的指派`state`。</span><span class="sxs-lookup"><span data-stu-id="623b6-551">Assign this captured group the name `state`.</span></span> <span data-ttu-id="623b6-552">此群組必須緊接著空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-552">This group should be followed by a white-space character.</span></span>|  
|`(?<zip>\d{5}(-\d{4})?)`|<span data-ttu-id="623b6-553">比對後面接著連字號後面接著四個數字的零個或一個出現的五個字。</span><span class="sxs-lookup"><span data-stu-id="623b6-553">Match five numeric digits followed by either zero or one occurrence of a hyphen followed by four digits.</span></span> <span data-ttu-id="623b6-554">將這個擷取的群組名稱的指派`zip`。</span><span class="sxs-lookup"><span data-stu-id="623b6-554">Assign this captured group the name `zip`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <altmember cref="M:System.Text.RegularExpressions.Regex.GetGroupNumbers" />
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b"><span data-ttu-id="623b6-555">分組建構</span><span class="sxs-lookup"><span data-stu-id="623b6-555">Grouping Constructs</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupNumberFromName">
      <MemberSignature Language="C#" Value="public int GroupNumberFromName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GroupNumberFromName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupNumberFromName (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GroupNumberFromName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GroupNumberFromName : string -&gt; int" Usage="regex.GroupNumberFromName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="623b6-556">要轉換至對應群組編號的群組名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-556">The group name to convert to the corresponding group number.</span></span></param>
        <summary><span data-ttu-id="623b6-557">傳回對應指定群組名稱的群組編號。</span><span class="sxs-lookup"><span data-stu-id="623b6-557">Returns the group number that corresponds to the specified group name.</span></span></summary>
        <returns><span data-ttu-id="623b6-558">如果對應指定的群組名稱，則為-1 的群組編號<paramref name="name" />不是有效的群組名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-558">The group number that corresponds to the specified group name, or -1 if <paramref name="name" /> is not a valid group name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-559">規則運算式模式可能會包含具名或編號擷取群組，其中描述在模式比對的子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-559">A regular expression pattern may contain either named or numbered capturing groups, which delineate subexpressions within a pattern match.</span></span> <span data-ttu-id="623b6-560">編號的群組會分隔語法 (*subexpression*)，系統會指派數字，根據在規則運算式中的順序。</span><span class="sxs-lookup"><span data-stu-id="623b6-560">Numbered groups are delimited by the syntax (*subexpression*) and are assigned numbers based on their order in the regular expression.</span></span> <span data-ttu-id="623b6-561">具名的群組語法分隔 (？`<`*名稱*`>`*subexpression*) 或 (？ '*名稱*'*subexpression*)，其中*名稱*是子運算式會識別的名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-561">Named groups are delimited by the syntax (?`<`*name*`>`*subexpression*) or (?'*name*'*subexpression*), where *name* is the name by which the subexpression will be identified.</span></span> <span data-ttu-id="623b6-562">(如需詳細資訊，請參閱[群組建構](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)。)<xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A>方法識別命名的群組和編號的群組，由其規則運算式中的序數位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-562">(For more information, see [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md).) The <xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A> method identifies both named groups and numbered groups by their ordinal positions in the regular expression.</span></span> <span data-ttu-id="623b6-563">序數位置 0 一律代表整個規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-563">Ordinal position zero always represents the entire regular expression.</span></span> <span data-ttu-id="623b6-564">所有已編號群組都會計算在內具名群組，不論它們在規則運算式模式中的實際位置之前。</span><span class="sxs-lookup"><span data-stu-id="623b6-564">All numbered groups are then counted before named groups, regardless of their actual position in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="623b6-565">如果`name`出現在規則運算式模式中，此方法將傳回的數字的群組編號的字串表示法。</span><span class="sxs-lookup"><span data-stu-id="623b6-565">If `name` is the string representation of a group number that is present in the regular expression pattern, the method returns that number.</span></span> <span data-ttu-id="623b6-566">如果`name`對應具名擷取群組會出現在規則運算式模式，此方法會傳回其對應的數字。</span><span class="sxs-lookup"><span data-stu-id="623b6-566">If `name` corresponds to a named capturing group that is present in the regular expression pattern, the method returns its corresponding number.</span></span> <span data-ttu-id="623b6-567">比較`name`與群組名稱會區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="623b6-567">The comparison of `name` with the group name is case-sensitive.</span></span> <span data-ttu-id="623b6-568">如果`name`未對應至擷取群組的名稱或數目的擷取群組，此方法的字串表示法傳回-1。</span><span class="sxs-lookup"><span data-stu-id="623b6-568">If `name` does not correspond to the name of a capturing group or to the string representation of the number of a capturing group, the method returns -1.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-569"><paramref name="name" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-569"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <altmember cref="M:System.Text.RegularExpressions.Regex.GetGroupNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b"><span data-ttu-id="623b6-570">分組建構</span><span class="sxs-lookup"><span data-stu-id="623b6-570">Grouping Constructs</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InfiniteMatchTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteMatchTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteMatchTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteMatchTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteMatchTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteMatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-571">指定模式比對作業不應逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-571">Specifies that a pattern-matching operation should not time out.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-572"><xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>類別建構函式和靜態比對的方法使用一些<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>常數，表示嘗試尋找模式比對應該逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-572">The <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> class constructor and a number of static matching methods use the <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> constant to indicate that the attempt to find a pattern match should not time out.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="623b6-573">將規則運算式引擎的逾時值設定為<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>可能會造成規則運算式依賴大量回溯，才會出現停止回應時處理幾乎符合規則運算式模式的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-573">Setting the regular expression engine's time-out value to <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> can cause regular expressions that rely on excessive backtracking to appear to stop responding when processing text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-574">如果您停用逾時，您應該確定您的規則運算式不需要大量使用回溯和它處理幾乎符合規則運算式模式的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-574">If you disable time-outs, you should ensure that your regular expression does not rely on excessive backtracking and that it handles text that nearly matches the regular expression pattern.</span></span>  
>   
>  <span data-ttu-id="623b6-575">如需有關處理回溯的詳細資訊，請參閱[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-575">For more information about handling backtracking, see [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span>  
  
 <span data-ttu-id="623b6-576"><xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>常數可以提供的值為`matchTimeout`下列成員的引數：</span><span class="sxs-lookup"><span data-stu-id="623b6-576">The <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> constant can be supplied as the value of the `matchTimeout` argument of the following members:</span></span>  
  
-   <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
-   <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
-   <xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.Regex.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="InitializeReferences">
      <MemberSignature Language="C#" Value="protected void InitializeReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.InitializeReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeReferences ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeReferences();" />
      <MemberSignature Language="F#" Value="member this.InitializeReferences : unit -&gt; unit" Usage="regex.InitializeReferences " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="623b6-577">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-577">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="623b6-578">已初始化參考。</span><span class="sxs-lookup"><span data-stu-id="623b6-578">References have already been initialized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="internalMatchTimeout">
      <MemberSignature Language="C#" Value="protected internal TimeSpan internalMatchTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly valuetype System.TimeSpan internalMatchTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.internalMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Friend internalMatchTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="protected public: TimeSpan internalMatchTimeout;" />
      <MemberSignature Language="F#" Value="val mutable internalMatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.internalMatchTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OptionalField(VersionAdded=2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-579">在作業逾時之前可在模式比對作業中流逝的最長時間。</span><span class="sxs-lookup"><span data-stu-id="623b6-579">The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsMatch">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="623b6-580">指示規則運算式是否在輸入字串中尋找比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-580">Indicates whether the regular expression finds a match in the input string.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-581">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-581">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public bool IsMatch (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsMatch(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMatch (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsMatch(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.IsMatch : string -&gt; bool" Usage="regex.IsMatch input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-582">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-582">The string to search for a match.</span></span></param>
        <summary><span data-ttu-id="623b6-583">指出是否在指定的規則運算式<see cref="T:System.Text.RegularExpressions.Regex" />建構函式中指定的輸入字串中尋找相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-583">Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in a specified input string.</span></span></summary>
        <returns><span data-ttu-id="623b6-584"><see langword="true" /> 如果規則運算式尋找相符項目;否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-584"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-585"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用來驗證字串，或確保字串符合特定模式而未擷取做後續操作該字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-585">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="623b6-586">如果要判斷是否有一個或多個字串符合規則運算式模式，然後再擷取做後續操作，請呼叫 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-586">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="623b6-587">如果比對作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-587">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-588">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-588">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-589">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-589">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-590">下列範例示範如何將<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29>方法來判斷字串是否為有效的組件數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-590">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="623b6-591">規則運算式假設特定的格式，其中包含三個集合的連字號分隔字元的零件編號。</span><span class="sxs-lookup"><span data-stu-id="623b6-591">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="623b6-592">第一個集合，其中包含四個字元，必須包含後面接著兩個數字字元，後面接著英數字元的英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-592">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="623b6-593">第二個集合，其中包含三個字元，必須為數值。</span><span class="sxs-lookup"><span data-stu-id="623b6-593">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="623b6-594">第三個集合，其中包含四個字元，必須有三個數字字元，後面接著英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-594">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch2.vb#2)]  
  
 <span data-ttu-id="623b6-595">規則運算式模式為：</span><span class="sxs-lookup"><span data-stu-id="623b6-595">The regular expression pattern is:</span></span>  
  
```  
^[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="623b6-596">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-596">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-597">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-597">Pattern</span></span>|<span data-ttu-id="623b6-598">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-598">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="623b6-599">開始在一行的開頭比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-599">Begin the match at the beginning of the line.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-600">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-600">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="623b6-601">比對兩個數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-601">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-602">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-602">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="623b6-603">比對連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-603">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="623b6-604">比對剛好三個數值字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-604">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="623b6-605">尋找後面接著三個的數字字元、 連字號，且符合此模式的兩個項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-605">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-606">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-606">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="623b6-607">結束比對一行的結尾。</span><span class="sxs-lookup"><span data-stu-id="623b6-607">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-608"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-608"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-609">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-609">A time-out occurred.</span></span> <span data-ttu-id="623b6-610">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-610">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-611">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-611">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public bool IsMatch (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsMatch(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMatch (input As String, startat As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsMatch(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.IsMatch : string * int -&gt; bool" Usage="regex.IsMatch (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-612">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-612">The string to search for a match.</span></span></param>
        <param name="startat"><span data-ttu-id="623b6-613">若要開始搜尋的字元位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-613">The character position at which to start the search.</span></span></param>
        <summary><span data-ttu-id="623b6-614">指出是否在指定的規則運算式<see cref="T:System.Text.RegularExpressions.Regex" />建構函式中指定的輸入字串，從字串中指定的開始位置開始尋找相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-614">Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in the specified input string, beginning at the specified starting position in the string.</span></span></summary>
        <returns><span data-ttu-id="623b6-615"><see langword="true" /> 如果規則運算式尋找相符項目;否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-615"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-616"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用來驗證字串，或確保字串符合特定模式而未擷取做後續操作該字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-616">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="623b6-617">如果要判斷是否有一個或多個字串符合規則運算式模式，然後再擷取做後續操作，請呼叫 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-617">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="623b6-618">如果比對作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-618">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-619">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-619">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-620">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-620">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-621">下列範例示範如何將<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.Int32%29>方法來判斷字串是否為有效的組件數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-621">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.Int32%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="623b6-622">它會搜尋後面的冒號 （:） 字元在字串中的零件編號。</span><span class="sxs-lookup"><span data-stu-id="623b6-622">It searches for a part number that follows a colon (:) character in a string.</span></span> <span data-ttu-id="623b6-623"><xref:System.String.IndexOf%28System.Char%29>方法來判別的冒號字元，然後傳遞至位置<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-623">The <xref:System.String.IndexOf%28System.Char%29> method is used to determine the position of the colon character, which is then passed to the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="623b6-624">規則運算式假設特定的格式，其中包含三個集合的連字號分隔字元的零件編號。</span><span class="sxs-lookup"><span data-stu-id="623b6-624">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="623b6-625">第一個集合，其中包含四個字元，必須包含後面接著兩個數字字元，後面接著英數字元的英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-625">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="623b6-626">第二個集合，其中包含三個字元，必須為數值。</span><span class="sxs-lookup"><span data-stu-id="623b6-626">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="623b6-627">第三個集合，其中包含四個字元，必須有三個數字字元，後面接著英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-627">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch3.vb#3)]  
  
 <span data-ttu-id="623b6-628">規則運算式模式為：</span><span class="sxs-lookup"><span data-stu-id="623b6-628">The regular expression pattern is:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="623b6-629">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-629">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-630">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-630">Pattern</span></span>|<span data-ttu-id="623b6-631">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-631">Description</span></span>|  
|-------------|-----------------|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-632">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-632">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="623b6-633">比對兩個數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-633">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-634">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-634">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="623b6-635">比對連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-635">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="623b6-636">比對剛好三個數值字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-636">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="623b6-637">尋找後面接著三個的數字字元、 連字號，且符合此模式的兩個項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-637">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-638">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-638">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="623b6-639">結束比對一行的結尾。</span><span class="sxs-lookup"><span data-stu-id="623b6-639">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-640"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-640"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-641"><paramref name="startat" /> 小於零或大於 <paramref name="input" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="623b6-641"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-642">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-642">A time-out occurred.</span></span> <span data-ttu-id="623b6-643">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-643">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-644">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-644">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-645">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-645">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-646">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-646">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="623b6-647">表示指定的規則運算式是否在指定的輸入字串中尋找相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-647">Indicates whether the specified regular expression finds a match in the specified input string.</span></span></summary>
        <returns><span data-ttu-id="623b6-648"><see langword="true" /> 如果規則運算式尋找相符項目;否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-648"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-649"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用來驗證字串，或確保字串符合特定模式而未擷取做後續操作該字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-649">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="623b6-650">如果要判斷是否有一個或多個字串符合規則運算式模式，然後再擷取做後續操作，請呼叫 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-650">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="623b6-651">靜態<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法就相當於建構<xref:System.Text.RegularExpressions.Regex>所指定的規則運算式模式的物件`pattern`，然後呼叫<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29>執行個體方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-651">The static <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29> instance method.</span></span> <span data-ttu-id="623b6-652">這個規則運算式模式的規則運算式引擎會快取供快速擷取。</span><span class="sxs-lookup"><span data-stu-id="623b6-652">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="623b6-653">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-653">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-654">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-654">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-655">如果比對作業的執行時間超出為呼叫方法的應用程式定義域指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-655">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-656">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-656">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-657">下列範例示範如何將<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法來判斷字串是否為有效的組件數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-657">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="623b6-658">規則運算式假設特定的格式，其中包含三個集合的連字號分隔字元的零件編號。</span><span class="sxs-lookup"><span data-stu-id="623b6-658">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="623b6-659">第一個集合，其中包含四個字元，必須包含後面接著兩個數字字元，後面接著英數字元的英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-659">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="623b6-660">第二個集合，其中包含三個字元，必須為數值。</span><span class="sxs-lookup"><span data-stu-id="623b6-660">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="623b6-661">第三個集合，其中包含四個字元，必須有三個數字字元，後面接著英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-661">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch1.vb#1)]  
  
 <span data-ttu-id="623b6-662">規則運算式模式為：</span><span class="sxs-lookup"><span data-stu-id="623b6-662">The regular expression pattern is:</span></span>  
  
```  
^[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="623b6-663">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-663">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-664">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-664">Pattern</span></span>|<span data-ttu-id="623b6-665">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-665">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="623b6-666">開始在一行的開頭比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-666">Begin the match at the beginning of the line.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-667">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-667">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="623b6-668">比對兩個數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-668">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-669">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-669">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="623b6-670">比對連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-670">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="623b6-671">比對剛好三個數值字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-671">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="623b6-672">尋找後面接著三個的數字字元、 連字號，且符合此模式的兩個項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-672">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="623b6-673">比對單一字母字元 (`a`經由`z`或是`A`透過`Z`) 或數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-673">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="623b6-674">結束比對一行的結尾。</span><span class="sxs-lookup"><span data-stu-id="623b6-674">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-675">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-675">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-676"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-676"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-677">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-677">A time-out occurred.</span></span> <span data-ttu-id="623b6-678">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-678">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-679">此方法等於呼叫該方法的應用程式定義域的預設逾時值的間隔之後逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-679">This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-680">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-680">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-681">建議的靜態方法，驗證模式比對是<see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-681">The recommended static method for verifying a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-682">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-682">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String, options As RegexOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string * System.Text.RegularExpressions.RegexOptions -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-683">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-683">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-684">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-684">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-685">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-685">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="623b6-686">表示指定的規則運算式是否使用指定的比對選項，在指定的輸入字串中尋找相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-686">Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.</span></span></summary>
        <returns><span data-ttu-id="623b6-687"><see langword="true" /> 如果規則運算式尋找相符項目;否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-687"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-688"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用來驗證字串，或確保字串符合特定模式而未擷取做後續操作該字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-688">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="623b6-689">如果要判斷是否有一個或多個字串符合規則運算式模式，然後再擷取做後續操作，請呼叫 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-689">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="623b6-690">靜態<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法就相當於建構<xref:System.Text.RegularExpressions.Regex>所指定的規則運算式模式的物件`pattern`及所指定的規則運算式選項`options`，然後呼叫<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29>執行個體方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-690">The static <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and the regular expression options specified by `options` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29> instance method.</span></span> <span data-ttu-id="623b6-691">這個規則運算式模式的規則運算式引擎會快取供快速擷取。</span><span class="sxs-lookup"><span data-stu-id="623b6-691">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="623b6-692">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-692">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-693">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-693">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-694">如果比對作業的執行時間超出為呼叫方法的應用程式定義域指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-694">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-695">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-695">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-696">下列範例示範如何將<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法來判斷字串是否為有效的組件數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-696">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="623b6-697">規則運算式假設特定的格式，其中包含三個集合的連字號分隔字元的零件編號。</span><span class="sxs-lookup"><span data-stu-id="623b6-697">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="623b6-698">第一個集合，其中包含四個字元，必須包含後面接著兩個數字字元，後面接著英數字元的英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-698">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="623b6-699">第二個集合，其中包含三個字元，必須為數值。</span><span class="sxs-lookup"><span data-stu-id="623b6-699">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="623b6-700">第三個集合，其中包含四個字元，必須有三個數字字元，後面接著英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-700">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch4.cs#4)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch4.vb#4)]  
  
 <span data-ttu-id="623b6-701">規則運算式模式為：</span><span class="sxs-lookup"><span data-stu-id="623b6-701">The regular expression pattern is:</span></span>  
  
```  
^[A-Z0-9]\d{2}[A-Z0-9](-\d{3}){2}[A-Z0-9]$  
```  
  
 <span data-ttu-id="623b6-702">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-702">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-703">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-703">Pattern</span></span>|<span data-ttu-id="623b6-704">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-704">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="623b6-705">從字串的開頭開始比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-705">Begin the match at the beginning of the string.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="623b6-706">比對任何字母的單一字元，從`A`透過`Z`，或任何數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-706">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="623b6-707">比對兩個數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-707">Match two numeric characters.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="623b6-708">比對任何字母的單一字元，從`A`透過`Z`，或任何數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-708">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`-`|<span data-ttu-id="623b6-709">比對連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-709">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="623b6-710">比對剛好三個數值字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-710">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="623b6-711">尋找後面接著三個的數字字元、 連字號，並符合此模式的兩個項目...</span><span class="sxs-lookup"><span data-stu-id="623b6-711">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern..</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="623b6-712">比對任何字母的單一字元，從`A`透過`Z`，或任何數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-712">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`$`|<span data-ttu-id="623b6-713">在字串的結尾結束比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-713">End the match at the end of the string.</span></span>|  
  
 <span data-ttu-id="623b6-714">呼叫<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法`options`參數設為<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>就相當於定義下列規則運算式：</span><span class="sxs-lookup"><span data-stu-id="623b6-714">Calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method with the `options` parameter set to <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> is equivalent to defining the following regular expression:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]  
```  
  
 <span data-ttu-id="623b6-715">相較之下，請參閱範例<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-715">For comparison, see the example for the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-716">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-716">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-717"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-717"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-718"><paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="623b6-718"><paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-719">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-719">A time-out occurred.</span></span> <span data-ttu-id="623b6-720">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-720">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-721">這個方法的逾時間隔等於呼叫這個方法的應用程式定義域的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-721">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="623b6-722">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-722">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-723">建議的靜態方法，驗證模式比對是<see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-723">The recommended static method for verifying a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-724">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-724">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-725">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-725">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-726">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-726">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-727">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-727">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="623b6-728">逾時間隔，若要表示此方法不應逾時則為 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-728">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="623b6-729">指出指定的規則運算式是否使用指定的比對選項和逾時間隔，在指定的輸入字串中尋找相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-729">Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.</span></span></summary>
        <returns><span data-ttu-id="623b6-730"><see langword="true" /> 如果規則運算式尋找相符項目;否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-730"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-731"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用來驗證字串，或確保字串符合特定模式而未擷取做後續操作該字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-731">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="623b6-732">如果要判斷是否有一個或多個字串符合規則運算式模式，然後再擷取做後續操作，請呼叫 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-732">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="623b6-733">靜態<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法就相當於建構<xref:System.Text.RegularExpressions.Regex>所指定的規則運算式模式的物件`pattern`及所指定的規則運算式選項`options`，然後呼叫<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29>執行個體方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-733">The static <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and the regular expression options specified by `options` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%29> instance method.</span></span> <span data-ttu-id="623b6-734">這個規則運算式模式的規則運算式引擎會快取供快速擷取。</span><span class="sxs-lookup"><span data-stu-id="623b6-734">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="623b6-735">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-735">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-736">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-736">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-737">`matchTimeout`參數會指定如何長模式比對方法應該嘗試逾時之前，尋找相符項目。將逾時間隔可防止依賴大量回溯不會出現停止回應時它們會處理輸入的規則運算式，其中包含相符項目附近。</span><span class="sxs-lookup"><span data-stu-id="623b6-737">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="623b6-738">如需詳細資訊，請參閱 <<c0> [ 規則運算式的最佳做法](~/docs/standard/base-types/best-practices.md)並[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-738">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-739">如果該時間間隔中找到相符項目，方法會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-739">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-740">`matchTimeout` 覆寫任何方法會執行的應用程式定義域所定義的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-740">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-741">下列範例示範如何將<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法來判斷字串是否為有效的組件數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-741">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="623b6-742">規則運算式假設特定的格式，其中包含三個集合的連字號分隔字元的零件編號。</span><span class="sxs-lookup"><span data-stu-id="623b6-742">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="623b6-743">第一個集合，其中包含四個字元，必須包含後面接著兩個數字字元，後面接著英數字元的英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-743">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="623b6-744">第二個集合，其中包含三個字元，必須為數值。</span><span class="sxs-lookup"><span data-stu-id="623b6-744">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="623b6-745">第三個集合，其中包含四個字元，必須有三個數字字元，後面接著英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-745">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="623b6-746">比對規則運算式模式，應該牽涉到最少搜尋整個輸入字串中，因此方法設定 500 毫秒的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-746">Matching the regular expression pattern should involve minimal searching through the input string, so the method sets a time-out interval of 500 milliseconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.IsMatch#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch5.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.IsMatch#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch5.vb#5)]  
  
 <span data-ttu-id="623b6-747">規則運算式模式為：</span><span class="sxs-lookup"><span data-stu-id="623b6-747">The regular expression pattern is:</span></span>  
  
```  
^[A-Z0-9]\d{2}[A-Z0-9](-\d{3}){2}[A-Z0-9]$  
```  
  
 <span data-ttu-id="623b6-748">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-748">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-749">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-749">Pattern</span></span>|<span data-ttu-id="623b6-750">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-750">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="623b6-751">從字串的開頭開始比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-751">Begin the match at the beginning of the string.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="623b6-752">比對任何字母的單一字元，從`A`透過`Z`，或任何數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-752">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="623b6-753">比對兩個數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-753">Match two numeric characters.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="623b6-754">比對任何字母的單一字元，從`A`透過`Z`，或任何數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-754">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`-`|<span data-ttu-id="623b6-755">比對連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-755">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="623b6-756">比對剛好三個數值字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-756">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="623b6-757">尋找後面接著三個的數字字元、 連字號，且符合此模式的兩個項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-757">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="623b6-758">比對任何字母的單一字元，從`A`透過`Z`，或任何數字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-758">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`$`|<span data-ttu-id="623b6-759">在字串的結尾結束比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-759">End the match at the end of the string.</span></span>|  
  
 <span data-ttu-id="623b6-760">呼叫<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法`options`參數設為<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>就相當於定義下列規則運算式：</span><span class="sxs-lookup"><span data-stu-id="623b6-760">Calling the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method with the `options` parameter set to <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> is equivalent to defining the following regular expression:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]  
```  
  
 <span data-ttu-id="623b6-761">相較之下，請參閱範例<xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-761">For comparison, see the example for the <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-762">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-762">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-763"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-763"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-764"><paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="623b6-764"><paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span></span>  
  
<span data-ttu-id="623b6-765">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-765">-or-</span></span> 
 <span data-ttu-id="623b6-766"><paramref name="matchTimeout" /> 為負數、零或約大於 24 天。</span><span class="sxs-lookup"><span data-stu-id="623b6-766"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-767">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-767">A time-out occurred.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-768">我們建議您設定<paramref name="matchTimeout" />參數設為適當的值，例如兩秒。</span><span class="sxs-lookup"><span data-stu-id="623b6-768">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="623b6-769">如果您停用逾時指定<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，規則運算式引擎可讓您稍微提升效能。</span><span class="sxs-lookup"><span data-stu-id="623b6-769">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="623b6-770">不過，您應該停用逾時，只有在下列情況下：</span><span class="sxs-lookup"><span data-stu-id="623b6-770">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="623b6-771">-當規則運算式所處理的輸入來自已知且受信任的來源，或包含靜態文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-771">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="623b6-772">這會排除已動態由使用者輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-772">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="623b6-773">-當規則運算式模式徹底測試以確保有效率地處理符合時，不符合，而且不久符合。</span><span class="sxs-lookup"><span data-stu-id="623b6-773">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="623b6-774">-當規則運算式模式包含已知會造成大量回溯處理接近的相符項目時沒有語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-774">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-775">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-775">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="623b6-776">符合規則運算式模式，並傳回第一個出現的單一輸入的字串中搜尋<see cref="T:System.Text.RegularExpressions.Match" />物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-776">Searches an input string for a substring that matches a regular expression pattern and returns the first occurrence as a single <see cref="T:System.Text.RegularExpressions.Match" /> object.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-777">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-777">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Match : string -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-778">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-778">The string to search for a match.</span></span></param>
        <summary><span data-ttu-id="623b6-779">搜尋指定的輸入的字串中指定的規則運算式的第一個相符項目<see cref="T:System.Text.RegularExpressions.Regex" />建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-779">Searches the specified input string for the first occurrence of the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span></summary>
        <returns><span data-ttu-id="623b6-780">物件，包含符合之項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-780">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-781"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法會傳回符合規則運算式模式中的，輸入字串中的第一個子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-781">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="623b6-782">用來建立規則運算式語言項目的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-782">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-783">您可以判斷是否有已規則運算式模式至輸入字串中找到檢查傳回的值<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Group.Success%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-783">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="623b6-784">如果找到符合的項目，則所傳回 <xref:System.Text.RegularExpressions.Match> 物件的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 屬性會包含符合規則運算式模式之 `input` 的子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-784">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-785">如果找到相符項目，則該值會是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-785">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="623b6-786">這個方法會傳回第一個子`input`符合規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-786">This method returns the first substring in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-787">您可以重複呼叫傳回，以便擷取後續相符項目的<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-787">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="623b6-788">您也可以藉由呼叫來擷取單一方法呼叫中的所有相符項目<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-788">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="623b6-789">如果比對作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-789">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-790">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-790">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-791">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-791">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-792">下列範例會尋找在字串中，符合規則運算式模式，然後列出相符群組、 擷取和擷取位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-792">The following example finds regular expression pattern matches in a string, then lists the matched groups, captures, and capture positions.</span></span>  
  
 [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]
 [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]
 [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]  
  
 <span data-ttu-id="623b6-793">規則運算式模式`(\w+)\s+(car)`比對以及字組前面的"car"這個字的項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-793">The regular expression pattern `(\w+)\s+(car)` matches occurrences of the word "car" along with the word that precedes it.</span></span> <span data-ttu-id="623b6-794">它被解譯為下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-794">It is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-795">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-795">Pattern</span></span>|<span data-ttu-id="623b6-796">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-796">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="623b6-797">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-797">Match one or more word characters.</span></span> <span data-ttu-id="623b6-798">這是第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-798">This is the first capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="623b6-799">比對一或多個空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-799">Match one or more white-space characters.</span></span>|  
|<span data-ttu-id="623b6-800">(car)</span><span class="sxs-lookup"><span data-stu-id="623b6-800">(car)</span></span>|<span data-ttu-id="623b6-801">比對常值字串"car"。</span><span class="sxs-lookup"><span data-stu-id="623b6-801">Match the literal string "car".</span></span> <span data-ttu-id="623b6-802">這是第二個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-802">This is the second capturing group.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-803"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-803"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-804">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-804">A time-out occurred.</span></span> <span data-ttu-id="623b6-805">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-805">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-806">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-806">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String, startat As Integer) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.Match : string * int -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-807">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-807">The string to search for a match.</span></span></param>
        <param name="startat"><span data-ttu-id="623b6-808">要開始搜尋之以零起始的字元位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-808">The zero-based character position at which to start the search.</span></span></param>
        <summary><span data-ttu-id="623b6-809">從字串中指定的開始位置開始，在輸入字串中搜尋規則運算式的第一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-809">Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.</span></span></summary>
        <returns><span data-ttu-id="623b6-810">物件，包含符合之項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-810">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-811"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29>方法會傳回符合規則運算式模式，開始在或之後的第一個子字串`startat`字元輸入字串中的位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-811">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29> method returns the first substring that matches a regular expression pattern, starting at or after the `startat` character position, in an input string.</span></span> <span data-ttu-id="623b6-812">用來建立規則運算式語言項目的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-812">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-813">規則運算式模式，為其<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29>方法會搜尋由呼叫其中一個定義<xref:System.Text.RegularExpressions.Regex>類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-813">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="623b6-814">如需詳細的項目，可構成規則運算式模式的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-814">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-815">您可以使用，以選擇性地指定字串中的起始位置`startat`參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-815">You can optionally specify a starting position in the string by using the `startat` parameter.</span></span> <span data-ttu-id="623b6-816">當規則運算式引擎會剖析從左到右 （預設值） 時，比對和掃描移動 rightward，開始中指定的字元`startat`。</span><span class="sxs-lookup"><span data-stu-id="623b6-816">When the regular expression engine parses from left to right (the default), the match and the scan move rightward, starting at the character specified in `startat`.</span></span> <span data-ttu-id="623b6-817">當規則運算式引擎會剖析從右到左 (規則運算式模式使用的建構時<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType>選項)，比對和掃描的相反的方向移動和開頭處的字元`startat`-1。</span><span class="sxs-lookup"><span data-stu-id="623b6-817">When the regular expression engine parses from right to left (when the regular expression pattern is constructed with the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType> option), the match and scan move in the opposite direction and begin with the character at `startat` -1.</span></span> <span data-ttu-id="623b6-818">如果您未指定的開始位置，則會搜尋的預設值`startat`位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-818">If you do not specify a starting position, the search begins at the default `startat` position.</span></span> <span data-ttu-id="623b6-819">如果規則運算式搜尋從左到右，預設值`startat`位置位於左側`input`; 如果它會搜尋由右至左，預設值`startat`位置位於右端的`input`。</span><span class="sxs-lookup"><span data-stu-id="623b6-819">If the regular expression searches from left to right, the default `startat` position is at the left end of `input`; if it searches from right to left, the default `startat` position is at the right end of `input`.</span></span>  
  
 <span data-ttu-id="623b6-820">如果您想要限制相符項目，使它在字串中特定的字元位置開始，並比對規則運算式引擎不會掃描字串的其餘部分，錨定的為規則運算式`\G`（左邊的左到右模式中，或從右至左模式右邊)。</span><span class="sxs-lookup"><span data-stu-id="623b6-820">If you want to restrict a match so that it begins at a particular character position in the string and the regular expression engine does not scan the remainder of the string for a match, anchor the regular expression with a `\G` (at the left for a left-to-right pattern, or at the right for a right-to-left pattern).</span></span> <span data-ttu-id="623b6-821">這會限制比對，因此它必須剛好在啟動`startat`。</span><span class="sxs-lookup"><span data-stu-id="623b6-821">This restricts the match so it must start exactly at `startat`.</span></span>  
  
 <span data-ttu-id="623b6-822">您可以判斷是否有已規則運算式模式至輸入字串中找到檢查傳回的值<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Group.Success%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-822">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="623b6-823">如果找到符合的項目，則所傳回 <xref:System.Text.RegularExpressions.Match> 物件的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 屬性會包含符合規則運算式模式之 `input` 的子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-823">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-824">如果找到相符項目，則該值會是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-824">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="623b6-825">這個方法會傳回找到在或之後的第一個子字串`startat`字元在位置`input`符合規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-825">This method returns the first substring found at or after the `startat` character position in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-826">您可以重複呼叫傳回，以便擷取後續相符項目的<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-826">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="623b6-827">您也可以藉由呼叫來擷取單一方法呼叫中的所有相符項目<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-827">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="623b6-828">如果比對作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-828">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-829">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-829">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-830">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-830">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-831"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-831"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-832"><paramref name="startat" /> 小於零或大於 <paramref name="input" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="623b6-832"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-833">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-833">A time-out occurred.</span></span> <span data-ttu-id="623b6-834">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-834">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-835">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-835">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Match : string * string -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-836">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-836">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-837">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-837">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="623b6-838">在指定的輸入字串中搜尋所指定規則運算式的第一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-838">Searches the specified input string for the first occurrence of the specified regular expression.</span></span></summary>
        <returns><span data-ttu-id="623b6-839">物件，包含符合之項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-839">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-840"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>方法會傳回符合規則運算式模式中的，輸入字串中的第一個子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-840">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="623b6-841">用來建立規則運算式語言項目的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-841">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-842">靜態<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>方法就相當於建構<xref:System.Text.RegularExpressions.Regex>物件與指定的規則運算式模式，並呼叫執行個體<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-842">The static <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method.</span></span> <span data-ttu-id="623b6-843">在此情況下，規則運算式引擎會快取規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-843">In this case, the regular expression engine caches the regular expression pattern.</span></span>  
  
 <span data-ttu-id="623b6-844">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-844">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-845">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-845">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-846">您可以判斷是否有已規則運算式模式至輸入字串中找到檢查傳回的值<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Group.Success%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-846">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="623b6-847">如果找到符合的項目，則所傳回 <xref:System.Text.RegularExpressions.Match> 物件的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 屬性會包含符合規則運算式模式之 `input` 的子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-847">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-848">如果找到相符項目，則該值會是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-848">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="623b6-849">這個方法會傳回第一個子`input`符合規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-849">This method returns the first substring in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-850">您可以重複呼叫傳回，以便擷取後續相符項目的<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-850">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="623b6-851">您也可以藉由呼叫來擷取單一方法呼叫中的所有相符項目<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-851">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="623b6-852">如果比對作業的執行時間超出為呼叫方法的應用程式定義域指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-852">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-853">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-853">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-854">下列範例會呼叫<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>方法來尋找包含至少一個的第一個單字`z`字元，然後再呼叫<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法來尋找任何其他的相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-854">The following example calls the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> method to find the first word that contains at least one `z` character, and then calls the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method to find any additional matches.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Match#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/cs/match1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/vb/match1.vb#1)]  
  
 <span data-ttu-id="623b6-855">規則運算式模式 `\b\w*z+\w*\b` 的解譯方式如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-855">The regular expression pattern `\b\w*z+\w*\b` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-856">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-856">Pattern</span></span>|<span data-ttu-id="623b6-857">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-857">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-858">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-858">Begin the match at a word boundary.</span></span>|  
|`\w*`|<span data-ttu-id="623b6-859">比對零個、 一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-859">Match zero, one, or more word characters.</span></span>|  
|`z+`|<span data-ttu-id="623b6-860">比對的一或多個相符項目`z`字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-860">Match one or more occurrences of the `z` character.</span></span>|  
|`\w*`|<span data-ttu-id="623b6-861">比對零個、 一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-861">Match zero, one, or more word characters.</span></span>|  
|`\b`|<span data-ttu-id="623b6-862">結束字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-862">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-863">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-863">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-864"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-864"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-865">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-865">A time-out occurred.</span></span> <span data-ttu-id="623b6-866">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-866">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-867">這個方法的逾時間隔等於呼叫這個方法的應用程式定義域的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-867">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="623b6-868">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-868">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-869">建議的靜態方法來擷取模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-869">The recommended static method for retrieving a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />, which lets you set the time-out interval.</span></span></para></block>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-870">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-870">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input, int beginning, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input, int32 beginning, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String, beginning As Integer, length As Integer) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input, int beginning, int length);" />
      <MemberSignature Language="F#" Value="member this.Match : string * int * int -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match (input, beginning, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="beginning" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-871">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-871">The string to search for a match.</span></span></param>
        <param name="beginning"><span data-ttu-id="623b6-872">定義要搜尋的最左邊位置的輸入字串中以零為起始的字元位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-872">The zero-based character position in the input string that defines the leftmost position to be searched.</span></span></param>
        <param name="length"><span data-ttu-id="623b6-873">子字串中要包含在搜尋中的字元數。</span><span class="sxs-lookup"><span data-stu-id="623b6-873">The number of characters in the substring to include in the search.</span></span></param>
        <summary><span data-ttu-id="623b6-874">從指定的開始位置開始並且僅搜尋指定數目的字元，在輸入字串中搜尋規則運算式的第一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-874">Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="623b6-875">物件，包含符合之項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-875">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-876"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29>方法會傳回第一個符合子字串的規則運算式模式中，輸入字串的一部分。</span><span class="sxs-lookup"><span data-stu-id="623b6-876">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29> method returns the first substring that matches a regular expression pattern in a portion of an input string.</span></span> <span data-ttu-id="623b6-877">用來建立規則運算式語言項目的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-877">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-878">規則運算式模式，為其<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29>方法會搜尋由呼叫其中一個定義<xref:System.Text.RegularExpressions.Regex>類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-878">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="623b6-879">如需詳細的項目，可構成規則運算式模式的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-879">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-880"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29>方法會搜尋的部份`input`所定義`beginning`和`length`規則運算式模式的參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-880">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%2CSystem.Int32%29> method searches the portion of `input` defined by the `beginning` and `length` parameters for the regular expression pattern.</span></span> <span data-ttu-id="623b6-881">`beginning` 一定會定義要包含在搜尋中，最左邊字元的索引和`length`定義要搜尋的字元數目上限。</span><span class="sxs-lookup"><span data-stu-id="623b6-881">`beginning` always defines the index of the leftmost character to include in the search, and `length` defines the maximum number of characters to search.</span></span> <span data-ttu-id="623b6-882">在一起，它們會定義搜尋範圍。</span><span class="sxs-lookup"><span data-stu-id="623b6-882">Together, they define the range of the search.</span></span> <span data-ttu-id="623b6-883">如果搜尋會從左到右 （預設值），規則運算式引擎會搜尋的索引處的字元`beginning`中的索引處的字元`beginning`  +  `length` -1。</span><span class="sxs-lookup"><span data-stu-id="623b6-883">If the search proceeds from left to right (the default), the regular expression engine searches from the character at index `beginning` to the character at index `beginning` + `length` - 1.</span></span> <span data-ttu-id="623b6-884">如果規則運算式引擎使用具現化<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType>選項，讓搜尋會由右至左，規則運算式引擎會搜尋的索引處的字元`beginning`  +  `length` -1 到中的索引處的字元`beginning`。</span><span class="sxs-lookup"><span data-stu-id="623b6-884">If the regular expression engine was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType> option so that the search proceeds from right to left, the regular expression engine searches from the character at index `beginning` + `length` - 1 to the character at index `beginning`.</span></span> <span data-ttu-id="623b6-885">這個方法會傳回此範圍內找到的第一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-885">This method returns the first match that it finds within this range.</span></span> <span data-ttu-id="623b6-886">您可以重複呼叫傳回，以便擷取後續相符項目的<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-886">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="623b6-887">您可以判斷是否有已規則運算式模式至輸入字串中找到檢查傳回的值<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Group.Success%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-887">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="623b6-888">如果找到符合的項目，則所傳回 <xref:System.Text.RegularExpressions.Match> 物件的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 屬性會包含符合規則運算式模式之 `input` 的子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-888">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-889">如果找到相符項目，則該值會是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-889">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="623b6-890">如果比對作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-890">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-891">如果您未設定逾時值，當您呼叫建構函式時，如果作業超過任何逾時值應用程式定義域中，會擲回例外狀況<xref:System.Text.RegularExpressions.Regex>建立物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-891">If you do not set a time-out value when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-892">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-892">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-893"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-893"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-894"><paramref name="beginning" /> 小於零或大於 <paramref name="input" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="623b6-894"><paramref name="beginning" /> is less than zero or greater than the length of <paramref name="input" />.</span></span>  
  
<span data-ttu-id="623b6-895">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-895">-or-</span></span> 
 <span data-ttu-id="623b6-896"><paramref name="length" /> 小於零或大於 <paramref name="input" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="623b6-896"><paramref name="length" /> is less than zero or greater than the length of <paramref name="input" />.</span></span>  
  
<span data-ttu-id="623b6-897">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-897">-or-</span></span> 
 <span data-ttu-id="623b6-898"><paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> 識別 <paramref name="input" /> 範圍之外的位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-898"><paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifies a position that is outside the range of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-899">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-899">A time-out occurred.</span></span> <span data-ttu-id="623b6-900">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-900">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-901">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-901">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String, options As RegexOptions) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Match : string * string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-902">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-902">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-903">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-903">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-904">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-904">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="623b6-905">使用指定的比對選項，在輸入字串中搜尋所指定規則運算式的第一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-905">Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.</span></span></summary>
        <returns><span data-ttu-id="623b6-906">物件，包含符合之項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-906">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-907"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法會傳回符合規則運算式模式中的，輸入字串中的第一個子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-907">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="623b6-908">用來建立規則運算式語言項目的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-908">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-909">靜態<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法就相當於建構<xref:System.Text.RegularExpressions.Regex>物件<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29>建構函式和呼叫執行個體<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-909">The static <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29> constructor and calling the instance <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="623b6-910">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-910">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-911">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-911">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-912">您可以判斷是否有已規則運算式模式至輸入字串中找到檢查傳回的值<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Group.Success%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-912">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="623b6-913">如果找到符合的項目，則所傳回 <xref:System.Text.RegularExpressions.Match> 物件的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 屬性會包含符合規則運算式模式之 `input` 的子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-913">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-914">如果找到相符項目，則該值會是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-914">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="623b6-915">這個方法會傳回第一個子字串中找到`input`符合規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-915">This method returns the first substring found in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-916">您可以重複呼叫傳回，以便擷取後續相符項目的<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Match.NextMatch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-916">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method.</span></span> <span data-ttu-id="623b6-917">您也可以藉由呼叫來擷取單一方法呼叫中的所有相符項目<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-917">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="623b6-918">如果比對作業的執行時間超出為呼叫方法的應用程式定義域指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-918">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-919">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-919">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-920">下列範例會定義規則運算式比對文字開頭為字母"a"。</span><span class="sxs-lookup"><span data-stu-id="623b6-920">The following example defines a regular expression that matches words beginning with the letter "a".</span></span> <span data-ttu-id="623b6-921">它會使用<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>選項，以確保規則運算式會找出開頭的單字這兩個以大寫"a"和小寫"a"。</span><span class="sxs-lookup"><span data-stu-id="623b6-921">It uses the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option to ensure that the regular expression locates words beginning with both an uppercase "a" and a lowercase "a".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Match#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/cs/match2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Match#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/vb/match2.vb#2)]  
  
 <span data-ttu-id="623b6-922">規則運算式模式 `\ba\w*\b` 的解譯方式如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-922">The regular expression pattern `\ba\w*\b` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-923">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-923">Pattern</span></span>|<span data-ttu-id="623b6-924">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-924">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-925">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-925">Begin the match at a word boundary.</span></span>|  
|`a`|<span data-ttu-id="623b6-926">比對字元"a"。</span><span class="sxs-lookup"><span data-stu-id="623b6-926">Match the character "a".</span></span>|  
|`\w*`|<span data-ttu-id="623b6-927">比對零個、 一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-927">Match zero, one, or more word characters.</span></span>|  
|`\b`|<span data-ttu-id="623b6-928">結束字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-928">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-929">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-929">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-930"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-930"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-931"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-931"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-932">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-932">A time-out occurred.</span></span> <span data-ttu-id="623b6-933">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-933">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-934">這個方法的逾時間隔等於呼叫這個方法的應用程式定義域的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-934">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="623b6-935">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-935">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-936">建議的靜態方法來擷取模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-936">The recommended static method for retrieving a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />, which lets you set the time-out interval.</span></span></para></block>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-937">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-937">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Match : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-938">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-938">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-939">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-939">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-940">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-940">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="623b6-941">逾時間隔，若要表示此方法不應逾時則為 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-941">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="623b6-942">使用指定的比對選項和逾時間隔，在輸入字串中搜尋所指定規則運算式的第一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-942">Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.</span></span></summary>
        <returns><span data-ttu-id="623b6-943">物件，包含符合之項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-943">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-944"><xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法會傳回符合規則運算式模式中的，輸入字串中的第一個子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-944">The <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="623b6-945">用來建立規則運算式語言項目的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-945">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-946">靜態<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法就相當於建構<xref:System.Text.RegularExpressions.Regex>物件<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>建構函式和呼叫執行個體<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-946">The static <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> constructor and calling the instance <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="623b6-947">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-947">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-948">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-948">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-949">您可以判斷是否有已規則運算式模式至輸入字串中找到檢查傳回的值<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Group.Success%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-949">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="623b6-950">如果找到符合的項目，則所傳回 <xref:System.Text.RegularExpressions.Match> 物件的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 屬性會包含符合規則運算式模式之 `input` 的子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-950">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-951">如果找到相符項目，則該值會是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-951">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="623b6-952">這個方法會傳回第一個子字串中找到`input`符合規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-952">This method returns the first substring found in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="623b6-953">您可以重複呼叫傳回，以便擷取後續相符項目的<xref:System.Text.RegularExpressions.Match>物件的<xref:System.Text.RegularExpressions.Match.NextMatch%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-953">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method.</span></span> <span data-ttu-id="623b6-954">您也可以藉由呼叫來擷取單一方法呼叫中的所有相符項目<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-954">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="623b6-955">`matchTimeout`參數會指定如何長模式比對方法應該嘗試逾時之前，尋找相符項目。將逾時間隔可防止依賴大量回溯不會出現停止回應時它們會處理輸入的規則運算式，其中包含相符項目附近。</span><span class="sxs-lookup"><span data-stu-id="623b6-955">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="623b6-956">如需詳細資訊，請參閱 <<c0> [ 規則運算式的最佳做法](~/docs/standard/base-types/best-practices.md)並[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-956">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-957">如果該時間間隔中找到相符項目，方法會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-957">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-958">`matchTimeout` 覆寫任何方法會執行的應用程式定義域所定義的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-958">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-959">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-959">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-960"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-960"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-961"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-961"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="623b6-962">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-962">-or-</span></span> 
 <span data-ttu-id="623b6-963"><paramref name="matchTimeout" /> 為負數、零或約大於 24 天。</span><span class="sxs-lookup"><span data-stu-id="623b6-963"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-964">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-964">A time-out occurred.</span></span> <span data-ttu-id="623b6-965">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-965">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-966">我們建議您設定<paramref name="matchTimeout" />參數設為適當的值，例如兩秒。</span><span class="sxs-lookup"><span data-stu-id="623b6-966">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="623b6-967">如果您停用逾時指定<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，規則運算式引擎可讓您稍微提升效能。</span><span class="sxs-lookup"><span data-stu-id="623b6-967">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="623b6-968">不過，您應該停用逾時，只有在下列情況下：</span><span class="sxs-lookup"><span data-stu-id="623b6-968">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="623b6-969">-當規則運算式所處理的輸入來自已知且受信任的來源，或包含靜態文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-969">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="623b6-970">這會排除已動態由使用者輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-970">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="623b6-971">-當規則運算式模式徹底測試以確保有效率地處理符合時，不符合，而且不久符合。</span><span class="sxs-lookup"><span data-stu-id="623b6-971">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="623b6-972">-當規則運算式模式包含已知會造成大量回溯處理接近的相符項目時沒有語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-972">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-973">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-973">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="623b6-974">在輸入字串中搜尋規則運算式的所有項目，並傳回所有符合項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-974">Searches an input string for all occurrences of a regular expression and returns all the matches.</span></span></summary>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-975">在比對嘗試藉由呼叫的重複當<see cref="Overload:System.Text.RegularExpressions.Regex.Matches" />方法，規則運算式引擎會提供空白比對特殊處理。</span><span class="sxs-lookup"><span data-stu-id="623b6-975">When a match attempt is repeated by calling the <see cref="Overload:System.Text.RegularExpressions.Regex.Matches" /> method, the regular expression engine gives empty matches special treatment.</span></span> <span data-ttu-id="623b6-976">通常，規則運算式引擎開始搜尋下一個相符項目，並完全先前比對停止的地方。</span><span class="sxs-lookup"><span data-stu-id="623b6-976">Usually, the regular expression engine begins the search for the next match exactly where the previous match left off.</span></span> <span data-ttu-id="623b6-977">不過之後在空白比對，, 規則運算式引擎前移一個字元之前嘗試下一個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-977">However, after an empty match, the regular expression engine advances by one character before trying the next match.</span></span> <span data-ttu-id="623b6-978">此行為可確保規則運算式引擎將循序進行的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-978">This behavior guarantees that the regular expression engine will progress through the string.</span></span> <span data-ttu-id="623b6-979">否則，在空白比對不會導致任何順向移動，因為下一個相符項目會在上一個相符項目完全相同的位置開始，而且它將會重複比對相同的空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-979">Otherwise, because an empty match does not result in any forward movement, the next match would start in exactly the same place as the previous match, and it would match the same empty string repeatedly.</span></span>  
  
<span data-ttu-id="623b6-980">在下列範例中，規則運算式模式<c>\*</c>搜尋零或多個出現字母"a"，"abaabb"的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-980">In the following example, the regular expression pattern <c>a\*</c> searches for zero or more occurrences of the letter "a" in the string "abaabb".</span></span> <span data-ttu-id="623b6-981">此範例將示範，產生的輸出<see cref="T:System.Text.RegularExpressions.MatchCollection" />物件包含六個<see cref="T:System.Text.RegularExpressions.Match" />物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-981">As the output from the example shows, the resulting <see cref="T:System.Text.RegularExpressions.MatchCollection" /> object contains six <see cref="T:System.Text.RegularExpressions.Match" /> objects.</span></span> <span data-ttu-id="623b6-982">第一的比對嘗試尋找第一個"a"。</span><span class="sxs-lookup"><span data-stu-id="623b6-982">The first match attempt finds the first "a".</span></span> <span data-ttu-id="623b6-983">在完全其中第一個符合結束，第一次的 b; 之前的第二個相符項目啟動它會尋找"a"的零個項目，並傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-983">The second match starts exactly where the first match ends, before the first b; it finds zero occurrences of "a" and returns an empty string.</span></span> <span data-ttu-id="623b6-984">第三個相符項目不會開始完全第二個比對結束的位置，因為第二個相符項目會傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-984">The third match does not begin exactly where the second match ended, because the second match returned an empty string.</span></span> <span data-ttu-id="623b6-985">相反地，它會更新版本中之後第一個"b", 開始一個字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-985">Instead, it begins one character later, after the first "b".</span></span> <span data-ttu-id="623b6-986">第三個相符項目尋找兩個"a"，並傳回"aa"。</span><span class="sxs-lookup"><span data-stu-id="623b6-986">The third match finds two occurrences of "a" and returns "aa".</span></span> <span data-ttu-id="623b6-987">第四個比對嘗試開始位置的第三個相符項目之前已結束，第二個"b"，並傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-987">The fourth match attempt begins where the third match ended, before the second "b", and returns an empty string.</span></span> <span data-ttu-id="623b6-988">第五個比對嘗試一次前進一個字元，使其開始之前第三個"b"，並傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-988">The fifth match attempt again advances one character so that it begins before the third "b" and returns an empty string.</span></span> <span data-ttu-id="623b6-989">第六個的相符項目開始之後最後一個"b"，並再次傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-989">The sixth match begins after the last "b" and returns an empty string again.</span></span>  
  
<span data-ttu-id="623b6-990">[!code-csharp[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/emptymatches1.cs#9)] [!code-vb[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/emptymatches1.vb#9)]</span><span class="sxs-lookup"><span data-stu-id="623b6-990">[!code-csharp[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/emptymatches1.cs#9)] [!code-vb[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/emptymatches1.vb#9)]</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-991">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-991">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.MatchCollection Matches (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.MatchCollection Matches(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (input As String) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Matches : string -&gt; System.Text.RegularExpressions.MatchCollection" Usage="regex.Matches input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-992">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-992">The string to search for a match.</span></span></param>
        <summary><span data-ttu-id="623b6-993">在指定的輸入字串搜尋規則運算式的所有項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-993">Searches the specified input string for all occurrences of a regular expression.</span></span></summary>
        <returns><span data-ttu-id="623b6-994">集合<see cref="T:System.Text.RegularExpressions.Match" />搜尋作業找到的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-994">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="623b6-995">如果找不到相符的項目，此方法會傳回空集合物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-995">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-996"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29>方法是類似於<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>輸入字串中，而不是單一的相符項目中找到的方法，但是它會傳回所有相符項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-996">The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="623b6-997">相當於下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="623b6-997">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#5)]  
  
 <span data-ttu-id="623b6-998">集合包含唯一的相符項目，並終止於第一個不相符。</span><span class="sxs-lookup"><span data-stu-id="623b6-998">The collection includes only matches and terminates at the first non-match.</span></span>  
  
 <span data-ttu-id="623b6-999">規則運算式模式，為其<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29>方法會搜尋由呼叫其中一個定義<xref:System.Text.RegularExpressions.Regex>類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-999">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="623b6-1000">如需詳細的項目，可構成規則運算式模式的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1000">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-1001"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法會使用延遲評估來填入傳回<xref:System.Text.RegularExpressions.MatchCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1001">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="623b6-1002">存取這個集合的成員 (例如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>) 會導致立即填入集合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1002">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="623b6-1003">若要充分利用延遲評估，您應該逐一查看集合所使用的建構，例如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="623b6-1003">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="623b6-1004">在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1004">in Visual Basic.</span></span>  
  
 <span data-ttu-id="623b6-1005">其延遲評估，因為呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29>方法並不會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1005">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-1006">不過，在執行作業時會擲回例外狀況<xref:System.Text.RegularExpressions.MatchCollection>在這個方法所傳回的物件<xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A>屬性不是<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>和比對的作業超過逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1006">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if the <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property is not <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> and a matching operation exceeds the time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1007">下列範例會使用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29>方法，以識別任何句子中的文字"es"結尾。</span><span class="sxs-lookup"><span data-stu-id="623b6-1007">The following example uses the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29> method to identify any words in a sentence that end in "es".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches1.vb#1)]  
  
 <span data-ttu-id="623b6-1008">規則運算式模式 `\b\w+es\b` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1008">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-1009">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1009">Pattern</span></span>|<span data-ttu-id="623b6-1010">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1010">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-1011">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1011">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="623b6-1012">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1012">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="623b6-1013">比對常值字串"es"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1013">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="623b6-1014">結束字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1014">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1015"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1015"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1016">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1016">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.MatchCollection Matches (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.MatchCollection Matches(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (input As String, startat As Integer) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.Matches : string * int -&gt; System.Text.RegularExpressions.MatchCollection" Usage="regex.Matches (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1017">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1017">The string to search for a match.</span></span></param>
        <param name="startat"><span data-ttu-id="623b6-1018">在輸入字串中開始搜尋的字元位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-1018">The character position in the input string at which to start the search.</span></span></param>
        <summary><span data-ttu-id="623b6-1019">自字串中指定的開始位置開始，在指定的輸入字串搜尋規則運算式的所有項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1019">Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.</span></span></summary>
        <returns><span data-ttu-id="623b6-1020">集合<see cref="T:System.Text.RegularExpressions.Match" />搜尋作業找到的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1020">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="623b6-1021">如果找不到相符的項目，此方法會傳回空集合物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1021">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1022"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29>方法是類似於<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29>輸入字串中，而不是單一的相符項目中找到的方法，但是它會傳回所有相符項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-1022">The  <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29> method is similar to the  <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="623b6-1023">相當於下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="623b6-1023">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#6)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#6)]  
  
 <span data-ttu-id="623b6-1024">規則運算式模式，為其<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29>方法會搜尋由呼叫其中一個定義<xref:System.Text.RegularExpressions.Regex>類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1024">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="623b6-1025">如需詳細的項目，可構成規則運算式模式的詳細資訊，請參閱[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1025">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-1026"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法會使用延遲評估來填入傳回<xref:System.Text.RegularExpressions.MatchCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1026">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="623b6-1027">存取這個集合的成員 (例如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>) 會導致立即填入集合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1027">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="623b6-1028">若要充分利用延遲評估，您應該逐一查看集合所使用的建構，例如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="623b6-1028">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="623b6-1029">在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1029">in Visual Basic.</span></span>  
  
 <span data-ttu-id="623b6-1030">其延遲評估，因為呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29>方法並不會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1030">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-1031">不過，在執行作業時會擲回例外狀況<xref:System.Text.RegularExpressions.MatchCollection>在這個方法所傳回的物件<xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A>屬性不是<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>和比對的作業超過逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1031">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if the <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property is not <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> and a matching operation exceeds the time-out interval.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="623b6-1032">下列範例會使用<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法來尋找在句子結尾為"es"，然後再呼叫中的第一個字<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29>方法，以找出以"es"結尾的任何其他文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1032">The following example uses the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method to find the first word in a sentence that ends in "es", and then calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29> method to identify any additional words that end in "es".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches3.vb#3)]  
  
 <span data-ttu-id="623b6-1033">規則運算式模式 `\b\w+es\b` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1033">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-1034">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1034">Pattern</span></span>|<span data-ttu-id="623b6-1035">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1035">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-1036">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1036">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="623b6-1037">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1037">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="623b6-1038">比對常值字串"es"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1038">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="623b6-1039">結束字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1039">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1040"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1040"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1041"><paramref name="startat" /> 小於零或大於 <paramref name="input" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="623b6-1041"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1042">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1042">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1043">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1043">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1044">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1044">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="623b6-1045">在指定的輸入字串搜尋所指定規則運算式的所有相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1045">Searches the specified input string for all occurrences of a specified regular expression.</span></span></summary>
        <returns><span data-ttu-id="623b6-1046">集合<see cref="T:System.Text.RegularExpressions.Match" />搜尋作業找到的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1046">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="623b6-1047">如果找不到相符的項目，此方法會傳回空集合物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1047">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1048"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>方法是類似於<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29>輸入字串中，而不是單一的相符項目中找到的方法，但是它會傳回所有相符項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-1048">The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="623b6-1049">相當於下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="623b6-1049">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#7)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#7)]  
  
 <span data-ttu-id="623b6-1050">靜態`Matches`方法相當於建構<xref:System.Text.RegularExpressions.Regex>物件與指定的規則運算式模式，並呼叫方法的執行個體`Matches`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1050">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="623b6-1051">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1051">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1052">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1052">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-1053"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法會使用延遲評估來填入傳回<xref:System.Text.RegularExpressions.MatchCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1053">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="623b6-1054">存取這個集合的成員 (例如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>) 會導致立即填入集合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1054">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="623b6-1055">若要充分利用延遲評估，您應該逐一查看集合所使用的建構，例如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="623b6-1055">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="623b6-1056">在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1056">in Visual Basic.</span></span>  
  
 <span data-ttu-id="623b6-1057">其延遲評估，因為呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>方法並不會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1057">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-1058">不過，會擲回例外狀況上執行的操作<xref:System.Text.RegularExpressions.MatchCollection>如果目前的應用程式定義域和比對作業的 「 REGEX_DEFAULT_MATCH_TIMEOUT"屬性所定義的逾時間隔，這個方法中，所傳回的物件超過此逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1058">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a time-out interval is defined by the "REGEX_DEFAULT_MATCH_TIMEOUT" property of the current application domain and a matching operation exceeds this time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1059">下列範例會使用<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>方法，以識別在"es"結尾的句子中的任何字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1059">The following example uses the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method to identify any word in a sentence that ends in "es".</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches2.vb#2)]  
  
 <span data-ttu-id="623b6-1060">規則運算式模式 `\b\w+es\b` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1060">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-1061">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1061">Pattern</span></span>|<span data-ttu-id="623b6-1062">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1062">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-1063">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1063">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="623b6-1064">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1064">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="623b6-1065">比對常值字串"es"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1065">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="623b6-1066">結束字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1066">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1067">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1067">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1068"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1068"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1069">這個方法的逾時間隔等於呼叫這個方法的應用程式定義域的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1069">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="623b6-1070">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1070">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-1071">建議的靜態方法，針對擷取多個模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，這可讓您指定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1071">The recommended static method for retrieving multiple pattern matches is <see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you specify the time-out interval.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1072">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1072">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String, options As RegexOptions) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1073">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1073">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1074">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1074">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-1075">列舉值的位元組合，這些值會指定用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1075">A bitwise combination of the enumeration values that specify options for matching.</span></span></param>
        <summary><span data-ttu-id="623b6-1076">使用指定的比對選項在指定的輸入字串中，搜尋所指定規則運算式的所有相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1076">Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.</span></span></summary>
        <returns><span data-ttu-id="623b6-1077">集合<see cref="T:System.Text.RegularExpressions.Match" />搜尋作業找到的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1077">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="623b6-1078">如果找不到相符的項目，此方法會傳回空集合物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1078">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1079"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法是類似於<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>輸入字串中，而不是單一的相符項目中找到的方法，但是它會傳回所有相符項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-1079">The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="623b6-1080">相當於下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="623b6-1080">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#8)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#8)]  
  
 <span data-ttu-id="623b6-1081">靜態`Matches`方法相當於建構<xref:System.Text.RegularExpressions.Regex>物件與指定的規則運算式模式，並呼叫方法的執行個體`Matches`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1081">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="623b6-1082">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1082">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1083">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1083">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-1084"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法會使用延遲評估來填入傳回<xref:System.Text.RegularExpressions.MatchCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1084">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="623b6-1085">存取這個集合的成員 (例如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>) 會導致立即填入集合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1085">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="623b6-1086">若要充分利用延遲評估，您應該逐一查看集合所使用的建構，例如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="623b6-1086">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="623b6-1087">在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1087">in Visual Basic.</span></span>  
  
 <span data-ttu-id="623b6-1088">其延遲評估，因為呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>方法並不會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1088">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-1089">不過，會擲回例外狀況上執行的操作<xref:System.Text.RegularExpressions.MatchCollection>如果目前的應用程式定義域和比對作業的 「 REGEX_DEFAULT_MATCH_TIMEOUT"屬性所定義的逾時間隔，這個方法中，所傳回的物件超過此逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1089">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a time-out interval is defined by the "REGEX_DEFAULT_MATCH_TIMEOUT" property of the current application domain and a matching operation exceeds this time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1090">下列範例會呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29>方法，以識別在句子結尾為"es"，然後再呼叫中的任何字組<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法來執行不區分大小寫的模式與輸入字串的比較。</span><span class="sxs-lookup"><span data-stu-id="623b6-1090">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29> method to identify any word in a sentence that ends in "es", and then calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method to perform a case-insensitive comparison of the pattern with the input string.</span></span> <span data-ttu-id="623b6-1091">如輸出所示，兩個方法會傳回不同的結果。</span><span class="sxs-lookup"><span data-stu-id="623b6-1091">As the output shows, the two methods return different results.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches4.cs#4)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches4.vb#4)]  
  
 <span data-ttu-id="623b6-1092">規則運算式模式 `\b\w+es\b` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1092">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-1093">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1093">Pattern</span></span>|<span data-ttu-id="623b6-1094">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1094">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-1095">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1095">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="623b6-1096">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1096">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="623b6-1097">比對常值字串"es"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1097">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="623b6-1098">結束字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1098">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1099">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1099">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1100"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1100"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1101"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1101"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1102">這個方法的逾時間隔等於呼叫這個方法的應用程式定義域的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1102">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="623b6-1103">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1103">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-1104">建議的靜態方法，針對擷取多個模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1104">The recommended static method for retrieving multiple pattern matches is <see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1105">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1105">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1106">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1106">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1107">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1107">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-1108">列舉值的位元組合，這些值會指定用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1108">A bitwise combination of the enumeration values that specify options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="623b6-1109">逾時間隔，若要表示此方法不應逾時則為 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1109">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="623b6-1110">使用指定的比對選項和逾時間隔，在指定的輸入字串中搜尋所指定規則運算式的所有相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1110">Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.</span></span></summary>
        <returns><span data-ttu-id="623b6-1111">集合<see cref="T:System.Text.RegularExpressions.Match" />搜尋作業找到的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1111">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="623b6-1112">如果找不到相符的項目，此方法會傳回空集合物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1112">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1113"><xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法是類似於<xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>輸入字串中，而不是單一的相符項目中找到的方法，但是它會傳回所有相符項目的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="623b6-1113">The <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="623b6-1114">相當於下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="623b6-1114">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#10)]  
  
 <span data-ttu-id="623b6-1115">靜態`Matches`方法相當於建構<xref:System.Text.RegularExpressions.Regex>物件與指定的規則運算式模式，並呼叫方法的執行個體`Matches`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1115">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="623b6-1116">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1116">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1117">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1117">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-1118"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法會使用延遲評估來填入傳回<xref:System.Text.RegularExpressions.MatchCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1118">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="623b6-1119">存取這個集合的成員 (例如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType>) 會導致立即填入集合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1119">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="623b6-1120">若要充分利用延遲評估，您應該逐一查看集合所使用的建構，例如`foreach`在 C# 和`For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="623b6-1120">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="623b6-1121">在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1121">in Visual Basic.</span></span>  
  
 <span data-ttu-id="623b6-1122">其延遲評估，因為呼叫<xref:System.Text.RegularExpressions.Regex.Matches%2A>方法並不會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1122">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%2A> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-1123">不過，在執行作業時會擲回例外狀況<xref:System.Text.RegularExpressions.MatchCollection>如果比對的作業超過此所指定的逾時間隔，這個方法中，所傳回的物件`matchTimeout`參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-1123">However, an exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a matching operation exceeds this time-out interval specified by the`matchTimeout` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1124">下列範例會呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法，以執行比對任何字在"es"結尾的句子中的區分大小寫比較。</span><span class="sxs-lookup"><span data-stu-id="623b6-1124">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method to perform a case-sensitive comparison that matches any word in a sentence that ends in "es".</span></span> <span data-ttu-id="623b6-1125">然後它會呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法來執行不區分大小寫的模式與輸入字串的比較。</span><span class="sxs-lookup"><span data-stu-id="623b6-1125">It then calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method to perform a case-insensitive comparison of the pattern with the input string.</span></span> <span data-ttu-id="623b6-1126">在這兩種情況下，逾時間隔設為一秒。</span><span class="sxs-lookup"><span data-stu-id="623b6-1126">In both cases, the time-out interval is set to one second.</span></span> <span data-ttu-id="623b6-1127">如輸出所示，兩個方法會傳回不同的結果。</span><span class="sxs-lookup"><span data-stu-id="623b6-1127">As the output shows, the two methods return different results.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches5.cs#11)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches5.vb#11)]  
  
 <span data-ttu-id="623b6-1128">規則運算式模式 `\b\w+es\b` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1128">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-1129">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1129">Pattern</span></span>|<span data-ttu-id="623b6-1130">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1130">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="623b6-1131">開始字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1131">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="623b6-1132">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1132">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="623b6-1133">比對常值字串"es"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1133">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="623b6-1134">結束字緣比對。</span><span class="sxs-lookup"><span data-stu-id="623b6-1134">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1135">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1135">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1136"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1136"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1137"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1137"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="623b6-1138">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-1138">-or-</span></span> 
 <span data-ttu-id="623b6-1139"><paramref name="matchTimeout" /> 為負數、零或約大於 24 天。</span><span class="sxs-lookup"><span data-stu-id="623b6-1139"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1140">我們建議您設定<paramref name="matchTimeout" />參數設為適當的值，例如兩秒。</span><span class="sxs-lookup"><span data-stu-id="623b6-1140">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="623b6-1141">如果您停用逾時指定<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，規則運算式引擎可讓您稍微提升效能。</span><span class="sxs-lookup"><span data-stu-id="623b6-1141">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="623b6-1142">不過，您應該停用逾時，只有在下列情況下：</span><span class="sxs-lookup"><span data-stu-id="623b6-1142">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="623b6-1143">-當規則運算式所處理的輸入來自已知且受信任的來源，或包含靜態文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1143">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="623b6-1144">這會排除已動態由使用者輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1144">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="623b6-1145">-當規則運算式模式徹底測試以確保有效率地處理符合時，不符合，而且不久符合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1145">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="623b6-1146">-當規則運算式模式包含已知會造成大量回溯處理接近的相符項目時沒有語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1146">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1147">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1147">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-1148">取得目前執行個體的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1148">Gets the time-out interval of the current instance.</span></span></summary>
        <value><span data-ttu-id="623b6-1149">可在之前的模式比對作業中流逝的最大時間間隔<see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />就會擲回或<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />如果停用逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1149">The maximum time interval that can elapse in a pattern-matching operation before a <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> is thrown, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> if time-outs are disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1150"><xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A>屬性會定義大約最大時間間隔<xref:System.Text.RegularExpressions.Regex>作業逾時之前執行單一比對作業的執行個體。規則運算式引擎會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>經過逾時間隔之後其下一步 計時檢查期間的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1150">The <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property defines the approximate maximum time interval for a <xref:System.Text.RegularExpressions.Regex> instance to execute a single matching operation before the operation times out. The regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check after the time-out interval has elapsed.</span></span> <span data-ttu-id="623b6-1151">這可防止規則運算式引擎處理需要大量回溯的輸入的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1151">This prevents the regular expression engine from processing input strings that require excessive backtracking.</span></span> <span data-ttu-id="623b6-1152">如需詳細資訊，請參閱 <<c0> [ 回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)並[規則運算式的最佳做法](~/docs/standard/base-types/best-practices.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1152">For more information, see [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md) and [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md).</span></span>  
  
 <span data-ttu-id="623b6-1153">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="623b6-1153">This property is read-only.</span></span> <span data-ttu-id="623b6-1154">您可以將其值設定個別的明確<xref:System.Text.RegularExpressions.Regex>藉由呼叫物件<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>建構函式，您可以將其值設定為所有<xref:System.Text.RegularExpressions.Regex>比對應用程式定義域中的作業，藉由呼叫<xref:System.AppDomain.SetData%2A?displayProperty=nameWithType>方法，並提供<xref:System.TimeSpan> "REGEX_DEFAULT_MATCH_TIMEOUT"屬性值，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1154">You can set its value explicitly for an individual <xref:System.Text.RegularExpressions.Regex> object by calling the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor; and you can set its value for all <xref:System.Text.RegularExpressions.Regex> matching operations in an application domain by calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method and providing a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matchtimeout/cs/regexmatchtimeout1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matchtimeout/vb/regexmatchtimeout1.vb#1)]  
  
 <span data-ttu-id="623b6-1155">如果您沒有明確設定的逾時間隔，預設值<xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>是使用和比對作業執行逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1155">If you do not explicitly set a time-out interval, the default value <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> is used, and matching operations do not time out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.RegularExpressions.RegexOptions" Usage="System.Text.RegularExpressions.Regex.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-1156">取得已傳入的選項<see cref="T:System.Text.RegularExpressions.Regex" />建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1156">Gets the options that were passed into the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span></summary>
        <value><span data-ttu-id="623b6-1157">一個或多個成員<see cref="T:System.Text.RegularExpressions.RegexOptions" />列舉型別，代表傳遞至選項<see cref="T:System.Text.RegularExpressions.Regex" />建構函式</span><span class="sxs-lookup"><span data-stu-id="623b6-1157">One or more members of the <see cref="T:System.Text.RegularExpressions.RegexOptions" /> enumeration that represent options that were passed to the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1158">值<xref:System.Text.RegularExpressions.Regex.Options%2A>屬性所組成的一或多個成員<xref:System.Text.RegularExpressions.RegexOptions>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="623b6-1158">The value of the <xref:System.Text.RegularExpressions.Regex.Options%2A> property consists of one or more members of the <xref:System.Text.RegularExpressions.RegexOptions> enumeration.</span></span> <span data-ttu-id="623b6-1159">如果沒有選項中未定義<xref:System.Text.RegularExpressions.Regex>類別建構函式，其值是<xref:System.Text.RegularExpressions.RegexOptions.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-1159">If no options were defined in the <xref:System.Text.RegularExpressions.Regex> class constructor, its value is <xref:System.Text.RegularExpressions.RegexOptions.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="623b6-1160">可用的選項會詳細討論[Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md)主題。</span><span class="sxs-lookup"><span data-stu-id="623b6-1160">The available options are discussed in detail in the [Regular Expression Options](~/docs/standard/base-types/regular-expression-options.md) topic.</span></span>  
  
 <span data-ttu-id="623b6-1161">請注意，<xref:System.Text.RegularExpressions.Regex.Options%2A>屬性不會反映在規則運算式中定義的內嵌選項模式本身。</span><span class="sxs-lookup"><span data-stu-id="623b6-1161">Note that the <xref:System.Text.RegularExpressions.Regex.Options%2A> property does not reflect inline options defined in the regular expression pattern itself.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="623b6-1162">
            <see cref="T:System.Text.RegularExpressions.Regex" /> 所建立的規則運算式的基底類別<see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1162">
            <see cref="T:System.Text.RegularExpressions.Regex" /> is the base class of regular expressions created by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span> <span data-ttu-id="623b6-1163">這些已編譯的規則運算式使用的基底類別實作<see cref="P:System.Text.RegularExpressions.Regex.Options" />屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-1163">These compiled regular expressions use the base class implementation of the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property.</span></span> <span data-ttu-id="623b6-1164">如果從衍生類別中，呼叫<see cref="P:System.Text.RegularExpressions.Regex.Options" />屬性會傳回已傳遞給的選項<paramref name="options" />參數<see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />類別建構函式用來定義規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1164">If called from a derived class, the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property returns the options that were passed to the <paramref name="options" /> parameter of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class constructor that was used to define the regular expression.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/c82dc689-7e82-4767-a18d-cd24ce5f05e9"><span data-ttu-id="623b6-1165">規則運算式選項</span><span class="sxs-lookup"><span data-stu-id="623b6-1165">Regular Expression Options</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="pattern">
      <MemberSignature Language="C#" Value="protected internal string pattern;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly string pattern" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.pattern" />
      <MemberSignature Language="VB.NET" Value="Protected Friend pattern As String " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::String ^ pattern;" />
      <MemberSignature Language="F#" Value="val mutable pattern : string" Usage="System.Text.RegularExpressions.Regex.pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-1166">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-1166">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="623b6-1167">在指定的輸入字串來取代符合規則運算式模式中，使用指定的取代字串的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1167">In a specified input string, replaces strings that match a regular expression pattern with a specified replacement string.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1168">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1168">Regular Expression Language - Quick Reference</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1169">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1169">Substitutions</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; string" Usage="regex.Replace (input, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1170">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1170">The string to search for a match.</span></span></param>
        <param name="replacement"><span data-ttu-id="623b6-1171">取代字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1171">The replacement string.</span></span></param>
        <summary><span data-ttu-id="623b6-1172">在指定的輸入字串中，使用指定的取代字串來取代符合規則運算式模式的所有字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1172">In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.</span></span></summary>
        <returns><span data-ttu-id="623b6-1173">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1173">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1174">如果規則運算式模式在目前執行個體中沒有符合項目，方法會傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1174">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1175">相符的項目是搜尋開始的開頭`input`字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1175">The search for matches starts at the beginning of the `input` string.</span></span> <span data-ttu-id="623b6-1176">規則運算式是目前的建構函式所定義的模式<xref:System.Text.RegularExpressions.Regex>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1176">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="623b6-1177">`replacement`參數指定的字串來取代中的每個相符項目`input`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1177">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="623b6-1178">`replacement` 可以包含常值文字的任意組合並[替代項目](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1178">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1179">比方說，取代模式`a*${test}b`插入字串"\*"後面接著所比對的子字串`test`擷取群組，如果有的話，後面接著字串"b"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1179">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="623b6-1180">\* 字元無法辨識為中繼字元的取代模式內。</span><span class="sxs-lookup"><span data-stu-id="623b6-1180">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-1181">替代是取代模式中可以辨識的只是規則運算式語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1181">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="623b6-1182">所有其他規則運算式語言項目，包括[字元逸出](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)，允許只在規則運算式模式中，而且無法辨識取代模式中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1182">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="623b6-1183">如果取代作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1183">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1184">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1184">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1185">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1185">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="623b6-1186">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1186">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1187">下列範例會定義規則運算式， `\s+`，符合一或多個空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1187">The following example defines a regular expression, `\s+`, that matches one or more white-space characters.</span></span> <span data-ttu-id="623b6-1188">取代字串""，將它們取代為單一空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1188">The replacement string, " ", replaces them with a single space character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample5.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample5.vb#5)]  
  
 <span data-ttu-id="623b6-1189">下列範例會定義規則運算式中， `(\p{Sc}\s?)?(\d+\.?((?<=\.)\d+)?)(?(1)|\s?\p{Sc})?`，並取代模式中， `$2`，從數字的值中移除前置或尾端的貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1189">The following example defines a regular expression, `(\p{Sc}\s?)?(\d+\.?((?<=\.)\d+)?)(?(1)|\s?\p{Sc})?`, and a replacement pattern, `$2`, that removes either a leading or a trailing currency symbol from a numeric value.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample7.cs#7)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample7.vb#7)]  
  
 <span data-ttu-id="623b6-1190">規則運算式的解譯方式如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1190">The regular expression is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-1191">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1191">Pattern</span></span>|<span data-ttu-id="623b6-1192">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1192">Description</span></span>|  
|-------------|-----------------|  
|`\p{Sc}`|<span data-ttu-id="623b6-1193">比對貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1193">Match a currency symbol.</span></span> <span data-ttu-id="623b6-1194">`{Sc}` 表示 Unicode Symbol，Currency 分類隸屬的任何字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1194">`{Sc}` denotes any character that is a member of the Unicode Symbol, Currency category.</span></span>|  
|`\s?`|<span data-ttu-id="623b6-1195">比對零個或一個空白字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1195">Match zero or one white-space character.</span></span>|  
|`(\p{Sc}\s?)?`|<span data-ttu-id="623b6-1196">比對零個或一個出現的貨幣符號且後面接著零個或一個空白字元的組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1196">Match zero or one occurrence of the combination of a currency symbol followed by zero or one white-space character.</span></span> <span data-ttu-id="623b6-1197">這是第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-1197">This is the first capturing group.</span></span>|  
|`\d+`|<span data-ttu-id="623b6-1198">比對一個或多個十進位數字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1198">Match one or more decimal digits.</span></span>|  
|`\.?`|<span data-ttu-id="623b6-1199">比對零個或一個出現的期間，（作為小數分隔符號字元）。</span><span class="sxs-lookup"><span data-stu-id="623b6-1199">Match zero or one occurrence of a period (used as a decimal separator character).</span></span>|  
|`((?<=\.)\d+)?`|<span data-ttu-id="623b6-1200">如果句號前一個字元，符合一或多個十進位數字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1200">If a period is the previous character, match one or more decimal digits.</span></span> <span data-ttu-id="623b6-1201">此模式可以比對零或一次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1201">This pattern can be matched either zero or one time.</span></span>|  
|`(\d+\.?((?<=\.)\d+)?)`|<span data-ttu-id="623b6-1202">比對一或多個十進位數字後面接著選擇性的期間和其他十進位數字的模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1202">Match the pattern of one or more decimal digits followed by an optional period and additional decimal digits.</span></span> <span data-ttu-id="623b6-1203">這是第二個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-1203">This is the second capturing group.</span></span> <span data-ttu-id="623b6-1204">若要呼叫<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%29>方法會將整個相符項目取代此擷取群組的值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1204">The call to the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%29> method replaces the entire match with the value of this captured group.</span></span>|  
|<code>(?(1)&#124;\s?\p{Sc})?</code>|<span data-ttu-id="623b6-1205">如果第一個擷取的群組存在，則比對空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1205">If the first captured group exists, match an empty string.</span></span> <span data-ttu-id="623b6-1206">否則，比對零個或一個空格字元，後面接著貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1206">Otherwise, match zero or one white-space character followed by a currency symbol.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1207"><paramref name="input" /> 或 <paramref name="replacement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1207"><paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1208">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1208">A time-out occurred.</span></span> <span data-ttu-id="623b6-1209">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1209">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1210">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1210">Regular Expression Language - Quick Reference</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1211">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1211">Substitutions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator -&gt; string" Usage="regex.Replace (input, evaluator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1212">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1212">The string to search for a match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="623b6-1213">檢查每個符合項目並傳回原始符合字串或取代字串的自訂方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1213">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <summary><span data-ttu-id="623b6-1214">在指定的輸入字串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委派所傳回的字串，取代所有與指定之規則運算式相符的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1214">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span></summary>
        <returns><span data-ttu-id="623b6-1215">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1215">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1216">如果規則運算式模式在目前執行個體中沒有符合項目，方法會傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1216">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1217"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType>方法適合用來取代規則運算式相符項目，如果下列任一條件成立：</span><span class="sxs-lookup"><span data-stu-id="623b6-1217">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="623b6-1218">取代字串不能輕易地指定規則運算式取代模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1218">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="623b6-1219">取代字串會產生從相符的字串上進行一些處理。</span><span class="sxs-lookup"><span data-stu-id="623b6-1219">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="623b6-1220">取代字串的條件式處理結果。</span><span class="sxs-lookup"><span data-stu-id="623b6-1220">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="623b6-1221">此方法就相當於呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType>方法並傳遞每<xref:System.Text.RegularExpressions.Match>在傳回的物件<xref:System.Text.RegularExpressions.MatchCollection>集合`evaluator`委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1221">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="623b6-1222">規則運算式是目前的建構函式所定義的模式<xref:System.Text.RegularExpressions.Regex>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1222">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="623b6-1223">`evaluator`參數是您定義的自訂方法的委派，並可檢查每個符合項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1223">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="623b6-1224">自訂的方法必須具有下列簽章，以符合<xref:System.Text.RegularExpressions.MatchEvaluator>委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1224">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="623b6-1225">您的自訂方法會傳回字串，取代相符的輸入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1225">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="623b6-1226">如果取代作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1226">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1227">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1227">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1228">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1228">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="623b6-1229">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1229">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1230">下列程式碼範例會顯示為原始字串、 比對原始字串中的每個字，將已轉換的字串轉換為大寫，然後顯示每個符合結果的第一個字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1230">The following code example displays an original string, matches each word in the original string, converts the first character of each match to uppercase, then displays the converted string.</span></span>  
  
 [!code-csharp[Regex.Replace-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Regex.Replace-Instance/cs/sample.cs#1)]
 [!code-vb[Regex.Replace-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Regex.Replace-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1231"><paramref name="input" /> 或 <paramref name="evaluator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1231"><paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1232">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1232">A time-out occurred.</span></span> <span data-ttu-id="623b6-1233">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1233">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1234">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1234">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1235">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1235">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int -&gt; string" Usage="regex.Replace (input, replacement, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1236">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1236">The string to search for a match.</span></span></param>
        <param name="replacement"><span data-ttu-id="623b6-1237">取代字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1237">The replacement string.</span></span></param>
        <param name="count"><span data-ttu-id="623b6-1238">取代作業可以發生的最大次數。</span><span class="sxs-lookup"><span data-stu-id="623b6-1238">The maximum number of times the replacement can occur.</span></span></param>
        <summary><span data-ttu-id="623b6-1239">在指定的輸入字串中，使用指定的取代字串來取代符合規則運算式模式的指定最大字串數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1239">In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.</span></span></summary>
        <returns><span data-ttu-id="623b6-1240">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1240">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1241">如果規則運算式模式在目前執行個體中沒有符合項目，方法會傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1241">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1242">相符的項目是搜尋開始的開頭`input`字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1242">The search for matches starts at the beginning of the `input` string.</span></span> <span data-ttu-id="623b6-1243">規則運算式是目前的建構函式所定義的模式<xref:System.Text.RegularExpressions.Regex>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1243">The regular expression is the pattern that is defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="623b6-1244">如果`count`是負數，字串的結尾繼續取代項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1244">If `count` is negative, replacements continue to the end of the string.</span></span> <span data-ttu-id="623b6-1245">如果`count`超過的相符項目數，會取代所有相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1245">If `count` exceeds the number of matches, all matches are replaced.</span></span>  
  
 <span data-ttu-id="623b6-1246">`replacement`參數指定的字串來取代第一個`count`中的比對`input`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1246">The `replacement` parameter specifies the string that is to replace the first `count` matches in `input`.</span></span> <span data-ttu-id="623b6-1247">`replacement` 可以包含常值文字的任意組合並[替代項目](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1247">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1248">比方說，取代模式`a*${test}b`插入字串"\*"後面接著所比對的子字串`test`擷取群組，如果有的話，後面接著字串"b"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1248">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="623b6-1249">\* 字元無法辨識為中繼字元的取代模式內。</span><span class="sxs-lookup"><span data-stu-id="623b6-1249">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-1250">替代是取代模式中可以辨識的只是規則運算式語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1250">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="623b6-1251">所有其他規則運算式語言項目，包括[字元逸出](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)，允許只在規則運算式模式中，而且無法辨識取代模式中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1251">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="623b6-1252">如果取代作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1252">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1253">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1253">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1254">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1254">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="623b6-1255">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1255">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1256">下列範例會將前五個出現重複的字元取代單一字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1256">The following example replaces the first five occurrences of duplicated characters with a single character.</span></span> <span data-ttu-id="623b6-1257">規則運算式模式`(\w)\1`比對單一字元的連續項目，並將第一個相符項目指派給第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-1257">The regular expression pattern `(\w)\1` matches consecutive occurrences of a single character and assigns the first occurrence to the first capturing group.</span></span> <span data-ttu-id="623b6-1258">取代模式`$1`整個相符項目取代為第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-1258">The replacement pattern `$1` replaces the entire match with the first captured group.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample8.cs#8)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1259"><paramref name="input" /> 或 <paramref name="replacement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1259"><paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1260">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1260">A time-out occurred.</span></span> <span data-ttu-id="623b6-1261">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1261">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1262">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1262">Regular Expression Language - Quick Reference</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1263">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1263">Substitutions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1264">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1264">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1265">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1265">The regular expression pattern to match.</span></span></param>
        <param name="replacement"><span data-ttu-id="623b6-1266">取代字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1266">The replacement string.</span></span></param>
        <summary><span data-ttu-id="623b6-1267">在指定的輸入字串中，使用指定的取代字串來取代符合指定之規則運算式的所有字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1267">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span></span></summary>
        <returns><span data-ttu-id="623b6-1268">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1268">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1269">如果在目前的執行個體中沒有符合 <paramref name="pattern" /> 的項目，則方法傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1269">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1270">靜態`Replace`方法相當於建構<xref:System.Text.RegularExpressions.Regex>物件與指定的規則運算式模式，並呼叫方法的執行個體`Replace`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1270">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="623b6-1271">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1271">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1272">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1272">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span> <span data-ttu-id="623b6-1273">相符的項目是搜尋開始的開頭`input`字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1273">The search for matches starts at the beginning of the `input` string.</span></span>  
  
 <span data-ttu-id="623b6-1274">`replacement`參數指定的字串來取代中的每個相符項目`input`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1274">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="623b6-1275">`replacement` 可以包含常值文字的任意組合並[替代項目](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1275">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1276">比方說，取代模式`a*${test}b`插入字串"\*"後面接著所比對的子字串`test`擷取群組，如果有的話，後面接著字串"b"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1276">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="623b6-1277">\* 字元無法辨識為中繼字元的取代模式內。</span><span class="sxs-lookup"><span data-stu-id="623b6-1277">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-1278">替代是取代模式中可以辨識的只是規則運算式語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1278">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="623b6-1279">所有其他規則運算式語言項目，包括[字元逸出](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)，允許只在規則運算式模式中，而且無法辨識取代模式中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1279">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="623b6-1280">如果取代作業的執行時間超出為呼叫方法的應用程式定義域指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1280">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-1281">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1281">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="623b6-1282">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1282">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1283">下列範例會定義規則運算式， `\s+`，符合一或多個空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1283">The following example defines a regular expression, `\s+`, that matches one or more white-space characters.</span></span> <span data-ttu-id="623b6-1284">取代字串""，將它們取代為單一空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1284">The replacement string, " ", replaces them with a single space character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample6.cs#6)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample6.vb#6)]  
  
 <span data-ttu-id="623b6-1285">下列範例會使用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%29>方法來取代本機檔案路徑的 UNC 路徑中的本機電腦和磁碟機名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-1285">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%29> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="623b6-1286">使用規則運算式<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>屬性，以包括本機電腦的名稱和<xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType>方法來包含邏輯磁碟機的名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-1286">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer, and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="623b6-1287">若要成功執行範例，您應該以您的本機電腦名稱來取代常值字串"MyMachine"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1287">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace3.vb#3)]  
  
 <span data-ttu-id="623b6-1288">下列的運算式所定義的規則運算式模式：</span><span class="sxs-lookup"><span data-stu-id="623b6-1288">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\(?i:" + Environment.MachineName + ")(?:\.\w+)*\\((?i:[" + driveNames + "]))\$"`  
  
 <span data-ttu-id="623b6-1289">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1289">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-1290">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1290">Pattern</span></span>|<span data-ttu-id="623b6-1291">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1291">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="623b6-1292">比對兩個連續的反斜線 (`\`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1292">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="623b6-1293">因為反斜線字元會解譯為逸出字元，則必須逸出每個反斜線與另一個反斜線。</span><span class="sxs-lookup"><span data-stu-id="623b6-1293">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`(?i:" + Environment.MachineName + ")`|<span data-ttu-id="623b6-1294">執行不區分大小寫的比對所傳回的字串<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-1294">Perform a case-insensitive match of the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="623b6-1295">比對句號 (`.`) 字元後面接著一或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1295">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="623b6-1296">此種比對可能是零或多次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1296">This match can occur zero or more times.</span></span> <span data-ttu-id="623b6-1297">不會擷取相符子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1297">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="623b6-1298">比對反斜線 (`\`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1298">Match a backslash (`\`) character.</span></span>|  
|`((?i:[" + driveNames + "]))`|<span data-ttu-id="623b6-1299">執行不區分大小寫的比對的個別磁碟機字母所組成的字元類別。</span><span class="sxs-lookup"><span data-stu-id="623b6-1299">Perform a case-insensitive match of the character class that consists of the individual drive letters.</span></span> <span data-ttu-id="623b6-1300">此相符項目是第一個擷取的子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1300">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="623b6-1301">比對常值貨幣符號 (`$`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1301">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="623b6-1302">取代模式`$1`整個相符項目取代為第一個擷取的子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1302">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="623b6-1303">也就是說，它會取代 UNC 機器和磁碟機名稱的磁碟機代號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1303">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1304">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1304">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1305"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1305"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1306">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1306">A time-out occurred.</span></span> <span data-ttu-id="623b6-1307">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1307">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1308">這個方法的逾時間隔等於呼叫這個方法的應用程式定義域的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1308">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="623b6-1309">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1309">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-1310">建議的靜態方法，來取代模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1310">The recommended static method for replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1311">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1311">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1312">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1312">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1313">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1313">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1314">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1314">The regular expression pattern to match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="623b6-1315">檢查每個符合項目並傳回原始符合字串或取代字串的自訂方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1315">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <summary><span data-ttu-id="623b6-1316">在指定的輸入字串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委派所傳回的字串，取代所有與指定之規則運算式相符的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1316">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span></summary>
        <returns><span data-ttu-id="623b6-1317">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1317">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1318">如果在目前的執行個體中沒有符合 <paramref name="pattern" /> 的項目，則方法傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1318">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1319"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType>方法適合用來取代規則運算式相符項目，如果下列任一條件成立：</span><span class="sxs-lookup"><span data-stu-id="623b6-1319">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="623b6-1320">取代字串不能輕易地指定規則運算式取代模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1320">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="623b6-1321">取代字串會產生從相符的字串上進行一些處理。</span><span class="sxs-lookup"><span data-stu-id="623b6-1321">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="623b6-1322">取代字串的條件式處理結果。</span><span class="sxs-lookup"><span data-stu-id="623b6-1322">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="623b6-1323">此方法就相當於呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType>方法並傳遞每<xref:System.Text.RegularExpressions.Match>在傳回的物件<xref:System.Text.RegularExpressions.MatchCollection>集合`evaluator`委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1323">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="623b6-1324">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1324">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1325">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1325">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-1326">`evaluator`參數是您定義的自訂方法的委派，並可檢查每個符合項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1326">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="623b6-1327">自訂的方法必須具有下列簽章，以符合<xref:System.Text.RegularExpressions.MatchEvaluator>委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1327">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="623b6-1328">您的自訂方法會傳回字串，取代相符的輸入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1328">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="623b6-1329">如果取代作業的執行時間超出為呼叫方法的應用程式定義域指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1329">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-1330">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1330">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="623b6-1331">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1331">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1332">下列範例使用規則運算式從字串中，擷取個別文字，然後使用<xref:System.Text.RegularExpressions.MatchEvaluator>委派来呼叫一個名為`WordScramble`，將金鑰加密的文字中個別的字母。</span><span class="sxs-lookup"><span data-stu-id="623b6-1332">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="623b6-1333">若要這樣做，`WordScramble`方法會建立陣列，其中包含在比對的字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1333">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="623b6-1334">它也會使用隨機浮點數建立平行的陣列，它會填入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1334">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="623b6-1335">藉由呼叫排序陣列<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType>方法，並已排序的陣列做為引數提供<xref:System.String>類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1335">The arrays are sorted by calling the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="623b6-1336">然後傳回此新建立的字串`WordScramble`方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1336">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="623b6-1337">規則運算式模式`\w+`符合一或多個文字字元，規則運算式引擎會繼續將字元加入至相符項目，直到遇到非文字字元，例如空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1337">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace5.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1338">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1338">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1339"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1339"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1340">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1340">A time-out occurred.</span></span> <span data-ttu-id="623b6-1341">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1341">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1342">這個方法的逾時間隔等於呼叫這個方法的應用程式定義域的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1342">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="623b6-1343">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1343">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-1344">建議的靜態方法，用於評估和取代模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1344">The recommended static method for evaluating and replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1345">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1345">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1346">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1346">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator * int -&gt; string" Usage="regex.Replace (input, evaluator, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1347">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1347">The string to search for a match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="623b6-1348">檢查每個符合項目並傳回原始符合字串或取代字串的自訂方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1348">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <param name="count"><span data-ttu-id="623b6-1349">取代將發生的最多次數。</span><span class="sxs-lookup"><span data-stu-id="623b6-1349">The maximum number of times the replacement will occur.</span></span></param>
        <summary><span data-ttu-id="623b6-1350">在指定的輸入字串來取代符合規則運算式模式所傳回的字串與字串指定最大數目<see cref="T:System.Text.RegularExpressions.MatchEvaluator" />委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1350">In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span></summary>
        <returns><span data-ttu-id="623b6-1351">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1351">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1352">如果規則運算式模式在目前執行個體中沒有符合項目，方法會傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1352">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1353"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Int32%29?displayProperty=nameWithType>方法適合用來取代規則運算式相符項目，如果下列任一條件成立：</span><span class="sxs-lookup"><span data-stu-id="623b6-1353">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Int32%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="623b6-1354">取代字串不能輕易地指定規則運算式取代模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1354">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="623b6-1355">取代字串會產生從相符的字串上進行一些處理。</span><span class="sxs-lookup"><span data-stu-id="623b6-1355">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="623b6-1356">取代字串的條件式處理結果。</span><span class="sxs-lookup"><span data-stu-id="623b6-1356">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="623b6-1357">此方法就相當於呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType>方法並傳遞第一個`count`<xref:System.Text.RegularExpressions.Match>中所傳回的物件<xref:System.Text.RegularExpressions.MatchCollection>集合`evaluator`委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1357">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%29?displayProperty=nameWithType> method and passing the first `count`<xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="623b6-1358">規則運算式是目前的建構函式所定義的模式<xref:System.Text.RegularExpressions.Regex>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1358">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="623b6-1359">`evaluator`參數是您定義的自訂方法的委派，並可檢查每個符合項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1359">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="623b6-1360">自訂的方法必須具有下列簽章，以符合<xref:System.Text.RegularExpressions.MatchEvaluator>委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1360">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="623b6-1361">您的自訂方法會傳回字串，取代相符的輸入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1361">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="623b6-1362">如果取代作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1362">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1363">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1363">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1364">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1364">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="623b6-1365">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1365">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1366">下列範例會使用規則運算式，刻意拼錯一半的清單中的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1366">The following example uses a regular expression to deliberately misspell half of the words in a list.</span></span> <span data-ttu-id="623b6-1367">它會使用規則運算式`\w*(ie|ei)\w*`比對包含 「 ie 」 或 「 ei"字元的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1367">It uses the regular expression `\w*(ie|ei)\w*` to match words that include the characters "ie" or "ei".</span></span> <span data-ttu-id="623b6-1368">它會傳遞第一個符合的單字，下半`ReverseLetter`方法，這個方法會接著使用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法，以反轉"i"和"e"相符的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1368">It passes the first half of the matching words to the `ReverseLetter` method, which, in turn, uses the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method to reverse "i" and "e" in the matched string.</span></span> <span data-ttu-id="623b6-1369">其餘的字維持不變。</span><span class="sxs-lookup"><span data-stu-id="623b6-1369">The remaining words remain unchanged.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace7.cs#11)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace7.vb#11)]  
  
 <span data-ttu-id="623b6-1370">規則運算式 `\w*(ie|ei)\w*` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1370">The regular expression `\w*(ie|ei)\w*` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-1371">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1371">Pattern</span></span>|<span data-ttu-id="623b6-1372">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1372">Description</span></span>|  
|-------------|-----------------|  
|`\w*`|<span data-ttu-id="623b6-1373">比對零個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1373">Match zero or more word characters.</span></span>|  
|<code>(ie&#124;ei)</code>|<span data-ttu-id="623b6-1374">符合 「 ie 」 或 「 ei"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1374">Match either "ie" or "ei".</span></span>|  
|`\w*`|<span data-ttu-id="623b6-1375">比對零個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1375">Match zero or more word characters.</span></span>|  
  
 <span data-ttu-id="623b6-1376">規則運算式模式`([ie])([ie])`在`ReverseLetter`方法中 diphthong 「 ie 」 或 「 ei 」 比對的第一個"i"或"e"，並將字母指派給第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-1376">The regular expression pattern `([ie])([ie])` in the `ReverseLetter` method matches the first "i" or "e" in the diphthong "ie" or "ei" and assigns the letter to the first capturing group.</span></span> <span data-ttu-id="623b6-1377">它符合第二個"i"或"e"，並將代號指派給第二個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="623b6-1377">It matches the second "i" or "e" and assigns the letter to the second capturing group.</span></span> <span data-ttu-id="623b6-1378">藉由呼叫接著會反轉兩個字元<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%29>方法取代模式`$2$1`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1378">The two characters are then reversed by calling the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%29> method with the replacement pattern `$2$1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1379"><paramref name="input" /> 或 <paramref name="evaluator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1379"><paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1380">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1380">A time-out occurred.</span></span> <span data-ttu-id="623b6-1381">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1381">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1382">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1382">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1383">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1383">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String, count As Integer, startat As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int * int -&gt; string" Usage="regex.Replace (input, replacement, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1384">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1384">The string to search for a match.</span></span></param>
        <param name="replacement"><span data-ttu-id="623b6-1385">取代字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1385">The replacement string.</span></span></param>
        <param name="count"><span data-ttu-id="623b6-1386">取代可以發生的最多次數。</span><span class="sxs-lookup"><span data-stu-id="623b6-1386">Maximum number of times the replacement can occur.</span></span></param>
        <param name="startat"><span data-ttu-id="623b6-1387">在輸入字串中開始搜尋的字元位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-1387">The character position in the input string where the search begins.</span></span></param>
        <summary><span data-ttu-id="623b6-1388">在指定的輸入子字串中，使用指定的取代字串來取代符合規則運算式模式的指定最大字串數目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1388">In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.</span></span></summary>
        <returns><span data-ttu-id="623b6-1389">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1389">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1390">如果規則運算式模式在目前執行個體中沒有符合項目，方法會傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1390">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1391">搜尋符合項目以啟動`input`所指定位置的字串`startat`參數。</span><span class="sxs-lookup"><span data-stu-id="623b6-1391">The search for matches starts in the `input` string at the position specified by the `startat` parameter.</span></span> <span data-ttu-id="623b6-1392">規則運算式是目前的建構函式所定義的模式<xref:System.Text.RegularExpressions.Regex>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1392">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="623b6-1393">如果`count`是負數，字串的結尾繼續取代項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1393">If `count` is negative, replacements continue to the end of the string.</span></span> <span data-ttu-id="623b6-1394">如果`count`超過的相符項目數，會取代所有相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1394">If `count` exceeds the number of matches, all matches are replaced.</span></span>  
  
 <span data-ttu-id="623b6-1395">`replacement`參數指定的字串來取代中的每個相符項目`input`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1395">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="623b6-1396">`replacement` 可以包含常值文字的任意組合並[替代項目](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1396">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1397">比方說，取代模式`a*${test}b`插入字串"\*"後面接著所比對的子字串`test`擷取群組，如果有的話，後面接著字串"b"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1397">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="623b6-1398">\* 字元無法辨識為中繼字元的取代模式內。</span><span class="sxs-lookup"><span data-stu-id="623b6-1398">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-1399">替代是取代模式中可以辨識的只是規則運算式語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1399">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="623b6-1400">所有其他規則運算式語言項目，包括[字元逸出](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)，允許只在規則運算式模式中，而且無法辨識取代模式中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1400">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="623b6-1401">如果取代作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1401">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1402">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1402">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1403">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1403">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="623b6-1404">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1404">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1405">下列範例 double-spaces 以外的所有字串的第一行。</span><span class="sxs-lookup"><span data-stu-id="623b6-1405">The following example double-spaces all but the first line of a string.</span></span> <span data-ttu-id="623b6-1406">它會定義規則運算式模式中， `^.*$`，符合一行文字，呼叫<xref:System.Text.RegularExpressions.Regex.Match%28System.String%29>方法來比對的字串，並使用第一行`Match.Index`和`Match.Count`屬性，以判斷第二個的開始位置行。</span><span class="sxs-lookup"><span data-stu-id="623b6-1406">It defines a regular expression pattern, `^.*$`, that matches a line of text, calls the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%29> method to match the first line of the string, and uses the `Match.Index` and `Match.Count` properties to determine the starting position of the second line.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample9.cs#9)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample9.vb#9)]  
  
 <span data-ttu-id="623b6-1407">規則運算式模式 `^.*$` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1407">The regular expression pattern `^.*$` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="623b6-1408">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1408">Pattern</span></span>|<span data-ttu-id="623b6-1409">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1409">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="623b6-1410">比對行首。</span><span class="sxs-lookup"><span data-stu-id="623b6-1410">Match the start of a line.</span></span> <span data-ttu-id="623b6-1411">(請注意，<xref:System.Text.RegularExpressions.Regex>物件具現化使用<xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType>選項; 否則此字元類別會只比對輸入字串的開頭。)</span><span class="sxs-lookup"><span data-stu-id="623b6-1411">(Note that the <xref:System.Text.RegularExpressions.Regex> object was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType> option; otherwise, this character class would only match the beginning of the input string.)</span></span>|  
|`.*`|<span data-ttu-id="623b6-1412">比對任何字元零或多次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1412">Match any character zero or more times.</span></span>|  
|`$`|<span data-ttu-id="623b6-1413">比對一行的結尾。</span><span class="sxs-lookup"><span data-stu-id="623b6-1413">Match the end of a line.</span></span> <span data-ttu-id="623b6-1414">(請注意，<xref:System.Text.RegularExpressions.Regex>物件具現化使用<xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType>選項; 否則此字元類別會只比對輸入字串的開頭。)</span><span class="sxs-lookup"><span data-stu-id="623b6-1414">(Note that the <xref:System.Text.RegularExpressions.Regex> object was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType> option; otherwise, this character class would only match the beginning of the input string.)</span></span>|  
  
 <span data-ttu-id="623b6-1415">取代字串 (`vbCrLf + "$&"`在 Visual Basic 中`"\n$&"`C# 中) 將加入新的一行之前相符的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1415">The replacement string (`vbCrLf + "$&"` in Visual Basic, `"\n$&"` in C#) adds a new line before the matched string.</span></span> <span data-ttu-id="623b6-1416">請注意，`\n`在 C# 範例會解譯為新行字元與 C# 編譯器; 它不代表規則運算式字元逸出。</span><span class="sxs-lookup"><span data-stu-id="623b6-1416">Note that `\n` in the C# example is interpreted as the newline character by the C# compiler; it does not represent a regular expression character escape.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1417"><paramref name="input" /> 或 <paramref name="replacement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1417"><paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1418"><paramref name="startat" /> 小於零或大於 <paramref name="input" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="623b6-1418"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1419">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1419">A time-out occurred.</span></span> <span data-ttu-id="623b6-1420">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1420">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1421">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1421">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1422">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1422">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String, options As RegexOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * System.Text.RegularExpressions.RegexOptions -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1423">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1423">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1424">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1424">The regular expression pattern to match.</span></span></param>
        <param name="replacement"><span data-ttu-id="623b6-1425">取代字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1425">The replacement string.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-1426">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1426">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="623b6-1427">在指定的輸入字串中，使用指定的取代字串來取代符合指定之規則運算式的所有字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1427">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span></span> <span data-ttu-id="623b6-1428">指定的選項會修改符合的作業。</span><span class="sxs-lookup"><span data-stu-id="623b6-1428">Specified options modify the matching operation.</span></span></summary>
        <returns><span data-ttu-id="623b6-1429">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1429">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1430">如果在目前的執行個體中沒有符合 <paramref name="pattern" /> 的項目，則方法傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1430">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1431">靜態`Replace`方法相當於建構<xref:System.Text.RegularExpressions.Regex>物件與指定的規則運算式模式，並呼叫方法的執行個體`Replace`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1431">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="623b6-1432">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1432">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1433">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1433">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span> <span data-ttu-id="623b6-1434">如果為 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 參數指定 `options`，搜尋符合項目會從輸入字串結尾開始向左移動，否則，搜尋會從輸入字串開頭開始向右移動。</span><span class="sxs-lookup"><span data-stu-id="623b6-1434">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="623b6-1435">`replacement`參數指定的字串來取代中的每個相符項目`input`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1435">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="623b6-1436">`replacement` 可以包含常值文字的任意組合並[替代項目](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1436">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1437">比方說，取代模式`a*${test}b`插入字串"\*"後面接著所比對的子字串`test`擷取群組，如果有的話，後面接著字串"b"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1437">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="623b6-1438">\* 字元無法辨識為中繼字元的取代模式內。</span><span class="sxs-lookup"><span data-stu-id="623b6-1438">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-1439">替代是取代模式中可以辨識的只是規則運算式語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1439">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="623b6-1440">所有其他規則運算式語言項目，包括[字元逸出](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)，允許只在規則運算式模式中，而且無法辨識取代模式中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1440">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="623b6-1441">如果取代作業的執行時間超出為呼叫方法的應用程式定義域指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1441">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-1442">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1442">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="623b6-1443">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1443">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1444">下列範例會使用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29>方法來取代本機檔案路徑的 UNC 路徑中的本機電腦和磁碟機名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-1444">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="623b6-1445">使用規則運算式<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>屬性，以包括本機電腦的名稱和<xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType>方法來包含邏輯磁碟機的名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-1445">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer, and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="623b6-1446">所有的規則運算式的字串比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="623b6-1446">All regular expression string comparisons are case-insensitive.</span></span> <span data-ttu-id="623b6-1447">若要成功執行範例，您應該以您的本機電腦名稱來取代常值字串"MyMachine"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1447">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace4.cs#4)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace4.vb#4)]  
  
 <span data-ttu-id="623b6-1448">下列的運算式所定義的規則運算式模式：</span><span class="sxs-lookup"><span data-stu-id="623b6-1448">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\" + Environment.MachineName + "(?:\.\w+)*\\([" + driveNames + "])\$"`  
  
 <span data-ttu-id="623b6-1449">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1449">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-1450">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1450">Pattern</span></span>|<span data-ttu-id="623b6-1451">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1451">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="623b6-1452">比對兩個連續的反斜線 (`\`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1452">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="623b6-1453">因為反斜線字元會解譯為逸出字元，則必須逸出每個反斜線與另一個反斜線。</span><span class="sxs-lookup"><span data-stu-id="623b6-1453">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`+ Environment.MachineName +`|<span data-ttu-id="623b6-1454">所傳回的字串相符<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-1454">Match the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="623b6-1455">比對句號 (`.`) 字元後面接著一或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1455">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="623b6-1456">此種比對可能是零或多次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1456">This match can occur zero or more times.</span></span> <span data-ttu-id="623b6-1457">不會擷取相符子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1457">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="623b6-1458">比對反斜線 (`\`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1458">Match a backslash (`\`) character.</span></span>|  
|`([" + driveNames + "])`|<span data-ttu-id="623b6-1459">比對的字元類別，其中包含的個別磁碟機代號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1459">Match the character class that consists of the individual drive letters.</span></span> <span data-ttu-id="623b6-1460">此相符項目是第一個擷取的子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1460">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="623b6-1461">比對常值貨幣符號 (`$`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1461">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="623b6-1462">取代模式`$1`整個相符項目取代為第一個擷取的子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1462">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="623b6-1463">也就是說，它會取代 UNC 機器和磁碟機名稱的磁碟機代號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1463">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1464">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1464">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1465"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1465"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1466"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1466"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1467">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1467">A time-out occurred.</span></span> <span data-ttu-id="623b6-1468">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1468">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1469">這個方法的逾時間隔等於呼叫這個方法的應用程式定義域的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1469">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="623b6-1470">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1470">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-1471">建議的靜態方法，來取代模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1471">The recommended static method for replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1472">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1472">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1473">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1473">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator, options As RegexOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator * System.Text.RegularExpressions.RegexOptions -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1474">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1474">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1475">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1475">The regular expression pattern to match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="623b6-1476">檢查每個符合項目並傳回原始符合字串或取代字串的自訂方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1476">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-1477">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1477">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="623b6-1478">在指定的輸入字串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委派所傳回的字串，取代所有與指定之規則運算式相符的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1478">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span> <span data-ttu-id="623b6-1479">指定的選項會修改符合的作業。</span><span class="sxs-lookup"><span data-stu-id="623b6-1479">Specified options modify the matching operation.</span></span></summary>
        <returns><span data-ttu-id="623b6-1480">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1480">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1481">如果在目前的執行個體中沒有符合 <paramref name="pattern" /> 的項目，則方法傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1481">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1482"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法適合用來取代規則運算式相符項目中的，如果下列任一條件成立：</span><span class="sxs-lookup"><span data-stu-id="623b6-1482">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method is useful for replacing a regular expression match in if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="623b6-1483">取代字串不能輕易地指定規則運算式取代模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1483">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="623b6-1484">取代字串會產生從相符的字串上進行一些處理。</span><span class="sxs-lookup"><span data-stu-id="623b6-1484">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="623b6-1485">取代字串的條件式處理結果。</span><span class="sxs-lookup"><span data-stu-id="623b6-1485">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="623b6-1486">此方法就相當於呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法並傳遞每<xref:System.Text.RegularExpressions.Match>在傳回的物件<xref:System.Text.RegularExpressions.MatchCollection>集合`evaluator`委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1486">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="623b6-1487">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1487">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1488">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1488">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-1489">`evaluator`參數是您定義的自訂方法的委派，並可檢查每個符合項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1489">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="623b6-1490">自訂的方法必須具有下列簽章，以符合<xref:System.Text.RegularExpressions.MatchEvaluator>委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1490">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="623b6-1491">您的自訂方法會傳回字串，取代相符的輸入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1491">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="623b6-1492">如果為 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 參數指定 `options`，搜尋符合項目會從輸入字串結尾開始向左移動，否則，搜尋會從輸入字串開頭開始向右移動。</span><span class="sxs-lookup"><span data-stu-id="623b6-1492">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="623b6-1493">如果取代作業的執行時間超出為呼叫方法的應用程式定義域指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1493">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-1494">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1494">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="623b6-1495">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1495">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1496">下列範例使用規則運算式從字串中，擷取個別文字，然後使用<xref:System.Text.RegularExpressions.MatchEvaluator>委派来呼叫一個名為`WordScramble`，將金鑰加密的文字中個別的字母。</span><span class="sxs-lookup"><span data-stu-id="623b6-1496">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="623b6-1497">若要這樣做，`WordScramble`方法會建立陣列，其中包含在比對的字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1497">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="623b6-1498">它也會使用隨機浮點數建立平行的陣列，它會填入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1498">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="623b6-1499">藉由呼叫排序陣列<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType>方法，並已排序的陣列做為引數提供<xref:System.String>類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1499">The arrays are sorted by calling the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="623b6-1500">然後傳回此新建立的字串`WordScramble`方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1500">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="623b6-1501">規則運算式模式`\w+`符合一或多個文字字元，規則運算式引擎會繼續將字元加入至相符項目，直到遇到非文字字元，例如空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1501">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span> <span data-ttu-id="623b6-1502">在呼叫<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29>方法包含<xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType>選項，讓規則運算式模式中的註解`\w+  # Matches all the characters in a word.`會忽略規則運算式引擎。</span><span class="sxs-lookup"><span data-stu-id="623b6-1502">The call to the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29> method includes the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option so that the comment in the regular expression pattern `\w+  # Matches all the characters in a word.` is ignored by the regular expression engine.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace6.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace6.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1503">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1503">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1504"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1504"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1505"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1505"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1506">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1506">A time-out occurred.</span></span> <span data-ttu-id="623b6-1507">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1507">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1508">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1508">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1509">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1509">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator, count As Integer, startat As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator * int * int -&gt; string" Usage="regex.Replace (input, evaluator, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1510">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1510">The string to search for a match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="623b6-1511">檢查每個符合項目並傳回原始符合字串或取代字串的自訂方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1511">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <param name="count"><span data-ttu-id="623b6-1512">取代將發生的最多次數。</span><span class="sxs-lookup"><span data-stu-id="623b6-1512">The maximum number of times the replacement will occur.</span></span></param>
        <param name="startat"><span data-ttu-id="623b6-1513">在輸入字串中開始搜尋的字元位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-1513">The character position in the input string where the search begins.</span></span></param>
        <summary><span data-ttu-id="623b6-1514">在指定的輸入子字串，來取代符合規則運算式模式所傳回的字串與字串指定最大數目<see cref="T:System.Text.RegularExpressions.MatchEvaluator" />委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1514">In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span></summary>
        <returns><span data-ttu-id="623b6-1515">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1515">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1516">如果規則運算式模式在目前執行個體中沒有符合項目，方法會傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1516">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1517"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>方法適合用來取代規則運算式相符項目，如果下列任一條件成立：</span><span class="sxs-lookup"><span data-stu-id="623b6-1517">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="623b6-1518">取代字串不能輕易地指定規則運算式取代模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1518">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="623b6-1519">取代字串會產生從相符的字串上進行一些處理。</span><span class="sxs-lookup"><span data-stu-id="623b6-1519">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="623b6-1520">取代字串的條件式處理結果。</span><span class="sxs-lookup"><span data-stu-id="623b6-1520">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="623b6-1521">此方法就相當於呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>方法並傳遞第一個`count`<xref:System.Text.RegularExpressions.Match>中所傳回的物件<xref:System.Text.RegularExpressions.MatchCollection>集合`evaluator`委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1521">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method and passing the first `count`<xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="623b6-1522">規則運算式是目前的建構函式所定義的模式<xref:System.Text.RegularExpressions.Regex>物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1522">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="623b6-1523">`evaluator`參數是您定義的自訂方法的委派，並可檢查每個符合項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1523">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="623b6-1524">自訂的方法必須具有下列簽章，以符合<xref:System.Text.RegularExpressions.MatchEvaluator>委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1524">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="623b6-1525">您的自訂方法會傳回字串，取代相符的輸入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1525">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="623b6-1526">如果取代作業的執行時間超出 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 建構函式所指定的逾時間隔，就會擲回 <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1526">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1527">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1527">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1528">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1528">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="623b6-1529">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1529">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1530"><paramref name="input" /> 或 <paramref name="evaluator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1530"><paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1531"><paramref name="startat" /> 小於零或大於 <paramref name="input" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="623b6-1531"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1532">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1532">A time-out occurred.</span></span> <span data-ttu-id="623b6-1533">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1533">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1534">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1534">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1535">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1535">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String, options As RegexOptions, matchTimeout As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="replacement" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1536">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1536">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1537">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1537">The regular expression pattern to match.</span></span></param>
        <param name="replacement"><span data-ttu-id="623b6-1538">取代字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1538">The replacement string.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-1539">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1539">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="623b6-1540">逾時間隔，若要表示此方法不應逾時則為 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1540">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="623b6-1541">在指定的輸入字串中，使用指定的取代字串來取代符合指定之規則運算式的所有字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1541">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span></span> <span data-ttu-id="623b6-1542">如果沒有找到相符項目，其他參數會指定修改比對作業的選項和逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1542">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span></span></summary>
        <returns><span data-ttu-id="623b6-1543">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1543">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1544">如果在目前的執行個體中沒有符合 <paramref name="pattern" /> 的項目，則方法傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1544">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1545">靜態`Replace`方法相當於建構<xref:System.Text.RegularExpressions.Regex>物件與指定的規則運算式模式，並呼叫方法的執行個體`Replace`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1545">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="623b6-1546">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1546">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1547">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1547">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span> <span data-ttu-id="623b6-1548">如果為 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 參數指定 `options`，搜尋符合項目會從輸入字串結尾開始向左移動，否則，搜尋會從輸入字串開頭開始向右移動。</span><span class="sxs-lookup"><span data-stu-id="623b6-1548">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="623b6-1549">`replacement`參數指定的字串來取代中的每個相符項目`input`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1549">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="623b6-1550">`replacement` 可以包含常值文字的任意組合並[替代項目](~/docs/standard/base-types/substitutions-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1550">`replacement` can consist of any combination of literal text and [substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1551">比方說，取代模式`a*${test}b`插入字串"\*"後面接著所比對的子字串`test`擷取群組，如果有的話，後面接著字串"b"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1551">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="623b6-1552">\* 字元無法辨識為中繼字元的取代模式內。</span><span class="sxs-lookup"><span data-stu-id="623b6-1552">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-1553">替代是取代模式中可以辨識的只是規則運算式語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1553">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="623b6-1554">所有其他規則運算式語言項目，包括[字元逸出](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)，允許只在規則運算式模式中，而且無法辨識取代模式中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1554">All other regular expression language elements, including [character escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="623b6-1555">`matchTimeout`參數會指定如何長模式比對方法應該嘗試逾時之前，尋找相符項目。將逾時間隔可防止依賴大量回溯不會出現停止回應時它們會處理輸入的規則運算式，其中包含相符項目附近。</span><span class="sxs-lookup"><span data-stu-id="623b6-1555">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="623b6-1556">如需詳細資訊，請參閱 <<c0> [ 規則運算式的最佳做法](~/docs/standard/base-types/best-practices.md)並[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1556">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1557">如果該時間間隔中找到相符項目，方法會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1557">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-1558">`matchTimeout` 覆寫任何方法會執行的應用程式定義域所定義的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1558">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 <span data-ttu-id="623b6-1559">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1559">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1560">下列範例會使用<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29>方法來取代本機檔案路徑的 UNC 路徑中的本機電腦和磁碟機名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-1560">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="623b6-1561">使用規則運算式<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>屬性，以包括本機電腦的名稱和<xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType>方法來包含邏輯磁碟機的名稱。</span><span class="sxs-lookup"><span data-stu-id="623b6-1561">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="623b6-1562">所有的規則運算式的字串比較會區分大小寫，而任何單一的取代作業會逾時，如果 0.5 秒內找不到相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1562">All regular expression string comparisons are case-insensitive, and any single replacement operation times out if a match cannot be found in 0.5 second.</span></span> <span data-ttu-id="623b6-1563">若要成功執行範例，您應該以您的本機電腦名稱來取代常值字串"MyMachine"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1563">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace12.cs#12)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace12.vb#12)]  
  
 <span data-ttu-id="623b6-1564">下列的運算式所定義的規則運算式模式：</span><span class="sxs-lookup"><span data-stu-id="623b6-1564">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\" + Environment.MachineName + "(?:\.\w+)*\\([" + driveNames + "])\$"`  
  
 <span data-ttu-id="623b6-1565">下表顯示規則運算式模式的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1565">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="623b6-1566">模式</span><span class="sxs-lookup"><span data-stu-id="623b6-1566">Pattern</span></span>|<span data-ttu-id="623b6-1567">描述</span><span class="sxs-lookup"><span data-stu-id="623b6-1567">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="623b6-1568">比對兩個連續的反斜線 (`\`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1568">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="623b6-1569">因為反斜線字元會解譯為逸出字元，則必須逸出每個反斜線與另一個反斜線。</span><span class="sxs-lookup"><span data-stu-id="623b6-1569">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`+ Environment.MachineName +`|<span data-ttu-id="623b6-1570">所傳回的字串相符<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="623b6-1570">Match the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="623b6-1571">比對句號 (`.`) 字元後面接著一或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1571">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="623b6-1572">此種比對可能是零或多次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1572">This match can occur zero or more times.</span></span> <span data-ttu-id="623b6-1573">不會擷取相符子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1573">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="623b6-1574">比對反斜線 (`\`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1574">Match a backslash (`\`) character.</span></span>|  
|`([" + driveNames + "])`|<span data-ttu-id="623b6-1575">比對的字元類別，其中包含的個別磁碟機代號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1575">Match the character class that consists of the individual drive letters.</span></span> <span data-ttu-id="623b6-1576">此相符項目是第一個擷取的子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1576">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="623b6-1577">比對常值貨幣符號 (`$`) 字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1577">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="623b6-1578">取代模式`$1`整個相符項目取代為第一個擷取的子運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1578">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="623b6-1579">也就是說，它會取代 UNC 機器和磁碟機名稱的磁碟機代號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1579">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1580">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1580">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1581"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1581"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1582"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1582"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="623b6-1583">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-1583">-or-</span></span> 
 <span data-ttu-id="623b6-1584"><paramref name="matchTimeout" /> 為負數、零或約大於 24 天。</span><span class="sxs-lookup"><span data-stu-id="623b6-1584"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1585">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1585">A time-out occurred.</span></span> <span data-ttu-id="623b6-1586">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1586">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1587">我們建議您設定<paramref name="matchTimeout" />參數設為適當的值，例如兩秒。</span><span class="sxs-lookup"><span data-stu-id="623b6-1587">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="623b6-1588">如果您停用逾時指定<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，規則運算式引擎可讓您稍微提升效能。</span><span class="sxs-lookup"><span data-stu-id="623b6-1588">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="623b6-1589">不過，您應該停用逾時，只有在下列情況下：</span><span class="sxs-lookup"><span data-stu-id="623b6-1589">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="623b6-1590">-當規則運算式所處理的輸入來自已知且受信任的來源，或包含靜態文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1590">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="623b6-1591">這會排除已動態由使用者輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1591">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="623b6-1592">-當規則運算式模式徹底測試以確保有效率地處理符合時，不符合，而且不久符合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1592">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="623b6-1593">-當規則運算式模式包含已知會造成大量回溯處理接近的相符項目時沒有語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1593">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1594">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1594">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1595">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1595">Regular Expression Language Elements</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/34df1152-0b22-4a1c-a76c-3c28c47b70d8"><span data-ttu-id="623b6-1596">回溯</span><span class="sxs-lookup"><span data-stu-id="623b6-1596">Backtracking</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/618e5afb-3a97-440d-831a-70e4c526a51c"><span data-ttu-id="623b6-1597">在 .NET Framework 中使用規則運算式的最佳作法</span><span class="sxs-lookup"><span data-stu-id="623b6-1597">Best Practices for Regular Expressions in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator, options As RegexOptions, matchTimeout As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1598">用來搜尋比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1598">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1599">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1599">The regular expression pattern to match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="623b6-1600">檢查每個符合項目並傳回原始符合字串或取代字串的自訂方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1600">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-1601">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1601">A bitwise combination of enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="623b6-1602">逾時間隔，若要表示此方法不應逾時則為 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1602">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="623b6-1603">在指定的輸入字串中，使用 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委派所傳回的字串，取代所有與指定之規則運算式相符的子字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1603">In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span> <span data-ttu-id="623b6-1604">如果沒有找到相符項目，其他參數會指定修改比對作業的選項和逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1604">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span></span></summary>
        <returns><span data-ttu-id="623b6-1605">與輸入字串相同的新字串 (不同之處是取代字串會取代每一個相符的字串)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1605">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="623b6-1606">如果在目前的執行個體中沒有符合 <paramref name="pattern" /> 的項目，則方法傳回未變更的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="623b6-1606">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1607"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法適合用來取代規則運算式相符項目，如果下列任一條件成立：</span><span class="sxs-lookup"><span data-stu-id="623b6-1607">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="623b6-1608">如果無法輕易地規則運算式取代模式所指定取代字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1608">If the replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="623b6-1609">如果取代字串而產生的一些處理會在相符字串上執行。</span><span class="sxs-lookup"><span data-stu-id="623b6-1609">If the replacement string results from some processing performed on the matched string.</span></span>  
  
-   <span data-ttu-id="623b6-1610">如果取代字串而產生的條件式處理。</span><span class="sxs-lookup"><span data-stu-id="623b6-1610">If the replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="623b6-1611">此方法就相當於呼叫<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType>方法並傳遞每<xref:System.Text.RegularExpressions.Match>在傳回的物件<xref:System.Text.RegularExpressions.MatchCollection>集合`evaluator`委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1611">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="623b6-1612">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1612">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1613">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1613">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 <span data-ttu-id="623b6-1614">`evaluator`參數是您定義的自訂方法的委派，並可檢查每個符合項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1614">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="623b6-1615">自訂的方法必須具有下列簽章，以符合<xref:System.Text.RegularExpressions.MatchEvaluator>委派。</span><span class="sxs-lookup"><span data-stu-id="623b6-1615">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="623b6-1616">您的自訂方法會傳回字串，取代相符的輸入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1616">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="623b6-1617">如果為 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 參數指定 `options`，搜尋符合項目會從輸入字串結尾開始向左移動，否則，搜尋會從輸入字串開頭開始向右移動。</span><span class="sxs-lookup"><span data-stu-id="623b6-1617">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="623b6-1618">`matchTimeout`參數會指定如何長模式比對方法應該嘗試逾時之前，尋找相符項目。將逾時間隔可防止規則運算式依賴大量回溯不會出現以"停止回應時它們會處理輸入，其中包含相符項目附近。</span><span class="sxs-lookup"><span data-stu-id="623b6-1618">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to "stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="623b6-1619">如需詳細資訊，請參閱 <<c0> [ 規則運算式的最佳做法](~/docs/standard/base-types/best-practices.md)並[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1619">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1620">如果該時間間隔中找到相符項目，方法會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1620">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-1621">`matchTimeout` 覆寫任何方法會執行的應用程式定義域所定義的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1621">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 <span data-ttu-id="623b6-1622">因為此方法會傳回`input`保持不變，如果沒有相符項目，您可以使用<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法，以判斷方法是否有任何取代項目與輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1622">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="623b6-1623">下列範例使用規則運算式從字串中，擷取個別文字，然後使用<xref:System.Text.RegularExpressions.MatchEvaluator>委派来呼叫一個名為`WordScramble`，將金鑰加密的文字中個別的字母。</span><span class="sxs-lookup"><span data-stu-id="623b6-1623">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="623b6-1624">若要這樣做，`WordScramble`方法會建立陣列，其中包含在比對的字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1624">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="623b6-1625">它也會使用隨機浮點數建立平行的陣列，它會填入。</span><span class="sxs-lookup"><span data-stu-id="623b6-1625">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="623b6-1626">藉由呼叫排序陣列<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType>方法，並已排序的陣列做為引數提供<xref:System.String>類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1626">The arrays are sorted by calling the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="623b6-1627">然後傳回此新建立的字串`WordScramble`方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1627">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="623b6-1628">規則運算式模式`\w+`符合一或多個文字字元，規則運算式引擎會繼續將字元加入至相符項目，直到遇到非文字字元，例如空格字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1628">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span> <span data-ttu-id="623b6-1629">在呼叫<xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29>方法包含<xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType>選項，讓規則運算式模式中的註解`\w+  # Matches all the characters in a word.`會忽略規則運算式引擎。</span><span class="sxs-lookup"><span data-stu-id="623b6-1629">The call to the <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29> method includes the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option so that the comment in the regular expression pattern `\w+  # Matches all the characters in a word.` is ignored by the regular expression engine.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace13.cs#13)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace13.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1630">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1630">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1631"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1631"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1632"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1632"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="623b6-1633">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-1633">-or-</span></span> 
 <span data-ttu-id="623b6-1634"><paramref name="matchTimeout" /> 為負數、零或約大於 24 天。</span><span class="sxs-lookup"><span data-stu-id="623b6-1634"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1635">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1635">A time-out occurred.</span></span> <span data-ttu-id="623b6-1636">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1636">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1637">我們建議您設定<paramref name="matchTimeout" />參數設為適當的值，例如兩秒。</span><span class="sxs-lookup"><span data-stu-id="623b6-1637">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="623b6-1638">如果您停用逾時指定<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，規則運算式引擎可讓您稍微提升效能。</span><span class="sxs-lookup"><span data-stu-id="623b6-1638">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="623b6-1639">不過，您應該停用逾時，只有在下列情況下：</span><span class="sxs-lookup"><span data-stu-id="623b6-1639">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="623b6-1640">-當規則運算式所處理的輸入來自已知且受信任的來源，或包含靜態文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1640">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="623b6-1641">這會排除已動態由使用者輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1641">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="623b6-1642">-當規則運算式模式徹底測試以確保有效率地處理符合時，不符合，而且不久符合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1642">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="623b6-1643">-當規則運算式模式包含已知會造成大量回溯處理接近的相符項目時沒有語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1643">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/d1f52431-1c7d-4dc6-8792-6b988256892e"><span data-ttu-id="623b6-1644">替代</span><span class="sxs-lookup"><span data-stu-id="623b6-1644">Substitutions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1645">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1645">Regular Expression Language Elements</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/34df1152-0b22-4a1c-a76c-3c28c47b70d8"><span data-ttu-id="623b6-1646">回溯</span><span class="sxs-lookup"><span data-stu-id="623b6-1646">Backtracking</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/618e5afb-3a97-440d-831a-70e4c526a51c"><span data-ttu-id="623b6-1647">在 .NET Framework 中使用規則運算式的最佳作法</span><span class="sxs-lookup"><span data-stu-id="623b6-1647">Best Practices for Regular Expressions in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public bool RightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeft { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : bool" Usage="System.Text.RegularExpressions.Regex.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-1648">取得值，指出規則運算式是否由右至左搜尋。</span><span class="sxs-lookup"><span data-stu-id="623b6-1648">Gets a value that indicates whether the regular expression searches from right to left.</span></span></summary>
        <value><span data-ttu-id="623b6-1649"><see langword="true" /> 如果規則運算式搜尋由右至左;，否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1649"><see langword="true" /> if the regular expression searches from right to left; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1650"><xref:System.Text.RegularExpressions.Regex.RightToLeft%2A> 已`true`如果<xref:System.Text.RegularExpressions.Regex>執行個體經由<xref:System.Text.RegularExpressions.RegexOptions.RightToLeft>選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1650"><xref:System.Text.RegularExpressions.Regex.RightToLeft%2A> is `true` if the <xref:System.Text.RegularExpressions.Regex> instance was created with the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="roptions">
      <MemberSignature Language="C#" Value="protected internal System.Text.RegularExpressions.RegexOptions roptions;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly valuetype System.Text.RegularExpressions.RegexOptions roptions" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.roptions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend roptions As RegexOptions " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Text::RegularExpressions::RegexOptions roptions;" />
      <MemberSignature Language="F#" Value="val mutable roptions : System.Text.RegularExpressions.RegexOptions" Usage="System.Text.RegularExpressions.Regex.roptions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="623b6-1651">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-1651">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Split">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="623b6-1652">在規則運算式比對所定義的位置，將輸入字串分割成子字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1652">Splits an input string into an array of substrings at the positions defined by a regular expression match.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1653">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1653">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Split : string -&gt; string[]" Usage="regex.Split input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1654">要分隔的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1654">The string to split.</span></span></param>
        <summary><span data-ttu-id="623b6-1655">將輸入的字串分割成子字串中指定之規則運算式模式所定義的位置陣列<see cref="T:System.Text.RegularExpressions.Regex" />建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1655">Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span></summary>
        <returns><span data-ttu-id="623b6-1656">字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1656">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1657"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法很類似<xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType>方法，不同之處在於<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>分割字串的分隔符號，而不是一組字元的規則運算式所決定。</span><span class="sxs-lookup"><span data-stu-id="623b6-1657">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="623b6-1658">將字串分割為盡可能多次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1658">The string is split as many times as possible.</span></span> <span data-ttu-id="623b6-1659">如果不找到任何分隔符號，則傳回值就會包含其值是原始的輸入的字串的一個項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1659">If no delimiter is found, the return value contains one element whose value is the original input string.</span></span>  
  
 <span data-ttu-id="623b6-1660">如果多個相符項目彼此相鄰，空字串會插入陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1660">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="623b6-1661">例如，分割上單一連字號的字串會導致傳回的陣列，其中兩個相鄰的連字號找不到，如下列程式碼所示的位置中包含空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1661">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found, as the following code shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split1.vb#1)]  
  
 <span data-ttu-id="623b6-1662">如果找到符合的開頭或輸入字串的結尾，空字串是陣列的包含開頭或結尾傳回。</span><span class="sxs-lookup"><span data-stu-id="623b6-1662">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="623b6-1663">下列範例會使用規則運算式模式`\d+`分割輸入的字串的數字的字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1663">The following example uses the regular expression pattern `\d+` to split an input string on numeric characters.</span></span> <span data-ttu-id="623b6-1664">因為字串開頭和結尾相符的數字的字元數，傳回之陣列的第一個和最後一個項目的值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-1664">Because the string begins and ends with matching numeric characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split21.cs#21)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split21.vb#21)]  
  
 <span data-ttu-id="623b6-1665">如果擷取括號中使用<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>運算式中，任何擷取的文字是否包含在產生的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1665">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="623b6-1666">比方說，如果您將分割的字串"梅紅-西洋梨 」 上連字號放擷取括號內，傳回的陣列會包含字串項目，其中包含連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1666">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split2.vb#2)]  
  
 <span data-ttu-id="623b6-1667">不過，當規則運算式模式包含多組擷取括號時，此方法的行為取決於.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-1667">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="623b6-1668">在.NET Framework 1.0 和 1.1 中，擷取括號，第一個集合中找不到相符項目時擷取的文字，其他擷取括號是不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1668">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="623b6-1669">從.NET Framework 2.0 開始，所有擷取的文字也會加入至傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1669">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="623b6-1670">比方說，下列程式碼會使用兩組擷取括號來擷取日期，包括日期分隔符號，從日期字串的項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1670">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="623b6-1671">第一組擷取括號會擷取連字號，和第二個集合擷取正斜線。</span><span class="sxs-lookup"><span data-stu-id="623b6-1671">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="623b6-1672">如果編譯範例程式碼，並執行.NET Framework 1.0 或 1.1，它會排除的斜線字元;如果進行編譯和.NET Framework 2.0 或更新版本下執行，它會包含它們。</span><span class="sxs-lookup"><span data-stu-id="623b6-1672">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split3.vb#3)]  
  
 <span data-ttu-id="623b6-1673">如果規則運算式可以符合空字串，<xref:System.Text.RegularExpressions.Regex.Split%28System.String%29>因為可以在每個位置上找到的空字串分隔符號，將分割字串成單一字元字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1673">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%28System.String%29> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="623b6-1674">例如：</span><span class="sxs-lookup"><span data-stu-id="623b6-1674">For example:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split11.cs#11)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split11.vb#11)]  
  
 <span data-ttu-id="623b6-1675">請注意，傳回的陣列也會包含空字串的開頭和結尾的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1675">Note that the returned array also includes an empty string at the beginning and end of the array.</span></span>  
  
 <span data-ttu-id="623b6-1676"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>擲回例外狀況是 split 作業的執行時間超過所指定的逾時間隔<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1676">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1677">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1677">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1678">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1678">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1679"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1679"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1680">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1680">A time-out occurred.</span></span> <span data-ttu-id="623b6-1681">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1681">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1682">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1682">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String, count As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, int count);" />
      <MemberSignature Language="F#" Value="member this.Split : string * int -&gt; string[]" Usage="regex.Split (input, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1683">要分割的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1683">The string to be split.</span></span></param>
        <param name="count"><span data-ttu-id="623b6-1684">分隔作業可以發生的最多次數。</span><span class="sxs-lookup"><span data-stu-id="623b6-1684">The maximum number of times the split can occur.</span></span></param>
        <summary><span data-ttu-id="623b6-1685">將輸入字串分隔時間指定最大數目的子字串，指定在規則運算式所定義的位置陣列<see cref="T:System.Text.RegularExpressions.Regex" />建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1685">Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span></summary>
        <returns><span data-ttu-id="623b6-1686">字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1686">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1687"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法很類似<xref:System.String.Split%2A?displayProperty=nameWithType>方法，不同之處在於<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>分割字串的分隔符號，而不是一組字元的規則運算式所決定。</span><span class="sxs-lookup"><span data-stu-id="623b6-1687">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="623b6-1688">`count`參數會指定在其中的子字串的最大數目`input`可以分割字串; 的最後一個字串包含 unsplit 的其餘部分的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1688">The `count` parameter specifies the maximum number of substrings into which the `input` string can be split; the last string contains the unsplit remainder of the string.</span></span> <span data-ttu-id="623b6-1689">A`count`為零的值會提供分割作業當作盡可能多次的預設行為。</span><span class="sxs-lookup"><span data-stu-id="623b6-1689">A `count` value of zero provides the default behavior of splitting as many times as possible.</span></span>  
  
 <span data-ttu-id="623b6-1690">如果多個相符項目彼此相鄰，或是開頭或結尾找到符合`input`，而且找到相符項目數目至少兩個小於`count`，空字串插入到陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1690">If multiple matches are adjacent to one another or if a match is found at the beginning or end of `input`, and the number of matches found is at least two less than `count`, an empty string is inserted into the array.</span></span> <span data-ttu-id="623b6-1691">也就是造成相鄰的比對或比對的開頭或結尾的輸入字串的空字串會計算在決定是否數目比對的子字串等於`count`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1691">That is, empty strings that result from adjacent matches or from matches at the beginning or end of the input string are counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="623b6-1692">在下列範例中，規則運算式`/d+`用來分割成三個的子字串的最多包含一個或多個十進位數字的輸入的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1692">In the following example, the regular expression `/d+` is used to split an input string that includes one or more decimal digits into a maximum of three substrings.</span></span> <span data-ttu-id="623b6-1693">因為輸入字串的開頭比對規則運算式模式，第一個陣列元素包含<xref:System.String.Empty?displayProperty=nameWithType>、 第二個包含字母字元在輸入字串中，第一個集合，而第三個包含字串的其餘部分會遵循第三個相符項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1693">Because the beginning of the input string matches the regular expression pattern, the first array element contains <xref:System.String.Empty?displayProperty=nameWithType>, the second contains the first set of alphabetic characters in the input string, and the third contains the remainder of the string that follows the third match.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split25.cs#25)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split25.vb#25)]  
  
 <span data-ttu-id="623b6-1694">如果規則運算式中擷取括號，就會分割字串的陣列中包含任何擷取的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1694">If capturing parentheses are used in a regular expression, any captured text is included in the array of split strings.</span></span> <span data-ttu-id="623b6-1695">不過，包含擷取的文字的任何陣列元素不會計入判斷是否已到達的相符項目數`count`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1695">However, any array elements that contain captured text are not counted in determining whether the number of matches has reached `count`.</span></span> <span data-ttu-id="623b6-1696">例如，顯示分割成最多四個七個元素陣列，如以下程式碼中的子字串結果的"apple-apricot-梅紅-西洋梨-banana"字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1696">For example, splitting the string "apple-apricot-plum-pear-banana" into a maximum of four substrings results in a seven-element array, as the following code shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split4.cs#4)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split4.vb#4)]  
  
 <span data-ttu-id="623b6-1697">不過，當規則運算式模式包含多組擷取括號時，此方法的行為取決於.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-1697">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="623b6-1698">在.NET Framework 1.0 和 1.1 中，只擷取的文字從第一個集合擷取括號包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1698">In the .NET Framework 1.0 and 1.1, only captured text from the first set of capturing parentheses is included in the returned array.</span></span> <span data-ttu-id="623b6-1699">從.NET Framework 2.0 開始，所有擷取的文字會加入至傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1699">Starting with the .NET Framework 2.0, all captured text is added to the returned array.</span></span> <span data-ttu-id="623b6-1700">不過，傳回陣列中包含擷取的文字的項目不會計算在決定是否數目比對的子字串等於`count`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1700">However, elements in the returned array that contain captured text are not counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="623b6-1701">比方說，下列程式碼中，規則運算式會使用兩組擷取括號從日期字串中擷取日期的項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1701">For example, in the following code, a regular expression uses two sets of capturing parentheses to extract the elements of a date from a date string.</span></span> <span data-ttu-id="623b6-1702">第一組擷取括號會擷取連字號，和第二個集合擷取正斜線。</span><span class="sxs-lookup"><span data-stu-id="623b6-1702">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="623b6-1703">若要呼叫<xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.Int32%29>方法則指定最多兩個項目中傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1703">The call to the <xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.Int32%29> method then specifies a maximum of two elements in the returned array.</span></span> <span data-ttu-id="623b6-1704">如果編譯範例程式碼，並執行.NET Framework 1.0 或 1.1，方法會傳回兩個項目的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1704">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, the method returns a two-element string array.</span></span> <span data-ttu-id="623b6-1705">如果進行編譯和.NET Framework 2.0 或更新版本下執行，則方法會傳回三個項目的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1705">If it is compiled and run under the .NET Framework 2.0 or later versions, the method returns a three-element string array.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split5.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split5.vb#5)]  
  
 <span data-ttu-id="623b6-1706">如果規則運算式可以符合空字串，<xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.Int32%29>因為可以在每個位置上找到的空字串分隔符號，將分割字串成單一字元字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1706">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.Int32%29> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="623b6-1707">下列範例中，將字串"字元 」 分割成因為有許多項目是在輸入字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1707">The following example splits the string "characters" into as many elements as there are in the input string.</span></span> <span data-ttu-id="623b6-1708">因為 null 字串比對輸入字串的開頭，會傳回陣列的開頭插入 null 字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1708">Because the null string matches the beginning of the input string, a null string is inserted at the beginning of the returned array.</span></span> <span data-ttu-id="623b6-1709">這會導致要在輸入字串結尾處的兩個字元所組成的第十個項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1709">This causes the tenth element to consist of the two characters at the end of the input string.</span></span>  
  
 [!code-vb[System.Text.RegularExpressions.Regex.Split#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split12.vb#12)]  
  
 <span data-ttu-id="623b6-1710"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>擲回例外狀況是 split 作業的執行時間超過所指定的逾時間隔<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1710">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1711">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1711">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1712">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1712">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1713"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1713"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1714">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1714">A time-out occurred.</span></span> <span data-ttu-id="623b6-1715">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1715">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1716">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1716">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Split : string * string -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1717">要分隔的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1717">The string to split.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1718">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1718">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="623b6-1719">在規則運算式模式所定義的位置，將輸入字串分割成子字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1719">Splits an input string into an array of substrings at the positions defined by a regular expression pattern.</span></span></summary>
        <returns><span data-ttu-id="623b6-1720">字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1720">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1721"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法很類似<xref:System.String.Split%2A?displayProperty=nameWithType>方法，不同之處在於<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>分割字串的分隔符號，而不是一組字元的規則運算式所決定。</span><span class="sxs-lookup"><span data-stu-id="623b6-1721">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="623b6-1722">`input`字串分割為盡可能多次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1722">The `input` string is split as many times as possible.</span></span> <span data-ttu-id="623b6-1723">如果`pattern`中找不到`input`字串，傳回值會包含一個項目，其值是原始`input`字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1723">If `pattern` is not found in the `input` string, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="623b6-1724">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1724">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1725">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1725">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="623b6-1726">編譯的規則運算式對靜態呼叫中使用<xref:System.Text.RegularExpressions.Regex.Split%2A>方法會自動快取。</span><span class="sxs-lookup"><span data-stu-id="623b6-1726">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="623b6-1727">若要自行管理的已編譯的規則運算式的存留期，使用 執行個體<xref:System.Text.RegularExpressions.Regex.Split%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1727">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="623b6-1728">如果多個相符項目彼此相鄰，空字串會插入陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1728">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="623b6-1729">例如，分割上單一連字號的字串會導致傳回的陣列，其中兩個相鄰的連字號找不到，如下列程式碼所示的位置中包含空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1729">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found, as the following code shows.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split8.cs#8)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split8.vb#8)]  
  
 <span data-ttu-id="623b6-1730">如果找到符合的開頭或輸入字串的結尾，空字串是陣列的包含開頭或結尾傳回。</span><span class="sxs-lookup"><span data-stu-id="623b6-1730">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="623b6-1731">下列範例會使用規則運算式模式`\d+`分割輸入的字串的數字的字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1731">The following example uses the regular expression pattern `\d+` to split an input string on numeric characters.</span></span> <span data-ttu-id="623b6-1732">因為字串開頭和結尾相符的數字的字元數，傳回之陣列的第一個和最後一個項目的值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-1732">Because the string begins and ends with matching numeric characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split22.cs#22)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split22.vb#22)]  
  
 <span data-ttu-id="623b6-1733">如果擷取括號中使用<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>運算式中，任何擷取的文字是否包含在產生的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1733">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="623b6-1734">比方說，如果您將分割的字串"梅紅-西洋梨 」 上連字號放擷取括號內，傳回的陣列會包含字串項目，其中包含連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1734">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs#9)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb#9)]  
  
 <span data-ttu-id="623b6-1735">不過，當規則運算式模式包含多組擷取括號時，此方法的行為取決於.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-1735">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="623b6-1736">在.NET Framework 1.0 和 1.1 中，擷取括號，第一個集合中找不到相符項目時擷取的文字，其他擷取括號是不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1736">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="623b6-1737">從.NET Framework 2.0 開始，所有擷取的文字也會加入至傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1737">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="623b6-1738">比方說，下列程式碼會使用兩組擷取括號來擷取日期，包括日期分隔符號，從日期字串的項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1738">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="623b6-1739">第一組擷取括號會擷取連字號，和第二個集合擷取正斜線。</span><span class="sxs-lookup"><span data-stu-id="623b6-1739">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="623b6-1740">如果編譯範例程式碼，並執行.NET Framework 1.0 或 1.1，它會排除的斜線字元;如果進行編譯和.NET Framework 2.0 或更新版本下執行，它會包含它們。</span><span class="sxs-lookup"><span data-stu-id="623b6-1740">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb#10)]  
  
 <span data-ttu-id="623b6-1741">如果規則運算式可以符合空字串，<xref:System.Text.RegularExpressions.Regex.Split%2A>因為可以在每個位置上找到的空字串分隔符號，將分割字串成單一字元字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1741">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="623b6-1742">例如: </span><span class="sxs-lookup"><span data-stu-id="623b6-1742">For example:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split13.cs#13)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split13.vb#13)]  
  
 <span data-ttu-id="623b6-1743">請注意，傳回的陣列也會包含空字串的開頭和結尾的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1743">Note that the returned array also includes an empty string at the beginning and end of the array.</span></span>  
  
 <span data-ttu-id="623b6-1744"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果 split 作業的執行時間超過逾時間隔的方法呼叫的應用程式定義域指定，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1744">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-1745">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1745">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1746">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1746">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1747"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1747"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1748">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1748">A time-out occurred.</span></span> <span data-ttu-id="623b6-1749">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1749">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1750">此方法等於呼叫該方法的應用程式定義域的預設逾時值的間隔之後逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1750">This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-1751">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1751">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-1752">建議的靜態方法，來分割文字模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1752">The recommended static method for splitting text on a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1753">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1753">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String, count As Integer, startat As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Split : string * int * int -&gt; string[]" Usage="regex.Split (input, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1754">要分割的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1754">The string to be split.</span></span></param>
        <param name="count"><span data-ttu-id="623b6-1755">分隔作業可以發生的最多次數。</span><span class="sxs-lookup"><span data-stu-id="623b6-1755">The maximum number of times the split can occur.</span></span></param>
        <param name="startat"><span data-ttu-id="623b6-1756">在輸入字串中要開始搜尋的字元位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-1756">The character position in the input string where the search will begin.</span></span></param>
        <summary><span data-ttu-id="623b6-1757">將輸入字串分隔時間指定最大數目的子字串，指定在規則運算式所定義的位置陣列<see cref="T:System.Text.RegularExpressions.Regex" />建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1757">Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span> <span data-ttu-id="623b6-1758">規則運算式模式從輸入字串中指定的字元位置開始搜尋。</span><span class="sxs-lookup"><span data-stu-id="623b6-1758">The search for the regular expression pattern starts at a specified character position in the input string.</span></span></summary>
        <returns><span data-ttu-id="623b6-1759">字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1759">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1760"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法很類似<xref:System.String.Split%2A?displayProperty=nameWithType>方法，不同之處在於<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>分割字串的分隔符號，而不是一組字元的規則運算式所決定。</span><span class="sxs-lookup"><span data-stu-id="623b6-1760">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="623b6-1761">`count`參數會指定在其中的子字串的最大數目`input`字串分割; 的最後一個字串包含 unsplit 的其餘部分的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1761">The `count` parameter specifies the maximum number of substrings into which the `input` string is split; the last string contains the unsplit remainder of the string.</span></span> <span data-ttu-id="623b6-1762">A`count`為零的值會提供分割作業當作盡可能多次的預設行為。</span><span class="sxs-lookup"><span data-stu-id="623b6-1762">A `count` value of zero provides the default behavior of splitting as many times as possible.</span></span> <span data-ttu-id="623b6-1763">`startat`參數定義的第一個分隔符號搜尋開始處的點 （這可以用來略過前置空白字元）。</span><span class="sxs-lookup"><span data-stu-id="623b6-1763">The `startat` parameter defines the point at which the search for the first delimiter begins (this can be used for skipping leading white space).</span></span>  
  
 <span data-ttu-id="623b6-1764">如果沒有符合的項目從`count`+ 1 位置字串中，方法會傳回一個元素的陣列，其中包含`input`字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1764">If no matches are found from the `count`+1 position in the string, the method returns a one-element array that contains the `input` string.</span></span> <span data-ttu-id="623b6-1765">如果找不到一或多個相符項目，傳回的陣列的第一個元素會包含最多前比對一個字元的第一個字元字串的第一個部分。</span><span class="sxs-lookup"><span data-stu-id="623b6-1765">If one or more matches are found, the first element of the returned array contains the first portion of the string from the first character up to one character before the match.</span></span>  
  
 <span data-ttu-id="623b6-1766">如果多個相符項目是彼此相鄰，而且找到相符項目數目是至少兩個小於`count`，空字串插入到陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1766">If multiple matches are adjacent to one another and the number of matches found is at least two less than `count`, an empty string is inserted into the array.</span></span> <span data-ttu-id="623b6-1767">同樣地，如果找到符合的`startat`字串中的第一個字元，則傳回的陣列的第一個項目為空字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1767">Similarly, if a match is found at `startat`, which is the first character in the string, the first element of the returned array is an empty string.</span></span> <span data-ttu-id="623b6-1768">也就是空的字串所產生的相鄰的相符項目會計算在決定是否數目比對的子字串等於`count`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1768">That is, empty strings that result from adjacent matches are counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="623b6-1769">在下列範例中，規則運算式`\d+`用來尋找數字字元的第一個子字串的開始位置在字串中，然後將字串分割最多三次起始該位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-1769">In the following example, the regular expression `\d+` is used to find the starting position of the first substring of numeric characters in a string, and then to split the string a maximum of three times starting at that position.</span></span> <span data-ttu-id="623b6-1770">由於規則運算式模式比對輸入字串的開頭，傳回的字串陣列是空字串、 五個字元的字母字串和組成的字串，其餘部分</span><span class="sxs-lookup"><span data-stu-id="623b6-1770">Because the regular expression pattern matches the beginning of the input string, the returned string array consists of an empty string, a five-character alphabetic string, and the remainder of the string,</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split26.cs#26)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split26.vb#26)]  
  
 <span data-ttu-id="623b6-1771">如果規則運算式中擷取括號，就會分割字串的陣列中包含任何擷取的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1771">If capturing parentheses are used in a regular expression, any captured text is included in the array of split strings.</span></span> <span data-ttu-id="623b6-1772">不過，包含擷取的文字的任何陣列元素不會計入判斷是否已到達的相符項目數`count`。</span><span class="sxs-lookup"><span data-stu-id="623b6-1772">However, any array elements that contain captured text are not counted in determining whether the number of matches has reached `count`.</span></span> <span data-ttu-id="623b6-1773">例如，分割字串 '"apple-apricot-plum-pear-pomegranate-pineapple-peach 」 成四個最多的子字串開頭 15 字元字串會產生一個七個元素的陣列，如下列程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="623b6-1773">For example, splitting the string '"apple-apricot-plum-pear-pomegranate-pineapple-peach" into a maximum of four substrings beginning at character 15 in the string results in a seven-element array, as the following code shows.</span></span>  
  
 [!code-vb[System.Text.RegularExpressions.Regex.Split#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split6.vb#6)]  
  
 <span data-ttu-id="623b6-1774">不過，當規則運算式模式包含多組擷取括號時，此方法的行為取決於.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-1774">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="623b6-1775">在.NET Framework 1.0 和 1.1 中，擷取括號，第一個集合中找不到相符項目時擷取的文字，其他擷取括號是不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1775">In .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="623b6-1776">從.NET Framework 2.0 開始，所有擷取的文字也會加入至傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1776">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="623b6-1777">比方說，下列程式碼會使用兩組擷取括號來擷取個別文字字串中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1777">For example, the following code uses two sets of capturing parentheses to extract the individual words in a string.</span></span> <span data-ttu-id="623b6-1778">第一組擷取括號會擷取連字號，和第二個集合擷取的垂直列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1778">The first set of capturing parentheses captures the hyphen, and the second set captures the vertical bar.</span></span> <span data-ttu-id="623b6-1779">如果編譯範例程式碼，並執行.NET Framework 1.0 或 1.1，它會排除垂直列的字元，如果進行編譯和.NET Framework 2.0 或更新版本下執行，它會包含它們。</span><span class="sxs-lookup"><span data-stu-id="623b6-1779">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the vertical bar characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split7.cs#7)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split7.vb#7)]  
  
 <span data-ttu-id="623b6-1780">如果規則運算式可以符合空字串，<xref:System.Text.RegularExpressions.Regex.Split%2A>因為可以在每個位置上找到的空字串分隔符號，將分割字串成單一字元字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1780">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="623b6-1781">下列範例會分割成多個項目字串 「 字元 」 因為輸入的字串包含，開頭為字元"a"。</span><span class="sxs-lookup"><span data-stu-id="623b6-1781">The following example splits the string "characters" into as many elements as the input string contains, starting with the character "a".</span></span> <span data-ttu-id="623b6-1782">因為 null 字串比對輸入字串的結尾，會傳回陣列結尾處插入 null 字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1782">Because the null string matches the end of the input string, a null string is inserted at the end of the returned array.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split14.cs#14)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split14.vb#14)]  
  
 <span data-ttu-id="623b6-1783"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>擲回例外狀況是 split 作業的執行時間超過所指定的逾時間隔<xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1783">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="623b6-1784">呼叫建構函式時若未設定逾時間隔，則如果作業超過為建立 <xref:System.Text.RegularExpressions.Regex> 物件的應用程式定義域設定的任何逾時值，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1784">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="623b6-1785">如果在 <xref:System.Text.RegularExpressions.Regex> 建構函式呼叫或應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況</span><span class="sxs-lookup"><span data-stu-id="623b6-1785">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1786"><paramref name="input" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1786"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1787"><paramref name="startat" /> 小於零或大於 <paramref name="input" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="623b6-1787"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1788">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1788">A time-out occurred.</span></span> <span data-ttu-id="623b6-1789">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1789">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1790">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1790">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String, options As RegexOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Split : string * string * System.Text.RegularExpressions.RegexOptions -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1791">要分隔的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1791">The string to split.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1792">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1792">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-1793">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1793">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="623b6-1794">在指定的規則運算式模式所定義的位置，將輸入字串分割成子字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1794">Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern.</span></span> <span data-ttu-id="623b6-1795">指定的選項會修改符合的作業。</span><span class="sxs-lookup"><span data-stu-id="623b6-1795">Specified options modify the matching operation.</span></span></summary>
        <returns><span data-ttu-id="623b6-1796">字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1796">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1797"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法很類似<xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType>方法，不同之處在於<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>分割字串的分隔符號，而不是一組字元的規則運算式所決定。</span><span class="sxs-lookup"><span data-stu-id="623b6-1797">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="623b6-1798">將字串分割為盡可能多次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1798">The string is split as many times as possible.</span></span> <span data-ttu-id="623b6-1799">如果不找到任何分隔符號，則傳回值會包含一個項目，其值是原始`input`字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1799">If no delimiter is found, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="623b6-1800">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1800">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1801">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1801">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="623b6-1802">編譯的規則運算式對靜態呼叫中使用<xref:System.Text.RegularExpressions.Regex.Split%2A>方法會自動快取。</span><span class="sxs-lookup"><span data-stu-id="623b6-1802">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="623b6-1803">若要自行管理的已編譯的規則運算式的存留期，使用 執行個體<xref:System.Text.RegularExpressions.Regex.Split%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1803">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="623b6-1804">如果多個相符項目彼此相鄰，空字串會插入陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1804">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="623b6-1805">例如，分割上單一連字號的字串會導致傳回的陣列，包含空字串中找到兩個相鄰的連字號的位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-1805">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found.</span></span>  
  
 <span data-ttu-id="623b6-1806">如果找到符合的開頭或輸入字串的結尾，空字串是陣列的包含開頭或結尾傳回。</span><span class="sxs-lookup"><span data-stu-id="623b6-1806">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="623b6-1807">下列範例會使用規則運算式模式`[a-z]+`分割輸入的字串的任何大寫或小寫的字母字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1807">The following example uses the regular expression pattern `[a-z]+` to split an input string on any uppercase or lowercase alphabetic character.</span></span> <span data-ttu-id="623b6-1808">因為字串開頭和結尾相符的是英文字母的字元數，傳回之陣列的第一個和最後一個項目的值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-1808">Because the string begins and ends with matching alphabetic characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split24.cs#24)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split24.vb#24)]  
  
 <span data-ttu-id="623b6-1809">如果擷取括號中使用<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>運算式中，任何擷取的文字是否包含在產生的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1809">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="623b6-1810">比方說，如果您將分割的字串"梅紅-西洋梨 」 上連字號放擷取括號內，傳回的陣列會包含字串項目，其中包含連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1810">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs#9)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb#9)]  
  
 <span data-ttu-id="623b6-1811">不過，當規則運算式模式包含多組擷取括號時，此方法的行為取決於.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-1811">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="623b6-1812">在.NET Framework 1.0 和 1.1 中，擷取括號，第一個集合中找不到相符項目時擷取的文字，其他擷取括號是不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1812">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="623b6-1813">從.NET Framework 2.0 開始，所有擷取的文字也會加入至傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1813">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="623b6-1814">比方說，下列程式碼會使用兩組擷取括號來擷取日期，包括日期分隔符號，從日期字串的項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1814">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="623b6-1815">第一組擷取括號會擷取連字號，和第二個集合擷取正斜線。</span><span class="sxs-lookup"><span data-stu-id="623b6-1815">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="623b6-1816">如果編譯範例程式碼，並執行.NET Framework 1.0 或 1.1，它會排除的斜線字元;如果進行編譯和.NET Framework 2.0 或更新版本下執行，它會包含它們。</span><span class="sxs-lookup"><span data-stu-id="623b6-1816">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb#10)]  
  
 <span data-ttu-id="623b6-1817">如果規則運算式可以符合空字串，<xref:System.Text.RegularExpressions.Regex.Split%2A>因為可以在每個位置上找到的空字串分隔符號，將分割字串成單一字元字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1817">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span>  
  
 <span data-ttu-id="623b6-1818"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果 split 作業的執行時間超過逾時間隔的方法呼叫的應用程式定義域指定，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1818">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-1819">如果在應用程式定義域的屬性中未定義任何逾時，或逾時值是 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>，則不擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1819">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1820">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1820">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1821"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1821"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1822"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1822"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1823">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1823">A time-out occurred.</span></span> <span data-ttu-id="623b6-1824">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1824">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1825">此方法等於呼叫該方法的應用程式定義域的預設逾時值的間隔之後逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1825">This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called.</span></span> <span data-ttu-id="623b6-1826">如果未針對應用程式定義域定義逾時值，則使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，使方法不會逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1826">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="623b6-1827">建議的靜態方法，來分割文字模式比對是<see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />，可讓您設定的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1827">The recommended static method for splitting text on a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1828">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1828">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Split : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="623b6-1829">要分隔的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1829">The string to split.</span></span></param>
        <param name="pattern"><span data-ttu-id="623b6-1830">要比對的規則運算式模式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1830">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="623b6-1831">列舉值的位元組合，提供用於比對的選項。</span><span class="sxs-lookup"><span data-stu-id="623b6-1831">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="623b6-1832">逾時間隔，若要表示此方法不應逾時則為 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1832">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="623b6-1833">在指定的規則運算式模式所定義的位置，將輸入字串分割成子字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1833">Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern.</span></span> <span data-ttu-id="623b6-1834">如果沒有找到相符項目，其他參數會指定修改比對作業的選項和逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1834">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span></span></summary>
        <returns><span data-ttu-id="623b6-1835">字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1835">A string array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1836"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法很類似<xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType>方法，不同之處在於<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>分割字串的分隔符號，而不是一組字元的規則運算式所決定。</span><span class="sxs-lookup"><span data-stu-id="623b6-1836">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="623b6-1837">將字串分割為盡可能多次。</span><span class="sxs-lookup"><span data-stu-id="623b6-1837">The string is split as many times as possible.</span></span> <span data-ttu-id="623b6-1838">如果不找到任何分隔符號，則傳回值會包含一個項目，其值是原始`input`字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1838">If no delimiter is found, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="623b6-1839">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1839">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1840">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1840">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="623b6-1841">編譯的規則運算式對靜態呼叫中使用<xref:System.Text.RegularExpressions.Regex.Split%2A>方法會自動快取。</span><span class="sxs-lookup"><span data-stu-id="623b6-1841">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="623b6-1842">若要自行管理的已編譯的規則運算式的存留期，使用 執行個體<xref:System.Text.RegularExpressions.Regex.Split%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1842">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="623b6-1843">如果多個相符項目彼此相鄰，空字串會插入陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1843">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="623b6-1844">例如，分割上單一連字號的字串會導致傳回的陣列，包含空字串中找到兩個相鄰的連字號的位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-1844">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found.</span></span>  
  
 <span data-ttu-id="623b6-1845">如果找到符合的開頭或輸入字串的結尾，空字串是陣列的包含開頭或結尾傳回。</span><span class="sxs-lookup"><span data-stu-id="623b6-1845">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="623b6-1846">下列範例會使用規則運算式模式`[a-z]+`分割輸入的字串的任何大寫或小寫的字母字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1846">The following example uses the regular expression pattern `[a-z]+` to split an input string on any uppercase or lowercase alphabetic character.</span></span> <span data-ttu-id="623b6-1847">因為字串開頭和結尾相符的是英文字母的字元數，傳回之陣列的第一個和最後一個項目的值是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="623b6-1847">Because the string begins and ends with matching alphabetic characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split23.cs#23)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split23.vb#23)]  
  
 <span data-ttu-id="623b6-1848">如果擷取括號中使用<xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>運算式中，任何擷取的文字是否包含在產生的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1848">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="623b6-1849">比方說，如果您將分割的字串"梅紅-西洋梨 」 上連字號放擷取括號內，傳回的陣列會包含字串項目，其中包含連字號。</span><span class="sxs-lookup"><span data-stu-id="623b6-1849">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs#9)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb#9)]  
  
 <span data-ttu-id="623b6-1850">不過，當規則運算式模式包含多組擷取括號時，此方法的行為取決於.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="623b6-1850">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="623b6-1851">在.NET Framework 1.0 和 1.1 中，擷取括號，第一個集合中找不到相符項目時擷取的文字，其他擷取括號是不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="623b6-1851">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="623b6-1852">從.NET Framework 2.0 開始，所有擷取的文字也會加入至傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1852">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="623b6-1853">比方說，下列程式碼會使用兩組擷取括號來擷取日期，包括日期分隔符號，從日期字串的項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1853">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="623b6-1854">第一組擷取括號會擷取連字號，和第二個集合擷取正斜線。</span><span class="sxs-lookup"><span data-stu-id="623b6-1854">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="623b6-1855">如果編譯範例程式碼，並執行.NET Framework 1.0 或 1.1，它會排除的斜線字元;如果進行編譯和.NET Framework 2.0 或更新版本下執行，它會包含它們。</span><span class="sxs-lookup"><span data-stu-id="623b6-1855">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb#10)]  
  
 <span data-ttu-id="623b6-1856">如果規則運算式可以符合空字串，<xref:System.Text.RegularExpressions.Regex.Split%2A>因為可以在每個位置上找到的空字串分隔符號，將分割字串成單一字元字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1856">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span>  
  
 <span data-ttu-id="623b6-1857">`matchTimeout`參數會指定如何長模式比對方法應該嘗試逾時之前，尋找相符項目。將逾時間隔可防止依賴大量回溯不會出現停止回應時它們會處理輸入的規則運算式，其中包含相符項目附近。</span><span class="sxs-lookup"><span data-stu-id="623b6-1857">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="623b6-1858">如需詳細資訊，請參閱 <<c0> [ 規則運算式的最佳做法](~/docs/standard/base-types/best-practices.md)並[回溯](~/docs/standard/base-types/backtracking-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1858">For more information, see [Best Practices for Regular Expressions](~/docs/standard/base-types/best-practices.md) and [Backtracking](~/docs/standard/base-types/backtracking-in-regular-expressions.md).</span></span> <span data-ttu-id="623b6-1859">如果該時間間隔中找到相符項目，方法會擲回<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="623b6-1859">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="623b6-1860">`matchTimeout` 覆寫任何方法會執行的應用程式定義域所定義的預設逾時值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1860">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1861">發生規則運算式剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="623b6-1861">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1862"><paramref name="input" /> 或 <paramref name="pattern" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1862"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1863"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效位元組合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1863"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="623b6-1864">-或-</span><span class="sxs-lookup"><span data-stu-id="623b6-1864">-or-</span></span> 
 <span data-ttu-id="623b6-1865"><paramref name="matchTimeout" /> 為負數、零或約大於 24 天。</span><span class="sxs-lookup"><span data-stu-id="623b6-1865"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="623b6-1866">發生逾時。</span><span class="sxs-lookup"><span data-stu-id="623b6-1866">A time-out occurred.</span></span> <span data-ttu-id="623b6-1867">如需逾時的詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="623b6-1867">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="623b6-1868">我們建議您設定<paramref name="matchTimeout" />參數設為適當的值，例如兩秒。</span><span class="sxs-lookup"><span data-stu-id="623b6-1868">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="623b6-1869">如果您停用逾時指定<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，規則運算式引擎可讓您稍微提升效能。</span><span class="sxs-lookup"><span data-stu-id="623b6-1869">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="623b6-1870">不過，您應該停用逾時，只有在下列情況下：</span><span class="sxs-lookup"><span data-stu-id="623b6-1870">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="623b6-1871">-當規則運算式所處理的輸入來自已知且受信任的來源，或包含靜態文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1871">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="623b6-1872">這會排除已動態由使用者輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1872">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="623b6-1873">-當規則運算式模式徹底測試以確保有效率地處理符合時，不符合，而且不久符合。</span><span class="sxs-lookup"><span data-stu-id="623b6-1873">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="623b6-1874">-當規則運算式模式包含已知會造成大量回溯處理接近的相符項目時沒有語言項目。</span><span class="sxs-lookup"><span data-stu-id="623b6-1874">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1875">規則運算式語言項目</span><span class="sxs-lookup"><span data-stu-id="623b6-1875">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="si"><span data-ttu-id="623b6-1876">要使用序列化資訊來填入的物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1876">The object to populate with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="623b6-1877">要儲存並擷取序列化資料的位置。</span><span class="sxs-lookup"><span data-stu-id="623b6-1877">The place to store and retrieve serialized data.</span></span> <span data-ttu-id="623b6-1878">這個參數保留給未來的版本使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-1878">This parameter is reserved for future use.</span></span></param>
        <summary><span data-ttu-id="623b6-1879">將還原序列化目前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件所需的資料填入 (Populate) <see cref="T:System.Text.RegularExpressions.Regex" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="623b6-1879">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.RegularExpressions.Regex" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="regex.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="623b6-1880">傳回已傳入的規則運算式模式<see langword="Regex" />建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1880">Returns the regular expression pattern that was passed into the <see langword="Regex" /> constructor.</span></span></summary>
        <returns><span data-ttu-id="623b6-1881"><paramref name="pattern" />參數傳遞至<see langword="Regex" />建構函式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1881">The <paramref name="pattern" /> parameter that was passed into the <see langword="Regex" /> constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1882">`pattern` 參數包含規則運算式語言項目，以透過符號描述要比對的字串。</span><span class="sxs-lookup"><span data-stu-id="623b6-1882">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="623b6-1883">如需有關規則運算式的詳細資訊，請參閱 < [.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)並[規則運算式語言-快速參考](~/docs/standard/base-types/regular-expression-language-quick-reference.md)。</span><span class="sxs-lookup"><span data-stu-id="623b6-1883">For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md) and [Regular Expression Language - Quick Reference](~/docs/standard/base-types/regular-expression-language-quick-reference.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="623b6-1884">
            <see cref="T:System.Text.RegularExpressions.Regex" /> 所建立的規則運算式的基底類別<see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1884">
            <see cref="T:System.Text.RegularExpressions.Regex" /> is the base class of regular expressions created by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span> <span data-ttu-id="623b6-1885">這些編譯規則運算式使用<see cref="M:System.Text.RegularExpressions.Regex.ToString" />基底類別的實作。</span><span class="sxs-lookup"><span data-stu-id="623b6-1885">These compiled regular expressions use the <see cref="M:System.Text.RegularExpressions.Regex.ToString" /> implementation of the base class.</span></span> <span data-ttu-id="623b6-1886">如果從衍生類別中，呼叫<see cref="M:System.Text.RegularExpressions.Regex.ToString" />方法會傳回字串傳遞給<paramref name="pattern" />參數<see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />類別建構函式用來定義規則運算式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1886">If called from a derived class, the <see cref="M:System.Text.RegularExpressions.Regex.ToString" /> method returns the string that was passed to the <paramref name="pattern" /> parameter of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class constructor that was used to define the regular expression.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Unescape">
      <MemberSignature Language="C#" Value="public static string Unescape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Unescape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Unescape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unescape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Unescape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Unescape : string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Unescape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="623b6-1887">輸入字串，包含要轉換的文字。</span><span class="sxs-lookup"><span data-stu-id="623b6-1887">The input string containing the text to convert.</span></span></param>
        <summary><span data-ttu-id="623b6-1888">轉換輸入字串中任何逸出的字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1888">Converts any escaped characters in the input string.</span></span></summary>
        <returns><span data-ttu-id="623b6-1889">字元字串，其中任何逸出字元轉換成其未逸出格式。</span><span class="sxs-lookup"><span data-stu-id="623b6-1889">A string of characters with any escaped characters converted to their unescaped form.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="623b6-1890"><xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法會執行下列兩個轉換的其中一個：</span><span class="sxs-lookup"><span data-stu-id="623b6-1890">The <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method performs one of the following two transformations:</span></span>  
  
-   <span data-ttu-id="623b6-1891">它會反轉所執行的轉換<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法，藉由移除逸出字元 ("\\」) 從逸出方法的每個字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1891">It reverses the transformation performed by the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method by removing the escape character ("\\") from each character escaped by the method.</span></span> <span data-ttu-id="623b6-1892">其中包括\\，\*，+，？， &#124;，{，[，（、）、 ^、 $、。，# 和空白字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1892">These include the \\, \*, +, ?, &#124;, {, [, (,), ^, $, ., #, and white space characters.</span></span> <span data-ttu-id="623b6-1893">颾魤 ㄛ<xref:System.Text.RegularExpressions.Regex.Unescape%2A>右括號 (]) 和結尾括號 （}） 字元，不逸出方法。</span><span class="sxs-lookup"><span data-stu-id="623b6-1893">In addition, the <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method unescapes the closing bracket (]) and closing brace (}) characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="623b6-1894"><xref:System.Text.RegularExpressions.Regex.Unescape%2A> 無法回復的逸出的字串完全無法推算精確已逸出字元因為</span><span class="sxs-lookup"><span data-stu-id="623b6-1894"><xref:System.Text.RegularExpressions.Regex.Unescape%2A> cannot reverse an escaped string perfectly because it cannot deduce precisely which characters were escaped,</span></span>  
  
-   <span data-ttu-id="623b6-1895">它會取代實際的可列印字元加上逐字字串常值中的十六進位值。</span><span class="sxs-lookup"><span data-stu-id="623b6-1895">It replaces the hexadecimal values in verbatim string literals with the actual printable characters.</span></span> <span data-ttu-id="623b6-1896">例如，它會取代@"\x07""\a"、 使用或@"\x0A"以 「 \n 」。</span><span class="sxs-lookup"><span data-stu-id="623b6-1896">For example, it replaces @"\x07" with "\a", or @"\x0A" with "\n".</span></span> <span data-ttu-id="623b6-1897">它會將支援的逸出字元，例如 \a、 \b、 \e、 \n、 \r、 \f、 \t、 \v，以及英數字元。</span><span class="sxs-lookup"><span data-stu-id="623b6-1897">It converts to supported escape characters such as \a, \b, \e, \n, \r, \f, \t, \v, and alphanumeric characters.</span></span>
  
 <span data-ttu-id="623b6-1898">如果<xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法遇到其他逸出序列無法轉換，例如 \w 或 \s，就會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="623b6-1898">If the <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method encounters other escape sequences that it cannot convert, such as \w or \s, it throws an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="623b6-1899"><paramref name="str" /> 包含無法辨認的逸出序列。</span><span class="sxs-lookup"><span data-stu-id="623b6-1899"><paramref name="str" /> includes an unrecognized escape sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="623b6-1900"><paramref name="str" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1900"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Escape(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="623b6-1901">規則運算式語言 - 快速參考</span><span class="sxs-lookup"><span data-stu-id="623b6-1901">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UseOptionC">
      <MemberSignature Language="C#" Value="protected bool UseOptionC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool UseOptionC() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.UseOptionC" />
      <MemberSignature Language="VB.NET" Value="Protected Function UseOptionC () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool UseOptionC();" />
      <MemberSignature Language="F#" Value="member this.UseOptionC : unit -&gt; bool" Usage="regex.UseOptionC " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="623b6-1902">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-1902">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <returns><span data-ttu-id="623b6-1903"><see langword="true" /> 如果<see cref="P:System.Text.RegularExpressions.Regex.Options" />屬性包含<see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />選項，否則<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1903"><see langword="true" /> if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptionR">
      <MemberSignature Language="C#" Value="protected bool UseOptionR ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool UseOptionR() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.UseOptionR" />
      <MemberSignature Language="VB.NET" Value="Protected Function UseOptionR () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool UseOptionR();" />
      <MemberSignature Language="F#" Value="member this.UseOptionR : unit -&gt; bool" Usage="regex.UseOptionR " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="623b6-1904">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法所產生的 <see cref="T:System.Text.RegularExpressions.Regex" /> 物件使用。</span><span class="sxs-lookup"><span data-stu-id="623b6-1904">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <returns><span data-ttu-id="623b6-1905"><see langword="true" /> 如果<see cref="P:System.Text.RegularExpressions.Regex.Options" />屬性包含<see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />選項，否則<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="623b6-1905"><see langword="true" /> if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> option; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMatchTimeout">
      <MemberSignature Language="C#" Value="protected internal static void ValidateMatchTimeout (TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig void ValidateMatchTimeout(valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Sub ValidateMatchTimeout (matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static void ValidateMatchTimeout(TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member ValidateMatchTimeout : TimeSpan -&gt; unit" Usage="System.Text.RegularExpressions.Regex.ValidateMatchTimeout matchTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="matchTimeout"><span data-ttu-id="623b6-1906">要檢查的逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="623b6-1906">The time-out interval to check.</span></span></param>
        <summary><span data-ttu-id="623b6-1907">檢查逾時間隔是否在可接受的範圍內。</span><span class="sxs-lookup"><span data-stu-id="623b6-1907">Checks whether a time-out interval is within an acceptable range.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="623b6-1908">指定的逾時不是有效的範圍內。</span><span class="sxs-lookup"><span data-stu-id="623b6-1908">The specified time-out is not within a valid range.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>