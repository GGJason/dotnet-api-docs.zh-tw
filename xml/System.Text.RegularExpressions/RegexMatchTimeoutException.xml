<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegexMatchTimeoutException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58487b3300cbd8c8bb36ab11ea6e97138765bae9c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8487b3300cbd8c8bb36ab11ea6e97138765bae9c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.</source>
          <target state="translated">當規則運算式模式比對方法的執行時間超過其逾時間隔時，所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The presence of a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception generally indicates one of the following conditions:</source>
          <target state="translated">與否<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>例外狀況通常表示發生下列情況之一：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The regular expression engine is backtracking excessively as it attempts to match the input text to the regular expression pattern.</source>
          <target state="translated">規則運算式引擎過度回溯，因為它會嘗試比對規則運算式模式至輸入的文字。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The time-out interval has been set too low, especially given high machine load.</source>
          <target state="translated">逾時間隔已設定太低，尤其是提供高的機器工作負載。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The way in which an exception handler handles an exception depends on the cause of the exception:</source>
          <target state="translated">例外狀況處理常式會處理例外狀況的方式取決於例外狀況的原因：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>If the time-out results from excessive backtracking, your exception handler should abandon the attempt to match the input and inform the user that a time-out has occurred in the regular expression pattern-matching method.</source>
          <target state="translated">如果在逾時產生的大量回溯，您的例外狀況處理常式應該放棄嘗試比對輸入，並通知使用者，在規則運算式模式比對方法中發生逾時。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>If possible, information about the regular expression pattern, which is available from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph> property, and the input that caused excessive backtracking, which is available from the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph> property, should be logged so that the issue can be investigated and the regular expression pattern modified.</source>
          <target state="translated">可能的話，規則運算式模式，可從資訊<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph>屬性，並輸入造成大量回溯，可從<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>以便可問題應該記錄屬性，已調查和修改規則運算式模式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>Time-outs due to excessive backtracking are always reproducible.</source>
          <target state="translated">因為進行大量回溯的逾時一定是可重現。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>If the time-out results from setting the time-out threshold too low, you can increase the time-out interval and retry the matching operation.</source>
          <target state="translated">如果在逾時產生的設定逾時臨界值太低，您可以增加逾時間隔並重試比對作業。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The current time-out interval is available from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph> property.</source>
          <target state="translated">目前的逾時間隔是可從<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>When a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception is thrown, the regular expression engine maintains its state so that any future invocations return the same result, as if the exception did not occur.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>擲回例外狀況，規則運算式引擎會維持其狀態，因此任何未來的叫用都會傳回相同的結果，如同未發生例外狀況。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The recommended pattern is to wait for a brief, random time interval after the exception is thrown before calling the matching method again.</source>
          <target state="translated">建議的模式是等待簡短、 隨機的時間間隔之後再次呼叫對應的方法之前擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>This can be repeated several times.</source>
          <target state="translated">這可以重複多次。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>However, the number of repetitions should be small in case the time-out is caused by excessive backtracking.</source>
          <target state="translated">不過，重複次數應該很小以防逾時的起因是大量回溯。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The example in the next section illustrates both techniques for handling a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>.</source>
          <target state="translated">下一節中的範例將說明這兩種技術來處理<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The following example illustrates two possible approaches to handling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">下列範例說明兩個可能的解決方法處理<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>A constant whose value is two seconds defines the maximum time-out interval.</source>
          <target state="translated">常數，其值為兩秒鐘定義的最大逾時間隔。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType&gt;</ph> method is initially called with a time-out interval of one second.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType&gt;</ph>為一秒的逾時間隔與一開始呼叫方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>Each <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception causes the time-out interval to be increased by one second and results in another call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%2A?displayProperty=nameWithType&gt;</ph> method if the current time-out interval is less than the maximum time-out interval.</source>
          <target state="translated">每個<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>例外狀況會導致增加一秒的逾時間隔，且另一個呼叫會導致<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%2A?displayProperty=nameWithType&gt;</ph>如果目前的逾時間隔小於最大逾時間隔的方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>However, if the current time-out interval exceeds the maximum time-out interval, the exception handler writes information to the event log and abandons the processing of the regular expression.</source>
          <target state="translated">不過，如果目前的逾時間隔超過最大逾時間隔，例外狀況處理常式資訊寫入事件記錄檔，而放棄的規則運算式處理。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with a system-supplied message.</source>
          <target state="translated">使用系統提供的訊息，初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
          <source>This is the default constructor of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> class.</source>
          <target state="translated">這是預設建構函式的<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error.</source>
          <target state="translated">這個建構函式 (Constructor) 會將新執行個體的 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> 屬性初始化為系統提供用來描述錯誤的訊息。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
          <source>This message is localized for the current system culture.</source>
          <target state="translated">此訊息已針對目前系統文化特性當地語系化。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
          <source>A string that describes the exception.</source>
          <target state="translated">描述例外狀況的字串。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with the specified message string.</source>
          <target state="translated">使用指定的訊息字串，初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
          <source>The <ph id="ph1">`message`</ph> string is assigned to the <ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`message`</ph>字串指派給<ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
          <source>The string should be localized for the current culture.</source>
          <target state="translated">應該針對目前的文化特性當地語系化字串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that contains the serialized data.</source>
          <target state="translated">包含已序列化資料的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The stream that contains the serialized data.</source>
          <target state="translated">包含已序列化資料的資料流。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">使用序列化資料，初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is not called directly by your code to instantiate the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object.</source>
          <target state="translated">這個建構函式並非直接由您的程式碼來具現化呼叫<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Instead, it is called by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatter.Deserialize%2A?displayProperty=nameWithType&gt;</ph> method when deserializing the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object from a stream.</source>
          <target state="translated">相反地，由呼叫<ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatter.Deserialize%2A?displayProperty=nameWithType&gt;</ph>方法還原序列化時<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>從資料流的物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>A string that describes the exception.</source>
          <target state="translated">描述例外狀況的字串。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">做為目前例外狀況發生原因的例外狀況。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>Typically, you use this overload to handle an exception in a <ph id="ph1">`try/catch`</ph> block.</source>
          <target state="translated">一般而言，您使用這個多載來處理中的發生例外狀況<ph id="ph1">`try/catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">`innerException`</ph> parameter should be a reference to the exception object handled in the <ph id="ph2">`catch`</ph> block, or it can be <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`innerException`</ph>參數應該是在處理的例外狀況物件的參考<ph id="ph2">`catch`</ph>區塊，或它可以是<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>This value is then assigned to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object's <ph id="ph2">&lt;xref:System.Exception.InnerException%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">此值接著會指派給<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>物件的<ph id="ph2">&lt;xref:System.Exception.InnerException%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">`message`</ph> string is assigned to the <ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`message`</ph>字串指派給<ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
          <source>The string should be localized for the current culture.</source>
          <target state="translated">應該針對目前的文化特性當地語系化字串。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>The input text processed by the regular expression engine when the time-out occurred.</source>
          <target state="translated">當發生逾時，由規則運算式引擎所處理的輸入文字。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>The pattern used by the regular expression engine when the time-out occurred.</source>
          <target state="translated">當發生逾時，由規則運算式引擎所使用的模式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>The time-out interval.</source>
          <target state="translated">逾時間隔。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> class with information about the regular expression pattern, the input text, and the time-out interval.</source>
          <target state="translated">使用規則運算式模式、輸入文字，以及逾時間隔的相關資訊，初始化 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
          <source>The <ph id="ph1">`regexInput`</ph>, <ph id="ph2">`regexPattern`</ph>, and <ph id="ph3">`matchTimeout`</ph> values are assigned to the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph> properties of the new <ph id="ph7">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`regexInput`</ph>， <ph id="ph2">`regexPattern`</ph>，和<ph id="ph3">`matchTimeout`</ph>值指派給<ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph>屬性的新<ph id="ph7">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>Gets the input text that the regular expression engine was processing when the time-out occurred.</source>
          <target state="translated">取得當發生逾時，規則運算式引擎所處理的輸入文字。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>The regular expression input text.</source>
          <target state="translated">規則運算式輸入文字。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>This property reflects the value of the <ph id="ph1">`regexInput`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
          <target state="translated">這個屬性會反映的值<ph id="ph1">`regexInput`</ph>參數<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>If this parameter is not explicitly initialized in a constructor call, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果這個參數未明確初始化建構函式呼叫中，其值就是<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>When the exception is thrown by the regular expression engine, the value of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph> property reflects the entire input string passed to the regular expression engine.</source>
          <target state="translated">例外狀況時，規則運算式引擎，值<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>屬性會反映整個輸入的字串傳遞至規則運算式引擎。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
          <source>It does not reflect a partial string, such as the substring that the engine searches in the call to a method such as <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">它並不會反映部分的字串，例如在引擎這類搜尋方法的呼叫中的子字串<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>Gets the time-out interval for a regular expression match.</source>
          <target state="translated">取得規則運算式比對的逾時間隔。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>The time-out interval.</source>
          <target state="translated">逾時間隔。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>This property reflects the value of the <ph id="ph1">`matchTimeout`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
          <target state="translated">這個屬性會反映的值<ph id="ph1">`matchTimeout`</ph>參數<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>If the parameter is not properly initialized in a constructor call, its value is <ph id="ph1">`Timespan.FromTicks(-1)`</ph>.</source>
          <target state="translated">如果參數未正確初始化建構函式呼叫中，其值就是<ph id="ph1">`Timespan.FromTicks(-1)`</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>The value of this property reflects the time-out interval set in the call to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> constructor or static method.</source>
          <target state="translated">這個屬性的值會反映在呼叫中設定的逾時間隔<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>建構函式或靜態方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
          <source>It does not reflect the exact interval that has elapsed from the beginning of the method call to the time the exception is thrown.</source>
          <target state="translated">它不會反映從擲回例外狀況的方法呼叫的時間開始已經過的確切間隔。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
          <source>Gets the regular expression pattern that was used in the matching operation when the time-out occurred.</source>
          <target state="translated">取得當發生逾時，比對作業中所使用的規則運算式模式。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
          <source>The regular expression pattern.</source>
          <target state="translated">規則運算式模式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
          <source>This property reflects the value of the <ph id="ph1">`regexPattern`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
          <target state="translated">這個屬性會反映的值<ph id="ph1">`regexPattern`</ph>參數<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
          <source>If the parameter is not properly initialized in a constructor call, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果參數未正確初始化建構函式呼叫中，其值就是<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to populate with data.</source>
          <target state="translated">要填入資料的物件。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for this serialization.</source>
          <target state="translated">這個序列化的目的端。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data needed to serialize a <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> object.</source>
          <target state="translated">將序列化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物所需的資料填入 <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface object.</source>
          <target state="translated">它可用時，才<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>執行個體轉換成<ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>介面物件。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects that are included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> object are automatically tracked and serialized by the formatter.</source>
          <target state="translated">包含在任何物件<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>自動追蹤和序列化格式子物件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>