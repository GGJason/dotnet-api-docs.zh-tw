<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="098fa6154adaca41f1c864bf8e049178763a49b9" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53519777" /></Metadata><TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表單一子運算式成功擷取的結果。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Text.RegularExpressions.Capture>物件是不可變，而且沒有公用建構函式。 傳回執行個體透過<xref:System.Text.RegularExpressions.CaptureCollection>物件，它由`Match.Captures`和<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>屬性。 不過，`Match.Captures`屬性會提供做為相同的比對的相關資訊<xref:System.Text.RegularExpressions.Match>物件。  
  
 如果您不會將數量詞套用至擷取群組，<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>屬性會傳回<xref:System.Text.RegularExpressions.CaptureCollection>使用單一<xref:System.Text.RegularExpressions.Capture>提供做為相同的擷取的相關資訊的物件<xref:System.Text.RegularExpressions.Group>物件。 如果您不要將數量詞套用至擷取群組， `Group.Index`， `Group.Length`，並`Group.Value`屬性提供的最後一個擷取群組的相關資訊，而<xref:System.Text.RegularExpressions.Capture>中的物件<xref:System.Text.RegularExpressions.CaptureCollection>提供所有相關資訊擷取子運算式。 這個範例將提供說明。  
  
   
  
## Examples  
 下列範例會定義規則運算式符合不包含句點除外的任何標點符號的句子 (「。")。  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 規則運算式模式 `((\w+)[\s.])+` 的定義如下表所示。 請注意，在規則運算式中，將數量詞 （+） 會套用至整個規則運算式。  
  
|模式|描述|  
|-------------|-----------------|  
|`(\w+)`|比對一個或多個文字字元。 這是第二個擷取群組。|  
|`[\s.])`|比對空白字元或句點 ("。")。|  
|`((\w+)[\s.])`|比對一或多個文字字元後面接著空白字元或句點 ("。")。 這是第一個擷取群組。|  
|`((\w+)[\s.])+`|比對一個或多個文字字元或字元後面接著空白字元或句點 ("。")。|  
  
 在此範例中，輸入的字串包含兩個句子。 如輸出所示，第一個句子包含只有一個字，因此<xref:System.Text.RegularExpressions.CaptureCollection>物件都有單一<xref:System.Text.RegularExpressions.Capture>物件，表示為相同的擷取<xref:System.Text.RegularExpressions.Group>物件。 第二句組成多個單字，所以<xref:System.Text.RegularExpressions.Group>物件只包含最後一個相符的子運算式的相關資訊。 群組 1，表示第一個擷取時，會包含具有關閉期間的句子中的最後一個字。 群組 2，表示第二個擷取時，會包含在句子中的最後一個字。 不過，<xref:System.Text.RegularExpressions.Capture>群組中的物件<xref:System.Text.RegularExpressions.CaptureCollection>物件擷取每一個子運算式比對。 <xref:System.Text.RegularExpressions.Capture>物件擷取的第一個擷取群組的集合中包含每個擷取的文字及泛空白字元或句點的相關資訊。 <xref:System.Text.RegularExpressions.Capture>擷取第二個擷取群組的集合中的物件包含擷取的每個字的相關資訊。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在原始字串中找到擷取的子字串的第一個字元之位置。</summary>
        <value>在原始字串中找到擷取的子字串之以零起始的開始位置。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得所擷取子字串的長度。</summary>
        <value>擷取的子字串的長度。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取已透過呼叫 <see cref="P:System.Text.RegularExpressions.Capture.Value" /> 屬性從輸入字串擷取的子字串。</summary>
        <returns>比對所擷取的子字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ToString` 是實際的內部呼叫<xref:System.Text.RegularExpressions.Capture.Value%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>從輸入字串取得擷取的子字串。</summary>
        <value>比對所擷取的子字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果呼叫<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>或是<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法無法找到的相符項目中，而傳回的值`Match.Value`屬性是<xref:System.String.Empty?displayProperty=nameWithType>。 如果規則運算式引擎無法比對擷取的群組。 傳回值`Group.Value`屬性是<xref:System.String.Empty?displayProperty=nameWithType>。 請參閱圖中的第二個範例。  
  
   
  
## Examples  
 下列範例會定義規則運算式符合不包含句點除外的任何標點符號的句子 (「。")。 `Match.Value`屬性會顯示結果字串，其中包含比對句子中，每個相符的項目。 `Group.Value`屬性會顯示每個擷取群組的結果字串，它包含該擷取群組所擷取的最後一個字串。 <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType>屬性會顯示每個擷取的結果字串。  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 規則運算式模式 `((\w+)[\s.])+` 的定義如下表所示。 請注意，在規則運算式中，將數量詞 （+） 會套用至整個規則運算式。  
  
|模式|描述|  
|-------------|-----------------|  
|`(\w+)`|比對一個或多個文字字元。 這是第二個擷取群組。|  
|`[\s.])`|比對空白字元或句點 ("。")。|  
|`((\w+)[\s.])`|比對一或多個文字字元後面接著空白字元或句點 ("。")。 這是第一個擷取群組。|  
|`((\w+)[\s.])+`|比對一個或多個文字字元或字元後面接著空白字元或句點 ("。")。|  
  
 在此範例中，輸入的字串包含兩個句子。 如輸出所示，第一個句子包含只有一個字，因此<xref:System.Text.RegularExpressions.CaptureCollection>物件都有單一<xref:System.Text.RegularExpressions.Capture>物件，表示為相同的擷取<xref:System.Text.RegularExpressions.Group>物件。 第二句組成多個單字，所以<xref:System.Text.RegularExpressions.Group>物件只包含最後一個相符的子運算式的相關資訊。 群組 1，表示第一個擷取時，會包含具有關閉期間的句子中的最後一個字。 群組 2，表示第二個擷取時，會包含在句子中的最後一個字。 不過，<xref:System.Text.RegularExpressions.Capture>群組中的物件<xref:System.Text.RegularExpressions.CaptureCollection>物件擷取每一個子運算式比對。 <xref:System.Text.RegularExpressions.Capture>物件擷取的第一個擷取群組的集合中包含每個擷取的文字及泛空白字元或句點的相關資訊。 <xref:System.Text.RegularExpressions.Capture>擷取第二個擷取群組的集合中的物件包含擷取的每個字的相關資訊。  
  
 下列範例會使用規則運算式模式， `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`，來比對以句點分隔的兩個部分所組成的產品數字。 這兩個部分是由後面接著選擇性的數字的字母字元所組成。 因為第一個輸入的字串與模式，傳回的值不相符<xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType>物件的`Value`屬性是<xref:System.String.Empty?displayProperty=nameWithType>。 同樣地，當規則運算式模式是無法比對擷取群組的對應值時才<xref:System.Text.RegularExpressions.Group>物件的`Value`屬性是<xref:System.String.Empty?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 規則運算式模式會定義下表所示：  
  
|模式|描述|  
|-------------|-----------------|  
|`^`|從字串的開頭開始比對。|  
|`([a-z]+)`|比對的任何字元一或多個相符項目到 z。 因為規則運算式引擎會傳遞<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>選項時，這項比較不區分大小寫。 這是第一個擷取群組。|  
|`(\d+)?`|比對零個或一個出現的一或多個十進位數字。 這是第二個擷取群組。|  
|`\.`|比對常值句號字元。|  
|`([a-z]+`|比對的任何字元一或多個相符項目到 z。 比較不區分大小寫。|  
|`(\d)*`|比對零個或多個十進位數字。 比對一位數是第四個擷取群組。|  
|`([a-z]+(\d)*)`|比對一或多個字母的字元，從到 z，後面接著零個、 一個或多個十進位數字。 這是第四個擷取群組。|  
|`$`|結束比對字串的結尾。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>