<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebdd330498b2c685e0206d9b2b5cfb3efb50c537" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58682135" /></Metadata><TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6fb8a-101">代表單一子運算式成功擷取的結果。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-101">Represents the results from a single successful subexpression capture.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fb8a-102">A<xref:System.Text.RegularExpressions.Capture>物件是不可變，而且沒有公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-102">A <xref:System.Text.RegularExpressions.Capture> object is immutable and has no public constructor.</span></span> <span data-ttu-id="6fb8a-103">傳回執行個體透過<xref:System.Text.RegularExpressions.CaptureCollection>物件，它由`Match.Captures`和<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-103">Instances are returned through the <xref:System.Text.RegularExpressions.CaptureCollection> object, which is returned by the `Match.Captures` and <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="6fb8a-104">不過，`Match.Captures`屬性會提供做為相同的比對的相關資訊<xref:System.Text.RegularExpressions.Match>物件。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-104">However, the `Match.Captures` property provides information about the same match as the <xref:System.Text.RegularExpressions.Match> object.</span></span>  
  
 <span data-ttu-id="6fb8a-105">如果您不會將數量詞套用至擷取群組，<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>屬性會傳回<xref:System.Text.RegularExpressions.CaptureCollection>使用單一<xref:System.Text.RegularExpressions.Capture>提供做為相同的擷取的相關資訊的物件<xref:System.Text.RegularExpressions.Group>物件。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-105">If you do not apply a quantifier to a capturing group, the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> with a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="6fb8a-106">如果您不要將數量詞套用至擷取群組， `Group.Index`， `Group.Length`，並`Group.Value`屬性提供的最後一個擷取群組的相關資訊，而<xref:System.Text.RegularExpressions.Capture>中的物件<xref:System.Text.RegularExpressions.CaptureCollection>提供所有相關資訊擷取子運算式。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-106">If you do apply a quantifier to a capturing group, the `Group.Index`, `Group.Length`, and `Group.Value` properties provide information only about the last captured group, whereas the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> provide information about all subexpression captures.</span></span> <span data-ttu-id="6fb8a-107">這個範例將提供說明。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-107">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fb8a-108">下列範例會定義規則運算式符合不包含句點除外的任何標點符號的句子 (「。")。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-108">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="6fb8a-109">規則運算式模式 `((\w+)[\s.])+` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-109">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="6fb8a-110">請注意，在規則運算式中，將數量詞 （+） 會套用至整個規則運算式。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-110">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="6fb8a-111">模式</span><span class="sxs-lookup"><span data-stu-id="6fb8a-111">Pattern</span></span>|<span data-ttu-id="6fb8a-112">描述</span><span class="sxs-lookup"><span data-stu-id="6fb8a-112">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="6fb8a-113">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-113">Match one or more word characters.</span></span> <span data-ttu-id="6fb8a-114">這是第二個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-114">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="6fb8a-115">比對空白字元或句點 ("。")。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-115">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="6fb8a-116">比對一或多個文字字元後面接著空白字元或句點 ("。")。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-116">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="6fb8a-117">這是第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-117">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="6fb8a-118">比對一個或多個文字字元或字元後面接著空白字元或句點 ("。")。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-118">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="6fb8a-119">在此範例中，輸入的字串包含兩個句子。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-119">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="6fb8a-120">如輸出所示，第一個句子包含只有一個字，因此<xref:System.Text.RegularExpressions.CaptureCollection>物件都有單一<xref:System.Text.RegularExpressions.Capture>物件，表示為相同的擷取<xref:System.Text.RegularExpressions.Group>物件。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-120">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="6fb8a-121">第二句組成多個單字，所以<xref:System.Text.RegularExpressions.Group>物件只包含最後一個相符的子運算式的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-121">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="6fb8a-122">群組 1，表示第一個擷取時，會包含具有關閉期間的句子中的最後一個字。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-122">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="6fb8a-123">群組 2，表示第二個擷取時，會包含在句子中的最後一個字。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-123">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="6fb8a-124">不過，<xref:System.Text.RegularExpressions.Capture>群組中的物件<xref:System.Text.RegularExpressions.CaptureCollection>物件擷取每一個子運算式比對。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-124">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="6fb8a-125"><xref:System.Text.RegularExpressions.Capture>物件擷取的第一個擷取群組的集合中包含每個擷取的文字及泛空白字元或句點的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-125">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="6fb8a-126"><xref:System.Text.RegularExpressions.Capture>擷取第二個擷取群組的集合中的物件包含擷取的每個字的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-126">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fb8a-127">在原始字串中找到擷取的子字串的第一個字元之位置。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-127">The position in the original string where the first character of the captured substring is found.</span></span></summary>
        <value><span data-ttu-id="6fb8a-128">在原始字串中找到擷取的子字串之以零起始的開始位置。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-128">The zero-based starting position in the original string where the captured substring is found.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fb8a-129">取得所擷取子字串的長度。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-129">Gets the length of the captured substring.</span></span></summary>
        <value><span data-ttu-id="6fb8a-130">擷取的子字串的長度。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-130">The length of the captured substring.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6fb8a-131">擷取已透過呼叫 <see cref="P:System.Text.RegularExpressions.Capture.Value" /> 屬性從輸入字串擷取的子字串。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-131">Retrieves the captured substring from the input string by calling the <see cref="P:System.Text.RegularExpressions.Capture.Value" /> property.</span></span></summary>
        <returns><span data-ttu-id="6fb8a-132">比對所擷取的子字串。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-132">The substring that was captured by the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fb8a-133">`ToString` 是實際的內部呼叫<xref:System.Text.RegularExpressions.Capture.Value%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-133">`ToString` is actually an internal call to the <xref:System.Text.RegularExpressions.Capture.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fb8a-134">從輸入字串取得擷取的子字串。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-134">Gets the captured substring from the input string.</span></span></summary>
        <value><span data-ttu-id="6fb8a-135">比對所擷取的子字串。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-135">The substring that is captured by the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fb8a-136">如果呼叫<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>或是<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>方法無法找到的相符項目中，而傳回的值`Match.Value`屬性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-136">If a call to the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> or <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method fails to find a match, the value of the returned `Match.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6fb8a-137">如果規則運算式引擎無法比對擷取的群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-137">If the regular expression engine is unable to match a capturing group.</span></span> <span data-ttu-id="6fb8a-138">傳回值`Group.Value`屬性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-138">the value of the returned `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6fb8a-139">請參閱圖中的第二個範例。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-139">See the second example for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fb8a-140">下列範例會定義規則運算式符合不包含句點除外的任何標點符號的句子 (「。")。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-140">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span> <span data-ttu-id="6fb8a-141">`Match.Value`屬性會顯示結果字串，其中包含比對句子中，每個相符的項目。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-141">The `Match.Value` property displays the result string, which consists of a matched sentence, for each match.</span></span> <span data-ttu-id="6fb8a-142">`Group.Value`屬性會顯示每個擷取群組的結果字串，它包含該擷取群組所擷取的最後一個字串。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-142">The `Group.Value` property displays the result string for each capturing group; it consists of the last string captured by that capturing group.</span></span> <span data-ttu-id="6fb8a-143"><xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType>屬性會顯示每個擷取的結果字串。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-143">The <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> property displays the result string for each capture.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="6fb8a-144">規則運算式模式 `((\w+)[\s.])+` 的定義如下表所示。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-144">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="6fb8a-145">請注意，在規則運算式中，將數量詞 （+） 會套用至整個規則運算式。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-145">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="6fb8a-146">模式</span><span class="sxs-lookup"><span data-stu-id="6fb8a-146">Pattern</span></span>|<span data-ttu-id="6fb8a-147">描述</span><span class="sxs-lookup"><span data-stu-id="6fb8a-147">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="6fb8a-148">比對一個或多個文字字元。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-148">Match one or more word characters.</span></span> <span data-ttu-id="6fb8a-149">這是第二個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-149">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="6fb8a-150">比對空白字元或句點 ("。")。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-150">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="6fb8a-151">比對一或多個文字字元後面接著空白字元或句點 ("。")。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-151">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="6fb8a-152">這是第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-152">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="6fb8a-153">比對一個或多個文字字元或字元後面接著空白字元或句點 ("。")。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-153">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="6fb8a-154">在此範例中，輸入的字串包含兩個句子。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-154">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="6fb8a-155">如輸出所示，第一個句子包含只有一個字，因此<xref:System.Text.RegularExpressions.CaptureCollection>物件都有單一<xref:System.Text.RegularExpressions.Capture>物件，表示為相同的擷取<xref:System.Text.RegularExpressions.Group>物件。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-155">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="6fb8a-156">第二句組成多個單字，所以<xref:System.Text.RegularExpressions.Group>物件只包含最後一個相符的子運算式的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-156">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="6fb8a-157">群組 1，表示第一個擷取時，會包含具有關閉期間的句子中的最後一個字。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-157">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="6fb8a-158">群組 2，表示第二個擷取時，會包含在句子中的最後一個字。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-158">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="6fb8a-159">不過，<xref:System.Text.RegularExpressions.Capture>群組中的物件<xref:System.Text.RegularExpressions.CaptureCollection>物件擷取每一個子運算式比對。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-159">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="6fb8a-160"><xref:System.Text.RegularExpressions.Capture>物件擷取的第一個擷取群組的集合中包含每個擷取的文字及泛空白字元或句點的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-160">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="6fb8a-161"><xref:System.Text.RegularExpressions.Capture>擷取第二個擷取群組的集合中的物件包含擷取的每個字的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-161">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 <span data-ttu-id="6fb8a-162">下列範例會使用規則運算式模式， `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`，來比對以句點分隔的兩個部分所組成的產品數字。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-162">The following example uses a regular expression pattern, `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, to match a product number that consists of two parts separated by a period.</span></span> <span data-ttu-id="6fb8a-163">這兩個部分是由後面接著選擇性的數字的字母字元所組成。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-163">Both parts consist of alphabetic characters followed by optional numbers.</span></span> <span data-ttu-id="6fb8a-164">因為第一個輸入的字串與模式，傳回的值不相符<xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType>物件的`Value`屬性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-164">Because the first input string does not match the pattern, the value of the returned <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6fb8a-165">同樣地，當規則運算式模式是無法比對擷取群組的對應值時才<xref:System.Text.RegularExpressions.Group>物件的`Value`屬性是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-165">Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <xref:System.Text.RegularExpressions.Group> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 <span data-ttu-id="6fb8a-166">規則運算式模式會定義下表所示：</span><span class="sxs-lookup"><span data-stu-id="6fb8a-166">The regular expression pattern is defined as shown in the following table:</span></span>  
  
|<span data-ttu-id="6fb8a-167">模式</span><span class="sxs-lookup"><span data-stu-id="6fb8a-167">Pattern</span></span>|<span data-ttu-id="6fb8a-168">描述</span><span class="sxs-lookup"><span data-stu-id="6fb8a-168">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="6fb8a-169">從字串的開頭開始比對。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-169">Begin the match at the beginning of the string.</span></span>|  
|`([a-z]+)`|<span data-ttu-id="6fb8a-170">比對的任何字元一或多個相符項目到 z。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-170">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="6fb8a-171">因為規則運算式引擎會傳遞<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>選項時，這項比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-171">Because the regular expression engine is passed the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option, this comparison is case-insensitive.</span></span> <span data-ttu-id="6fb8a-172">這是第一個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-172">This is the first capturing group.</span></span>|  
|`(\d+)?`|<span data-ttu-id="6fb8a-173">比對零個或一個出現的一或多個十進位數字。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-173">Match zero or one occurrence of one or more decimal digits.</span></span> <span data-ttu-id="6fb8a-174">這是第二個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-174">This is the second capturing group.</span></span>|  
|`\.`|<span data-ttu-id="6fb8a-175">比對常值句號字元。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-175">Match a literal period character.</span></span>|  
|`([a-z]+`|<span data-ttu-id="6fb8a-176">比對的任何字元一或多個相符項目到 z。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-176">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="6fb8a-177">比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-177">The comparison is case-insensitive.</span></span>|  
|`(\d)*`|<span data-ttu-id="6fb8a-178">比對零個或多個十進位數字。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-178">Match zero or more decimal digits.</span></span> <span data-ttu-id="6fb8a-179">比對一位數是第四個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-179">A single matched digit is the fourth capturing group.</span></span>|  
|`([a-z]+(\d)*)`|<span data-ttu-id="6fb8a-180">比對一或多個字母的字元，從到 z，後面接著零個、 一個或多個十進位數字。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-180">Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits.</span></span> <span data-ttu-id="6fb8a-181">這是第四個擷取群組。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-181">This is the fourth capturing group.</span></span>|  
|`$`|<span data-ttu-id="6fb8a-182">結束比對字串的結尾。</span><span class="sxs-lookup"><span data-stu-id="6fb8a-182">Conclude the match at the end of the string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>