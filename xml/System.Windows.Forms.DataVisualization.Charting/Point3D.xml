<Type Name="Point3D" FullName="System.Windows.Forms.DataVisualization.Charting.Point3D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80990e8a655634440591b2b7a887efde8f406c4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36358658" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Point3D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Point3D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Point3D" />
  <TypeSignature Language="VB.NET" Value="Public Class Point3D" />
  <TypeSignature Language="C++ CLI" Value="public ref class Point3D" />
  <TypeSignature Language="F#" Value="type Point3D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示立體 (3D) 資料點的座標。 這個類別會在以立體圖表執行自訂繪圖時使用。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用於自訂的 3D 繪製任何時間點 — 這會藉由 GDI +-必須從相對 X、 Y 和 Z (3D) 至相對 X 和 Y (2D) 座標轉換協調使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法。 藉由呼叫<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>，X 和 Y 值的<xref:System.Windows.Forms.DataVisualization.Charting.Point3D>物件會變更，因此它們反映的 3d 空間。 新的 X 和 Y 指標無法再用 GDI + 方法呼叫，然後會忽略 Z 值 — 之後已經變更為使用絕對像素座標<xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A>方法。  
  
 請注意，可能的 Z 座標小於零 （位於圖表區域） 或大於 100 （位於圖表區域前面）。  
  
 若要同時啟用 3D 圖表，並處理其樣式，使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A>屬性。 <xref:System.Windows.Forms.DataVisualization.Charting.Point3D>類別不會用於 3D 樣式。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Point3D" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Point3D" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Single, y As Single, z As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D(float x, float y, float z);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.Point3D : single * single * single -&gt; System.Windows.Forms.DataVisualization.Charting.Point3D" Usage="new System.Windows.Forms.DataVisualization.Charting.Point3D (x, y, z)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">立體資料點的 X 座標。</param>
        <param name="y">立體資料點的 Y 座標。</param>
        <param name="z">表示立體資料點深度的 Z 座標。</param>
        <summary>使用指定的 X、Y、Z 座標，初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointF">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF PointF { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF PointF" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF" />
      <MemberSignature Language="VB.NET" Value="Public Property PointF As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF PointF { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberSignature Language="F#" Value="member this.PointF : System.Drawing.PointF with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.PointF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Drawing.PointF" /> 結構，它會儲存立體資料點的 X、Y 座標。</summary>
        <value>
          <see cref="T:System.Drawing.PointF" /> 結構，會儲存立體資料點的 X 和 Y 座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用於自訂的 3D 繪製任何時間點 — 這完成使用 GDI +-必須先經過轉換的 X、 Y 和 Z (3D) 座標到 X 和 Y (2D) 座標使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法。 這個方法會採用的陣列<xref:System.Windows.Forms.DataVisualization.Charting.Point3D>做為其唯一參數的物件。 藉由呼叫<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>，X 和 Y 屬性值已變更，以反映 3d 空間。  
  
 這些新 X 和 Y 座標轉換為絕對座標，就能使用一種方法，像是<xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A>方法。 之後轉換座標、<xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A>採取任何 GDI + 方法的每個 Point3D 物件屬性可用<xref:System.Drawing.PointF>物件做為參數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float X { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.X : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定立體資料點的 X 座標。</summary>
        <value>
          <see langword="float" />，表示立體資料點的 X 座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用於自訂的 3D 繪製任何時間點 — 這完成使用 GDI +-必須先經過轉換的 X、 Y 和 Z (3D) 座標到 X 和 Y (2D) 座標使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法。 這個方法會採用 Point3D 物件的陣列，做為其唯一參數。 藉由呼叫<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法，這個方法的 X 和 Y 屬性的值都會變更為反映的 3d 空間。  
  
 這些新的 X 和 Y 座標轉換為絕對座標使用就<xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A>方法。 然後用 GDI + 方法呼叫。  
  
 可以是相對 X 座標可從軸值取得藉由呼叫<xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Y { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Y : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定立體資料點的 Y 座標。</summary>
        <value>
          <see langword="float" /> 值，表示立體資料點的 Y 座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用於自訂的 3D 繪製任何時間點 — 這完成使用 GDI +-必須先經過轉換的 X、 Y 和 Z (3D) 座標到 X 和 Y (2D) 座標使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法。 這個方法會採用 Point3D 物件的陣列，做為其唯一參數。 藉由呼叫<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法，這個方法的 X 和 Y 屬性的值都會變更為反映的 3d 空間。  
  
 這些新 X 和 Y 座標轉換為絕對座標就能使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A>方法。 然後用 GDI + 方法呼叫。  
  
 您可以從軸值使用取得相對的 Y 座標<xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public float Z { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Z" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.Z" />
      <MemberSignature Language="VB.NET" Value="Public Property Z As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Z { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Z : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定立體資料點的 Z 座標。</summary>
        <value>立體資料點的 Z 座標，以相關圖表區域深度的百分比表示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個 Z 屬性一律會以表示相關的圖表區域深度的百分比。 3D 圖表，Z 座標是相對的且有值為 0，表示圖表區域的背景牆和前端的圖表區域牆的 100 的值。  
  
 **請注意**此 Z 屬性可能會小於 （位於圖表區域） 的零或大於 100 （位於圖表區域前面）。  
  
 用於自訂的 3D 繪製任何時間點 — 這完成使用 GDI +-必須先經過轉換的 X、 Y 和 Z (3D) 座標到 X 和 Y (2D) 座標使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法。 這個方法會採用 Point3D 物件的陣列，做為其唯一參數。 藉由呼叫<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法，這個方法的 X 和 Y 屬性的值都會變更為反映的 3d 空間。  
  
 這些新 X 和 Y 座標轉換為絕對座標就能使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A>方法。 然後用 GDI + 方法呼叫。  
  
 使用序列可以取得相對 Z 座標<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>