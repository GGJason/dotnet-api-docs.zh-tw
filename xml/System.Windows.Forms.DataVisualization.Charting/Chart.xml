<Type Name="Chart" FullName="System.Windows.Forms.DataVisualization.Charting.Chart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="11b8d9810814fcc926326430e8c4e106c76e73c0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36361092" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Chart : System.Windows.Forms.Control, IDisposable, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Chart extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Chart" />
  <TypeSignature Language="VB.NET" Value="Public Class Chart&#xA;Inherits Control&#xA;Implements IDisposable, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Chart : System::Windows::Forms::Control, IDisposable, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Chart = class&#xA;    inherit Control&#xA;    interface ISupportInitialize&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.DataVisualization.Charting.ChartWinDesignerSerializer, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataVisualization.Charting.ChartWinDesigner, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DisplayName("Chart")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataVisualization.Charting.Chart), "ChartControl.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serves as the root class of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會公開的所有屬性、 方法和圖表 Windows 控制項的事件。  
  
 兩個重要屬性<xref:System.Windows.Forms.DataVisualization.Charting.Chart>類別<xref:System.Windows.Forms.DataVisualization.Charting.Chart.Series%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas%2A>屬性，兩者都是集合屬性。 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Series%2A>集合屬性儲存區<xref:System.Windows.Forms.DataVisualization.Charting.Series>物件，用來儲存資料所要顯示，以及該資料的屬性。 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas%2A>集合屬性儲存區<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>主要用來繪製使用一組軸的一或多個圖表的物件。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Chart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Chart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個建構函式建立的新執行個體<xref:System.Windows.Forms.DataVisualization.Charting.Chart>在執行階段類別。  
  
 不過，為了簡單起見，建議您建立<xref:System.Windows.Forms.DataVisualization.Charting.Chart>在設計階段的執行個體。  
  
 這是根物件的<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AlignDataPointsByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aligns data points using their axis labels.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel();" />
      <MemberSignature Language="F#" Value="member this.AlignDataPointsByAxisLabel : unit -&gt; unit" Usage="chart.AlignDataPointsByAxisLabel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aligns data points along the X axis using their axis labels. Applicable when multiple series are indexed and their X-values are strings.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (series As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::String ^ series);" />
      <MemberSignature Language="F#" Value="member this.AlignDataPointsByAxisLabel : string -&gt; unit" Usage="chart.AlignDataPointsByAxisLabel series" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="series">A comma-separated list of series that will have their data points aligned to the X axis using the data point axis labels.</param>
        <summary>Aligns data points from different series along the X axis using their axis labels. The specified series in the chart are aligned using an ascending sort order.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來將不同的序列，沿著 X 軸，使用其軸標籤，從資料點對齊和時，適用：  
  
-   多個數列會顯示，而且會編製索引;也就是說，所有資料點都有<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A>為 0，或<xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A>屬性是`true`。  
  
-   所有資料點都有而言是唯一的非空白的軸標籤它們<xref:System.Windows.Forms.DataVisualization.Charting.Series>。 如果它們不是唯一的就會擲回例外狀況。  
  
 這種情況是非常普遍，當資料繫結結果會在多個數列，建立和`string`值會用於 x 軸值。  
  
 多個索引時，會引發兩個問題會繪製數列，並使用設定 X 值`string`值：  
  
-   無法保證不同數列使用相同的 X 值字串中的資料點將會繪製在 X 軸相同的索引。  
  
-   只有第一個數列中的資料點軸標籤將會顯示，即使其他數列具有相同索引中的資料點軸標籤太。  
  
 根據預設，點繪製其數列中儲存的順序。 若要指定排序次序，請使用`AlignDataPointsByAxisLabel`具有方法多載`sortingOrder`參數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::Windows::Forms::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberSignature Language="F#" Value="member this.AlignDataPointsByAxisLabel : System.Windows.Forms.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="chart.AlignDataPointsByAxisLabel sortingOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="sortingOrder">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> object that indicates if ascending or descending sort order is used on axis labels, which in turn determines the order by which points that previously occupied the same axis space are displayed.</param>
        <summary>Aligns data points using their axis labels. All series in the chart are aligned, using the specified sort order.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series, System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series, valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (series As String, sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::String ^ series, System::Windows::Forms::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberSignature Language="F#" Value="member this.AlignDataPointsByAxisLabel : string * System.Windows.Forms.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="chart.AlignDataPointsByAxisLabel (series, sortingOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="series">A comma-separated list of series that should be aligned by axis label.</param>
        <param name="sortingOrder">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if ascending or descending sort order is used on axis labels, which in turn determines the order by which points that previously occupied the same axis space are displayed.</param>
        <summary>Aligns data points using their axis labels.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來將不同的序列，沿著 X 軸，使用其軸標籤，從資料點對齊和時，適用：  
  
-   多個數列會顯示，而且會編製索引;也就是說，所有資料點都有<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A>為 0，或<xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A>屬性是`true`。  
  
-   所有資料點都有而言是唯一的非空白的軸標籤它們<xref:System.Windows.Forms.DataVisualization.Charting.Series>。 如果它們不是唯一的就會擲回例外狀況。  
  
 這種情況是非常普遍，當資料繫結結果會在多個數列，建立和`string`值會用於 x 軸值。  
  
 多個索引時，會引發兩個問題會繪製數列，並使用設定 X 值`string`值：  
  
-   無法保證不同數列使用相同的 X 值字串中的資料點將會繪製在 X 軸相同的索引。  
  
-   只有第一個數列中的資料點軸標籤將會顯示，即使其他數列具有相同索引中的資料點軸標籤太。  
  
 根據預設，點繪製其數列中儲存的順序。 若要指定排序次序，請使用`AlignDataPointsByAxisLabel`具有方法多載`sortingOrder`參數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPlaced">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationPlaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationPlaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPlaced" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationPlaced As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AnnotationPlaced;" />
      <MemberSignature Language="F#" Value="member this.AnnotationPlaced : EventHandler " Usage="member this.AnnotationPlaced : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the end-user places an annotation on the chart.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationPositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationPositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationPositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AnnotationPositionChanged;" />
      <MemberSignature Language="F#" Value="member this.AnnotationPositionChanged : EventHandler " Usage="member this.AnnotationPositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the annotation position is changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPositionChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; AnnotationPositionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; AnnotationPositionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPositionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationPositionChanging As EventHandler(Of AnnotationPositionChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::AnnotationPositionChangingEventArgs ^&gt; ^ AnnotationPositionChanging;" />
      <MemberSignature Language="F#" Value="member this.AnnotationPositionChanging : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; " Usage="member this.AnnotationPositionChanging : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the annotation position is about to change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Annotations">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnnotationCollection Annotations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AnnotationCollection Annotations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Annotations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Annotations As AnnotationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AnnotationCollection ^ Annotations { System::Windows::Forms::DataVisualization::Charting::AnnotationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Annotations : System.Windows.Forms.DataVisualization.Charting.AnnotationCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Annotations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.AnnotationCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnnotationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a collection that stores the chart annotations.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationCollection" />物件，用來儲存圖表註解。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有圖表註解會儲存在這個集合屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AnnotationSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.AnnotationSelectionChanged : EventHandler " Usage="member this.AnnotationSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a selection of the annotation is changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AnnotationTextChanged;" />
      <MemberSignature Language="F#" Value="member this.AnnotationTextChanged : EventHandler " Usage="member this.AnnotationTextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the annotation text is changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AntiAliasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles AntiAliasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles AntiAliasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.AntiAliasing" />
      <MemberSignature Language="VB.NET" Value="Public Property AntiAliasing As AntiAliasingStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AntiAliasingStyles AntiAliasing { System::Windows::Forms::DataVisualization::Charting::AntiAliasingStyles get(); void set(System::Windows::Forms::DataVisualization::Charting::AntiAliasingStyles value); };" />
      <MemberSignature Language="F#" Value="member this.AntiAliasing : System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.AntiAliasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles), "All")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether anti-aliasing is used when text and graphics are drawn.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles" />列舉值，決定當繪製文字和圖形時，是否使用消除鋸齒。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 消除鋸齒 smoothens 出 「 鋸齒狀邊緣 」 填補與中繼的色彩的像素為單位，就不會繪製矩形的圖表的邊緣變平滑特別有效。 比方說，消除鋸齒折線圖和圓形圖，非常有效，但不是有效的橫條和直條圖。  
  
 消除鋸齒可以套用至文字及/或圖形的基本型別，例如矩形、 圓形和其他等等。  
  
 請注意該消除鋸齒會影響效能。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPaletteColors">
      <MemberSignature Language="C#" Value="public void ApplyPaletteColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPaletteColors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.ApplyPaletteColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPaletteColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPaletteColors();" />
      <MemberSignature Language="F#" Value="member this.ApplyPaletteColors : unit -&gt; unit" Usage="chart.ApplyPaletteColors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the automatically assigned series and data point colors, to allow programmatic access at run time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DataVisualization.Charting.Chart>色彩會自動指派給執行階段、 沒有方法知道色彩將會呈現圖表時，時間之前，先`Color`自動指派值的屬性會傳回<xref:System.Drawing.Color.Empty>這一次。  
  
 如果您呼叫<xref:System.Windows.Forms.DataVisualization.Charting.Chart.ApplyPaletteColors%2A>，數列和資料點的色彩會設定方法，如此便能以程式設計方式存取。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisScrollBarClicked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; AxisScrollBarClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; AxisScrollBarClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisScrollBarClicked" />
      <MemberSignature Language="VB.NET" Value="Public Event AxisScrollBarClicked As EventHandler(Of ScrollBarEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ScrollBarEventArgs ^&gt; ^ AxisScrollBarClicked;" />
      <MemberSignature Language="F#" Value="member this.AxisScrollBarClicked : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; " Usage="member this.AxisScrollBarClicked : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the axis scroll bar is clicked by the end-user.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AxisViewChanged As EventHandler(Of ViewEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ViewEventArgs ^&gt; ^ AxisViewChanged;" />
      <MemberSignature Language="F#" Value="member this.AxisViewChanged : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; " Usage="member this.AxisViewChanged : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the axis scale view position or size is changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisViewChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event AxisViewChanging As EventHandler(Of ViewEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ViewEventArgs ^&gt; ^ AxisViewChanging;" />
      <MemberSignature Language="F#" Value="member this.AxisViewChanging : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; " Usage="member this.AxisViewChanging : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the axis scale view position or size is about to change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the background color of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> object.</summary>
        <value>A<see cref="T:System.Drawing.Color" />值用來繪製圖表的背景色彩。 預設色彩為 <see cref="System.Drawing.Color.White" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以為任何有效的 ARGB （alpha、 紅、 綠、 藍色） 值設定這個屬性。 請注意，針對<xref:System.Windows.Forms.DataVisualization.Charting.Chart>物件時，無法設定 alpha 元件為 255 以外的值。 這也表示，如<xref:System.Windows.Forms.DataVisualization.Charting.Chart>僅物件，<xref:System.Drawing.Color.Transparent%2A>值不能使用。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A>值將會是如果您要用於背景漸層色彩使用的第一個色彩。  
  
 Alpha 值會控制色彩的不透明度。 如果您設定此色彩為"透明"— 也就是如果您使用 0 的 alpha 值-無色彩會指派給標題的背景。 如此一來，背景會變成透明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Windows::Forms::DataVisualization::Charting::GradientStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Windows.Forms.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the orientation for the background gradient of a <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control. Also determines whether a gradient is used.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" />列舉，指定背景漸層的圖表，以及是否使用漸層的方向。 預設值是 <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A>屬性來判斷是否<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項會顯示漸層和用來判斷一個漸層的方向。  
  
 如需可用的模式的清單，請參閱<xref:System.Windows.Forms.DataVisualization.Charting.GradientStyle>列舉型別。  
  
 若要使用漸層色彩：  
  
 設定圖表背景使用的主要色彩<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A>屬性。  
  
 設定圖表背景使用的次要色彩<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A>屬性。  
  
 設定此<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A>屬性所需的漸層樣式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackgroundImage" /> property is not used. Use the <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage" /> property instead.</summary>
        <value>
          <see cref="T:System.Drawing.Image" /> 物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the hatching style of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" />列舉，指定影線樣式<see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />控制項。 預設值是 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle>列舉值會指定使用類型的筆刷的影線樣式<xref:System.Drawing.Drawing2D.HatchBrush>。 規劃圖樣包含透明的背景色彩和背景上繪製的直線。  
  
 如需可用影線樣式的清單，請參閱<xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle>列舉型別。  
  
 **請注意**影線線條的色彩由<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImage : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the background image of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see langword="string" />值，表示影像檔案的 URL。 預設值為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性定義的背景影像路徑<xref:System.Windows.Forms.DataVisualization.Charting.Chart>圖例中，而且可以是絕對或相對的 URL。  
  
 若要設定影像位置，使用<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A>屬性。  
  
 您也可以指定其中一個設定為"透明 」 映像所顯示的色彩<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor%2A>屬性。  
  
 映像可能源自任何支援的.NET Framework 中，包括圖示的有效圖形檔。  
  
 背景影像的優先順序高於其他背景屬性，例如漸層色彩。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageAlignment : System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the background image alignment used for the <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> drawing mode.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" />列舉值，指定圖表的背景影像對齊。 預設值是 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性決定的背景影像的對齊方式<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項; 它僅適用於當<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A>屬性設定為<xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control that will be displayed as transparent.</summary>
        <value>A<see cref="T:System.Drawing.Color" />時，會顯示透明繪製圖表影像的值。 預設值是 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageWrapMode : System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the drawing mode for the background image of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" />列舉值，指定的圖表背景影像繪圖模式。 預設值是 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性會決定影像顯示的方式，例如，並排顯示、 縮放，等等。  
  
 如果縮放的影像，將會自動縮放以符合圖表的範圍內。 如果影像會並排顯示，它會重複繪製，從圖表的左上角開始。  
  
 如需可用文繞圖模式的詳細資訊，請參閱<xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode>列舉主題。  
  
 如果<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A>屬性設定為<xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode>，其中繪製影像的位置由<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment%2A>屬性設定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the secondary color of the chart background.</summary>
        <value>A<see cref="T:System.Drawing.Color" />值，表示圖表背景次要色彩。 預設值是 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A>屬性決定的次要背景色彩的許多<xref:System.Windows.Forms.DataVisualization.Charting.Chart>物件，並套用漸層色彩時，才能使用。  
  
 您可以設定<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A>任何有效的 ARGB （alpha、 紅、 綠、 藍色） 值。  
  
 如果使用影線，<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A>屬性會決定圖表影線線條的色彩。  
  
 若要使用的圖表背景的漸層色彩：  
  
-   設定主要色彩與<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A>屬性。  
  
-   設定與次要色彩<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A>屬性。  
  
-   設定<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A>屬性所需的漸層樣式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="chart.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals to the object that initialization is starting.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of the chart border.</summary>
        <value>A<see cref="T:System.Drawing.Color" />用來繪製圖表框線的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得或設定框線色彩，請使用<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor%2A>改為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the style of the border.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" />列舉值，指定框線的樣式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderlineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderlineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderlineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of the border line.</summary>
        <value>A<see cref="T:System.Drawing.Color" />值用來繪製框線的線條。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle BorderlineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderlineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the style of the border line.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" />列舉值，指定框線的線條樣式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineWidth">
      <MemberSignature Language="C#" Value="public int BorderlineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderlineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderlineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderlineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the width of the border line.</summary>
        <value>
          <see langword="integer" />指定框線的線條寬度的值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderSkin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.BorderSkin BorderSkin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.BorderSkin BorderSkin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderSkin" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderSkin As BorderSkin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::BorderSkin ^ BorderSkin { System::Windows::Forms::DataVisualization::Charting::BorderSkin ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::BorderSkin ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderSkin : System.Windows.Forms.DataVisualization.Charting.BorderSkin with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderSkin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.LegendConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.BorderSkin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.BorderSkin" /> object, which provides border skin functionality for the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.BorderSkin" />物件提供圖表的框線外觀的功能。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來指定圖表的框線外觀。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or set s the width of the chart border.</summary>
        <value>
          <see langword="integer" />值，決定框線的寬度，以像素的圖表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要取得或設定框線寬度，使用的<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth%2A>改為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildNumber">
      <MemberSignature Language="C#" Value="public string BuildNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuildNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BuildNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BuildNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BuildNumber : string" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BuildNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the build number of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see langword="string" />表示 chart 控制項的組建編號。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartAreas">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection ChartAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection ChartAreas" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartAreas As ChartAreaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartAreaCollection ^ ChartAreas { System::Windows::Forms::DataVisualization::Charting::ChartAreaCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChartAreas : System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a read-only <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" /> object that is used to store <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> objects.</summary>
        <value>唯讀<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" />物件，其中包含集合<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" />物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此集合屬性可讓您存取<xref:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection>物件，其中儲存<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>物件，也會提供方法和屬性可用來操作集合。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> 物件可用來繪製一或多個圖表。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="chart.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, returns the custom <see cref="T:System.Windows.Forms.AccessibleObject" /> for the entire chart.</summary>
        <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> for the chart.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorPositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CursorPositionChanged As EventHandler(Of CursorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CursorEventArgs ^&gt; ^ CursorPositionChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorPositionChanged : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " Usage="member this.CursorPositionChanged : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the cursor position is changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorPositionChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CursorPositionChanging As EventHandler(Of CursorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CursorEventArgs ^&gt; ^ CursorPositionChanging;" />
      <MemberSignature Language="F#" Value="member this.CursorPositionChanging : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " Usage="member this.CursorPositionChanging : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the cursor position is about to change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Customize">
      <MemberSignature Language="C#" Value="public event EventHandler Customize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Customize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.Customize" />
      <MemberSignature Language="VB.NET" Value="Public Event Customize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Customize;" />
      <MemberSignature Language="F#" Value="member this.Customize : EventHandler " Usage="member this.Customize : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs just before the chart image is drawn. Use this event to customize the chart picture.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeLegend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend" />
      <MemberSignature Language="VB.NET" Value="Public Event CustomizeLegend As EventHandler(Of CustomizeLegendEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CustomizeLegendEventArgs ^&gt; ^ CustomizeLegend;" />
      <MemberSignature Language="F#" Value="member this.CustomizeLegend : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; " Usage="member this.CustomizeLegend : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the chart legend must be customized.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBind();" />
      <MemberSignature Language="F#" Value="member this.DataBind : unit -&gt; unit" Usage="chart.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Data binds the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control to a data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會繫結<xref:System.Windows.Forms.DataVisualization.Charting.Chart>到指定的資料來源的控制項。  
  
 資料來源設定為圖表，而且沒有其他資料作業是必要的<xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind%2A>方法沒有明確呼叫。 在這些情況下，<xref:System.Windows.Forms.DataVisualization.Charting.Chart>本身將資料繫結至之前所呈現的資料來源。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindCrossTable">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Data binds a chart to the table, with one series created per unique value in a given column.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindCrossTable (dataSource As IEnumerable, seriesGroupByField As String, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindCrossTable(System::Collections::IEnumerable ^ dataSource, System::String ^ seriesGroupByField, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindCrossTable : System.Collections.IEnumerable * string * string * string * string -&gt; unit" Usage="chart.DataBindCrossTable (dataSource, seriesGroupByField, xField, yFields, otherFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">The data source that is data bound by a chart.</param>
        <param name="seriesGroupByField">The name of the field used to group data into the series.</param>
        <param name="xField">The name of the field for X values.</param>
        <param name="yFields">A comma-separated list of name(s) of the field(s) for Y value(s).</param>
        <param name="otherFields">The other data point properties that can be bound.</param>
        <summary>Data binds a chart to the table, with one series created per unique value in a given column.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 數列將會自動加入至圖表，根據中唯一值數目指定`seriesGroupByField`資料行的資料來源; 亦即，數列建立相依於資料行群組。  
  
 資料來源可以是<xref:System.Data.OleDb.OleDbDataReader>，<xref:System.Data.SqlClient.SqlDataReader>或<xref:System.Data.DataView>物件。 請注意，所有集合，都實作<xref:System.Collections.IEnumerable>介面可用。  
  
 其他資料點屬性除了可以繫結的 X 和 Y 值。 格式為： PointProperty = 欄位 {} [格式] [，PointProperty = 欄位 [{格式}]]。 例如: 「 工具提示 = 價格 {C1}，Href = WebSiteName"。  
  
這些資料點屬性如下： 

- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A?displayProperty=nameWithType> 
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A?displayProperty=nameWithType>其中是的自訂屬性的名稱。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindCrossTable (dataSource As IEnumerable, seriesGroupByField As String, xField As String, yFields As String, otherFields As String, sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindCrossTable(System::Collections::IEnumerable ^ dataSource, System::String ^ seriesGroupByField, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields, System::Windows::Forms::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberSignature Language="F#" Value="member this.DataBindCrossTable : System.Collections.IEnumerable * string * string * string * string * System.Windows.Forms.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="chart.DataBindCrossTable (dataSource, seriesGroupByField, xField, yFields, otherFields, sortingOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="dataSource">The data source that is data bound by a chart.</param>
        <param name="seriesGroupByField">The name of the field used to group data into the series.</param>
        <param name="xField">The name of the field for X values.</param>
        <param name="yFields">A comma-separated list of name(s) of the field(s) for Y value(s).</param>
        <param name="otherFields">The other data point properties that can be bound.</param>
        <param name="sortingOrder">The order in which the series will be sorted by group field values.</param>
        <summary>Data binds a chart to the table, with one series created per unique value in a given column.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 數列將會自動加入至圖表，根據中唯一值數目指定`seriesGroupByField`資料行的資料來源; 亦即，數列建立相依於資料行群組。  
  
 資料來源可以是<xref:System.Data.OleDb.OleDbDataReader>，<xref:System.Data.SqlClient.SqlDataReader>或<xref:System.Data.DataView>物件。  
  
 請注意，所有集合，都實作<xref:System.Collections.IEnumerable>介面可用。  
  
 其他資料點屬性除了可以繫結的 X 和 Y 值。 格式為： PointProperty = 欄位 {} [格式] [，PointProperty = 欄位 [{格式}]]。 例如: 「 工具提示 = 價格 {C1}，Href = WebSiteName"。  
  
這些資料點屬性如下： 

- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A>這是自訂的屬性名稱  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindTable">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Automatically creates and binds series data to the specified data table.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindTable (dataSource As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindTable(System::Collections::IEnumerable ^ dataSource);" />
      <MemberSignature Language="F#" Value="member this.DataBindTable : System.Collections.IEnumerable -&gt; unit" Usage="chart.DataBindTable dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="dataSource">The data source that is data bound by a chart, which can be any <see cref="T:System.Collections.IEnumerable" /> object.</param>
        <summary>Automatically creates and binds series data to the specified data table.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料表的每個資料行會成為數列，而每個資料行的一個數列的 Y 值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource, string xField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource, string xField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindTable (dataSource As IEnumerable, xField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindTable(System::Collections::IEnumerable ^ dataSource, System::String ^ xField);" />
      <MemberSignature Language="F#" Value="member this.DataBindTable : System.Collections.IEnumerable * string -&gt; unit" Usage="chart.DataBindTable (dataSource, xField)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">The data source that is data bound by a chart, which can be any <see cref="T:System.Collections.IEnumerable" /> object.</param>
        <param name="xField">The name of the field used for the series X-values.</param>
        <summary>Automatically creates and binds series data to the specified data table, and optionally populates X-values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料表的每個資料行會成為數列，而每個資料行的一個數列的 Y 值。  
  
 也可以提供數列的 X 值欄位。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataManipulator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataManipulator DataManipulator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.DataManipulator DataManipulator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataManipulator As DataManipulator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DataManipulator ^ DataManipulator { System::Windows::Forms::DataVisualization::Charting::DataManipulator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataManipulator : System.Windows.Forms.DataVisualization.Charting.DataManipulator" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataManipulator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> object that provides methods and properties that handle data.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" />提供方法和處理資料之屬性的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在執行階段来使用這個屬性：  
  
-   將 Y 值複製。  
  
-   篩選資料。  
  
-   群組資料。  
  
-   遺失的資料取代空點。  
  
-   將資料匯出至<xref:System.Data.DataSet>物件。  
  
-   排序資料。  
  
-   套用至資料的財務公式。  
  
 請參閱<xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator>類別概觀，以取得詳細資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the data source for the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> object.</summary>
        <value>
          <see cref="T:System.Object" />表示的資料來源<see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以繫結至資料來源，在任何時間使用一系列中的資料點<xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataSource%2A>屬性。  
  
 若要強制圖表，即可將繫結至資料來源，請呼叫<xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind%2A>方法。  
  
 以下是您可以使用做為資料來源的物件清單：  
  
-   DataView  
  
-   資料讀取器 （SQL、 OleDB）  
  
-   DataSet  
  
-   DataTable  
  
-   繫結來源  
  
-   IDataSource  
  
-   陣列  
  
-   清單  
  
-   所有的可列舉物件  
  
-   SqlCommand / OleDbCommand （DataSource 資料繫結只）  
  
-   Add / OleDbDataAdapter （DataSource 資料繫結只）  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default control size.</summary>
        <value>A<see cref="T:System.Drawing.Size" />物件，代表控制項的預設大小。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="chart.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both unmanaged and managed resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases unmanaged and, optionally, managed resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="chart.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals to the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> object that initialization is complete.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font properties of the control.</summary>
        <value>A<see cref="T:System.Drawing.Font" />物件，代表控制項的文字字型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text color of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see cref="T:System.Drawing.Color" />值，指定圖表的文字色彩。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性不適用於這個類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.FormatNumber" />
      <MemberSignature Language="VB.NET" Value="Public Event FormatNumber As EventHandler(Of FormatNumberEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::FormatNumberEventArgs ^&gt; ^ FormatNumber;" />
      <MemberSignature Language="F#" Value="member this.FormatNumber : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; " Usage="member this.FormatNumber : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a numeric value has to be converted to a string.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElementOutline">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartElementOutline GetChartElementOutline (object element, System.Windows.Forms.DataVisualization.Charting.ChartElementType elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ChartElementOutline GetChartElementOutline(object element, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.GetChartElementOutline(System.Object,System.Windows.Forms.DataVisualization.Charting.ChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChartElementOutline (element As Object, elementType As ChartElementType) As ChartElementOutline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::ChartElementOutline ^ GetChartElementOutline(System::Object ^ element, System::Windows::Forms::DataVisualization::Charting::ChartElementType elementType);" />
      <MemberSignature Language="F#" Value="member this.GetChartElementOutline : obj * System.Windows.Forms.DataVisualization.Charting.ChartElementType -&gt; System.Windows.Forms.DataVisualization.Charting.ChartElementOutline" Usage="chart.GetChartElementOutline (element, elementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartElementOutline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Object" />
        <Parameter Name="elementType" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="element">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> object.</param>
        <param name="elementType">The type of the element.</param>
        <summary>Returns the chart element outline.</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementOutline" /> object that contains:  -   An array of points in absolute coordinates that can be used as outline markers around this chart element.  -   A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object for drawing an outline around this chart element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`chartElement`不是圖表的一部分或`elementType`無法結合`chartElement`，結果將包含標記點的空陣列。 標記點會朝順時針方向排序。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="chart.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type of requested chart service.</param>
        <summary>Returns the requested chart service.</summary>
        <returns>An <see cref="T:System.Object" /> that represents the service type, or <see langword="null" /> if the service cannot be found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToolTipText">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; GetToolTipText;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; GetToolTipText" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.GetToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Event GetToolTipText As EventHandler(Of ToolTipEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ToolTipEventArgs ^&gt; ^ GetToolTipText;" />
      <MemberSignature Language="F#" Value="member this.GetToolTipText : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; " Usage="member this.GetToolTipText : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before showing the tooltip to get the tooltip text.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determines the chart element, if any, that is located at a point defined by the given X and Y coordinates.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法來決定圖表元素，如果有的話，位於指定點上。  
  
 這個方法通常用於某些滑鼠相關之事件 — 比方說， <xref:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown%2A>— 若要判斷其使用者的圖表項目已按下。 然後會使用取自事件參數的 X 和 Y 滑鼠座標`x`和`y`這個方法呼叫的參數值。   
  
 內容<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>傳回物件可以再用來判斷已按下哪個圖表項目;<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>物件也提供選取，實際物件的執行個體，如果有的話。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.DataVisualization.Charting.HitTestResult" Usage="chart.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The X-coordinate value of the point the user clicked.</param>
        <param name="y">The Y-coordinate value of the point the user clicked.</param>
        <summary>Determines the chart element, if any, that is located at a point defined by the given X and Y coordinates.</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> object, which provides information concerning the chart element, if any, that is at the specified location.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法，以決定圖表元素，如果有的話，位於指定點。  
  
 內容<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>傳回物件可以再用來判斷已按下哪個圖表項目;<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>物件也提供選取，實際物件的執行個體，如果有的話。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y, bool ignoreTransparent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, bool ignoreTransparent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, ignoreTransparent As Boolean) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y, bool ignoreTransparent);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int * bool -&gt; System.Windows.Forms.DataVisualization.Charting.HitTestResult" Usage="chart.HitTest (x, y, ignoreTransparent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">The X-coordinate value of the point the user clicked on.</param>
        <param name="y">The Y-coordinate value of the point the user clicked on.</param>
        <param name="ignoreTransparent">
          <see langword="true" /> to ignore transparent elements; otherwise, <see langword="false" />.</param>
        <summary>Determines the chart element, if any, that is located at a point defined by given X and Y coordinates. Transparent elements can optionally be ignored.</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> object, which provides information concerning the chart element, if any, that is at the specified location.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法，以決定圖表元素，如果有的話，位於指定點。  
  
 若要忽略透明項目，設定`ignoreTransparent`參數`true`。  
  
 內容<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>傳回物件可以再用來判斷已按下哪個圖表項目;<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>物件也提供選取，實際物件的執行個體，如果有的話。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y, System.Windows.Forms.DataVisualization.Charting.ChartElementType requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, requestedElement As ChartElementType) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y, System::Windows::Forms::DataVisualization::Charting::ChartElementType requestedElement);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int * System.Windows.Forms.DataVisualization.Charting.ChartElementType -&gt; System.Windows.Forms.DataVisualization.Charting.HitTestResult" Usage="chart.HitTest (x, y, requestedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="requestedElement" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="x">The X-coordinate value of the point the user clicked on.</param>
        <param name="y">The Y-coordinate value of the point the user clicked on.</param>
        <param name="requestedElement">A flag that determines the chart element type to be tested.</param>
        <summary>Determines if a chart element of a given type is located at a point defined by given X and Y coordinates.</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> object, which provides information concerning the chart element, if any, that is at the specified location.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫此方法以判斷指定之類型的圖表項目是否位於指定點。  
  
 內容<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>傳回物件可以再用來判斷已按下哪個圖表項目;<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>物件也提供選取，實際物件的執行個體，如果有的話。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult[] HitTest (int x, int y, bool ignoreTransparent, params System.Windows.Forms.DataVisualization.Charting.ChartElementType[] requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult[] HitTest(int32 x, int32 y, bool ignoreTransparent, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType[] requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean,System.Windows.Forms.DataVisualization.Charting.ChartElementType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, ignoreTransparent As Boolean, ParamArray requestedElement As ChartElementType()) As HitTestResult()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::DataVisualization::Charting::HitTestResult ^&gt; ^ HitTest(int x, int y, bool ignoreTransparent, ... cli::array &lt;System::Windows::Forms::DataVisualization::Charting::ChartElementType&gt; ^ requestedElement);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int * bool * System.Windows.Forms.DataVisualization.Charting.ChartElementType[] -&gt; System.Windows.Forms.DataVisualization.Charting.HitTestResult[]" Usage="chart.HitTest (x, y, ignoreTransparent, requestedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
        <Parameter Name="requestedElement" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x">The X-coordinate for the specified data point.</param>
        <param name="y">The Y-coordinate for the specified data point.</param>
        <param name="ignoreTransparent">
          <see langword="true" /> to ignore transparent elements; otherwise, <see langword="false" />.</param>
        <param name="requestedElement">An array of <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementType" /> objects that specify the types to test for, in order to filter the result. If omitted, checking for element types will be ignored and all element types will be valid.</param>
        <summary>Determines whether a chart element that is one of the specified types is located at a point defined by the given X and Y coordinates.</summary>
        <returns>An array of <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> objects that provides information about the chart element, if any, found at the specified location. The array contains at least one element, which can be <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartElementType.Nothing" />. The objects in the result are sorted from the top to the bottom of different layers of control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法來判斷的量測計項目，如果有的話，位於指定點。 這個方法通常用於某些滑鼠相關的事件，例如<xref:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown%2A>，以決定其量測計，使用者按下的項目。 從事件參數取得 X 和 Y 滑鼠座標則可用於這個方法呼叫的 X 和 Y 參數值。   
  
 傳回之屬性<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>物件然後可以用來判斷已按下哪個圖表項目;<xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult>物件也提供選取，實際物件的執行個體，如果有的話。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Images" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Images As NamedImagesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::NamedImagesCollection ^ Images { System::Windows::Forms::DataVisualization::Charting::NamedImagesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Images : System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Images" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" /> object that stores <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImage" /> objects for the chart.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" />物件，其中包含的集合<see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImage" />物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性來加入<xref:System.Windows.Forms.DataVisualization.Charting.NamedImage>物件和移除<xref:System.Windows.Forms.DataVisualization.Charting.NamedImage>物件從<xref:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection>物件<xref:System.Windows.Forms.DataVisualization.Charting.Chart>。 此集合屬性，在僅執行階段中。  
  
 映像，也就是從型別衍生的物件<xref:System.Drawing.Image>，例如<xref:System.Drawing.Bitmap>，也就是以動態方式建立 — 可以儲存在這個集合，並再指派一次更新任何映像相關<xref:System.Windows.Forms.DataVisualization.Charting.Chart>屬性，例如<xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage%2A>。  
  
 當您指派<xref:System.Windows.Forms.DataVisualization.Charting.NamedImage>物件中的映像相關屬性<xref:System.Windows.Forms.DataVisualization.Charting.Chart>類別中，使用的名稱<xref:System.Windows.Forms.DataVisualization.Charting.NamedImage>物件`string`映像相關屬性的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invalidates the entire surface of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> and causes the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control to be redrawn.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="override this.Invalidate : unit -&gt; unit" Usage="chart.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidates the entire surface of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> and causes the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control to be redrawn.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="override this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="chart.Invalidate rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> object that specifies the area to invalidate.</param>
        <summary>Invalidates the specified area of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會加入至指定的區域<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項的更新區域中，也就是將在下一個繪製作業中重新繪製的區域。 這個方法也會使繪製訊息傳送至<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoftShadows">
      <MemberSignature Language="C#" Value="public bool IsSoftShadows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSoftShadows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.IsSoftShadows" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSoftShadows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSoftShadows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSoftShadows : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.IsSoftShadows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a flag that determines if a smooth gradient is applied when shadows are drawn.</summary>
        <value>
          <see langword="true" /> 如果使用平滑化; 繪製陰影否則， <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果值`ShadowOffset`一系列的屬性，資料點，圖表區域或圖例為非零，則使用色彩來設定會套用陰影其`ShadowColor`屬性。  
  
 如果值<xref:System.Windows.Forms.DataVisualization.Charting.Chart.IsSoftShadows%2A>屬性是`true`，平滑漸層將會套用至陰影。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legends">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendCollection Legends { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LegendCollection Legends" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Legends" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Legends As LegendCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendCollection ^ Legends { System::Windows::Forms::DataVisualization::Charting::LegendCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Legends : System.Windows.Forms.DataVisualization.Charting.LegendCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Legends" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCollection" /> that stores all <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> objects used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCollection" />物件，其中包含<see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" />圖表所使用的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個集合屬性會儲存所有<xref:System.Windows.Forms.DataVisualization.Charting.Legend>所使用的物件<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadTemplate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Loads a template into the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control from a specified source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadTemplate(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.LoadTemplate : System.IO.Stream -&gt; unit" Usage="chart.LoadTemplate stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream to load from.</param>
        <summary>Loads a template into the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control from an image stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要載入的範本，從資料流，例如記憶體資料流、 檔案資料流，以及其他等等，請使用這個方法。  
  
 請務必設定<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>屬性`true`之前儲存的範本<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A>方法。  
  
 如果載入的範本有兩個資料數列，數列的外觀屬性會依序套用至圖表。 換句話說，第一個範本數列外觀的內容指派給第一個數列的圖表，第二個範本數列外觀屬性會套用到第二個數列的圖表，然後第一個範本數列會再次使用第三個數列的圖表，依此類推。 同樣適用於圖表區域和任何其他外觀屬性的集合。  
  
 範本可以用來模擬自訂調色盤。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadTemplate (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadTemplate(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.LoadTemplate : string -&gt; unit" Usage="chart.LoadTemplate name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The file name of the template to load. You must specify the full path of the template to be loaded from the disk.</param>
        <summary>Loads a template with the specified filename from the disk.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name`參數都必須使用完整路徑，例如 C:\MyPic.jpg。 請注意，您也必須指定檔案的副檔名。  
  
 這個方法會將範本載入從使用儲存的磁碟<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A>方法。  
  
 請務必設定<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A>屬性`true`之前儲存的範本<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A>方法。  
  
 如果載入的範本有兩個資料數列，數列的外觀屬性會依序套用至圖表。 換句話說，第一個範本數列外觀的內容指派給第一個數列的圖表，第二個範本數列外觀屬性會套用到第二個數列的圖表，然後第一個範本數列會再次使用第三個數列的圖表，依此類推。 同樣適用於圖表區域和任何其他外觀屬性的集合。  
  
 範本可以用來模擬自訂調色盤。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected override void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCursorChanged : EventArgs -&gt; unit" Usage="chart.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> method and raises the <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging" /> and <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged" /> events.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomize">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCustomize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomize();" />
      <MemberSignature Language="F#" Value="abstract member OnCustomize : unit -&gt; unit&#xA;override this.OnCustomize : unit -&gt; unit" Usage="chart.OnCustomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.Customize" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeLegend">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeLegend (System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection legendItems, string legendName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeLegend(class System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection legendItems, string legendName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCustomizeLegend(System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomizeLegend (legendItems As LegendItemsCollection, legendName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomizeLegend(System::Windows::Forms::DataVisualization::Charting::LegendItemsCollection ^ legendItems, System::String ^ legendName);" />
      <MemberSignature Language="F#" Value="abstract member OnCustomizeLegend : System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection * string -&gt; unit&#xA;override this.OnCustomizeLegend : System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection * string -&gt; unit" Usage="chart.OnCustomizeLegend (legendItems, legendName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="legendItems" Type="System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" />
        <Parameter Name="legendName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="legendItems">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> object.</param>
        <param name="legendName">The name of the legend.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDoubleClick : EventArgs -&gt; unit" Usage="chart.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFormatNumber">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatNumber (System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatNumber(class System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnFormatNumber(System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatNumber (e As FormatNumberEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatNumber(System::Windows::Forms::DataVisualization::Charting::FormatNumberEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormatNumber : System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs -&gt; unit&#xA;override this.OnFormatNumber : System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs -&gt; unit" Usage="chart.OnFormatNumber e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs" /> object that contains the event arguments.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.FormatNumber" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected override void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLocationChanged : EventArgs -&gt; unit" Usage="chart.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="chart.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.MouseEventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="chart.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.MouseEventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="chart.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.MouseEventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="chart.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.PaintEventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (pevent As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ pevent);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="chart.OnPaintBackground pevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent">A <see cref="T:System.PaintEventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPostPaint (System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostPaint(class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPostPaint(System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostPaint (e As ChartPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostPaint(System::Windows::Forms::DataVisualization::Charting::ChartPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostPaint : System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs -&gt; unit&#xA;override this.OnPostPaint : System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs -&gt; unit" Usage="chart.OnPostPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" /> object that contains the event arguments.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrePaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrePaint (System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrePaint(class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPrePaint(System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrePaint (e As ChartPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrePaint(System::Windows::Forms::DataVisualization::Charting::ChartPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrePaint : System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs -&gt; unit&#xA;override this.OnPrePaint : System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs -&gt; unit" Usage="chart.OnPrePaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" /> object that contains the event arguments.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="chart.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="chart.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event arguments.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="chart.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        <summary>Overrides the <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartColorPalette Palette { System::Windows::Forms::DataVisualization::Charting::ChartColorPalette get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberSignature Language="F#" Value="member this.Palette : System.Windows.Forms.DataVisualization.Charting.ChartColorPalette with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ColorPaletteEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the palette for the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette" />列舉值，決定要使用的調色盤。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 調色盤用來自動將色彩指派給資料元素，如果已符合兩個下列條件：  
  
-   資料點本身並沒有指派給他們的色彩。  
  
-   資料點所屬的資料數列也沒有指派的色彩。  
  
 如果已明確不指定任何數列或資料點的色彩，所使用的色彩取決於圖表類型和<xref:System.Windows.Forms.DataVisualization.Charting.Chart>物件的調色盤或相關聯的序列，如果指定的調色盤。  
  
> [!NOTE]
>  如果`Palette`屬性同時<xref:System.Windows.Forms.DataVisualization.Charting.Chart>和<xref:System.Windows.Forms.DataVisualization.Charting.Series>物件設為<xref:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette>，而且沒有色彩指派給相關資料數列或資料點，資料點不會被繪製，並將會顯示為"empty"的區域。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaletteCustomColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] PaletteCustomColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] PaletteCustomColors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.PaletteCustomColors" />
      <MemberSignature Language="VB.NET" Value="Public Property PaletteCustomColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ PaletteCustomColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PaletteCustomColors : System.Drawing.Color[] with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.PaletteCustomColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.ColorArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an array of custom palette colors.</summary>
        <value>陣列<see cref="T:System.Drawing.Color" />物件，代表用於圖表上數列色彩的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您需要超過 16 個色彩，或您想要將您自己的色彩套用至圖表，您必須定義自訂調色盤。 自訂調色盤可讓您在您想要在圖表上顯示的順序中新增您自己的色彩。 這種類型的調色盤來說特別有用，如果您的圖表中數列的數目在設計階段是未知的。  
  
 此屬性沒有任何作用<xref:System.Windows.Forms.DataVisualization.Charting.Chart.Palette%2A>屬性是*不*設為  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostPaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint" />
      <MemberSignature Language="VB.NET" Value="Public Event PostPaint As EventHandler(Of ChartPaintEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ChartPaintEventArgs ^&gt; ^ PostPaint;" />
      <MemberSignature Language="F#" Value="member this.PostPaint : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; " Usage="member this.PostPaint : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the chart element is painted.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrePaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint" />
      <MemberSignature Language="VB.NET" Value="Public Event PrePaint As EventHandler(Of ChartPaintEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ChartPaintEventArgs ^&gt; ^ PrePaint;" />
      <MemberSignature Language="F#" Value="member this.PrePaint : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; " Usage="member this.PrePaint : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the chart element background is painted.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Printing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.PrintingManager Printing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.PrintingManager Printing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Printing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Printing As PrintingManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::PrintingManager ^ Printing { System::Windows::Forms::DataVisualization::Charting::PrintingManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Printing : System.Windows.Forms.DataVisualization.Charting.PrintingManager" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Printing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.PrintingManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a read-only <see cref="T:System.Windows.Forms.DataVisualization.Charting.PrintingManager" /> object used for printing a chart.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.PrintingManager" />用於列印圖表物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當列印圖表時，會列印捲軸列以外的所有圖表項目。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager>物件包含下列方法，可用來列印的基本作業：  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.PageSetup%2A>： 顯示 版面設定對話方塊，可讓使用者選取的紙張大小、 紙張來源或頁面方向等。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.PrintPreview%2A>： 顯示預覽列印 對話方塊中，允許使用者縮放、 列印圖表，等等。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.Print%2A>： 列印<xref:System.Windows.Forms.DataVisualization.Charting.Chart>; 列印之前可以選擇性地顯示 [列印] 對話方塊。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="chart.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces the control to invalidate its client area and immediately redraw itself and any child controls.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingDpiX">
      <MemberSignature Language="C#" Value="public double RenderingDpiX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderingDpiX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiX" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingDpiX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RenderingDpiX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingDpiX : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(96)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the horizontal resolution of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> renderer.</summary>
        <value>A<see langword="double" />值，表示圖表的轉譯器的水平解析度。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingDpiY">
      <MemberSignature Language="C#" Value="public double RenderingDpiY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderingDpiY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiY" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingDpiY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RenderingDpiY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingDpiY : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(96)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vertical resolution of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> renderer.</summary>
        <value>A<see langword="double" />值，表示圖表的轉譯器的垂直解析度。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAutoValues">
      <MemberSignature Language="C#" Value="public void ResetAutoValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAutoValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.ResetAutoValues" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAutoValues ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAutoValues();" />
      <MemberSignature Language="F#" Value="member this.ResetAutoValues : unit -&gt; unit" Usage="chart.ResetAutoValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets automatically calculated chart property values to "Auto".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 數個圖表屬性可以設定為 「 自動 」，例如<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A>; 所呈現的圖表之前都會先計算這些屬性。 「 自動 」 通常表示為<xref:System.Double.NaN>值。  
  
 呼叫這個方法來重設其計算的值從這些屬性，以 「 自動 」 (<xref:System.Double.NaN>)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveImage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Saves the image to the specifed target.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageStream As Stream, format As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::IO::Stream ^ imageStream, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.SaveImage : System.IO.Stream * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="chart.SaveImage (imageStream, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">The stream in which the image is saved to.</param>
        <param name="format">The image format.</param>
        <summary>Saves the image to the specifed stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Windows.Forms.DataVisualization.Charting.ChartImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageStream As Stream, format As ChartImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::IO::Stream ^ imageStream, System::Windows::Forms::DataVisualization::Charting::ChartImageFormat format);" />
      <MemberSignature Language="F#" Value="member this.SaveImage : System.IO.Stream * System.Windows.Forms.DataVisualization.Charting.ChartImageFormat -&gt; unit" Usage="chart.SaveImage (imageStream, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Windows.Forms.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">The stream in which the image is saved to.</param>
        <param name="format">The chart image format.</param>
        <summary>Saves the chart image to the specified stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageFileName As String, format As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::String ^ imageFileName, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.SaveImage : string * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="chart.SaveImage (imageFileName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">The name of the file in which image is saved to.</param>
        <param name="format">The image format.</param>
        <summary>Saves an image to the specified file.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.String,System.Windows.Forms.DataVisualization.Charting.ChartImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageFileName As String, format As ChartImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::String ^ imageFileName, System::Windows::Forms::DataVisualization::Charting::ChartImageFormat format);" />
      <MemberSignature Language="F#" Value="member this.SaveImage : string * System.Windows.Forms.DataVisualization.Charting.ChartImageFormat -&gt; unit" Usage="chart.SaveImage (imageFileName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">The name of the file in which image is saved to.</param>
        <param name="format">The chart image format.</param>
        <summary>Saves the chart image to the specified file.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionRangeChanged As EventHandler(Of CursorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CursorEventArgs ^&gt; ^ SelectionRangeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionRangeChanged : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " Usage="member this.SelectionRangeChanged : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the selection start position or end position is changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionRangeChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionRangeChanging As EventHandler(Of CursorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CursorEventArgs ^&gt; ^ SelectionRangeChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectionRangeChanging : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " Usage="member this.SelectionRangeChanging : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the selection start or end position is about to change.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serializer">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartSerializer Serializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ChartSerializer Serializer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Serializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Serializer As ChartSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartSerializer ^ Serializer { System::Windows::Forms::DataVisualization::Charting::ChartSerializer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Serializer : System.Windows.Forms.DataVisualization.Charting.ChartSerializer" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Serializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" /> object that is used for chart serialization.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" />適用於圖表序列化的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性是設計階段或執行階段序列化圖表。  
  
 如需詳細的討論<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer>類別，請參閱類別概觀。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Series">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SeriesCollection Series { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.SeriesCollection Series" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Series" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Series As SeriesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::SeriesCollection ^ Series { System::Windows::Forms::DataVisualization::Charting::SeriesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Series : System.Windows.Forms.DataVisualization.Charting.SeriesCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Series" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.SeriesCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SeriesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /> object, which contains <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> objects.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" />物件包含<see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個集合屬性可讓您存取<xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection>類別，哪些商店<xref:System.Windows.Forms.DataVisualization.Charting.Series>物件，也會提供方法和屬性可用來操作這個集合。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series> 物件會儲存<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>物件，以及資料屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "300, 300")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see cref="T:System.Drawing.Size" />物件，代表控制項的大小。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressExceptions">
      <MemberSignature Language="C#" Value="public bool SuppressExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.SuppressExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressExceptions : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.SuppressExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a flag that determines whether non-critical exceptions should be suppressed.</summary>
        <value>
          <see langword="true" /> 如果應該隱藏非重大例外狀況。否則， <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您將此屬性設定為`true`，將會隱藏非關鍵的例外狀況。  
  
 當<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項無法正確繪製圖表使用的資料和所提供的其他設定，將會擲回例外狀況。 顯示例外狀況非常有用的應用程式在測試期間，雖然它們不應該顯示在發行應用程式時。  
  
> [!NOTE]
>  此屬性設定為`true`可能會隱藏使用者應用程式原始程式碼中的嚴重問題。 這項設定也可能會導致產生圖表影像，可能無法正確地表示的資料。 強烈建議這種模式，是只用於的發行組建。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAntiAliasingQuality">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.TextAntiAliasingQuality" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAntiAliasingQuality As TextAntiAliasingQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TextAntiAliasingQuality TextAntiAliasingQuality { System::Windows::Forms::DataVisualization::Charting::TextAntiAliasingQuality get(); void set(System::Windows::Forms::DataVisualization::Charting::TextAntiAliasingQuality value); };" />
      <MemberSignature Language="F#" Value="member this.TextAntiAliasingQuality : System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.TextAntiAliasingQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality), "High")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality" /> type to use when applying anti-aliasing to text.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality" />用來套用至文字的消除鋸齒的列舉值。 預設值是 <see cref="F:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality.High" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 消除鋸齒套用到文字，如果<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項將使用這個屬性來判斷要套用的文字消除鋸齒類型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Titles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TitleCollection Titles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.TitleCollection Titles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Titles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Titles As TitleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TitleCollection ^ Titles { System::Windows::Forms::DataVisualization::Charting::TitleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Titles : System.Windows.Forms.DataVisualization.Charting.TitleCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Titles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TitleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.TitleCollection" /> object that is used to store all <see cref="T:System.Windows.Forms.DataVisualization.Charting.Title" /> objects used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <value>A<see cref="T:System.Windows.Forms.DataVisualization.Charting.TitleCollection" />物件，用來儲存所有<see cref="T:System.Windows.Forms.DataVisualization.Charting.Title" />chart 控制項所使用的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Titles%2A>屬性會儲存所有<xref:System.Windows.Forms.DataVisualization.Charting.Title>所使用的物件<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAnnotations">
      <MemberSignature Language="C#" Value="public void UpdateAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.UpdateAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAnnotations ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAnnotations();" />
      <MemberSignature Language="F#" Value="member this.UpdateAnnotations : unit -&gt; unit" Usage="chart.UpdateAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the annotations in the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCursor();" />
      <MemberSignature Language="F#" Value="member this.UpdateCursor : unit -&gt; unit" Usage="chart.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the cursor in the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>