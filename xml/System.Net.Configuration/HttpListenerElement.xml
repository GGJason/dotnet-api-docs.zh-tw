<Type Name="HttpListenerElement" FullName="System.Net.Configuration.HttpListenerElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="454ec0d74116246d40fbfd1ad50cc77b1d5dbb4a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36552985" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpListenerElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.HttpListenerElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type HttpListenerElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0685f-101">表示組態檔中的 HttpListener 項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0685f-101">Represents the HttpListener element in the configuration file.</span>
      </span>
      <span data-ttu-id="0685f-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0685f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0685f-103">這個類別會對應到\<httpListener > 項目 （網路設定） 的組態項目。</span><span class="sxs-lookup"><span data-stu-id="0685f-103">This class corresponds to the \<httpListener> Element (Network Settings) configuration element.</span></span> <span data-ttu-id="0685f-104">這個類別會提供以程式設計方式存取可以儲存在組態檔中的資訊。</span><span class="sxs-lookup"><span data-stu-id="0685f-104">This class provides programmatic access to information that can be stored in configuration files.</span></span>  
  
 <span data-ttu-id="0685f-105"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>屬性會指出如果<xref:System.Net.HttpListener>而不是轉換後的 URI 轉換百分比編碼的任何值，會採取其他的正規化步驟會使用原始的未逸出的 URI。</span><span class="sxs-lookup"><span data-stu-id="0685f-105">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="0685f-106">當<xref:System.Net.HttpListener>執行個體收到要求時透過`http.sys`服務，它會建立所提供的 URI 字串的執行個體`http.sys`，並公開其為<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="0685f-106">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0685f-107">`http.sys`服務會公開兩個要求 URI 字串：</span><span class="sxs-lookup"><span data-stu-id="0685f-107">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="0685f-108">未經處理的 URI</span><span class="sxs-lookup"><span data-stu-id="0685f-108">Raw URI</span></span>  
  
-   <span data-ttu-id="0685f-109">已轉換的 URI</span><span class="sxs-lookup"><span data-stu-id="0685f-109">Converted URI</span></span>  
  
 <span data-ttu-id="0685f-110">未經處理的 URI 是<xref:System.Uri?displayProperty=nameWithType>提供 HTTP 要求的要求行中：</span><span class="sxs-lookup"><span data-stu-id="0685f-110">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="0685f-111">所提供的原始 URI`http.sys`上面所提的要求是"/ 路徑 /"。</span><span class="sxs-lookup"><span data-stu-id="0685f-111">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="0685f-112">這表示它已透過網路傳送接下來的 HTTP 動詞命令的字串。</span><span class="sxs-lookup"><span data-stu-id="0685f-112">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="0685f-113">`http.sys`服務會使用 HTTP 要求行中所提供的 URI，在要求中所提供的資訊來建立已轉換的 URI 和主機標頭，以判斷原始伺服器的要求應該會轉送到。</span><span class="sxs-lookup"><span data-stu-id="0685f-113">The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="0685f-114">這是藉由比較一組已註冊的 URI 前置詞的要求中的資訊。</span><span class="sxs-lookup"><span data-stu-id="0685f-114">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="0685f-115">HTTP 伺服器 SDK 文件是指做為此轉換 URI [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108)結構。</span><span class="sxs-lookup"><span data-stu-id="0685f-115">The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) structure.</span></span>  
  
 <span data-ttu-id="0685f-116">為了要比較的要求已註冊的 URI 前置詞，需要執行某些要求的正規化。</span><span class="sxs-lookup"><span data-stu-id="0685f-116">In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done.</span></span> <span data-ttu-id="0685f-117">轉換 URI 上述範例應如下：</span><span class="sxs-lookup"><span data-stu-id="0685f-117">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="0685f-118">`http.sys`服務結合<xref:System.Uri.Host%2A?displayProperty=nameWithType>屬性值，並要求條線建立轉換的 URI 中的字串。</span><span class="sxs-lookup"><span data-stu-id="0685f-118">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="0685f-119">此外，`http.sys`和<xref:System.Uri?displayProperty=nameWithType>類別也會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="0685f-119">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="0685f-120">取消-逸出所有百分比編碼值。</span><span class="sxs-lookup"><span data-stu-id="0685f-120">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="0685f-121">轉換百分比編碼為 utf-16 字元表示法的非 ASCII 字元。</span><span class="sxs-lookup"><span data-stu-id="0685f-121">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="0685f-122">請注意，utf-8 與 ANSI/DBCS 字元支援以及 Unicode 字元 （Unicode 編碼使用 %uxxxx 格式）。</span><span class="sxs-lookup"><span data-stu-id="0685f-122">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="0685f-123">執行其他的正規化步驟，例如路徑壓縮。</span><span class="sxs-lookup"><span data-stu-id="0685f-123">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="0685f-124">要求不包含任何百分比編碼值使用的編碼方式相關資訊，因為它可能無法判斷正確的編碼方式只是藉由剖析的百分比編碼值。</span><span class="sxs-lookup"><span data-stu-id="0685f-124">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="0685f-125">因此`http.sys`提供修改程序的兩個登錄機碼：</span><span class="sxs-lookup"><span data-stu-id="0685f-125">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="0685f-126">登錄機碼</span><span class="sxs-lookup"><span data-stu-id="0685f-126">Registry Key</span></span>|<span data-ttu-id="0685f-127">預設值</span><span class="sxs-lookup"><span data-stu-id="0685f-127">Default Value</span></span>|<span data-ttu-id="0685f-128">描述</span><span class="sxs-lookup"><span data-stu-id="0685f-128">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="0685f-129">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="0685f-129">EnableNonUTF8</span></span>|<span data-ttu-id="0685f-130">1</span><span class="sxs-lookup"><span data-stu-id="0685f-130">1</span></span>|<span data-ttu-id="0685f-131">如果是零，`http.sys`接受只有 UTF 8 編碼的 Url。</span><span class="sxs-lookup"><span data-stu-id="0685f-131">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="0685f-132">如果不是零，`http.sys`也接受 ANSI 編碼或 DBCS 編碼在要求中的 Url。</span><span class="sxs-lookup"><span data-stu-id="0685f-132">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="0685f-133">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="0685f-133">FavorUTF8</span></span>|<span data-ttu-id="0685f-134">1</span><span class="sxs-lookup"><span data-stu-id="0685f-134">1</span></span>|<span data-ttu-id="0685f-135">如果不是零，`http.sys`一律會嘗試解碼 URL 為 utf-8 第一次。 如果該轉換失敗，而且 EnableNonUTF8 為非零，Http.sys，然後嘗試將它解碼為 ANSI 或依 DBCS。</span><span class="sxs-lookup"><span data-stu-id="0685f-135">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="0685f-136">如果是零 （和 EnableNonUTF8 為非零），`http.sys`嘗試將它解碼為 ANSI 或依 DBCS; 如果不成功，它會嘗試 utf-8 轉換。</span><span class="sxs-lookup"><span data-stu-id="0685f-136">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="0685f-137">當<xref:System.Net.HttpListener>收到要求時，它會使用轉換的 URI 從`http.sys`來作為輸入<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0685f-137">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="0685f-138">沒有需要支援在 Uri 中的字元和數字以外的字元。</span><span class="sxs-lookup"><span data-stu-id="0685f-138">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="0685f-139">範例是下列的 URI 用來擷取客戶的客戶資訊數字"1/3812":</span><span class="sxs-lookup"><span data-stu-id="0685f-139">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="0685f-140">請注意百分比編碼中的斜線的 Uri (%2f)。</span><span class="sxs-lookup"><span data-stu-id="0685f-140">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="0685f-141">必須這樣做，因為在此情況下的斜線字元表示的資料，不是路徑分隔符號。</span><span class="sxs-lookup"><span data-stu-id="0685f-141">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="0685f-142">將字串傳遞至 Uri 建構函式會導致下列 URI:</span><span class="sxs-lookup"><span data-stu-id="0685f-142">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="0685f-143">分割為其區段路徑會產生下列項目：</span><span class="sxs-lookup"><span data-stu-id="0685f-143">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="0685f-144">這不是寄件者要求的意圖。</span><span class="sxs-lookup"><span data-stu-id="0685f-144">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="0685f-145">如果<xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>屬性設定為 false，則當<xref:System.Net.HttpListener>收到要求時，它會使用原始 URI，而不是從轉換過的 URI`http.sys`來作為輸入<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0685f-145">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="P:System.Net.HttpListenerRequest.Url" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListenerElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.HttpListenerElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListenerElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0685f-146">初始化 <see cref="T:System.Net.Configuration.HttpListenerElement" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0685f-146">Initializes a new instance of the <see cref="T:System.Net.Configuration.HttpListenerElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Net.Configuration.HttpListenerElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeouts">
      <MemberSignature Language="C#" Value="public System.Net.Configuration.HttpListenerTimeoutsElement Timeouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Configuration.HttpListenerTimeoutsElement Timeouts" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.Timeouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeouts As HttpListenerTimeoutsElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Configuration::HttpListenerTimeoutsElement ^ Timeouts { System::Net::Configuration::HttpListenerTimeoutsElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeouts : System.Net.Configuration.HttpListenerTimeoutsElement" Usage="System.Net.Configuration.HttpListenerElement.Timeouts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeouts")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.HttpListenerTimeoutsElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0685f-147">取得用於 <see cref="T:System.Net.HttpListener" /> 物件的預設逾時項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0685f-147">Gets the default timeout elements used for an <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0685f-148">傳回 <see cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0685f-148">Returns <see cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />.</span>
          </span>
          <span data-ttu-id="0685f-149">用於 <see cref="T:System.Net.HttpListener" /> 物件的逾時項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0685f-149">The timeout elements used for an <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />
      </Docs>
    </Member>
    <Member MemberName="UnescapeRequestUrl">
      <MemberSignature Language="C#" Value="public bool UnescapeRequestUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnescapeRequestUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnescapeRequestUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnescapeRequestUrl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UnescapeRequestUrl : bool" Usage="System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("unescapeRequestUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0685f-150">取得值，這個值會指出 <see cref="T:System.Net.HttpListener" /> 使用原始未逸出 URI，而非轉換的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0685f-150">Gets a value that indicates if <see cref="T:System.Net.HttpListener" /> uses the raw unescaped URI instead of the converted URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0685f-151">布林值，指出 <see cref="T:System.Net.HttpListener" /> 使用原始未逸出 URI，而非轉換的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0685f-151">A Boolean value that indicates if <see cref="T:System.Net.HttpListener" /> uses the raw unescaped URI, rather than the converted URI.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0685f-152"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>屬性會指出如果<xref:System.Net.HttpListener>而不是轉換後的 URI 轉換百分比編碼的任何值，會採取其他的正規化步驟會使用原始的未逸出的 URI。</span><span class="sxs-lookup"><span data-stu-id="0685f-152">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="0685f-153">當<xref:System.Net.HttpListener>執行個體收到要求時透過`http.sys`服務，它會建立所提供的 URI 字串的執行個體`http.sys`，並公開其為<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="0685f-153">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0685f-154">`http.sys`服務會公開兩個要求 URI 字串：</span><span class="sxs-lookup"><span data-stu-id="0685f-154">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="0685f-155">未經處理的 URI</span><span class="sxs-lookup"><span data-stu-id="0685f-155">Raw URI</span></span>  
  
-   <span data-ttu-id="0685f-156">已轉換的 URI</span><span class="sxs-lookup"><span data-stu-id="0685f-156">Converted URI</span></span>  
  
 <span data-ttu-id="0685f-157">未經處理的 URI 是<xref:System.Uri?displayProperty=nameWithType>提供 HTTP 要求的要求行中：</span><span class="sxs-lookup"><span data-stu-id="0685f-157">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="0685f-158">所提供的原始 URI`http.sys`上面所提的要求是"/ 路徑 /"。</span><span class="sxs-lookup"><span data-stu-id="0685f-158">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="0685f-159">這表示它已透過網路傳送接下來的 HTTP 動詞命令的字串。</span><span class="sxs-lookup"><span data-stu-id="0685f-159">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="0685f-160">`http.sys`服務會使用 HTTP 要求行中所提供的 URI，在要求中所提供的資訊來建立已轉換的 URI 和主機標頭，以判斷原始伺服器的要求應該會轉送到。</span><span class="sxs-lookup"><span data-stu-id="0685f-160">The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="0685f-161">這是藉由比較一組已註冊的 URI 前置詞的要求中的資訊。</span><span class="sxs-lookup"><span data-stu-id="0685f-161">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="0685f-162">HTTP 伺服器 SDK 文件是指做為此轉換 URI [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108)結構。</span><span class="sxs-lookup"><span data-stu-id="0685f-162">The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) structure.</span></span>  
  
 <span data-ttu-id="0685f-163">為了要比較的要求已註冊的 URI 前置詞，需要執行某些要求的正規化。</span><span class="sxs-lookup"><span data-stu-id="0685f-163">In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done.</span></span> <span data-ttu-id="0685f-164">轉換 URI 上述範例應如下：</span><span class="sxs-lookup"><span data-stu-id="0685f-164">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="0685f-165">`http.sys`服務結合<xref:System.Uri.Host%2A?displayProperty=nameWithType>屬性值，並要求條線建立轉換的 URI 中的字串。</span><span class="sxs-lookup"><span data-stu-id="0685f-165">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="0685f-166">此外，`http.sys`和<xref:System.Uri?displayProperty=nameWithType>類別也會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="0685f-166">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="0685f-167">取消-逸出所有百分比編碼值。</span><span class="sxs-lookup"><span data-stu-id="0685f-167">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="0685f-168">轉換百分比編碼為 utf-16 字元表示法的非 ASCII 字元。</span><span class="sxs-lookup"><span data-stu-id="0685f-168">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="0685f-169">請注意，utf-8 與 ANSI/DBCS 字元支援以及 Unicode 字元 （Unicode 編碼使用 %uxxxx 格式）。</span><span class="sxs-lookup"><span data-stu-id="0685f-169">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="0685f-170">執行其他的正規化步驟，例如路徑壓縮。</span><span class="sxs-lookup"><span data-stu-id="0685f-170">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="0685f-171">要求不包含任何百分比編碼值使用的編碼方式相關資訊，因為它可能無法判斷正確的編碼方式只是藉由剖析的百分比編碼值。</span><span class="sxs-lookup"><span data-stu-id="0685f-171">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="0685f-172">因此`http.sys`提供修改程序的兩個登錄機碼：</span><span class="sxs-lookup"><span data-stu-id="0685f-172">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="0685f-173">登錄機碼</span><span class="sxs-lookup"><span data-stu-id="0685f-173">Registry Key</span></span>|<span data-ttu-id="0685f-174">預設值</span><span class="sxs-lookup"><span data-stu-id="0685f-174">Default Value</span></span>|<span data-ttu-id="0685f-175">描述</span><span class="sxs-lookup"><span data-stu-id="0685f-175">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="0685f-176">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="0685f-176">EnableNonUTF8</span></span>|<span data-ttu-id="0685f-177">1</span><span class="sxs-lookup"><span data-stu-id="0685f-177">1</span></span>|<span data-ttu-id="0685f-178">如果是零，`http.sys`接受只有 UTF 8 編碼的 Url。</span><span class="sxs-lookup"><span data-stu-id="0685f-178">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="0685f-179">如果不是零，`http.sys`也接受 ANSI 編碼或 DBCS 編碼在要求中的 Url。</span><span class="sxs-lookup"><span data-stu-id="0685f-179">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="0685f-180">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="0685f-180">FavorUTF8</span></span>|<span data-ttu-id="0685f-181">1</span><span class="sxs-lookup"><span data-stu-id="0685f-181">1</span></span>|<span data-ttu-id="0685f-182">如果不是零，`http.sys`一律會嘗試解碼 URL 為 utf-8 第一次。 如果該轉換失敗，而且 EnableNonUTF8 為非零，Http.sys，然後嘗試將它解碼為 ANSI 或依 DBCS。</span><span class="sxs-lookup"><span data-stu-id="0685f-182">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="0685f-183">如果是零 （和 EnableNonUTF8 為非零），`http.sys`嘗試將它解碼為 ANSI 或依 DBCS; 如果不成功，它會嘗試 utf-8 轉換。</span><span class="sxs-lookup"><span data-stu-id="0685f-183">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="0685f-184">當<xref:System.Net.HttpListener>收到要求時，它會使用轉換的 URI 從`http.sys`來作為輸入<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0685f-184">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="0685f-185">沒有需要支援在 Uri 中的字元和數字以外的字元。</span><span class="sxs-lookup"><span data-stu-id="0685f-185">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="0685f-186">範例是下列的 URI 用來擷取客戶的客戶資訊數字"1/3812":</span><span class="sxs-lookup"><span data-stu-id="0685f-186">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="0685f-187">請注意百分比編碼中的斜線的 Uri (%2f)。</span><span class="sxs-lookup"><span data-stu-id="0685f-187">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="0685f-188">必須這樣做，因為在此情況下的斜線字元表示的資料，不是路徑分隔符號。</span><span class="sxs-lookup"><span data-stu-id="0685f-188">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="0685f-189">將字串傳遞至 Uri 建構函式會導致下列 URI:</span><span class="sxs-lookup"><span data-stu-id="0685f-189">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="0685f-190">分割為其區段路徑會產生下列項目：</span><span class="sxs-lookup"><span data-stu-id="0685f-190">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="0685f-191">這不是寄件者要求的意圖。</span><span class="sxs-lookup"><span data-stu-id="0685f-191">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="0685f-192">如果<xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>屬性設定為 false，則當<xref:System.Net.HttpListener>收到要求時，它會使用原始 URI，而不是從轉換過的 URI`http.sys`來作為輸入<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0685f-192">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="P:System.Net.HttpListenerRequest.Url" />
      </Docs>
    </Member>
  </Members>
</Type>