<Type Name="UnicodeDecodingConformance" FullName="System.Net.Configuration.UnicodeDecodingConformance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17892e63345cd6eb5789bc8eea34dd8d8b371e74" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476071" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum UnicodeDecodingConformance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnicodeDecodingConformance extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.UnicodeDecodingConformance" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnicodeDecodingConformance" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnicodeDecodingConformance" />
  <TypeSignature Language="F#" Value="type UnicodeDecodingConformance = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>控制 <see cref="Overload:System.Net.WebUtility.HtmlDecode" /> 方法解譯 Unicode 字元的方式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需有關如何 Unicode 字元應該要以 HTML 編碼，請參閱[使用字元逸出標記和 CSS](http://go.microsoft.com/fwlink/?LinkId=256607)。  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Net.WebUtility.HtmlDecode" />
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>使用自動行為。 解碼行為取決於目前應用程式的目標 Framework。 在 [!INCLUDE[net_v45] (~/includes/net-v45-md.md)] 和更新版本中，Unicode 編碼解碼十分嚴格。</summary>
      </Docs>
    </Member>
    <Member MemberName="Compat">
      <MemberSignature Language="C#" Value="Compat" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Compat = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberSignature Language="VB.NET" Value="Compat" />
      <MemberSignature Language="C++ CLI" Value="Compat" />
      <MemberSignature Language="F#" Value="Compat = 2" Usage="System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>使用相容行為。 指定不會在解碼傳入資料之前檢查其有效性。 例如，輸入字串 "&amp;amp;#xD84C;" 會解碼為 U+D84C，也就是未配對的 Surrogate。 此外，解碼器無法理解 SMP 中的字碼指標，除非它們是以 HTML 編碼的 Surrogate 表示，因此輸入字串 "&amp;#144308;" 會產生輸出字串 "&amp;#144308;"。</summary>
      </Docs>
    </Member>
    <Member MemberName="Loose">
      <MemberSignature Language="C#" Value="Loose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Loose = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberSignature Language="VB.NET" Value="Loose" />
      <MemberSignature Language="C++ CLI" Value="Loose" />
      <MemberSignature Language="F#" Value="Loose = 3" Usage="System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>使用鬆散行為。 類似於 <see cref="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" />，因為沒有驗證檢查，但是解碼器也了解字碼指標。 輸入字串 "&amp;#144308;" 會正確解碼成字元 U+233B4。 這個參數的目的是要在解碼器不知道提供者使用何種格式產生編碼字串時提供最大互通性。</summary>
      </Docs>
    </Member>
    <Member MemberName="Strict">
      <MemberSignature Language="C#" Value="Strict" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Strict = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberSignature Language="VB.NET" Value="Strict" />
      <MemberSignature Language="C++ CLI" Value="Strict" />
      <MemberSignature Language="F#" Value="Strict = 1" Usage="System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>使用嚴謹行為。 指定要在解碼傳入的已編碼資料之前檢查其有效性。 例如，輸入字串 "&amp;#144308;" 會解碼為 U+233B4，但輸入字串 "&amp;#xD84C;&amp;#xDFB4;" 無法正確地解碼。 字串中已解碼的資料不會檢查有效性。 例如，輸入字串 "\ud800" 將產生輸出字串 "\ud800"，因為解碼期間會略過已經解碼的 Surrogate，即使其不成對，也是如此。</summary>
      </Docs>
    </Member>
  </Members>
</Type>