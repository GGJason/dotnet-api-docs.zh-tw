<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec380724ad46644a28e18b9bcf3a0ac9d16792c2" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52911112" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Data.SqlClient.SqlDependency" />物件都代表應用程式與 SQL Server 的執行個體之間的查詢通知依存性。 應用程式可以建立<see cref="T:System.Data.SqlClient.SqlDependency" />物件，並註冊以接收通知，透過<see cref="T:System.Data.SqlClient.OnChangeEventHandler" />事件處理常式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> 很適合用於快取的案例，其中您的 ASP.NET 應用程式或中介層服務必須保留在記憶體中快取的特定資訊。 <xref:System.Data.SqlClient.SqlDependency> 可讓您在資料庫中的原始資料變更，以便可以重新整理快取時接收通知。  
  
 若要設定相依性時，您需要建立關聯<xref:System.Data.SqlClient.SqlDependency>物件至一或多個<xref:System.Data.SqlClient.SqlCommand>物件。 若要接收通知，您必須訂閱<xref:System.Data.SqlClient.SqlDependency.OnChange>事件。 如需有關建立查詢通知需求的詳細資訊，請參閱 <<c0> [ 使用查詢通知](/sql/relational-databases/native-client/features/working-with-query-notifications)。
  
> [!NOTE]
> <xref:System.Data.SqlClient.SqlDependency> 用意是要用於 ASP.NET 或中介層服務沒有相對較少的伺服器中針對資料庫使用中的相依性。 它已不會針對用戶端應用程式，其中會有數百或數千個用戶端電腦所設計<xref:System.Data.SqlClient.SqlDependency>為單一資料庫伺服器設定的物件。 如果您正在開發應用程式的資料變更時，會需要可靠的次秒通知，請檢閱章節[規劃有效率的查詢通知策略](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#planning-an-efficient-query-notifications-strategy)和[替代項目查詢通知](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#alternatives-to-query-notifications)中[通知計畫](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v%3dsql.105))文章。
  
 如需詳細資訊，請參閱 < [SQL Server 中的查詢通知](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md)並[建置通知解決方案](https://docs.microsoft.com/previous-versions/sql/sql-server-2005/ms171065(v%3dsql.90))。  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency.OnChange>事件可能會產生不同的執行緒，從起始命令執行的執行緒上。  
  
 查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 <see cref="T:System.Data.SqlClient.SqlDependency" /> 類別的新執行個體。</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>建立的新執行個體<see cref="T:System.Data.SqlClient.SqlDependency" />類別的預設設定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建構函式初始化<xref:System.Data.SqlClient.SqlDependency>物件使用預設 Service Broker 服務名稱和逾時。在建構之後某個時間點，您必須使用<xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>方法來建立關聯的一或多個命令，這個<xref:System.Data.SqlClient.SqlDependency>物件。  
  
 查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 如需詳細資訊，請參閱 < [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker)並[使用查詢通知](/sql/connect/oledb/features/working-with-query-notifications)。

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command"><see cref="T:System.Data.SqlClient.SqlCommand" />以此方式建立關聯的物件<see cref="T:System.Data.SqlClient.SqlDependency" />物件。 建構函式會設定<see cref="T:System.Data.Sql.SqlNotificationRequest" />物件，並將它繫結至命令。</param>
        <summary>建立的新執行個體<see cref="T:System.Data.SqlClient.SqlDependency" />類別，並將其與相關聯<see cref="T:System.Data.SqlClient.SqlCommand" />參數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 就內部而言，這個建構函式建立的執行個體<xref:System.Data.Sql.SqlNotificationRequest>類別，並繫結至<xref:System.Data.SqlClient.SqlCommand>物件。  
  
 查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 如需詳細資訊，請參閱 < [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker)並[使用查詢通知](/sql/connect/oledb/features/working-with-query-notifications)。
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" />參數為 NULL。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.SqlClient.SqlCommand" />物件已經<see cref="T:System.Data.Sql.SqlNotificationRequest" />物件指派給其<see cref="P:System.Data.SqlClient.SqlCommand.Notification" />屬性，且<see cref="T:System.Data.Sql.SqlNotificationRequest" />未與此相依性相關聯。</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command"><see cref="T:System.Data.SqlClient.SqlCommand" />以此方式建立關聯的物件<see cref="T:System.Data.SqlClient.SqlDependency" />物件。 建構函式會設定<see cref="T:System.Data.Sql.SqlNotificationRequest" />物件，並將它繫結至命令。</param>
        <param name="options">這個相依性所要使用的告知要求選項。  <c>null</c> 會使用預設服務。</param>
        <param name="timeout">這項通知，以秒為單位的逾時。 預設值為 0，表示應該使用伺服器的逾時。</param>
        <summary>建立的新執行個體<see cref="T:System.Data.SqlClient.SqlDependency" />類別中，將其與相關聯<see cref="T:System.Data.SqlClient.SqlCommand" />參數，並指定告知選項和逾時值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 如需詳細資訊，請參閱 < [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker)並[使用查詢通知](/sql/connect/oledb/features/working-with-query-notifications)。
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" />參數為 NULL。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">逾時值小於零。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.SqlClient.SqlCommand" />物件已經<see cref="T:System.Data.Sql.SqlNotificationRequest" />物件指派給其<see cref="P:System.Data.SqlClient.SqlCommand.Notification" />屬性，<see cref="T:System.Data.Sql.SqlNotificationRequest" />未與此相依性相關聯。  
  
嘗試從 SQLCLR 內建立 **SqlDependency** 執行個體。</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">A<see cref="T:System.Data.SqlClient.SqlCommand" />物件，其中包含對告知而言有效的陳述式。</param>
        <summary>將產生關聯<see cref="T:System.Data.SqlClient.SqlCommand" />物件與這個<see cref="T:System.Data.SqlClient.SqlDependency" />執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 查詢通知僅支援符合特定需求清單的 SELECT 陳述式。 如需詳細資訊，請參閱 < [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker)並[使用查詢通知](/sql/connect/oledb/features/working-with-query-notifications)。
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" />參數為 null。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.SqlClient.SqlCommand" />物件已經<see cref="T:System.Data.Sql.SqlNotificationRequest" />物件指派給其<see cref="P:System.Data.SqlClient.SqlCommand.Notification" />屬性，且<see cref="T:System.Data.Sql.SqlNotificationRequest" />未與此相依性相關聯。</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出是否已變更其中一個相依性相關聯的結果集。</summary>
        <value>布林值，指出是否結果的其中一個設定已變更。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您不使用<xref:System.Data.SqlClient.SqlDependency.OnChange>事件，您可以檢查<xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>屬性來判斷是否已變更的查詢結果。  
  
 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>屬性不一定表示資料的變更。 其他情況下，例如逾時過期，而且無法設定通知要求，也會產生變更事件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值可唯一識別這個執行個體<see cref="T:System.Data.SqlClient.SqlDependency" />類別。</summary>
        <value>產生每個執行個體 GUID 的字串表示<see cref="T:System.Data.SqlClient.SqlDependency" />類別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Id%2A>屬性用來唯一識別指定<xref:System.Data.SqlClient.SqlDependency>執行個體。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於接收通知到任何與此相關聯的命令<see cref="T:System.Data.SqlClient.SqlDependency" />物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> 當相關聯的命令的結果變更時，就會發生。 如果您不使用<xref:System.Data.SqlClient.SqlDependency.OnChange>，您可以檢查<xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>屬性來判斷是否已變更的查詢結果。  
  
 <xref:System.Data.SqlClient.SqlDependency.OnChange>事件不一定表示資料的變更。 其他情況，例如逾時到期，而且無法設定通知要求，也會產生<xref:System.Data.SqlClient.SqlDependency.OnChange>。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>啟動接聽程式接收相依性變更告知。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> SQL Server 連接中發生錯誤時，將會重新啟動接聽程式。  
  
 多次呼叫<xref:System.Data.SqlClient.SqlDependency.Start%2A>方法可以進行下列限制：  
  
-   以相同的參數 （相同的連接字串和呼叫的執行緒中的 Windows 認證） 的多個呼叫都有效。  
  
-   使用不同的連接字串的多個呼叫都有效，只要：  
  
    -   每個連接字串會指定不同的資料庫，或  
  
    -   每個連接字串會指定不同的使用者，或  
  
    -   呼叫會來自於不同的應用程式定義域。  
  
 您可以讓<xref:System.Data.SqlClient.SqlDependency>正確地使用多個執行緒來代表不同的使用者認證，而不需要提供給群組，dbo 角色，因為不同的使用者可以訂閱，並接聽的應用程式 (使用<xref:System.Web.Caching.SqlCacheDependency>或<xref:System.Data.SqlClient.SqlCommand>)由系統管理員建立的通知佇列。 相關的應用程式定義域啟動時，呼叫具有初始化服務/佇列 （CREATE QUEUE 和 CREATE SERVICE 權限的資料庫） 的權限的使用者認證 (Windows) 開始。 請確定每個 AppDomain，否則為模稜兩可時引發例外狀況之後才會呼叫開始。  使用者執行緒必須具有訂閱通知 （資料庫的 SUBSCRIBE QUERY NOTIFICATIONS 權限） 的權限。 <xref:System.Data.SqlClient.SqlDependency> 會建立關聯的訂用帳戶要求系統管理員所建立的服務/佇列的非系統管理員使用者。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">要從其中取得 SQL Server 執行個體的連接字串變更告知。</param>
        <summary>啟動接聽程式，從連接字串所指定的 SQL Server 執行個體接收相依性變更告知。</summary>
        <returns>如果接聽程式成功初始化，則為 <see langword="true" />；如果相容的接聽程式已存在，則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會啟動的接聽程式<xref:System.AppDomain>從所指定的 SQL Server 執行個體接收相依性通知`connectionString`參數。 呼叫這個方法可能會超過一次使用不同的連接字串的多部伺服器。  
  
 如需其他備註中，請參閱<xref:System.Data.SqlClient.SqlDependency.Start%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" />參數為 NULL。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="connectionString" />參數等同於先前呼叫這個方法，但參數不同。  
  
從 CLR 中呼叫方法。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要<see cref="T:System.Data.SqlClient.SqlClientPermission" />程式碼存取安全性 (CAS) 權限。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">方法的後續呼叫使用對等項目對<paramref name="connectionString" />參數搭配不同的使用者，或是未預設為相同的結構描述的使用者。  
  
此外，也會發生任何基礎 **SqlClient** 例外狀況。</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">要從其中取得 SQL Server 執行個體的連接字串變更告知。</param>
        <param name="queue">若要使用現有的 SQL Server Service Broker 佇列。 如果<see langword="null" />，使用預設的佇列。</param>
        <summary>啟動接聽程式從使用指定的 SQL Server Service Broker 佇列的連接字串所指定的 SQL Server 執行個體接收相依性變更告知。</summary>
        <returns>如果接聽程式成功初始化，則為 <see langword="true" />；如果相容的接聽程式已存在，則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會啟動的接聽程式<xref:System.AppDomain>從所指定的 SQL Server 執行個體接收相依性通知`connectionString`參數。 呼叫這個方法可能會超過一次使用不同的連接字串的多部伺服器。  
  
 如果未不指定任何佇列名稱，則<xref:System.Data.SqlClient.SqlDependency>暫存佇列和服務的伺服器中建立用於整個程序中，即使處理程序牽涉到多個<xref:System.AppDomain>。 佇列和服務會自動移除在應用程式關閉時。  
  
 如需其他備註中，請參閱<xref:System.Data.SqlClient.SqlDependency.Start%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" />參數為 NULL。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="connectionString" />參數等同於先前呼叫這個方法，但參數不同。  
  
從 CLR 中呼叫方法。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要<see cref="T:System.Data.SqlClient.SqlClientPermission" />程式碼存取安全性 (CAS) 權限。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">方法的後續呼叫使用對等項目對<paramref name="connectionString" />參數，但不同的使用者或未預設為相同的結構描述的使用者。  
  
此外，也會發生任何基礎 **SqlClient** 例外狀況。</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>停止在先前指定之連接的接聽程式<see cref="Overload:System.Data.SqlClient.SqlDependency.Start" />呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> SQL Server 連接中發生錯誤時，將會重新啟動接聽程式。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">中先前所使用的 SQL Server 執行個體的連接字串<see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />呼叫。</param>
        <summary>停止在先前指定之連接的接聽程式<see cref="Overload:System.Data.SqlClient.SqlDependency.Start" />呼叫。</summary>
        <returns>如果接聽程式已完全停止，則為 <see langword="true" />；如果有 <see cref="T:System.AppDomain" /> 從接聽程式解除繫結，但至少有另一個 <see cref="T:System.AppDomain" /> 正在使用相同接聽程式時，則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A>方法必須呼叫每個<xref:System.Data.SqlClient.SqlDependency.Start%2A>呼叫。 指定的接聽程式只會關閉完全當它收到相同的數目<xref:System.Data.SqlClient.SqlDependency.Stop%2A>做為要求<xref:System.Data.SqlClient.SqlDependency.Start%2A>要求。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" />參數為 NULL。</exception>
        <exception cref="T:System.InvalidOperationException">此方法從 SQLCLR 中呼叫。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要<see cref="T:System.Data.SqlClient.SqlClientPermission" />程式碼存取安全性 (CAS) 權限。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">發生基礎 **SqlClient** 例外狀況。</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">中先前所使用的 SQL Server 執行個體的連接字串<see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />呼叫。</param>
        <param name="queue">SQL Server Service Broker 佇列中先前所使用<see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />呼叫。</param>
        <summary>停止在先前指定之連接的接聽程式<see cref="Overload:System.Data.SqlClient.SqlDependency.Start" />呼叫。</summary>
        <returns>如果接聽程式已完全停止，則為 <see langword="true" />；如果有 <see cref="T:System.AppDomain" /> 從接聽程式解除繫結，但至少有另一個 <see cref="T:System.AppDomain" /> 正在使用相同接聽程式時，則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A>方法必須呼叫每個<xref:System.Data.SqlClient.SqlDependency.Start%2A>呼叫。 指定的接聽程式只會關閉完全當它收到相同的數目<xref:System.Data.SqlClient.SqlDependency.Stop%2A>做為要求<xref:System.Data.SqlClient.SqlDependency.Start%2A>要求。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" />參數為 NULL。</exception>
        <exception cref="T:System.InvalidOperationException">此方法從 SQLCLR 中呼叫。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要<see cref="T:System.Data.SqlClient.SqlClientPermission" />程式碼存取安全性 (CAS) 權限。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">且發生基礎 **SqlClient** 例外狀況。</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">使用查詢通知</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 概觀</related>
      </Docs>
    </Member>
  </Members>
</Type>