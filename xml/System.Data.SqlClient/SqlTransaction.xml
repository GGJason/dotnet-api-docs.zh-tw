<Type Name="SqlTransaction" FullName="System.Data.SqlClient.SqlTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14c4f5c3e1a37ca99143298ddcf3567e1cdbdeb8" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlTransaction : System.Data.Common.DbTransaction, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTransaction extends System.Data.Common.DbTransaction implements class System.Data.IDbTransaction, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTransaction&#xA;Inherits DbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTransaction sealed : System::Data::Common::DbTransaction, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="84227-101">表示要在 SQL Server 資料庫中進行的 Transact-SQL 交易。</span>
      <span class="sxs-lookup">
        <span data-stu-id="84227-101">Represents a Transact-SQL transaction to be made in a SQL Server database.</span>
      </span>
      <span data-ttu-id="84227-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="84227-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84227-103">應用程式建立<xref:System.Data.SqlClient.SqlTransaction>藉由呼叫物件<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>上<xref:System.Data.SqlClient.SqlConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="84227-103">The application creates a <xref:System.Data.SqlClient.SqlTransaction> object by calling <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> on the <xref:System.Data.SqlClient.SqlConnection> object.</span></span> <span data-ttu-id="84227-104">交易 （例如，認可或中止交易），相關聯的所有後續作業會執行上<xref:System.Data.SqlClient.SqlTransaction>物件。</span><span class="sxs-lookup"><span data-stu-id="84227-104">All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <xref:System.Data.SqlClient.SqlTransaction> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84227-105">`Try`/`Catch` 認可或回復時，應一律使用例外狀況處理<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="84227-105">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="84227-106">同時<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>產生<xref:System.InvalidOperationException>如果連線已中斷，或已經被回復交易在伺服器上。</span><span class="sxs-lookup"><span data-stu-id="84227-106">Both <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generate an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="84227-107">如需有關 SQL Server 交易的詳細資訊，請參閱[外顯交易](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx)和[撰寫有效率的交易](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx)。</span><span class="sxs-lookup"><span data-stu-id="84227-107">For more information on SQL Server transactions, see [Explicit Transactions](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) and [Coding Efficient Transactions](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84227-108">下列範例會建立<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="84227-108">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="84227-109">它也會示範如何使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>， <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>，和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="84227-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="84227-110">交易已回復任何錯誤時，或已處置不第一次認可。</span><span class="sxs-lookup"><span data-stu-id="84227-110">The transaction is rolled back on any error, or if it is disposed without first being committed.</span></span> <span data-ttu-id="84227-111">`Try`/`Catch` 錯誤處理用來處理任何錯誤，當您嘗試認可或回復交易時。</span><span class="sxs-lookup"><span data-stu-id="84227-111">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Commit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84227-112">認可資料庫交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-112">Commits the database transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84227-113"><xref:System.Data.SqlClient.SqlTransaction.Commit%2A>方法相當於 TRANSACT-SQL COMMIT TRANSACTION 陳述式。</span><span class="sxs-lookup"><span data-stu-id="84227-113">The <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</span></span> <span data-ttu-id="84227-114">您無法回復的交易已認可後，因為所有修改都已經都成為資料庫永久的一部分。</span><span class="sxs-lookup"><span data-stu-id="84227-114">You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</span></span> <span data-ttu-id="84227-115">如需詳細資訊，請參閱《SQL Server 線上叢書》。</span><span class="sxs-lookup"><span data-stu-id="84227-115">For more information, see SQL Server Books Online.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84227-116">`Try`/`Catch` 認可或回復時，應一律使用例外狀況處理<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="84227-116">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="84227-117">同時`Commit`和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>產生<xref:System.InvalidOperationException>如果連線已中斷，或已經被回復交易在伺服器上。</span><span class="sxs-lookup"><span data-stu-id="84227-117">Both `Commit` and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="84227-118">如需有關 SQL Server 交易的詳細資訊，請參閱《SQL Server 線上叢書》中的「外顯交易」和「撰寫有效率的交易」。</span><span class="sxs-lookup"><span data-stu-id="84227-118">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84227-119">下列範例會建立<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="84227-119">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="84227-120">它也會示範如何使用<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>， <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>，和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="84227-120">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="84227-121">交易回復任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="84227-121">The transaction is rolled back on any error.</span></span> <span data-ttu-id="84227-122">`Try`/`Catch` 錯誤處理用來處理任何錯誤，當您嘗試認可或回復交易時。</span><span class="sxs-lookup"><span data-stu-id="84227-122">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="84227-123">嘗試認可交易時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-123">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84227-124">已認可或復原交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-124">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="84227-125">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-125">-or-</span>
          </span>
          <span data-ttu-id="84227-126">連線已中斷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-126">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84227-127">取得與交易相關聯的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件或 <see langword="null" /> (如果交易不再有效)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-127">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84227-128">與交易相關聯的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-128">The <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84227-129">單一應用程式可能有多個資料庫連線，每個都有零個或多個交易。</span><span class="sxs-lookup"><span data-stu-id="84227-129">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="84227-130">這個屬性可讓您判斷所建立的特定交易相關聯的連接物件<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="84227-130">This property lets you determine the connection object associated with a particular transaction created by <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbTransaction.IsolationLevel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84227-131">指定適用於此交易的 <see cref="T:System.Data.IsolationLevel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-131">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84227-132">適用於此交易的 <see cref="T:System.Data.IsolationLevel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-132">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
          <span data-ttu-id="84227-133">預設值為 <see langword="ReadCommitted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-133">The default is <see langword="ReadCommitted" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84227-134">不支援平行交易。</span><span class="sxs-lookup"><span data-stu-id="84227-134">Parallel transactions are not supported.</span></span> <span data-ttu-id="84227-135">因此，<xref:System.Data.IsolationLevel>套用至整個交易。</span><span class="sxs-lookup"><span data-stu-id="84227-135">Therefore, the <xref:System.Data.IsolationLevel> applies to the whole transaction.</span></span>  
  
 <span data-ttu-id="84227-136">如需有關 SQL Server 隔離層級的詳細資訊，請參閱 < 隔離層級在 Database Engine > SQL Server 線上叢書 》 中。</span><span class="sxs-lookup"><span data-stu-id="84227-136">For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rollback">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="84227-137">從暫止狀態復原交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-137">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Rollback</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84227-138">從暫止狀態復原交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-138">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84227-139"><xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法相當於 TRANSACT-SQL ROLLBACK TRANSACTION 陳述式。</span><span class="sxs-lookup"><span data-stu-id="84227-139">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="84227-140">如需詳細資訊，請參閱《SQL Server 線上叢書》。</span><span class="sxs-lookup"><span data-stu-id="84227-140">For more information, see SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="84227-141">交易可以只會回復從暫止狀態 (之後<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>之前已呼叫<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>稱為)。</span><span class="sxs-lookup"><span data-stu-id="84227-141">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="84227-142">交易會回事件中加以處置之前`Commit`或`Rollback`呼叫。</span><span class="sxs-lookup"><span data-stu-id="84227-142">The transaction is rolled back in the event it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84227-143">`Try`/`Catch` 回復交易時，應該永遠使用例外狀況處理。</span><span class="sxs-lookup"><span data-stu-id="84227-143">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="84227-144">A`Rollback`產生<xref:System.InvalidOperationException>如果連線已中斷，或已經被回復交易在伺服器上。</span><span class="sxs-lookup"><span data-stu-id="84227-144">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="84227-145">如需有關 SQL Server 異動的詳細資訊，請參閱《SQL Server 線上叢書》中的「外顯異動」和「撰寫有效率的異動」。</span><span class="sxs-lookup"><span data-stu-id="84227-145">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84227-146">下列範例會建立<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="84227-146">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="84227-147">它也會示範如何使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>， <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>，和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="84227-147">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="84227-148">交易回復任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="84227-148">The transaction is rolled back on any error.</span></span> <span data-ttu-id="84227-149">`Try`/`Catch` 錯誤處理用來處理任何錯誤，當您嘗試認可或回復交易時。</span><span class="sxs-lookup"><span data-stu-id="84227-149">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="84227-150">嘗試認可交易時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-150">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84227-151">已認可或復原交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-151">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="84227-152">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-152">-or-</span>
          </span>
          <span data-ttu-id="84227-153">連線已中斷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-153">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rollback(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (transactionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::String ^ transactionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">
          <span data-ttu-id="84227-154">要復原的交易名稱，或要復原的儲存點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-154">The name of the transaction to roll back, or the savepoint to which to roll back.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84227-155">從暫止狀態中復原交易，並指定交易和儲存點名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-155">Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84227-156"><xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法相當於 TRANSACT-SQL ROLLBACK TRANSACTION 陳述式。</span><span class="sxs-lookup"><span data-stu-id="84227-156">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="84227-157">如需詳細資訊，請參閱 「 外顯異動 」 和 SQL Server 線上叢書 》 中的 「 交易儲存點 」。</span><span class="sxs-lookup"><span data-stu-id="84227-157">For more information, see "Explicit Transactions" and "Transaction Savepoints" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="84227-158">交易可以只會回復從暫止狀態 (之後<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>之前已呼叫<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>稱為)。</span><span class="sxs-lookup"><span data-stu-id="84227-158">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="84227-159">異動會回復之前加以處置`Commit`或`Rollback`呼叫。</span><span class="sxs-lookup"><span data-stu-id="84227-159">The transaction is rolled back if it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84227-160">`Try`/`Catch` 回復交易時，應該永遠使用例外狀況處理。</span><span class="sxs-lookup"><span data-stu-id="84227-160">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="84227-161">A`Rollback`產生<xref:System.InvalidOperationException>如果連線已中斷，或已經被回復交易在伺服器上。</span><span class="sxs-lookup"><span data-stu-id="84227-161">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="84227-162">如需有關 SQL Server 異動的詳細資訊，請參閱《SQL Server 線上叢書》中的「外顯異動」和「撰寫有效率的異動」。</span><span class="sxs-lookup"><span data-stu-id="84227-162">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84227-163">下列範例會建立<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="84227-163">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="84227-164">它也會示範如何使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>， <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>，和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="84227-164">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="84227-165">交易回復任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="84227-165">The transaction is rolled back on any error.</span></span> <span data-ttu-id="84227-166">`Try`/`Catch` 錯誤處理用來處理任何錯誤，當您嘗試認可或回復交易時。</span><span class="sxs-lookup"><span data-stu-id="84227-166">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="84227-167">沒有指定任何交易名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-167">No transaction name was specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84227-168">已認可或復原交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-168">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="84227-169">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-169">-or-</span>
          </span>
          <span data-ttu-id="84227-170">連線已中斷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-170">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string savePointName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string savePointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (savePointName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ savePointName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savePointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="savePointName">
          <span data-ttu-id="84227-171">儲存點的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-171">The name of the savepoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84227-172">建立交易中的儲存點 (可用來復原部分的交易)，以及指定儲存點名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-172">Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84227-173"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> 方法相當於 TRANSACT-SQL SAVE TRANSACTION 陳述式。</span><span class="sxs-lookup"><span data-stu-id="84227-173"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</span></span>  
  
 <span data-ttu-id="84227-174">使用中的值`savePoint`參數可以是相同的值用於`transactionName`參數的某些實作<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="84227-174">The value used in the `savePoint` parameter can be the same value used in the `transactionName` parameter of some implementations of the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> method.</span></span>  
  
 <span data-ttu-id="84227-175">儲存點提供了回復部份交易的機制。</span><span class="sxs-lookup"><span data-stu-id="84227-175">Savepoints offer a mechanism to roll back parts of transactions.</span></span> <span data-ttu-id="84227-176">您建立儲存點使用<xref:System.Data.SqlClient.SqlTransaction.Save%2A>方法，並稍後呼叫<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>回復到儲存點，而非回復到交易開始的方法。</span><span class="sxs-lookup"><span data-stu-id="84227-176">You create a savepoint using the <xref:System.Data.SqlClient.SqlTransaction.Save%2A> method, and then later call the <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method to roll back to the savepoint instead of rolling back to the start of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="84227-177">嘗試認可交易時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-177">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84227-178">已認可或復原交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-178">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="84227-179">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-179">-or-</span>
          </span>
          <span data-ttu-id="84227-180">連線已中斷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84227-180">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>