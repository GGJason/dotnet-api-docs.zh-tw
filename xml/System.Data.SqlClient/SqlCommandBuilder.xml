<Type Name="SqlCommandBuilder" FullName="System.Data.SqlClient.SqlCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f98e8b8a8201db8545a634c3df54306e188ae9f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680168" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <TypeSignature Language="F#" Value="type SqlCommandBuilder = class&#xA;    inherit DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aff49-101">自動產生單一資料表命令，用於調節對具有關聯 SQL Server 資料庫之 <see cref="T:System.Data.DataSet" /> 的變更。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aff49-101">Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated SQL Server database.</span>
      </span>
      <span data-ttu-id="aff49-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aff49-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-103"><xref:System.Data.SqlClient.SqlDataAdapter>協調所做的變更所需的 TRANSACT-SQL 陳述式不會自動產生<xref:System.Data.DataSet>與相關聯的 SQL Server 執行個體。</span><span class="sxs-lookup"><span data-stu-id="aff49-103">The <xref:System.Data.SqlClient.SqlDataAdapter> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated instance of SQL Server.</span></span> <span data-ttu-id="aff49-104">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>物件來自動產生單一資料表更新 TRANSACT-SQL 陳述式，如果您設定<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>屬性<xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-104">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> object to automatically generate Transact-SQL statements for single-table updates if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property of the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span> <span data-ttu-id="aff49-105">然後，您未設定任何其他 TRANSACT-SQL 陳述式由產生<xref:System.Data.SqlClient.SqlCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="aff49-105">Then, any additional Transact-SQL statements that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span>  
  
 <span data-ttu-id="aff49-106"><xref:System.Data.SqlClient.SqlCommandBuilder>自己註冊為接聽程式<xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>事件，每當您設定<xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aff49-106">The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A> property.</span></span> <span data-ttu-id="aff49-107">您可以只將其中一個<xref:System.Data.SqlClient.SqlDataAdapter>或<xref:System.Data.SqlClient.SqlCommandBuilder>彼此物件一次。</span><span class="sxs-lookup"><span data-stu-id="aff49-107">You can only associate one <xref:System.Data.SqlClient.SqlDataAdapter> or <xref:System.Data.SqlClient.SqlCommandBuilder> object with each other at one time.</span></span>  
  
 <span data-ttu-id="aff49-108">若要產生 INSERT、 UPDATE 或 DELETE 陳述式<xref:System.Data.SqlClient.SqlCommandBuilder>使用<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>屬性，以自動擷取一組必要中繼資料。</span><span class="sxs-lookup"><span data-stu-id="aff49-108">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.SqlClient.SqlCommandBuilder> uses the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically.</span></span> <span data-ttu-id="aff49-109">如果您變更<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>中繼資料擷取，例如第一次更新之後，您應該呼叫之後<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法，以更新中繼資料。</span><span class="sxs-lookup"><span data-stu-id="aff49-109">If you change the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
 <span data-ttu-id="aff49-110">`SelectCommand` 還必須傳回至少一個主索引鍵或唯一的資料行。</span><span class="sxs-lookup"><span data-stu-id="aff49-110">The `SelectCommand` must also return at least one primary key or unique column.</span></span> <span data-ttu-id="aff49-111">如果都不存在， **InvalidOperation**會產生例外狀況，並不會產生命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-111">If none are present, an **InvalidOperation** exception is generated, and the commands are not generated.</span></span>  
  
 <span data-ttu-id="aff49-112"><xref:System.Data.SqlClient.SqlCommandBuilder>也會使用<xref:System.Data.SqlClient.SqlCommand.Connection%2A>， <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>，和<xref:System.Data.SqlClient.SqlCommand.Transaction%2A>屬性所參考<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-112">The <xref:System.Data.SqlClient.SqlCommandBuilder> also uses the <xref:System.Data.SqlClient.SqlCommand.Connection%2A>, <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>, and <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> properties referenced by the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="aff49-113">使用者應該呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果修改了一個或多個這些屬性，或如果<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>本身會被取代。</span><span class="sxs-lookup"><span data-stu-id="aff49-113">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> itself is replaced.</span></span> <span data-ttu-id="aff49-114">否則<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>， <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>，和<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>屬性會保留其先前的值。</span><span class="sxs-lookup"><span data-stu-id="aff49-114">Otherwise the <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="aff49-115">如果您呼叫<xref:System.ComponentModel.Component.Dispose%2A>、<xref:System.Data.SqlClient.SqlCommandBuilder>會解除關聯<xref:System.Data.SqlClient.SqlDataAdapter>，以及所產生的命令不會再使用。</span><span class="sxs-lookup"><span data-stu-id="aff49-115">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.SqlClient.SqlCommandBuilder> is disassociated from the <xref:System.Data.SqlClient.SqlDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aff49-116">下列範例會使用<xref:System.Data.SqlClient.SqlCommand>、 以及<xref:System.Data.SqlClient.SqlDataAdapter>和<xref:System.Data.SqlClient.SqlConnection>、 從資料來源選取資料列。</span><span class="sxs-lookup"><span data-stu-id="aff49-116">The following example uses the <xref:System.Data.SqlClient.SqlCommand>, along <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select rows from a data source.</span></span> <span data-ttu-id="aff49-117">此範例會傳遞連接字串、 TRANSACT-SQL SELECT 陳述式時，查詢字串並為資料庫資料表名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="aff49-117">The example is passed a connection string, a query string that is a Transact-SQL SELECT statement, and a string that is the name of the database table.</span></span> <span data-ttu-id="aff49-118">這個範例會建立<xref:System.Data.SqlClient.SqlCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="aff49-118">The example then creates a <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommandBuilder/CS/Source.cs#1)]
 [!code-vb[Classic WebData SqlCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommandBuilder/VB/Source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-119">初始化 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-119">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff49-120">初始化 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-120">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommandBuilder (System.Data.SqlClient.SqlDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As SqlDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommandBuilder(System::Data::SqlClient::SqlDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommandBuilder : System.Data.SqlClient.SqlDataAdapter -&gt; System.Data.SqlClient.SqlCommandBuilder" Usage="new System.Data.SqlClient.SqlCommandBuilder adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.SqlClient.SqlDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="aff49-121">
            <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-121">The name of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff49-122">使用關聯的 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> 物件來初始化 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-122">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> class with the associated <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-123"><xref:System.Data.SqlClient.SqlCommandBuilder>自己註冊為接聽程式<xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>產生的事件<xref:System.Data.SqlClient.SqlDataAdapter>這個屬性中指定。</span><span class="sxs-lookup"><span data-stu-id="aff49-123">The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="aff49-124">當您建立的新執行個體<xref:System.Data.SqlClient.SqlCommandBuilder>，任何現有<xref:System.Data.SqlClient.SqlCommandBuilder>與此相關聯<xref:System.Data.SqlClient.SqlDataAdapter>釋放。</span><span class="sxs-lookup"><span data-stu-id="aff49-124">When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="override this.ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="sqlCommandBuilder.ApplyParameterInfo (parameter, datarow, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.SqlClient.SqlCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-125">設定或取得 <see cref="T:System.Data.Common.CatalogLocation" /> 類別之執行個體的 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aff49-126">
            <see cref="T:System.Data.Common.CatalogLocation" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-126">A <see cref="T:System.Data.Common.CatalogLocation" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public override string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-127">設定或取得用做 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> 類別執行個體之目錄分隔符號的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aff49-128">字串，表示與 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> 類別之執行個體搭配使用的目錄分隔符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-128">A string that indicates the catalog separator for use with an instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As SqlDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlDataAdapter ^ DataAdapter { System::Data::SqlClient::SqlDataAdapter ^ get(); void set(System::Data::SqlClient::SqlDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.SqlClient.SqlDataAdapter with get, set" Usage="System.Data.SqlClient.SqlCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-129">取得或設定會自動產生 Transact-SQL 陳述式的 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-129">Gets or sets a <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> object for which Transact-SQL statements are automatically generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aff49-130">
            <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-130">A <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-131"><xref:System.Data.SqlClient.SqlCommandBuilder>自己註冊為接聽程式<xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>產生的事件<xref:System.Data.SqlClient.SqlDataAdapter>這個屬性中指定。</span><span class="sxs-lookup"><span data-stu-id="aff49-131">The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="aff49-132">當您建立的新執行個體<xref:System.Data.SqlClient.SqlCommandBuilder>，任何現有<xref:System.Data.SqlClient.SqlCommandBuilder>與此相關聯<xref:System.Data.SqlClient.SqlDataAdapter>釋放。</span><span class="sxs-lookup"><span data-stu-id="aff49-132">When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="static member DeriveParameters : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="System.Data.SqlClient.SqlCommandBuilder.DeriveParameters command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="aff49-133">
            <see cref="T:System.Data.SqlClient.SqlCommand" />，參考參數資訊衍生來源的預存程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-133">The <see cref="T:System.Data.SqlClient.SqlCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span>
          </span>
          <span data-ttu-id="aff49-134">衍生的參數已加入到 <see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /> 的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-134">The derived parameters are added to the <see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /> collection of the <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff49-135">從 <see cref="T:System.Data.SqlClient.SqlCommand" /> 中指定的預存程序 (Stored Procedure) 擷取參數資訊，並填入 (Populate) 指定 <see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /> 物件的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-135">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.SqlClient.SqlCommand" /> and populates the <see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /> collection of the specified <see cref="T:System.Data.SqlClient.SqlCommand" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-136">`DeriveParameters` 覆寫任何現有參數資訊`SqlDbCommand`。</span><span class="sxs-lookup"><span data-stu-id="aff49-136">`DeriveParameters` overwrites any existing parameter information for the `SqlDbCommand`.</span></span>  
  
 <span data-ttu-id="aff49-137">`DeriveParameters` 需要額外的呼叫資料庫取得資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-137">`DeriveParameters` requires an additional call to the database to obtain the information.</span></span> <span data-ttu-id="aff49-138">如果事先已知道參數資訊，則更有效率的明確設定資訊填入參數集合。</span><span class="sxs-lookup"><span data-stu-id="aff49-138">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="aff49-139">您只能使用`DeriveParameters`預存程序。</span><span class="sxs-lookup"><span data-stu-id="aff49-139">You can only use `DeriveParameters` with stored procedures.</span></span> <span data-ttu-id="aff49-140">您無法使用`DeriveParameters`擴充預存程序。</span><span class="sxs-lookup"><span data-stu-id="aff49-140">You cannot use `DeriveParameters` with extended stored procedures.</span></span> <span data-ttu-id="aff49-141">您無法使用`DeriveParameters`填入<xref:System.Data.SqlClient.SqlParameterCollection>與任意的 TRANSACT-SQL 陳述式，例如參數化的 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="aff49-141">You cannot use `DeriveParameters` to populate the <xref:System.Data.SqlClient.SqlParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 <span data-ttu-id="aff49-142">如需詳細資訊，請參閱[設定參數和參數資料型別](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-142">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aff49-143">命令文字不是有效的預存程序名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-143">The command text is not a valid stored procedure name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-144">取得在資料庫上執行刪除時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-144">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform deletions on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-145">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-145">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-146">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-146">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-147">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-147">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-148">第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-148">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-149">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-149">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-150">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-150">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-151">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-151">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff49-152">取得在資料庫上執行刪除時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-152">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform deletions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff49-153">自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件，執行刪除時所需要的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-153">The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-154">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-154">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-155">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-155">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-156">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-156">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-157">第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-157">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-158">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-158">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-159">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-159">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-160">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-160">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : bool -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="aff49-161">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-161">If <see langword="true" />, generate parameter names matching column names if possible.</span>
          </span>
          <span data-ttu-id="aff49-162">如為 <see langword="false" />，則產生 @p1、@p2 等等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-162">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff49-163">取得在資料庫上執行刪除時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-163">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is required to perform deletions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff49-164">執行刪除時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-164">The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-165">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-165">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-166">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-166">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-167">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-167">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-168">第一次產生 SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-168">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-169">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-169">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-170">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-170">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-171">產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。</span><span class="sxs-lookup"><span data-stu-id="aff49-171">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="aff49-172">傳遞`true`如`useColumnsForParameterNames`參數可讓您強制執行<xref:System.Data.OleDb.OleDbCommandBuilder>來產生改為根據的資料行名稱的參數。</span><span class="sxs-lookup"><span data-stu-id="aff49-172">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="aff49-173">才會成功，則符合下列條件：</span><span class="sxs-lookup"><span data-stu-id="aff49-173">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="aff49-174"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>在指定集合，且其長度等於或大於產生的參數名稱。</span><span class="sxs-lookup"><span data-stu-id="aff49-174">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="aff49-175">產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>集合規則運算式。</span><span class="sxs-lookup"><span data-stu-id="aff49-175">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.</span></span>  
  
-   <span data-ttu-id="aff49-176">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>的集合。</span><span class="sxs-lookup"><span data-stu-id="aff49-176">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.</span></span>  
  
 <span data-ttu-id="aff49-177">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-177">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-178">取得在資料庫上執行插入時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-178">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is required to perform insertions on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-179">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-179">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-180">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-180">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-181">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-181">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-182">第一次產生 TRANSACT-SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-182">After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-183">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-183">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-184">第一次產生 TRANSACT-SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-184">The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-185">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-185">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff49-186">取得在資料庫上執行插入時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-186">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform insertions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff49-187">執行插入所需而自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-187">The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-188">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-188">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-189">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-189">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-190">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-190">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-191">第一次產生 TRANSACT-SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-191">After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-192">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-192">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-193">第一次產生 TRANSACT-SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-193">The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-194">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-194">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : bool -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="aff49-195">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-195">If <see langword="true" />, generate parameter names matching column names if possible.</span>
          </span>
          <span data-ttu-id="aff49-196">如為 <see langword="false" />，則產生 @p1、@p2 等等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-196">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff49-197">取得在資料庫上執行插入時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-197">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is required to perform insertions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff49-198">執行插入時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-198">The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-199">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-199">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-200">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-200">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-201">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-201">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-202">第一次產生 TRANSACT-SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-202">After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-203">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-203">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-204">第一次產生 TRANSACT-SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-204">The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-205">產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。</span><span class="sxs-lookup"><span data-stu-id="aff49-205">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="aff49-206">傳遞`true`如`useColumnsForParameterNames`參數可讓您強制執行<xref:System.Data.OleDb.OleDbCommandBuilder>來產生改為根據的資料行名稱的參數。</span><span class="sxs-lookup"><span data-stu-id="aff49-206">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="aff49-207">才會成功，則符合下列條件：</span><span class="sxs-lookup"><span data-stu-id="aff49-207">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="aff49-208"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>在指定集合，且其長度等於或大於產生的參數名稱。</span><span class="sxs-lookup"><span data-stu-id="aff49-208">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="aff49-209">產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>集合規則運算式。</span><span class="sxs-lookup"><span data-stu-id="aff49-209">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.</span></span>  
  
-   <span data-ttu-id="aff49-210">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>的集合。</span><span class="sxs-lookup"><span data-stu-id="aff49-210">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.</span></span>  
  
 <span data-ttu-id="aff49-211">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-211">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : int -&gt; string" Usage="sqlCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : string -&gt; string" Usage="sqlCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterPlaceholder : int -&gt; string" Usage="sqlCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected override System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand srcCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand srcCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSchemaTable (srcCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ srcCommand);" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable" Usage="sqlCommandBuilder.GetSchemaTable srcCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="srcCommand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-212">取得在資料庫上執行更新時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-212">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-213">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-213">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-214">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-214">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-215">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-215">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-216">第一次產生 TRANSACT-SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-216">After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-217">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-217">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-218">第一次產生 TRANSACT-SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-218">The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-219">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-219">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aff49-220">取得在資料庫上執行更新時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-220">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff49-221">執行更新時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-221">The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-222">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-222">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-223">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-223">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-224">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-224">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-225">第一次產生 TRANSACT-SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-225">After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-226">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-226">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-227">第一次產生 TRANSACT-SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-227">The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-228">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-228">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : bool -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="aff49-229">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-229">If <see langword="true" />, generate parameter names matching column names if possible.</span>
          </span>
          <span data-ttu-id="aff49-230">如為 <see langword="false" />，則產生 @p1、@p2 等等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-230">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff49-231">取得在資料庫上執行更新時所需之自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-231">Gets the automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff49-232">自動產生的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件，執行更新時所需要的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-232">The automatically generated <see cref="T:System.Data.SqlClient.SqlCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-233">應用程式可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.SqlClient.SqlCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="aff49-233">An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="aff49-234">您也可以使用<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="aff49-234">You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="aff49-235">例如，您可能會呼叫<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.SqlClient.SqlDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="aff49-235">For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span>  
  
 <span data-ttu-id="aff49-236">第一次產生 TRANSACT-SQL 陳述式之後，應用程式必須明確地呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="aff49-236">After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="aff49-237">否則，<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="aff49-237">Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="aff49-238">第一次產生 TRANSACT-SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="aff49-238">The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="aff49-239">產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。</span><span class="sxs-lookup"><span data-stu-id="aff49-239">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="aff49-240">傳遞`true`如`useColumnsForParameterNames`參數可讓您強制執行<xref:System.Data.OleDb.OleDbCommandBuilder>來產生改為根據的資料行名稱的參數。</span><span class="sxs-lookup"><span data-stu-id="aff49-240">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="aff49-241">才會成功，則符合下列條件：</span><span class="sxs-lookup"><span data-stu-id="aff49-241">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="aff49-242"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>在指定集合，且其長度等於或大於產生的參數名稱。</span><span class="sxs-lookup"><span data-stu-id="aff49-242">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="aff49-243">產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>集合規則運算式。</span><span class="sxs-lookup"><span data-stu-id="aff49-243">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.</span></span>  
  
-   <span data-ttu-id="aff49-244">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>從傳回**GetSchema**方法呼叫，並在找到<xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>的集合。</span><span class="sxs-lookup"><span data-stu-id="aff49-244">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.</span></span>  
  
 <span data-ttu-id="aff49-245">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="aff49-245">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="override this.InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand" Usage="sqlCommandBuilder.InitializeCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string -&gt; string" Usage="sqlCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="aff49-246">原始的不具引號之識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-246">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff49-247">在正確資料庫目錄情況下提供不具引號的識別項時，會傳回該識別項具引號的正確格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-247">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="aff49-248">這包括正確地逸出識別項中的任何內嵌引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-248">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff49-249">具引號版本的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-249">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="aff49-250">識別項內的內嵌引號已正確逸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-250">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public override string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.SqlClient.SqlCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-251">取得或設定一或多個開始字元，當指定其名稱包含空格或保留語彙基元 (Token) 之類字元的 SQL Server 資料庫物件 (例如資料表或資料行) 時，就可以使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-251">Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aff49-252">要使用的開始字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-252">The starting character or characters to use.</span>
          </span>
          <span data-ttu-id="aff49-253">預設為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-253">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="aff49-254">雖然您無法變更<xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A>內容之後插入、 更新或刪除命令產生後，您可以將其設定變更之後呼叫`Update`資料配接器的方法。</span><span class="sxs-lookup"><span data-stu-id="aff49-254">Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a DataAdapter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aff49-255">這個屬性不能在已經產生 INSERT、UPDATE 或 DELETE 命令之後變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-255">This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public override string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-256">取得或設定一或多個結束字元，當指定其名稱包含空格或語彙基元之類字元的 SQL Server 資料庫物件 (例如資料表或資料行) 時，就可以使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-256">Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aff49-257">要使用的結束字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-257">The ending character or characters to use.</span>
          </span>
          <span data-ttu-id="aff49-258">預設為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-258">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="aff49-259">雖然您無法變更<xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A>或<xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A>內容之後插入、 更新或刪除作業已產生，您可以將其設定變更之後呼叫`Update`資料配接器的方法。</span><span class="sxs-lookup"><span data-stu-id="aff49-259">Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the `Update` method of a DataAdapter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aff49-260">在已經產生插入、更新或刪除命令之後，無法變更這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-260">This property cannot be changed after an insert, update, or delete command has been generated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public override string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aff49-261">取得或設定用於結構描述識別項和任何其他識別項間之分隔符號的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-261">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aff49-262">當做結構描述分隔符號使用的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-262">The character to be used as the schema separator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aff49-263">一般而言，資料庫伺服器會藉由使用某些字元的識別項分隔的結構描述名稱，表示為識別項的結構描述。</span><span class="sxs-lookup"><span data-stu-id="aff49-263">Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</span></span> <span data-ttu-id="aff49-264">例如，SQL Server 使用一段時間，建立完整的識別項，例如 Person.CustomerName，其中"Person"是結構描述名稱，而"CustomerName"為識別項。</span><span class="sxs-lookup"><span data-stu-id="aff49-264">For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</span></span> <span data-ttu-id="aff49-265">設定這個屬性可讓開發人員修改此行為。</span><span class="sxs-lookup"><span data-stu-id="aff49-265">Setting this property lets developers modify this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="override this.SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="sqlCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string -&gt; string" Usage="sqlCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="aff49-266">將移除其內嵌引號的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-266">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aff49-267">在有提供引號識別項時，會傳回該識別項不具引號的正確格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-267">Given a quoted identifier, returns the correct unquoted form of that identifier.</span>
          </span>
          <span data-ttu-id="aff49-268">這包括正確包含識別項中的任何內嵌引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-268">This includes correctly unescaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aff49-269">不具引號的識別項，會適當包含內嵌的引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aff49-269">The unquoted identifier, with embedded quotes properly unescaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>