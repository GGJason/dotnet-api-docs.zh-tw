<Type Name="SqlBulkCopy" FullName="System.Data.SqlClient.SqlBulkCopy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="597ab8d6bf17107429c34581026ac8e302c80b5e" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52914661" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlBulkCopy : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopy extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlBulkCopy&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlBulkCopy sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SqlBulkCopy = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="95a55-101">可讓您有效率地大量載入具有另一個來源的資料之 SQL Server 資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-101">Lets you efficiently bulk load a SQL Server table with data from another source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-102">Microsoft SQL Server 包含名為常用的命令提示字元公用程式**bcp**如之間移動資料從一個資料表，不論是在單一伺服器或伺服器之間。</span><span class="sxs-lookup"><span data-stu-id="95a55-102">Microsoft SQL Server includes a popular command-prompt utility named **bcp** for moving data from one table to another, whether on a single server or between servers.</span></span> <span data-ttu-id="95a55-103"><xref:System.Data.SqlClient.SqlBulkCopy>類別可讓您撰寫 managed 程式碼解決方案，以提供類似的功能。</span><span class="sxs-lookup"><span data-stu-id="95a55-103">The <xref:System.Data.SqlClient.SqlBulkCopy> class lets you write managed code solutions that provide similar functionality.</span></span> <span data-ttu-id="95a55-104">還有其他方式將資料載入 SQL Server 資料表 （INSERT 陳述式，例如），但<xref:System.Data.SqlClient.SqlBulkCopy>提供顯著的效能優勢。</span><span class="sxs-lookup"><span data-stu-id="95a55-104">There are other ways to load data into a SQL Server table (INSERT statements, for example), but <xref:System.Data.SqlClient.SqlBulkCopy> offers a significant performance advantage over them.</span></span>  
  
 <span data-ttu-id="95a55-105"><xref:System.Data.SqlClient.SqlBulkCopy> 類別可用於僅將資料寫入 SQL Server 資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-105">The <xref:System.Data.SqlClient.SqlBulkCopy> class can be used to write data only to SQL Server tables.</span></span> <span data-ttu-id="95a55-106">不過，資料來源不限於 SQL Server;任何資料來源可以使用，因為可以將資料載入至<xref:System.Data.DataTable>執行個體，或讀取<xref:System.Data.IDataReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-106">However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <xref:System.Data.DataTable> instance or read with a <xref:System.Data.IDataReader> instance.</span></span>  
  
 <span data-ttu-id="95a55-107"><xref:System.Data.SqlClient.SqlBulkCopy> 將會失敗時大量載入<xref:System.Data.DataTable>類型資料行<xref:System.Data.SqlTypes.SqlDateTime>其類型是其中一個日期/時間類型的資料行加入 SQL Server 2008 到 SQL Server。</span><span class="sxs-lookup"><span data-stu-id="95a55-107"><xref:System.Data.SqlClient.SqlBulkCopy> will fail when bulk loading a <xref:System.Data.DataTable> column of type <xref:System.Data.SqlTypes.SqlDateTime> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-108">下列主控台應用程式示範如何使用 <xref:System.Data.SqlClient.SqlBulkCopy> 類別來載入資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-108">The following console application demonstrates how to load data using the <xref:System.Data.SqlClient.SqlBulkCopy> class.</span></span> <span data-ttu-id="95a55-109">在此範例中，<xref:System.Data.SqlClient.SqlDataReader>用來複製資料，從**Production.Product** SQL Server 中的表格**AdventureWorks**相同資料庫中的類似資料表的資料庫。</span><span class="sxs-lookup"><span data-stu-id="95a55-109">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-110">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-110">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-111">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-111">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-112">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-112">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-113">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-113">Performing Bulk Copy Operations</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-114">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-114">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95a55-115">初始化 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-115">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-116">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-116">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="95a55-117">將用來執行大量複製作業的已開放 <see cref="T:System.Data.SqlClient.SqlConnection" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-117">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy operation.</span></span> <span data-ttu-id="95a55-118">如果您的連接字串不使用 <see langword="Integrated Security = true" />，您便可以使用 <see cref="T:System.Data.SqlClient.SqlCredential" /> 來傳遞使用者 ID 和密碼，這種方式比在連接字串中以文字指定使用者 ID 和密碼來得更加安全。</span><span class="sxs-lookup"><span data-stu-id="95a55-118">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <summary><span data-ttu-id="95a55-119">使用 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的指定開放執行個體，初始化 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 類別的新執行個體</span><span class="sxs-lookup"><span data-stu-id="95a55-119">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the specified open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-120">因為連線已經開啟的時機<xref:System.Data.SqlClient.SqlBulkCopy>執行個體初始化，在連接保持開啟之後<xref:System.Data.SqlClient.SqlBulkCopy>執行個體為封閉式。</span><span class="sxs-lookup"><span data-stu-id="95a55-120">Because the connection is already open when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is initialized, the connection remains open after the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="95a55-121">如果`connection`引數為 null，<xref:System.ArgumentNullException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="95a55-121">If the `connection` argument is null, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-122">下列主控台應用程式示範如何將資料大量載入使用已開啟的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-122">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="95a55-123">在此範例中，<xref:System.Data.SqlClient.SqlDataReader>用來複製資料，從**Production.Product** SQL Server 中的表格**AdventureWorks**相同資料庫中的類似資料表的資料庫。</span><span class="sxs-lookup"><span data-stu-id="95a55-123">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span> <span data-ttu-id="95a55-124">此範例僅供示範之用。</span><span class="sxs-lookup"><span data-stu-id="95a55-124">This example is for demonstration purposes only.</span></span> <span data-ttu-id="95a55-125">您不會使用`SqlBulkCopy`將資料從一個資料表移到相同的資料庫，在實際執行的應用程式中的另一個。</span><span class="sxs-lookup"><span data-stu-id="95a55-125">You would not use `SqlBulkCopy` to move data from one table to another in the same database in a production application.</span></span> <span data-ttu-id="95a55-126">請注意，來源資料不需要位於 SQL Server;您可以使用任何可讀取的資料來源<xref:System.Data.IDataReader>或載入至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="95a55-126">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-127">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-127">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-128">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-128">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-129">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-129">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-130">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-130">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-131">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-131">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="95a55-132">定義連接的字串，該連接將會開啟以供 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 執行個體使用。</span><span class="sxs-lookup"><span data-stu-id="95a55-132">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span> <span data-ttu-id="95a55-133">如果您的連接字串不使用 <see langword="Integrated Security = true" />，您可以使用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> 或 <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> 和 <see cref="T:System.Data.SqlClient.SqlCredential" /> 傳遞使用者 ID 和密碼，這種方式比在連接字串中以文字指定使用者 ID 和密碼來得更加安全。</span><span class="sxs-lookup"><span data-stu-id="95a55-133">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <summary><span data-ttu-id="95a55-134">根據所提供的 <paramref name="connectionString" /> 初始化並開啟 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-134">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span></span> <span data-ttu-id="95a55-135">這個建構函式會使用 <see cref="T:System.Data.SqlClient.SqlConnection" /> 初始化 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-135">The constructor uses the <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-136">結尾的大量複製作業會自動關閉連線。</span><span class="sxs-lookup"><span data-stu-id="95a55-136">The connection is automatically closed at the end of the bulk copy operation.</span></span>  
  
 <span data-ttu-id="95a55-137">如果`connectionString`為 null，<xref:System.ArgumentNullException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="95a55-137">If `connectionString` is null, an <xref:System.ArgumentNullException> is thrown.</span></span> <span data-ttu-id="95a55-138">如果`connectionString`為空字串，<xref:System.ArgumentException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="95a55-138">If `connectionString` is an empty string, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-139">下列主控台應用程式會示範如何使用連線，指定為字串，大量載入資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-139">The following console application demonstrates how to bulk load data by using a connection specified as a string.</span></span> <span data-ttu-id="95a55-140">自動關閉連線時<xref:System.Data.SqlClient.SqlBulkCopy>執行個體為封閉式。</span><span class="sxs-lookup"><span data-stu-id="95a55-140">The connection is automatically closed when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="95a55-141">在此範例中，來源資料第一次讀取資料表中的 SQL Server 以<xref:System.Data.SqlClient.SqlDataReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-141">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="95a55-142">來源資料不需要位於 SQL Server;您可以使用任何可讀取的資料來源<xref:System.Data.IDataReader>或載入至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="95a55-142">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-143">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-143">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-144">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-144">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-145">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-145">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-146">在 SQL Server 中執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-146">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-147">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-147">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString, System.Data.SqlClient.SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, copyOptions As SqlBulkCopyOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString, System::Data::SqlClient::SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string * System.Data.SqlClient.SqlBulkCopyOptions -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connectionString, copyOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="95a55-148">定義連接的字串，該連接將會開啟以供 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 執行個體使用。</span><span class="sxs-lookup"><span data-stu-id="95a55-148">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span> <span data-ttu-id="95a55-149">如果您的連接字串不使用 <see langword="Integrated Security = true" />，您可以使用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> 或 <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> 和 <see cref="T:System.Data.SqlClient.SqlCredential" /> 傳遞使用者 ID 和密碼，這種方式比在連接字串中以文字指定使用者 ID 和密碼來得更加安全。</span><span class="sxs-lookup"><span data-stu-id="95a55-149">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <param name="copyOptions"><span data-ttu-id="95a55-150"><see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> 列舉的值組合，會決定要將哪些資料來源資料列複製到目的地資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-150">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-151">根據所提供的 <paramref name="connectionString" /> 初始化並開啟 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-151">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span></span> <span data-ttu-id="95a55-152">這個建構函式會使用該 <see cref="T:System.Data.SqlClient.SqlConnection" /> 初始化 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-152">The constructor uses that <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span> <span data-ttu-id="95a55-153"><see cref="T:System.Data.SqlClient.SqlConnection" /> 執行個體會根據 <paramref name="copyOptions" /> 參數中所提供的選項操作。</span><span class="sxs-lookup"><span data-stu-id="95a55-153">The <see cref="T:System.Data.SqlClient.SqlConnection" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-154">您可以取得詳細的資訊中的所有大量複製選項<xref:System.Data.SqlClient.SqlBulkCopyOptions>主題。</span><span class="sxs-lookup"><span data-stu-id="95a55-154">You can obtain detailed information about all the bulk copy options in the <xref:System.Data.SqlClient.SqlBulkCopyOptions> topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-155">下列主控台應用程式會示範如何使用指定為字串的連接來執行大量載入。</span><span class="sxs-lookup"><span data-stu-id="95a55-155">The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</span></span> <span data-ttu-id="95a55-156">選項設定為使用中來源資料表的 identity 資料行的值，當您載入目的地資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-156">An option is set to use the value in the identity column of the source table when you load the destination table.</span></span> <span data-ttu-id="95a55-157">在此範例中，來源資料第一次讀取資料表中的 SQL Server 以<xref:System.Data.SqlClient.SqlDataReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-157">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="95a55-158">來源資料表和目的地資料表各自包含識別欄位。</span><span class="sxs-lookup"><span data-stu-id="95a55-158">The source table and destination table each include an Identity column.</span></span> <span data-ttu-id="95a55-159">根據預設，新的值給**識別**會產生每個資料列加入目的地資料表中的資料行。</span><span class="sxs-lookup"><span data-stu-id="95a55-159">By default, a new value for the **Identity** column is generated in the destination table for each row added.</span></span> <span data-ttu-id="95a55-160">在此範例中，開啟連接時，強制大量載入處理序使用，設定選項**識別**改為從來源資料表的數值。</span><span class="sxs-lookup"><span data-stu-id="95a55-160">In this example, an option is set when the connection is opened that forces the bulk load process to use the **Identity** values from the source table instead.</span></span> <span data-ttu-id="95a55-161">若要查看選項是如何變更大量負載的運作方式，以執行此範例**dbo。BulkCopyDemoMatchingColumns**空的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-161">To see how the option changes the way the bulk load works, run the sample with the **dbo.BulkCopyDemoMatchingColumns** table empty.</span></span> <span data-ttu-id="95a55-162">從來源載入的所有資料列。</span><span class="sxs-lookup"><span data-stu-id="95a55-162">All rows load from the source.</span></span> <span data-ttu-id="95a55-163">再執行此範例一次不含空白資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-163">Then run the sample again without emptying the table.</span></span> <span data-ttu-id="95a55-164">擲回例外狀況，並將程式碼會將訊息寫入主控台，告知您未能加入資料列，因為主索引鍵條件約束違規。</span><span class="sxs-lookup"><span data-stu-id="95a55-164">An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-165">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-165">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-166">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-166">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-167">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-167">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-168">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-168">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-169">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-169">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlBulkCopyOptions copyOptions, System.Data.SqlClient.SqlTransaction externalTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions, class System.Data.SqlClient.SqlTransaction externalTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection, copyOptions As SqlBulkCopyOptions, externalTransaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlBulkCopyOptions copyOptions, System::Data::SqlClient::SqlTransaction ^ externalTransaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlBulkCopyOptions * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connection, copyOptions, externalTransaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
        <Parameter Name="externalTransaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="95a55-170">將用以執行大量複製的已開放 <see cref="T:System.Data.SqlClient.SqlConnection" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-170">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy.</span></span> <span data-ttu-id="95a55-171">如果您的連接字串不使用 <see langword="Integrated Security = true" />，您便可以使用 <see cref="T:System.Data.SqlClient.SqlCredential" /> 來傳遞使用者 ID 和密碼，這種方式比在連接字串中以文字指定使用者 ID 和密碼來得更加安全。</span><span class="sxs-lookup"><span data-stu-id="95a55-171">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <param name="copyOptions"><span data-ttu-id="95a55-172"><see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> 列舉的值組合，會決定要將哪些資料來源資料列複製到目的地資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-172">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span></span></param>
        <param name="externalTransaction"><span data-ttu-id="95a55-173">現有的 <see cref="T:System.Data.SqlClient.SqlTransaction" /> 執行個體，在該執行個體之下會進行大量複製。</span><span class="sxs-lookup"><span data-stu-id="95a55-173">An existing <see cref="T:System.Data.SqlClient.SqlTransaction" /> instance under which the bulk copy will occur.</span></span></param>
        <summary><span data-ttu-id="95a55-174">使用提供的現有開放 <see cref="T:System.Data.SqlClient.SqlConnection" /> 執行個體，初始化 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-174">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the supplied existing open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span> <span data-ttu-id="95a55-175"><see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 執行個體會根據 <paramref name="copyOptions" /> 參數中所提供的選項操作。</span><span class="sxs-lookup"><span data-stu-id="95a55-175">The <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span></span> <span data-ttu-id="95a55-176">如果提供了非 null 的 <see cref="T:System.Data.SqlClient.SqlTransaction" />，則複製作業會在該異動執行。</span><span class="sxs-lookup"><span data-stu-id="95a55-176">If a non-null <see cref="T:System.Data.SqlClient.SqlTransaction" /> is supplied, the copy operations will be performed within that transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-177">如果選項包括`UseInternalTransaction`而`externalTransaction`引數不是 null， **InvalidArgumentException**就會擲回。</span><span class="sxs-lookup"><span data-stu-id="95a55-177">If options include `UseInternalTransaction` and the `externalTransaction` argument is not null, an **InvalidArgumentException** is thrown.</span></span>  
  
 <span data-ttu-id="95a55-178">如需範例示範如何使用`SqlBulkCopy`在交易中，請參閱[異動和大量複製作業](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-178">For examples demonstrating how to use `SqlBulkCopy` in a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-179">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-179">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-180">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-180">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BatchSize : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a55-181">每個批次中的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="95a55-181">Number of rows in each batch.</span></span> <span data-ttu-id="95a55-182">每個批次結束時，批次中的資料列會傳送到伺服器。</span><span class="sxs-lookup"><span data-stu-id="95a55-182">At the end of each batch, the rows in the batch are sent to the server.</span></span></summary>
        <value><span data-ttu-id="95a55-183"><see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> 屬性的整數值；如果未設定任何值，則為零。</span><span class="sxs-lookup"><span data-stu-id="95a55-183">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> property, or zero if no value has been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-184">批次時，已完成<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>已處理的資料列，或將傳送至目的地資料來源沒有多個資料列。</span><span class="sxs-lookup"><span data-stu-id="95a55-184">A batch is complete when <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows have been processed or there are no more rows to send to the destination data source.</span></span>  
  
 <span data-ttu-id="95a55-185">零 （預設值） 表示，每個<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>作業是以單一批次。</span><span class="sxs-lookup"><span data-stu-id="95a55-185">Zero (the default) indicates that each <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is a single batch.</span></span>  
  
 <span data-ttu-id="95a55-186">如果<xref:System.Data.SqlClient.SqlBulkCopy>已宣告執行個體，而不需要<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>選項資料列會傳送到伺服器的作用中，<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>會一次，但沒有交易相關的動作上的資料列。</span><span class="sxs-lookup"><span data-stu-id="95a55-186">If the <xref:System.Data.SqlClient.SqlBulkCopy> instance has been declared without the <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> option in effect, rows are sent to the server <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows at a time, but no transaction-related action is taken.</span></span> <span data-ttu-id="95a55-187">如果<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>處於作用中，每個批次的資料列會插入個別的交易。</span><span class="sxs-lookup"><span data-stu-id="95a55-187">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is in effect, each batch of rows is inserted as a separate transaction.</span></span>  
  
 <span data-ttu-id="95a55-188"><xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>屬性可以設定在任何時間。</span><span class="sxs-lookup"><span data-stu-id="95a55-188">The <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> property can be set at any time.</span></span> <span data-ttu-id="95a55-189">如果大量複製已在進行中，目前的批次也會根據先前的批次大小會調整大小。</span><span class="sxs-lookup"><span data-stu-id="95a55-189">If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</span></span> <span data-ttu-id="95a55-190">後續的批次使用新的大小。</span><span class="sxs-lookup"><span data-stu-id="95a55-190">Subsequent batches use the new size.</span></span> <span data-ttu-id="95a55-191">如果<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>是一開始的零和已變更時<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>作業已經在進行中，作業將以單一批次的資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-191">If the <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> is initially zero and changed while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is already in progress, that operation loads the data as a single batch.</span></span> <span data-ttu-id="95a55-192">任何後續<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>相同的作業<xref:System.Data.SqlClient.SqlBulkCopy>執行個體使用新<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="95a55-192">Any subsequent <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operations on the same <xref:System.Data.SqlClient.SqlBulkCopy> instance use the new <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-193">下列主控台應用程式示範如何將資料大量載入的 50 個資料列批次。</span><span class="sxs-lookup"><span data-stu-id="95a55-193">The following console application demonstrates how to bulk load data in batches of 50 rows.</span></span> <span data-ttu-id="95a55-194">以範例說明如何<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>適用於交易，請參閱[異動和大量複製作業](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-194">For an example illustrating how <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> works with a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 <span data-ttu-id="95a55-195">在此範例中，來源資料第一次讀取資料表中的 SQL Server 以<xref:System.Data.SqlClient.SqlDataReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-195">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="95a55-196">來源資料不需要位於 SQL Server;您可以使用任何可讀取的資料來源<xref:System.Data.IDataReader>或載入至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="95a55-196">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-197">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-197">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-198">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-198">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-199">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-199">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-200">在 SQL Server 中執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-200">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-201">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-201">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BulkCopyTimeout">
      <MemberSignature Language="C#" Value="public int BulkCopyTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BulkCopyTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property BulkCopyTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BulkCopyTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BulkCopyTimeout : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a55-202">完成作業的秒數，在這之後作業會逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-202">Number of seconds for the operation to complete before it times out.</span></span></summary>
        <value><span data-ttu-id="95a55-203"><see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> 屬性的整數值。</span><span class="sxs-lookup"><span data-stu-id="95a55-203">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> property.</span></span> <span data-ttu-id="95a55-204">預設為 30 秒。</span><span class="sxs-lookup"><span data-stu-id="95a55-204">The default is 30 seconds.</span></span> <span data-ttu-id="95a55-205">值為 0 表示沒有限制；大量複製會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="95a55-205">A value of 0 indicates no limit; the bulk copy will wait indefinitely.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-206">如果作業逾時，未認可的交易，並複製的所有資料列會移除從目的地資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-206">If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-207">下列主控台應用程式將示範如何修改為 60 秒的逾時大量載入資料時。</span><span class="sxs-lookup"><span data-stu-id="95a55-207">The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</span></span>  
  
 <span data-ttu-id="95a55-208">在此範例中，來源資料第一次讀取資料表中的 SQL Server 以<xref:System.Data.SqlClient.SqlDataReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-208">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="95a55-209">來源資料不需要位於 SQL Server;您可以使用任何可讀取的資料來源<xref:System.Data.IDataReader>或載入至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="95a55-209">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-210">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-210">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-211">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-211">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-212">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用[!INCLUDE[tsql](~/includes/tsql-md.md)]`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-212">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a [!INCLUDE[tsql](~/includes/tsql-md.md)]`INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-213">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-213">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-214">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-214">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="sqlBulkCopy.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95a55-215">關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-215">Closes the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-216">在您呼叫後<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>上<xref:System.Data.SqlClient.SqlBulkCopy>物件時，沒有其他作業將會成功。</span><span class="sxs-lookup"><span data-stu-id="95a55-216">After you call a <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> on the <xref:System.Data.SqlClient.SqlBulkCopy> object, no other operation will succeed.</span></span> <span data-ttu-id="95a55-217">若要呼叫<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>方法會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="95a55-217">Calls to the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="95a55-218">呼叫<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>方法，從<xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>事件會致使<xref:System.InvalidOperationException>擲回。</span><span class="sxs-lookup"><span data-stu-id="95a55-218">Calling the <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method from the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event causes an <xref:System.InvalidOperationException> to be thrown.</span></span>  
  
 <span data-ttu-id="95a55-219">請注意該開放<xref:System.Data.SqlClient.SqlBulkCopy>結尾的 「 執行個體都已關閉隱含`using`區塊。</span><span class="sxs-lookup"><span data-stu-id="95a55-219">Note that open <xref:System.Data.SqlClient.SqlBulkCopy> instances are closed implicitly at the end of a `using` block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-220">下列範例會使用相同<xref:System.Data.SqlClient.SqlBulkCopy>將銷售訂單和及其相關聯的詳細資料新增至兩個目的地資料表的執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-220">The following example uses the same <xref:System.Data.SqlClient.SqlBulkCopy> instance to add sales orders and their associated details to two destination tables.</span></span> <span data-ttu-id="95a55-221">因為**AdventureWorks**銷售訂單資料表很大，此範例會讀取只有某些帳戶號碼所下的訂單和大量複製到目的地資料表的那些訂單和明細。</span><span class="sxs-lookup"><span data-stu-id="95a55-221">Because the **AdventureWorks** sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</span></span> <span data-ttu-id="95a55-222"><xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>只有兩個大量複製作業完成之後，使用方法。</span><span class="sxs-lookup"><span data-stu-id="95a55-222">The <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method is used only after both bulk copy operations are complete.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-223">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-223">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-224">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-224">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-225">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-225">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-226">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-226">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-227">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-227">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnMappings">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnMappings As SqlBulkCopyColumnMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ ColumnMappings { System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMappings : System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" Usage="System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a55-228">傳回 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 項目的集合。</span><span class="sxs-lookup"><span data-stu-id="95a55-228">Returns a collection of <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> items.</span></span> <span data-ttu-id="95a55-229">資料行對應會定義資料來源中資料行和目的地中資料行之間的關聯性。</span><span class="sxs-lookup"><span data-stu-id="95a55-229">Column mappings define the relationships between columns in the data source and columns in the destination.</span></span></summary>
        <value><span data-ttu-id="95a55-230">資料行對應的集合。</span><span class="sxs-lookup"><span data-stu-id="95a55-230">A collection of column mappings.</span></span> <span data-ttu-id="95a55-231">根據預設，它可以是空的集合。</span><span class="sxs-lookup"><span data-stu-id="95a55-231">By default, it is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-232">如果資料來源和目的地資料表有相同數目的資料行，而且每個資料來源中的來源資料行的序數位置中符合相對應的目的地資料行的序數位置<xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>集合不是必要。</span><span class="sxs-lookup"><span data-stu-id="95a55-232">If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is unnecessary.</span></span> <span data-ttu-id="95a55-233">不過，如果資料行計數不同，或不一致的序數位置，您必須使用<xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>以確定資料已複製到正確的資料行。</span><span class="sxs-lookup"><span data-stu-id="95a55-233">However, if the column counts differ, or the ordinal positions are not consistent, you must use <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> to make sure that data is copied into the correct columns.</span></span>  
  
 <span data-ttu-id="95a55-234">期間執行大量複製作業時，此集合可供存取，但無法變更。</span><span class="sxs-lookup"><span data-stu-id="95a55-234">During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</span></span> <span data-ttu-id="95a55-235">若要變更它的任何嘗試將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="95a55-235">Any attempt to change it will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-236">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-236">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-237">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-237">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DestinationTableName">
      <MemberSignature Language="C#" Value="public string DestinationTableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationTableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationTableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DestinationTableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationTableName : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a55-238">伺服器上的目的資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="95a55-238">Name of the destination table on the server.</span></span></summary>
        <value><span data-ttu-id="95a55-239"><see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性的字串值；如果未提供任何值，則為 null。</span><span class="sxs-lookup"><span data-stu-id="95a55-239">The string value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property, or null if none as been supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-240">如果<xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>尚未設定的時機<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>呼叫時，<xref:System.ArgumentNullException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="95a55-240">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> has not been set when <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> is called, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="95a55-241">如果<xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>遭到修改時<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>作業正在執行，變更不會影響目前的作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-241">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is modified while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is running, the change does not affect the current operation.</span></span> <span data-ttu-id="95a55-242">新<xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>用於下一次<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="95a55-242">The new <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> value is used the next time a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called.</span></span>  
  
 <span data-ttu-id="95a55-243"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> 是三部分名稱 (`<database>.<owningschema>.<name>`)。</span><span class="sxs-lookup"><span data-stu-id="95a55-243"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is a three-part name (`<database>.<owningschema>.<name>`).</span></span> <span data-ttu-id="95a55-244">如果您選擇，您可以限定資料表名稱的資料庫和主控結構描述。</span><span class="sxs-lookup"><span data-stu-id="95a55-244">You can qualify the table name with its database and owning schema if you choose.</span></span> <span data-ttu-id="95a55-245">不過，如果資料表名稱使用底線 ("_") 或任何其他特殊字元，您必須逸出名稱使用周圍的括號中 (`[<database>.<owningschema>.<name_01>]`)。</span><span class="sxs-lookup"><span data-stu-id="95a55-245">However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (`[<database>.<owningschema>.<name_01>]`).</span></span> <span data-ttu-id="95a55-246">如需詳細資訊，請參閱 <<c0> [ 資料庫識別碼](/sql/relational-databases/databases/database-identifiers)。</span><span class="sxs-lookup"><span data-stu-id="95a55-246">For more information, see [Database Identifiers](/sql/relational-databases/databases/database-identifiers).</span></span>  
  
 <span data-ttu-id="95a55-247">您可以使用下列值，將資料大量複製到暫存資料表`tempdb..#table`或是`tempdb.<owner>.#table`如<xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="95a55-247">You can bulk-copy data to a temporary table by using a value such as `tempdb..#table` or `tempdb.<owner>.#table` for the <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-248">下列主控台應用程式示範如何將資料大量載入使用已開啟的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-248">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="95a55-249">目的地資料表是中的資料表**AdventureWorks**資料庫。</span><span class="sxs-lookup"><span data-stu-id="95a55-249">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="95a55-250">在此範例中，連接第一次使用讀取 SQL Server 資料表中的資料<xref:System.Data.SqlClient.SqlDataReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-250">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="95a55-251">來源資料不需要位於 SQL Server;您可以使用任何可讀取的資料來源<xref:System.Data.IDataReader>或載入至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="95a55-251">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-252">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-252">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-253">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-253">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-254">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-254">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-255">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-255">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-256">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-256">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableStreaming">
      <MemberSignature Language="C#" Value="public bool EnableStreaming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableStreaming" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableStreaming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableStreaming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableStreaming : bool with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a55-257">啟用或停用 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件，從 <see cref="T:System.Data.IDataReader" /> 物件串流資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-257">Enables or disables a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object to stream data from an <see cref="T:System.Data.IDataReader" /> object</span></span></summary>
        <value><span data-ttu-id="95a55-258">如果 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件可從 <see cref="T:System.Data.IDataReader" /> 物件串流資料，則為 <see langword="true" />，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="95a55-258"><see langword="true" /> if a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object can stream data from an <see cref="T:System.Data.IDataReader" /> object; otherwise, false.</span></span> <span data-ttu-id="95a55-259">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-259">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-260">當<xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A>是`true`，<xref:System.Data.SqlClient.SqlBulkCopy>讀取<xref:System.Data.IDataReader>物件使用<xref:System.Data.CommandBehavior.SequentialAccess>，將記憶體使用最佳化使用<xref:System.Data.IDataReader>串流功能。</span><span class="sxs-lookup"><span data-stu-id="95a55-260">When <xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A> is `true`, <xref:System.Data.SqlClient.SqlBulkCopy> reads from an <xref:System.Data.IDataReader> object using <xref:System.Data.CommandBehavior.SequentialAccess>, optimizing memory usage by using the <xref:System.Data.IDataReader> streaming capabilities.</span></span> <span data-ttu-id="95a55-261">當設定為 false 時，<xref:System.Data.SqlClient.SqlBulkCopy>類別會載入所傳回的所有資料<xref:System.Data.IDataReader>物件至記憶體，再將它傳送到 SQL Server 或 SQL Azure。</span><span class="sxs-lookup"><span data-stu-id="95a55-261">When it's set to false, the <xref:System.Data.SqlClient.SqlBulkCopy> class loads all the data returned by the <xref:System.Data.IDataReader> object into memory before sending it to SQL Server or SQL Azure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyAfter">
      <MemberSignature Language="C#" Value="public int NotifyAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotifyAfter" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NotifyAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyAfter : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a55-262">定義產生通知事件之前要處理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="95a55-262">Defines the number of rows to be processed before generating a notification event.</span></span></summary>
        <value><span data-ttu-id="95a55-263"><see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> 屬性的整數值；如果尚未設定這個屬性，則為零。</span><span class="sxs-lookup"><span data-stu-id="95a55-263">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property, or zero if the property has not been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-264">這個屬性被設計用於使用者介面元件，說明大量複製作業的進度。</span><span class="sxs-lookup"><span data-stu-id="95a55-264">This property is designed for user interface components that illustrate the progress of a bulk copy operation.</span></span> <span data-ttu-id="95a55-265">表示產生通知事件之前要處理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="95a55-265">It indicates the number of rows to be processed before generating a notification event.</span></span> <span data-ttu-id="95a55-266"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>即使在大量複製作業正在進行中時，可以在任何時間，設定屬性。</span><span class="sxs-lookup"><span data-stu-id="95a55-266">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property can be set at any time, even while a bulk copy operation is underway.</span></span> <span data-ttu-id="95a55-267">大量複製作業期間所做的變更生效之後的下一步 的通知。</span><span class="sxs-lookup"><span data-stu-id="95a55-267">Changes made during a bulk copy operation take effect after the next notification.</span></span> <span data-ttu-id="95a55-268">新的設定適用於相同的執行個體上的所有後續作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-268">The new setting applies to all subsequent operations on the same instance.</span></span>  
  
 <span data-ttu-id="95a55-269">如果<xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>是設為數字小於零，則<xref:System.ArgumentOutOfRangeException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="95a55-269">If <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> is set to a number less than zero, an <xref:System.ArgumentOutOfRangeException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-270">下列主控台應用程式示範如何將資料大量載入使用已開啟的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-270">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="95a55-271"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>屬性設定，讓每 50 個資料列複製到資料表之後，系統會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="95a55-271">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="95a55-272">在此範例中，連接第一次使用讀取 SQL Server 資料表中的資料<xref:System.Data.SqlClient.SqlDataReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-272">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="95a55-273">然後開啟第二個連接，大量複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-273">Then a second connection is opened to bulk copy the data.</span></span> <span data-ttu-id="95a55-274">請注意，來源資料不需要位於 SQL Server;您可以使用任何可讀取的資料來源<xref:System.Data.IDataReader>或載入至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="95a55-274">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-275">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-275">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-276">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-276">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-277">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-277">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-278">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-278">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-279">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-279">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SqlRowsCopied">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SqlRowsCopied As SqlRowsCopiedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowsCopiedEventHandler ^ SqlRowsCopied;" />
      <MemberSignature Language="F#" Value="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " Usage="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowsCopiedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95a55-280">每次處理完 <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> 屬性指定的資料列數時就會發生。</span><span class="sxs-lookup"><span data-stu-id="95a55-280">Occurs every time that the number of rows specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property have been processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-281">請注意，設定<xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>和<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>無關。</span><span class="sxs-lookup"><span data-stu-id="95a55-281">Note that the settings of <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> and <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> are independent.</span></span> <span data-ttu-id="95a55-282">收到<xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>事件並不代表任何資料列已傳送到伺服器或認可。</span><span class="sxs-lookup"><span data-stu-id="95a55-282">Receipt of a <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event does not imply that any rows have been sent to the server or committed.</span></span>  
  
 <span data-ttu-id="95a55-283">您不能呼叫 SqlBulkCopy.Close (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) 或 SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) 從這個事件。</span><span class="sxs-lookup"><span data-stu-id="95a55-283">You cannot call SqlBulkCopy.Close (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) or SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) from this event.</span></span> <span data-ttu-id="95a55-284">如此一來，這會導致<xref:System.InvalidOperationException>擲回，而<xref:System.Data.SqlClient.SqlBulkCopy>物件狀態不會變更。</span><span class="sxs-lookup"><span data-stu-id="95a55-284">Doing this will cause an <xref:System.InvalidOperationException> being thrown, and the <xref:System.Data.SqlClient.SqlBulkCopy> object state will not change.</span></span> <span data-ttu-id="95a55-285">如果使用者想要取消事件，作業<xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A>屬性<xref:System.Data.SqlClient.SqlRowsCopiedEventArgs>可用。</span><span class="sxs-lookup"><span data-stu-id="95a55-285">If the user wants to cancel the operation from the event, the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property of the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> can be used.</span></span> <span data-ttu-id="95a55-286">(請參閱[異動和大量複製作業](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)如需範例，使用<xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A>屬性。)</span><span class="sxs-lookup"><span data-stu-id="95a55-286">(See [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md) for examples that use the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property.)</span></span>  
  
 <span data-ttu-id="95a55-287">採取任何動作，例如交易活動，支援大量複製作業，在執行期間的連線，而且建議您不要使用期間使用的相同連接<xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>事件。</span><span class="sxs-lookup"><span data-stu-id="95a55-287">No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event.</span></span> <span data-ttu-id="95a55-288">不過，您可以開啟不同的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-288">However, you can open a different connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-289">下列主控台應用程式示範如何將資料大量載入使用已開啟的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-289">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="95a55-290"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>屬性設定，讓每 50 個資料列複製到資料表之後，系統會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="95a55-290">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="95a55-291">在此範例中，連接第一次使用讀取 SQL Server 資料表中的資料<xref:System.Data.SqlClient.SqlDataReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="95a55-291">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="95a55-292">請注意，來源資料不需要位於 SQL Server;您可以使用任何可讀取的資料來源<xref:System.Data.IDataReader>或載入至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="95a55-292">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-293">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-293">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-294">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-294">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-295">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-295">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-296">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-296">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-297">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-297">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95a55-298">釋放 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 類別目前的執行個體所使用的全部資源。</span><span class="sxs-lookup"><span data-stu-id="95a55-298">Releases all resources used by the current instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-299">`Dispose` 使用完畢時，請呼叫 <xref:System.Data.SqlClient.SqlBulkCopy>。</span><span class="sxs-lookup"><span data-stu-id="95a55-299">Call `Dispose` when you are finished using the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="95a55-300">`Dispose` 方法會將 <xref:System.Data.SqlClient.SqlBulkCopy> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="95a55-300">The `Dispose` method leaves the <xref:System.Data.SqlClient.SqlBulkCopy> in an unusable state.</span></span> <span data-ttu-id="95a55-301">之後呼叫`Dispose`，您必須釋放所有的參考<xref:System.Data.SqlClient.SqlBulkCopy>讓記憶體回收行程可以回收記憶體，<xref:System.Data.SqlClient.SqlBulkCopy>所佔用。</span><span class="sxs-lookup"><span data-stu-id="95a55-301">After calling `Dispose`, you must release all references to the <xref:System.Data.SqlClient.SqlBulkCopy> so the garbage collector can reclaim the memory that the <xref:System.Data.SqlClient.SqlBulkCopy> was occupying.</span></span>  
  
 <span data-ttu-id="95a55-302">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-302">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95a55-303">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Data.SqlClient.SqlBulkCopy>。</span><span class="sxs-lookup"><span data-stu-id="95a55-303">Always call `Dispose` before you release your last reference to the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="95a55-304">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Data.SqlClient.SqlBulkCopy> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="95a55-304">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.SqlClient.SqlBulkCopy> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-305">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-305">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServer">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95a55-306">將所有資料列從資料來源複製到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 物件之 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-306">Copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-307">如果 multiple active result set (MARS) 停用，<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>忙碌中 」 建立的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-307">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="95a55-308">如果啟用 MARS 時，您可以交錯呼叫<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>與其他命令，在相同的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-308">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-309">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-309">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-310">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-310">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.Common.DbDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="95a55-311"><see cref="T:System.Data.Common.DbDataReader" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-311">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-312">將提供之 <see cref="T:System.Data.Common.DbDataReader" /> 陣列中的所有資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-312">Copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (rows As DataRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataRow[] -&gt; unit" Usage="sqlBulkCopy.WriteToServer rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="95a55-313">要複製到目的資料表的 <see cref="T:System.Data.DataRow" /> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="95a55-313">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-314">將提供之 <see cref="T:System.Data.DataRow" /> 陣列中的所有資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-314">Copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-315">大量複製作業正在進行，相關聯的目的地時<xref:System.Data.SqlClient.SqlConnection>忙碌處理，而且可以在連接上執行任何其他作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-315">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="95a55-316"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>集合會將對應從<xref:System.Data.DataRow>目的地資料庫的資料表的資料行。</span><span class="sxs-lookup"><span data-stu-id="95a55-316">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataRow> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-317">下列主控台應用程式示範如何將資料大量載入從<xref:System.Data.DataRow>陣列。</span><span class="sxs-lookup"><span data-stu-id="95a55-317">The following console application demonstrates how to bulk load data from a <xref:System.Data.DataRow> array.</span></span> <span data-ttu-id="95a55-318">目的地資料表是中的資料表**AdventureWorks**資料庫。</span><span class="sxs-lookup"><span data-stu-id="95a55-318">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="95a55-319">在此範例中，<xref:System.Data.DataTable>建立在執行階段。</span><span class="sxs-lookup"><span data-stu-id="95a55-319">In this example, a <xref:System.Data.DataTable> is created at run time.</span></span> <span data-ttu-id="95a55-320">從選取的單一資料列<xref:System.Data.DataTable>將複製到目的地資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-320">A single row is selected from the <xref:System.Data.DataTable> to copy to the destination table.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-321">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-321">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-322">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-322">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-323">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-323">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-324">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-324">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-325">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-325">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable -&gt; unit" Usage="sqlBulkCopy.WriteToServer table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="95a55-326"><see cref="T:System.Data.DataTable" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-326">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-327">將提供的 <see cref="T:System.Data.DataTable" /> 中的所有資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-327">Copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-328">中的所有資料列<xref:System.Data.DataTable>會複製到目的地資料表，除了已刪除。</span><span class="sxs-lookup"><span data-stu-id="95a55-328">All rows in the <xref:System.Data.DataTable> are copied to the destination table except those that have been deleted.</span></span>  
  
 <span data-ttu-id="95a55-329">大量複製作業正在進行，相關聯的目的地時<xref:System.Data.SqlClient.SqlConnection>忙碌處理，而且可以在連接上執行任何其他作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-329">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="95a55-330"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>集合會將對應從<xref:System.Data.DataTable>目的地資料庫的資料表的資料行。</span><span class="sxs-lookup"><span data-stu-id="95a55-330">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-331">下列主控台應用程式示範如何將資料大量載入從<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="95a55-331">The following Console application demonstrates how to bulk load data from a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="95a55-332">目的地資料表是中的資料表**AdventureWorks**資料庫。</span><span class="sxs-lookup"><span data-stu-id="95a55-332">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="95a55-333">在此範例中，<xref:System.Data.DataTable>會建立在執行階段，並做為來源的`SqlBulkCopy`作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-333">In this example, a <xref:System.Data.DataTable> is created at run time and is the source of the `SqlBulkCopy` operation.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-334">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-334">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-335">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-335">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-336">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-336">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-337">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-337">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-338">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-338">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.IDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="95a55-339"><see cref="T:System.Data.IDataReader" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-339">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-340">將提供的 <see cref="T:System.Data.IDataReader" /> 中的所有資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-340">Copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-341">在下一個可用的資料列，讀取器中開始複製作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-341">The copy operation starts at the next available row in the reader.</span></span> <span data-ttu-id="95a55-342">大部分的情況下，讀取器只傳回<xref:System.Data.IDbCommand.ExecuteReader%2A>或類似的呼叫，因此下一個可用的資料列的第一個資料列。</span><span class="sxs-lookup"><span data-stu-id="95a55-342">Most of the time, the reader was just returned by <xref:System.Data.IDbCommand.ExecuteReader%2A> or a similar call, so the next available row is the first row.</span></span> <span data-ttu-id="95a55-343">若要處理多個結果，請呼叫<xref:System.Data.IDataReader.NextResult%2A>上的資料讀取器和呼叫<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>一次。</span><span class="sxs-lookup"><span data-stu-id="95a55-343">To process multiple results, call <xref:System.Data.IDataReader.NextResult%2A> on the data reader and call <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> again.</span></span>  
  
 <span data-ttu-id="95a55-344">請注意，使用<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>修改讀取器的狀態。</span><span class="sxs-lookup"><span data-stu-id="95a55-344">Note that using <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> modifies the state of the reader.</span></span> <span data-ttu-id="95a55-345">方法會呼叫<xref:System.Data.IDataReader.Read%2A>直到它傳回 false，作業就會中止，或發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-345">The method will call <xref:System.Data.IDataReader.Read%2A> until it returns false, the operation is aborted, or an error occurs.</span></span> <span data-ttu-id="95a55-346">這表示資料讀取器會在不同的狀態，可能會在結果集中，結束時<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>作業即告完成。</span><span class="sxs-lookup"><span data-stu-id="95a55-346">This means that the data reader will be in a different state, probably at the end of the result set, when the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is complete.</span></span>  
  
 <span data-ttu-id="95a55-347">大量複製作業正在進行，相關聯的目的地時<xref:System.Data.SqlClient.SqlConnection>忙碌處理，而且可以在連接上執行任何其他作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-347">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="95a55-348"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>集合從資料讀取器資料行對應到目的地資料庫資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-348">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the data reader columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-349">下列主控台應用程式示範如何將資料大量載入從<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="95a55-349">The following console application demonstrates how to bulk load data from a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="95a55-350">目的地資料表是中的資料表**AdventureWorks**資料庫。</span><span class="sxs-lookup"><span data-stu-id="95a55-350">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-351">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-351">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-352">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-352">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-353">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-353">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-354">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-354">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-355">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-355">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable, rowState As DataRowState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable * System.Data.DataRowState -&gt; unit" Usage="sqlBulkCopy.WriteToServer (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="95a55-356"><see cref="T:System.Data.DataTable" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-356">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="95a55-357"><see cref="T:System.Data.DataRowState" /> 列舉中的值。</span><span class="sxs-lookup"><span data-stu-id="95a55-357">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="95a55-358">只有符合資料列狀態的資料列會複製到目的地。</span><span class="sxs-lookup"><span data-stu-id="95a55-358">Only rows matching the row state are copied to the destination.</span></span></param>
        <summary><span data-ttu-id="95a55-359">只會將提供的 <see cref="T:System.Data.DataTable" /> 中符合提供的資料列狀態之資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-359">Copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-360">只有當資料列中<xref:System.Data.DataTable>中所示的狀態所`rowState`引數，且不刪除複製到目的地資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-360">Only rows in the <xref:System.Data.DataTable> that are in the states indicated in the `rowState` argument and have not been deleted are copied to the destination table.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95a55-361">如果<xref:System.Data.DataRowState.Deleted>指定，則任何<xref:System.Data.DataRowState.Unchanged>， <xref:System.Data.DataRowState.Added>，和<xref:System.Data.DataRowState.Modified>資料列也會複製到伺服器。</span><span class="sxs-lookup"><span data-stu-id="95a55-361">If <xref:System.Data.DataRowState.Deleted> is specified, any <xref:System.Data.DataRowState.Unchanged>, <xref:System.Data.DataRowState.Added>, and <xref:System.Data.DataRowState.Modified> rows will also be copied to the server.</span></span> <span data-ttu-id="95a55-362">將會不引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="95a55-362">No exception will be raised.</span></span>  
  
 <span data-ttu-id="95a55-363">大量複製作業正在進行，相關聯的目的地時<xref:System.Data.SqlClient.SqlConnection>忙碌處理，而且可以在連接上執行任何其他作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-363">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="95a55-364"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>集合會將對應從<xref:System.Data.DataTable>目的地資料庫的資料表的資料行。</span><span class="sxs-lookup"><span data-stu-id="95a55-364">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95a55-365">下列主控台應用程式示範如何在大量載入只在資料列<xref:System.Data.DataTable>符合指定的狀態。</span><span class="sxs-lookup"><span data-stu-id="95a55-365">The following Console application demonstrates how to bulk load only the rows in a <xref:System.Data.DataTable> that match a specified state.</span></span> <span data-ttu-id="95a55-366">在此情況下，只有未變更的資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="95a55-366">In this case, only unchanged rows are added.</span></span> <span data-ttu-id="95a55-367">目的地資料表是中的資料表**AdventureWorks**資料庫。</span><span class="sxs-lookup"><span data-stu-id="95a55-367">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="95a55-368">在此範例中，<xref:System.Data.DataTable>建立在執行的階段，以及三個資料列會加入它。</span><span class="sxs-lookup"><span data-stu-id="95a55-368">In this example, a <xref:System.Data.DataTable> is created at run time and three rows are added to it.</span></span> <span data-ttu-id="95a55-369">之前<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>執行方法，其中一個資料列編輯。</span><span class="sxs-lookup"><span data-stu-id="95a55-369">Before the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is executed, one of the rows is edited.</span></span> <span data-ttu-id="95a55-370"><xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>方法呼叫`DataRowState.Unchanged``rowState`引數，因此只有兩個不變的資料列會使用大量複製到目的地。</span><span class="sxs-lookup"><span data-stu-id="95a55-370">The <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called with a `DataRowState.Unchanged` `rowState` argument, so only the two unchanged rows are bulk copied to the destination.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95a55-371">此範例不會執行，除非您已建立的工作資料表中所述[大量複製範例設定](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-371">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="95a55-372">此程式碼可示範使用語法**SqlBulkCopy**只。</span><span class="sxs-lookup"><span data-stu-id="95a55-372">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="95a55-373">如果來源和目的地資料表位於相同的 SQL Server 執行個體，它是您更輕鬆且快速地使用 Transact SQL`INSERT … SELECT`陳述式來複製資料。</span><span class="sxs-lookup"><span data-stu-id="95a55-373">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowState" />
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="95a55-374">執行大量複製作業</span><span class="sxs-lookup"><span data-stu-id="95a55-374">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="95a55-375">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="95a55-375">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95a55-376"><see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /> 的非同步版本，它會將所有資料列從資料來源複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件的 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-376">An asynchronous version of <see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" />, which copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-377">如果 multiple active result set (MARS) 停用，<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>忙碌中 」 建立的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-377">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="95a55-378">如果啟用 MARS 時，您可以交錯呼叫<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>與其他命令，在相同的連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-378">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 <span data-ttu-id="95a55-379">其中一個失敗時，便會回復的資料列數目取決於幾件事：</span><span class="sxs-lookup"><span data-stu-id="95a55-379">The number of rows that are rolled back when one fails depends on several things:</span></span>  
  
-   <span data-ttu-id="95a55-380">如果<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>指定。</span><span class="sxs-lookup"><span data-stu-id="95a55-380">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is specified.</span></span>  
  
-   <span data-ttu-id="95a55-381">如果您擁有您自己的交易。</span><span class="sxs-lookup"><span data-stu-id="95a55-381">If you have your own transaction.</span></span>  
  
-   <span data-ttu-id="95a55-382"><xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="95a55-382">The value of <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
 <span data-ttu-id="95a55-383">在將資料傳送至伺服器，也就是目前的批次錯誤時 (依指定<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>) 將會回復。</span><span class="sxs-lookup"><span data-stu-id="95a55-383">When there is an error while sending data to the server, the current batch (as specified by <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>) will be rolled back.</span></span> <span data-ttu-id="95a55-384">如果<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>未指定，並且已經您自己的交易，整個交易將會回復 （其中包含所有先前批次也）。</span><span class="sxs-lookup"><span data-stu-id="95a55-384">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</span></span>  
  
 <span data-ttu-id="95a55-385">使用<xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>知道多少資料列會被複製到伺服器。</span><span class="sxs-lookup"><span data-stu-id="95a55-385">Use <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> to know how many rows were copied to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As DbDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="95a55-386"><see cref="T:System.Data.Common.DbDataReader" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-386">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-387"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /> 的非同步版本，它會將所有資料列從提供的 <see cref="T:System.Data.Common.DbDataReader" /> 陣列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-387">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="95a55-388">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-388">A task representing the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (rows As DataRow()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="95a55-389">要複製到目的資料表的 <see cref="T:System.Data.DataRow" /> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="95a55-389">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-390"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> 的非同步版本，它會將所有資料列從提供的 <see cref="T:System.Data.DataRow" /> 陣列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-390">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="95a55-391">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-391">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-392">如需有關在.NET Framework Data Provider for SQL Server 的非同步程式設計的詳細資訊，請參閱[非同步程式設計](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-392">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95a55-393">在工作完成前，對同一個執行個體多次呼叫 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-393">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-394">在工作完成前，呼叫同一個執行個體的 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-394">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-395">在 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> 執行期間卸除或關閉連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-395">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span></span>  
  
<span data-ttu-id="95a55-396">於工作物件中傳回，在方法執行期間已關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-396">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="95a55-397">於工作物件中傳回，連接集區逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-397">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="95a55-398">於工作物件中傳回，在方法執行前已關閉 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-398">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="95a55-399">在連接字串中指定了 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-399"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="95a55-400">於工作物件中傳回，SQL Server 傳回於開啟連線時所發生的任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-400">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="95a55-401"><see cref="T:System.Data.DataTable" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-401">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-402"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> 的非同步版本，它會將提供之 <see cref="T:System.Data.DataTable" /> 內的所有資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-402">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="95a55-403">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-403">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-404">如需有關在.NET Framework Data Provider for SQL Server 的非同步程式設計的詳細資訊，請參閱[非同步程式設計](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-404">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95a55-405">在工作完成前，對同一個執行個體多次呼叫 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-405">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-406">在工作完成前，呼叫同一個執行個體的 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-406">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-407">在 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> 執行期間卸除或關閉連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-407">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span></span>  
  
<span data-ttu-id="95a55-408">於工作物件中傳回，在方法執行期間已關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-408">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="95a55-409">於工作物件中傳回，連接集區逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-409">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="95a55-410">於工作物件中傳回，在方法執行前已關閉 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-410">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="95a55-411">在連接字串中指定了 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-411"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="95a55-412">於工作物件中傳回，SQL Server 傳回於開啟連線時所發生的任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-412">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As IDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="95a55-413"><see cref="T:System.Data.IDataReader" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-413">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="95a55-414"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> 的非同步版本，它會將提供之 <see cref="T:System.Data.IDataReader" /> 內的所有資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-414">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="95a55-415">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-415">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-416">如需有關在.NET Framework Data Provider for SQL Server 的非同步程式設計的詳細資訊，請參閱[非同步程式設計](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-416">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95a55-417">在工作完成前，對同一個執行個體多次呼叫 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-417">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-418">在工作完成前，呼叫同一個執行個體的 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-418">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-419">在 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> 執行期間卸除或關閉連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-419">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span></span>  
  
<span data-ttu-id="95a55-420">於工作物件中傳回，在方法執行期間已關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-420">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="95a55-421">於工作物件中傳回，連接集區逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-421">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="95a55-422">於工作物件中傳回，在方法執行前已關閉 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-422">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
<span data-ttu-id="95a55-423">在已完成的 <see cref="T:System.Threading.Tasks.Task" /> 傳回之前，<see cref="T:System.Data.IDataReader" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="95a55-423">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
<span data-ttu-id="95a55-424">在已完成的 <see cref="T:System.Threading.Tasks.Task" /> 傳回之前，<see cref="T:System.Data.IDataReader" /> 的相關聯連接已關閉。</span><span class="sxs-lookup"><span data-stu-id="95a55-424">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
 <span data-ttu-id="95a55-425">在連接字串中指定了 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-425"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="95a55-426">於工作物件中傳回，SQL Server 傳回於開啟連線時所發生的任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-426">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="95a55-427"><see cref="T:System.Data.Common.DbDataReader" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-427">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="95a55-428">取消指令。</span><span class="sxs-lookup"><span data-stu-id="95a55-428">The cancellation instruction.</span></span> <span data-ttu-id="95a55-429">這個參數中的 <see cref="P:System.Threading.CancellationToken.None" /> 值會使這個方法相當於 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-429">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />.</span></span></param>
        <summary><span data-ttu-id="95a55-430"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /> 的非同步版本，它會將所有資料列從提供的 <see cref="T:System.Data.Common.DbDataReader" /> 陣列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-430">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="95a55-431">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-431">Returns <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (rows, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="95a55-432">要複製到目的資料表的 <see cref="T:System.Data.DataRow" /> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="95a55-432">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="95a55-433">取消指令。</span><span class="sxs-lookup"><span data-stu-id="95a55-433">The cancellation instruction.</span></span> <span data-ttu-id="95a55-434">這個參數中的 <see cref="P:System.Threading.CancellationToken.None" /> 值會使這個方法相當於 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-434">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="95a55-435"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> 的非同步版本，它會將所有資料列從提供的 <see cref="T:System.Data.DataRow" /> 陣列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-435">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="95a55-436">取消語彙基元可用於要求在命令逾時之前捨棄作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-436">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="95a55-437">例外狀況將經由傳回的 Task 物件回報。</span><span class="sxs-lookup"><span data-stu-id="95a55-437">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="95a55-438">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-438">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-439">如需有關在.NET Framework Data Provider for SQL Server 的非同步程式設計的詳細資訊，請參閱[非同步程式設計](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-439">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95a55-440">在工作完成前，對同一個執行個體多次呼叫 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-440">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-441">在工作完成前，呼叫同一個執行個體的 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-441">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-442">在 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> 執行期間卸除或關閉連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-442">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span></span>  
  
<span data-ttu-id="95a55-443">於工作物件中傳回，在方法執行期間已關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-443">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="95a55-444">於工作物件中傳回，連接集區逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-444">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="95a55-445">於工作物件中傳回，在方法執行前已關閉 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-445">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="95a55-446">在連接字串中指定了 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-446"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="95a55-447">於工作物件中傳回，SQL Server 傳回於開啟連線時所發生的任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-447">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable, rowState As DataRowState) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="95a55-448"><see cref="T:System.Data.DataTable" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-448">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="95a55-449"><see cref="T:System.Data.DataRowState" /> 列舉中的值。</span><span class="sxs-lookup"><span data-stu-id="95a55-449">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="95a55-450">只有符合資料列狀態的資料列會複製到目的地。</span><span class="sxs-lookup"><span data-stu-id="95a55-450">Only rows matching the row state are copied to the destination.</span></span></param>
        <summary><span data-ttu-id="95a55-451"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> 的非同步版本，它只會將提供的 <see cref="T:System.Data.DataTable" /> 中符合提供的資料列狀態之資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-451">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="95a55-452">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-452">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-453">如需有關在.NET Framework Data Provider for SQL Server 的非同步程式設計的詳細資訊，請參閱[非同步程式設計](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-453">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95a55-454">在工作完成前，對同一個執行個體多次呼叫 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-454">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-455">在工作完成前，呼叫同一個執行個體的 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-455">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-456">在 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> 執行期間卸除或關閉連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-456">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span></span>  
  
<span data-ttu-id="95a55-457">於工作物件中傳回，在方法執行期間已關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-457">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="95a55-458">於工作物件中傳回，連接集區逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-458">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="95a55-459">於工作物件中傳回，在方法執行前已關閉 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-459">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="95a55-460">在連接字串中指定了 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-460"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="95a55-461">於工作物件中傳回，SQL Server 傳回於開啟連線時所發生的任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-461">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="95a55-462"><see cref="T:System.Data.DataTable" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-462">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="95a55-463">取消指令。</span><span class="sxs-lookup"><span data-stu-id="95a55-463">The cancellation instruction.</span></span> <span data-ttu-id="95a55-464">這個參數中的 <see cref="P:System.Threading.CancellationToken.None" /> 值會使這個方法相當於 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-464">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="95a55-465"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> 的非同步版本，它會將提供之 <see cref="T:System.Data.DataTable" /> 內的所有資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-465">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="95a55-466">取消語彙基元可用於要求在命令逾時之前捨棄作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-466">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="95a55-467">例外狀況將經由傳回的 Task 物件回報。</span><span class="sxs-lookup"><span data-stu-id="95a55-467">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="95a55-468">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-468">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-469">如需有關在.NET Framework Data Provider for SQL Server 的非同步程式設計的詳細資訊，請參閱[非同步程式設計](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-469">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95a55-470">在工作完成前，對同一個執行個體多次呼叫 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-470">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-471">在工作完成前，呼叫同一個執行個體的 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-471">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-472">在 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> 執行期間卸除或關閉連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-472">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span></span>  
  
<span data-ttu-id="95a55-473">於工作物件中傳回，在方法執行期間已關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-473">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="95a55-474">於工作物件中傳回，連接集區逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-474">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="95a55-475">於工作物件中傳回，在方法執行前已關閉 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-475">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="95a55-476">在連接字串中指定了 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-476"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="95a55-477">於工作物件中傳回，SQL Server 傳回於開啟連線時所發生的任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-477">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="95a55-478"><see cref="T:System.Data.IDataReader" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-478">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="95a55-479">取消指令。</span><span class="sxs-lookup"><span data-stu-id="95a55-479">The cancellation instruction.</span></span> <span data-ttu-id="95a55-480">這個參數中的 <see cref="P:System.Threading.CancellationToken.None" /> 值會使這個方法相當於 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-480">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="95a55-481"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> 的非同步版本，它會將提供之 <see cref="T:System.Data.IDataReader" /> 內的所有資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-481">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="95a55-482">取消語彙基元可用於要求在命令逾時之前捨棄作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-482">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="95a55-483">例外狀況將經由傳回的 Task 物件回報。</span><span class="sxs-lookup"><span data-stu-id="95a55-483">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="95a55-484">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-484">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-485">如需有關在.NET Framework Data Provider for SQL Server 的非同步程式設計的詳細資訊，請參閱[非同步程式設計](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-485">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95a55-486">在工作完成前，對同一個執行個體多次呼叫 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-486">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-487">在工作完成前，呼叫同一個執行個體的 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-487">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-488">在 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> 執行期間卸除或關閉連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-488">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span></span>  
  
<span data-ttu-id="95a55-489">於工作物件中傳回，在方法執行期間已關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-489">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="95a55-490">於工作物件中傳回，連接集區逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-490">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="95a55-491">於工作物件中傳回，在方法執行前已關閉 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-491">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
<span data-ttu-id="95a55-492">在已完成的 <see cref="T:System.Threading.Tasks.Task" /> 傳回之前，<see cref="T:System.Data.IDataReader" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="95a55-492">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
<span data-ttu-id="95a55-493">在已完成的 <see cref="T:System.Threading.Tasks.Task" /> 傳回之前，<see cref="T:System.Data.IDataReader" /> 的相關聯連接已關閉。</span><span class="sxs-lookup"><span data-stu-id="95a55-493">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
 <span data-ttu-id="95a55-494">在連接字串中指定了 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-494"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="95a55-495">於工作物件中傳回，SQL Server 傳回於開啟連線時所發生的任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-495">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="95a55-496"><see cref="T:System.Data.DataTable" />，其資料列會複製到目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-496">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="95a55-497"><see cref="T:System.Data.DataRowState" /> 列舉中的值。</span><span class="sxs-lookup"><span data-stu-id="95a55-497">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="95a55-498">只有符合資料列狀態的資料列會複製到目的地。</span><span class="sxs-lookup"><span data-stu-id="95a55-498">Only rows matching the row state are copied to the destination.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="95a55-499">取消指令。</span><span class="sxs-lookup"><span data-stu-id="95a55-499">The cancellation instruction.</span></span> <span data-ttu-id="95a55-500">這個參數中的 <see cref="P:System.Threading.CancellationToken.None" /> 值會使這個方法相當於 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-500">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="95a55-501"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> 的非同步版本，它只會將提供的 <see cref="T:System.Data.DataTable" /> 中符合提供的資料列狀態之資料列複製到 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件之 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 屬性所指定的目的資料表。</span><span class="sxs-lookup"><span data-stu-id="95a55-501">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="95a55-502">取消語彙基元可用於要求在命令逾時之前捨棄作業。</span><span class="sxs-lookup"><span data-stu-id="95a55-502">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="95a55-503">例外狀況將經由傳回的 Task 物件回報。</span><span class="sxs-lookup"><span data-stu-id="95a55-503">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="95a55-504">表示非同步作業的工作。</span><span class="sxs-lookup"><span data-stu-id="95a55-504">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95a55-505">如需有關在.NET Framework Data Provider for SQL Server 的非同步程式設計的詳細資訊，請參閱[非同步程式設計](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="95a55-505">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95a55-506">在工作完成前，對同一個執行個體多次呼叫 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-506">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-507">在工作完成前，呼叫同一個執行個體的 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-507">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="95a55-508">在 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> 執行期間卸除或關閉連接。</span><span class="sxs-lookup"><span data-stu-id="95a55-508">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span></span>  
  
<span data-ttu-id="95a55-509">於工作物件中傳回，在方法執行期間已關閉 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-509">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="95a55-510">於工作物件中傳回，連接集區逾時。</span><span class="sxs-lookup"><span data-stu-id="95a55-510">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="95a55-511">於工作物件中傳回，在方法執行前已關閉 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="95a55-511">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="95a55-512">在連接字串中指定了 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="95a55-512"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="95a55-513">於工作物件中傳回，SQL Server 傳回於開啟連線時所發生的任何錯誤。</span><span class="sxs-lookup"><span data-stu-id="95a55-513">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>