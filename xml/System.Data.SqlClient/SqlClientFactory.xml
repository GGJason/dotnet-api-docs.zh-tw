<Type Name="SqlClientFactory" FullName="System.Data.SqlClient.SqlClientFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7fb55e2615d0db4b56fab0621d39634b63ca5be2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389182" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlClientFactory : System.Data.Common.DbProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlClientFactory extends System.Data.Common.DbProviderFactory" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlClientFactory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlClientFactory&#xA;Inherits DbProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlClientFactory sealed : System::Data::Common::DbProviderFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbProviderFactory</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="380e5-101">表示一組方法，用於建立 <see cref="N:System.Data.SqlClient" /> 提供者之資料來源類別 (Class) 實作的執行個體。</span>
      <span class="sxs-lookup">
        <span data-stu-id="380e5-101">Represents a set of methods for creating instances of the <see cref="N:System.Data.SqlClient" /> provider's implementation of the data source classes.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanCreateDataSourceEnumerator">
      <MemberSignature Language="C#" Value="public override bool CanCreateDataSourceEnumerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateDataSourceEnumerator" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanCreateDataSourceEnumerator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCreateDataSourceEnumerator { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="380e5-102">如果可以建立 <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-102">Returns <see langword="true" /> if a <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" /> can be created; otherwise <see langword="false" /> .</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="380e5-103">如果可以建立 <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-103">
              <see langword="true" /> if a <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" /> can be created; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380e5-104"><xref:System.Data.Common.DbProviderFactory>類別提供<xref:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator%2A>屬性，所以繼承者可以指出是否能提供資料來源列舉值。</span><span class="sxs-lookup"><span data-stu-id="380e5-104">The <xref:System.Data.Common.DbProviderFactory> class provides the <xref:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator%2A> property so that inheritors can indicate whether they can provide a data source enumerator.</span></span> <span data-ttu-id="380e5-105"><xref:System.Data.SqlClient.SqlClientFactory>顯示這個屬性，但其值永遠是`true`。</span><span class="sxs-lookup"><span data-stu-id="380e5-105">The <xref:System.Data.SqlClient.SqlClientFactory> displays this property, but its value is always `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="380e5-106">下列範例會顯示所有可用 SQL Server 資料來源，使用無法列舉的任何提供者的資料來源的程式碼清單。</span><span class="sxs-lookup"><span data-stu-id="380e5-106">The following example displays a list of all available SQL Server data sources, using code that could enumerate data sources for any provider.</span></span>  
  
 [!code-csharp[DataWorks SqlClientFactory.DataSourceEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlClientFactory.DataSourceEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks SqlClientFactory.DataSourceEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlClientFactory.DataSourceEnumerator/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="380e5-107">傳回強型別的 <see cref="T:System.Data.Common.DbCommand" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-107">Returns a strongly typed <see cref="T:System.Data.Common.DbCommand" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-108">
            <see cref="T:System.Data.Common.DbCommand" /> 的新強型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-108">A new strongly typed instance of <see cref="T:System.Data.Common.DbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="380e5-109">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbCommand>執行個體：</span><span class="sxs-lookup"><span data-stu-id="380e5-109">The following code fragment returns a strongly typed <xref:System.Data.Common.DbCommand> instance:</span></span>  
  
```vb  
Dim newFactory As SqlClientFactory = SqlClientFactory.Instance  
Dim cmd As DbCommand = newFactory.CreateCommand()  
```  
  
```csharp  
SqlClientFactory newFactory = SqlClientFactory.Instance;  
DbCommand cmd = newFactory.CreateCommand();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandBuilder">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbCommandBuilder CreateCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbCommandBuilder CreateCommandBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.CreateCommandBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCommandBuilder () As DbCommandBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbCommandBuilder ^ CreateCommandBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="380e5-110">傳回強型別的 <see cref="T:System.Data.Common.DbCommandBuilder" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-110">Returns a strongly typed <see cref="T:System.Data.Common.DbCommandBuilder" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-111">
            <see cref="T:System.Data.Common.DbCommandBuilder" /> 的新強型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-111">A new strongly typed instance of <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="380e5-112">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbCommandBuilder>執行個體：</span><span class="sxs-lookup"><span data-stu-id="380e5-112">The following code fragment returns a strongly typed <xref:System.Data.Common.DbCommandBuilder> instance:</span></span>  
  
```vb  
Dim newFactory As SqlClientFactory = SqlClientFactory.Instance  
Dim cmd As DbCommandBuilder = newFactory.CreateCommandBuilder()  
```  
  
```csharp  
SqlClientFactory newFactory = SqlClientFactory.Instance;  
DbCommandBuilder cmd = newFactory.CreateCommandBuilder();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnection">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbConnection CreateConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbConnection CreateConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.CreateConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateConnection () As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbConnection ^ CreateConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="380e5-113">傳回強型別的 <see cref="T:System.Data.Common.DbConnection" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-113">Returns a strongly typed <see cref="T:System.Data.Common.DbConnection" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-114">
            <see cref="T:System.Data.Common.DbConnection" /> 的新強型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-114">A new strongly typed instance of <see cref="T:System.Data.Common.DbConnection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="380e5-115">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbConnection>執行個體：</span><span class="sxs-lookup"><span data-stu-id="380e5-115">The following code fragment returns a strongly typed <xref:System.Data.Common.DbConnection> instance:</span></span>  
  
```vb  
Dim newFactory As SqlClientFactory = SqlClientFactory.Instance  
Dim cmd As DbConnection = newFactory.CreateConnection()  
```  
  
```csharp  
SqlClientFactory newFactory = SqlClientFactory.Instance;  
DbConnection cmd = newFactory.CreateConnection();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnectionStringBuilder">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbConnectionStringBuilder CreateConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbConnectionStringBuilder CreateConnectionStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateConnectionStringBuilder () As DbConnectionStringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbConnectionStringBuilder ^ CreateConnectionStringBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnectionStringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="380e5-116">傳回強型別的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-116">Returns a strongly typed <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-117">
            <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的新強型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-117">A new strongly typed instance of <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="380e5-118">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbConnectionStringBuilder>執行個體：</span><span class="sxs-lookup"><span data-stu-id="380e5-118">The following code fragment returns a strongly typed <xref:System.Data.Common.DbConnectionStringBuilder> instance:</span></span>  
  
```vb  
Dim newFactory As SqlClientFactory = SqlClientFactory.Instance  
Dim cmd As DbConnectionStringBuilder = _  
    newFactory.CreateConnectionStringBuilder()  
```  
  
```csharp  
SqlClientFactory newFactory = SqlClientFactory.Instance;  
DbConnectionStringBuilder cmd =   
    newFactory.CreateConnectionStringBuilder();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataAdapter">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbDataAdapter CreateDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbDataAdapter CreateDataAdapter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.CreateDataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDataAdapter () As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbDataAdapter ^ CreateDataAdapter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="380e5-119">傳回強型別的 <see cref="T:System.Data.Common.DbDataAdapter" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-119">Returns a strongly typed <see cref="T:System.Data.Common.DbDataAdapter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-120">
            <see cref="T:System.Data.Common.DbDataAdapter" /> 的新強型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-120">A new strongly typed instance of <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="380e5-121">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbDataAdapter>執行個體：</span><span class="sxs-lookup"><span data-stu-id="380e5-121">The following code fragment returns a strongly typed <xref:System.Data.Common.DbDataAdapter> instance:</span></span>  
  
```vb  
Dim newFactory As SqlClientFactory = SqlClientFactory.Instance  
Dim cmd As DbDataAdapter = newFactory.CreateDataAdapter()  
```  
  
```csharp  
SqlClientFactory newFactory = SqlClientFactory.Instance;  
DbDataAdapter cmd = newFactory.CreateDataAdapter();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceEnumerator">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbDataSourceEnumerator CreateDataSourceEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbDataSourceEnumerator CreateDataSourceEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDataSourceEnumerator () As DbDataSourceEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbDataSourceEnumerator ^ CreateDataSourceEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataSourceEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="380e5-122">傳回新的 <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-122">Returns a new <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-123">新的資料來源列舉程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-123">A new data source enumerator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="380e5-124">下列範例會顯示所有可用 SQL Server 資料來源，使用無法列舉的任何提供者的資料來源的程式碼清單。</span><span class="sxs-lookup"><span data-stu-id="380e5-124">The following example displays a list of all available SQL Server data sources, using code that could enumerate data sources for any provider.</span></span>  
  
 [!code-csharp[DataWorks SqlClientFactory.DataSourceEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlClientFactory.DataSourceEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks SqlClientFactory.DataSourceEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlClientFactory.DataSourceEnumerator/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::DbParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="380e5-125">傳回強型別的 <see cref="T:System.Data.Common.DbParameter" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-125">Returns a strongly typed <see cref="T:System.Data.Common.DbParameter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-126">
            <see cref="T:System.Data.Common.DbParameter" /> 的新強型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-126">A new strongly typed instance of <see cref="T:System.Data.Common.DbParameter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="380e5-127">下列程式碼片段會傳回強型別<xref:System.Data.Common.DbParameter>執行個體：</span><span class="sxs-lookup"><span data-stu-id="380e5-127">The following code fragment returns a strongly typed <xref:System.Data.Common.DbParameter> instance:</span></span>  
  
```vb  
Dim newFactory As SqlClientFactory = SqlClientFactory.Instance  
Dim cmd As DbParameter = newFactory.CreateParameter()  
```  
  
```csharp  
SqlClientFactory newFactory = SqlClientFactory.Instance;  
DbParameter cmd = newFactory.CreateParameter();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.CodeAccessPermission CreatePermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.CodeAccessPermission CreatePermission(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.CreatePermission(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission (state As PermissionState) As CodeAccessPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::CodeAccessPermission ^ CreatePermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.CodeAccessPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="380e5-128">
            <see cref="T:System.Security.Permissions.PermissionState" /> 列舉的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-128">A member of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380e5-129">傳回新的 <see cref="T:System.Security.CodeAccessPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-129">Returns a new <see cref="T:System.Security.CodeAccessPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-130">
            <see cref="T:System.Security.CodeAccessPermission" /> 的強型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-130">A strongly typed instance of <see cref="T:System.Security.CodeAccessPermission" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly System.Data.SqlClient.SqlClientFactory Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.SqlClient.SqlClientFactory Instance" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlClientFactory.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As SqlClientFactory " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::SqlClient::SqlClientFactory ^ Instance;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlClientFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="380e5-131">取得 <see cref="T:System.Data.SqlClient.SqlClientFactory" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-131">Gets an instance of the <see cref="T:System.Data.SqlClient.SqlClientFactory" />.</span>
          </span>
          <span data-ttu-id="380e5-132">這可以用來擷取強型別的資料物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-132">This can be used to retrieve strongly typed data objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="380e5-133">下列程式碼片段使用<xref:System.Data.SqlClient.SqlClientFactory.Instance>屬性，以擷取**SqlClientFactory**執行個體，然後再回頭執行強型別<xref:System.Data.Common.DbCommand>執行個體：</span><span class="sxs-lookup"><span data-stu-id="380e5-133">The following code fragment uses the <xref:System.Data.SqlClient.SqlClientFactory.Instance> property to retrieve a **SqlClientFactory** instance, and then return a strongly typed <xref:System.Data.Common.DbCommand> instance:</span></span>  
  
```vb  
Dim newFactory As SqlClientFactory = SqlClientFactory.Instance  
Dim cmd As DbCommand = newFactory.CreateCommand()  
```  
  
```csharp  
SqlClientFactory newFactory = SqlClientFactory.Instance;  
DbCommand cmd = newFactory.CreateCommand();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientFactory.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="380e5-134">物件，指定要取得的服務物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-134">An object that specifies the type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380e5-135">如需這個成員的說明，請參閱 <see cref="M:System.IServiceProvider.GetService(System.Type)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-135">For a description of this member, see <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380e5-136">服務物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="380e5-136">A service object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>