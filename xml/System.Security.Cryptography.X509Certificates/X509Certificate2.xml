<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7bb2638ab14a3afd8e0a2317e9a757630e8fe166" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53568586" /></Metadata><TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <TypeSignature Language="F#" Value="type X509Certificate2 = class&#xA;    inherit X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="634d7-101">代表 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-101">Represents an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-102">X.509 結構起源於 International Organization for Standardization (ISO) 工作群組。</span><span class="sxs-lookup"><span data-stu-id="634d7-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="634d7-103">此結構可用來代表各種類型的資訊，包括身分識別、 權限和持有者的屬性 （權限、 年齡、 性別、 位置、 關係，等等）。</span><span class="sxs-lookup"><span data-stu-id="634d7-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="634d7-104">雖然 ISO 規格本身，在結構上的資訊最多<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>類別設計來建立模型 Internet Engineering Task Force (IETF) 公開金鑰基礎結構，X.509 (PKIX 所發出的規格中定義的使用案例) 工作群組。</span><span class="sxs-lookup"><span data-stu-id="634d7-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="634d7-105">資訊的這些規格是 RFC 3280 」[憑證和憑證撤銷清單 (CRL) 設定檔](https://go.microsoft.com/fwlink/?LinkId=45286)。 」</span><span class="sxs-lookup"><span data-stu-id="634d7-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-106">開頭[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，這個型別會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="634d7-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="634d7-107">當您完成使用型別時，您應該處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="634d7-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="634d7-108">若要直接處置型別，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="634d7-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="634d7-109">若要處置它間接，使用的語言建構這類`using`（在 C# 中) 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="634d7-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="634d7-110">如需詳細資訊，請參閱 「 使用物件，實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="634d7-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="634d7-111">目標的應用程式[!INCLUDE[net_v452](~/includes/net-v452-md.md)]和更早的版本<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>類別不會實作<xref:System.IDisposable>介面，並因此不需要`Dispose`方法。</span><span class="sxs-lookup"><span data-stu-id="634d7-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-112">下列範例示範如何使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件來加密和解密檔案。</span><span class="sxs-lookup"><span data-stu-id="634d7-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="634d7-113">下列範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="634d7-114">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="634d7-115">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-116">這個建構函式會建立空<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件，與不同的其他建構函式的這個類別使用從位元組陣列、 指標或憑證檔案的憑證資訊。</span><span class="sxs-lookup"><span data-stu-id="634d7-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-117">下列程式碼範例會開啟 目前使用者憑證存放區，只選取作用中憑證，然後可讓使用者選取一個或多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="634d7-118">然後此範例會將憑證資訊寫入主控台中。</span><span class="sxs-lookup"><span data-stu-id="634d7-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-119">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-119">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-120">使用位元組陣列中的資訊，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-121">這個建構函式會建立新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>使用位元組陣列中的憑證資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="634d7-122">位元組陣列可以是二進位 (DER) 編碼或 Base64 編碼的 X.509 資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="634d7-123">位元組陣列也可以是 PKCS7 (Authenticode) 簽署的檔案。簽章者憑證用來建立物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="634d7-124">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`rawData`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-125">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-125">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-126">例如: </span><span class="sxs-lookup"><span data-stu-id="634d7-126">For example:</span></span> 
<span data-ttu-id="634d7-127">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-127">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-128">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-128">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-129">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-129">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : nativeint -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="634d7-130">指向 Unmanaged 程式碼中憑證內容的指標。</span><span class="sxs-lookup"><span data-stu-id="634d7-130">A pointer to a certificate context in unmanaged code.</span></span> <span data-ttu-id="634d7-131">C 結構稱為 <see langword="PCCERT_CONTEXT" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-131">The C structure is called <see langword="PCCERT_CONTEXT" />.</span></span></param>
        <summary><span data-ttu-id="634d7-132">使用 Unmanaged 控制代碼，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-133">這個建構函式會建立新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件使用的控制代碼，Microsoft Cryptographic API 憑證內容， `PCCERT_CONTEXT`。</span><span class="sxs-lookup"><span data-stu-id="634d7-133">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="634d7-134">請注意，這個建構函式的立即呼叫端需要 unmanaged 程式碼的權限。</span><span class="sxs-lookup"><span data-stu-id="634d7-134">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-135">建構函式會建立憑證內容的複本。</span><span class="sxs-lookup"><span data-stu-id="634d7-135">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="634d7-136">請勿假設您傳遞至建構函式的內容結構是有效的;有已發行。</span><span class="sxs-lookup"><span data-stu-id="634d7-136">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="634d7-137">您可以取得一份目前`PCCERT_CONTEXT`結構<xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>屬性，但它是有效的存留期間只<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-137">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-138">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-138">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-139">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-139">For example:</span></span> 
<span data-ttu-id="634d7-140">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-140">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-141">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-141">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-142">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-142">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-143">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-143">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-144">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-144">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-145">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-145">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="634d7-146"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-146">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></param>
        <summary><span data-ttu-id="634d7-147">使用 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-148">這個方法會建立的新執行個體<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>類別使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate>物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-148">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-149">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-149">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-150">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-150">For example:</span></span> 
<span data-ttu-id="634d7-151">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-151">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-152">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-152">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-153">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-153">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-154">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-154">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-155">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-155">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-156">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-157">憑證檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-157">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="634d7-158">使用憑證檔名，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-158">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-159">這個建構函式會建立新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件使用的憑證檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-159">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="634d7-160">它支援二進位 (DER) 編碼或 Base64 編碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-160">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="634d7-161">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`fileName`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-161">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-162">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-162">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-163">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-163">For example:</span></span> 
<span data-ttu-id="634d7-164">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-164">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-165">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-165">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-166">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-166">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-167">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-167">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-168">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-168">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="634d7-169">使用位元組陣列和密碼，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-169">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-170">這個建構函式會搭配 PKCS12 (PFX) 檔案包含憑證的私密金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-170">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="634d7-171">呼叫這個建構函式，以正確的密碼解密的私密金鑰，並將它儲存到金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="634d7-171">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-172">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-172">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-173">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-173">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="634d7-174">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`rawData`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-174">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-175">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-175">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-176">例如: </span><span class="sxs-lookup"><span data-stu-id="634d7-176">For example:</span></span> 
<span data-ttu-id="634d7-177">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-177">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-178">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-178">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-179">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-179">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-180">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-180">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-181">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-182">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-183">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-183">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-184">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-184">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="634d7-185">使用位元組陣列和密碼，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-186">這個建構函式會建立新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件使用的位元組陣列和密碼，才能存取憑證資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-186">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="634d7-187">它搭配 PKCS12 (PFX) 檔案包含憑證的私密金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-187">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="634d7-188">呼叫這個建構函式，以正確的密碼解密的私密金鑰，並將它儲存到金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="634d7-188">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-189">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-189">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-190">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-190">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="634d7-191">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`rawData`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-191">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-192">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-192">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-193">例如: </span><span class="sxs-lookup"><span data-stu-id="634d7-193">For example:</span></span> 
<span data-ttu-id="634d7-194">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-194">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-195">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-195">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-196">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-196">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-197">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-197">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-198">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-199">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="634d7-200">還原序列化新的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 所需的序列化資訊。</span><span class="sxs-lookup"><span data-stu-id="634d7-200">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span></span></param>
        <param name="context"><span data-ttu-id="634d7-201">關於要還原序列化之資料流來源的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="634d7-201">Contextual information about the source of the stream to be deserialized.</span></span></param>
        <summary><span data-ttu-id="634d7-202">使用指定的序列化和資料流內容資訊，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-203">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-203">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-204">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-204">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-205">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-205">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-206">憑證檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-206">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-207">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-207">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="634d7-208">使用憑證檔名和密碼，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-208">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-209">這個建構函式會搭配 PKCS12 (PFX) 檔案包含憑證的私密金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-209">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="634d7-210">呼叫這個建構函式，以正確的密碼解密的私密金鑰，並將它儲存到金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="634d7-210">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-211">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-211">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-212">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-212">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="634d7-213">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`fileName`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-213">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-214">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-214">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-215">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-215">For example:</span></span> 
<span data-ttu-id="634d7-216">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-216">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-217">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-217">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-218">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-218">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-219">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-219">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-220">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-221">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-221">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-222">憑證檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-222">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-223">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-223">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="634d7-224">使用憑證檔名和用於存取憑證的密碼，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-224">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-225">這個建構函式會建立新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件使用的憑證檔案名稱和密碼，才能存取憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-225">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="634d7-226">它搭配 PKCS12 (PFX) 檔案包含憑證的私密金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-226">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="634d7-227">呼叫這個建構函式，以正確的密碼解密的私密金鑰，並將它儲存到金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="634d7-227">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-228">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-228">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-229">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-229">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="634d7-230">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`fileName`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-230">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-231">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-231">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-232">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-232">For example:</span></span> 
<span data-ttu-id="634d7-233">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-233">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-234">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-234">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-235">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-235">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-236">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-236">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-237">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-237">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-238">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-238">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-239">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-239">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-240">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-240">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="634d7-241">列舉值的位元組合，會控制匯入憑證的位置和方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-241">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-242">使用位元組陣列、密碼和金鑰儲存旗標，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-242">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-243">這個建構函式會搭配 PKCS12 (PFX) 檔案包含憑證的私密金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-243">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="634d7-244">呼叫這個建構函式，以正確的密碼解密的私密金鑰，並將它儲存至 Microsoft 密碼編譯 API 密碼編譯服務提供者 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="634d7-244">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-245">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-245">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-246">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-246">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="634d7-247">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`rawData`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-247">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-248">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-248">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-249">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-249">For example:</span></span> 
<span data-ttu-id="634d7-250">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-250">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-251">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-251">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-252">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-252">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-253">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-253">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-254">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-254">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-255">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-255">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-256">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-256">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-257">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-257">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="634d7-258">列舉值的位元組合，會控制匯入憑證的位置和方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-258">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-259">使用位元組陣列、密碼和金鑰儲存旗標，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-259">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-260">這個建構函式會建立新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件，使用位元組陣列，才能存取憑證資料和金鑰儲存旗標的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-260">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="634d7-261">它搭配 PKCS12 (PFX) 檔案包含憑證的私密金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-261">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="634d7-262">呼叫這個建構函式，以正確的密碼解密的私密金鑰，並將它儲存至 Microsoft 密碼編譯 API 密碼編譯服務提供者 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="634d7-262">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-263">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-263">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-264">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-264">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="634d7-265">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`rawData`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-265">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-266">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-266">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-267">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-267">For example:</span></span> 
<span data-ttu-id="634d7-268">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-268">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-269">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-269">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-270">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-270">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-271">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-271">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-272">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-272">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-273">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-273">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-274">憑證檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-274">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-275">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-275">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="634d7-276">列舉值的位元組合，會控制匯入憑證的位置和方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-276">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-277">使用憑證檔名、密碼和金鑰儲存旗標，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-277">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-278">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`fileName`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-278">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-279">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-279">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-280">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-280">For example:</span></span> 
<span data-ttu-id="634d7-281">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-281">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-282">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-282">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-283">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-283">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-284">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-284">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-285">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-285">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-286">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-286">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-287">憑證檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-287">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-288">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-288">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="634d7-289">列舉值的位元組合，會控制匯入憑證的位置和方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-289">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-290">使用憑證檔名、用於存取憑證的密碼和金鑰儲存旗標，初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="634d7-290">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-291">這個建構函式會建立新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件使用的憑證檔案名稱、 密碼，才能存取憑證和金鑰儲存旗標。</span><span class="sxs-lookup"><span data-stu-id="634d7-291">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-292">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-292">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-293">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-293">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="634d7-294">如果您建立<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>藉由指定的 PKCS7 已簽署的檔案存放區的憑證`fileName`，則<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>建立簽署的存放區的憑證，而不是在存放區中的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-294">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-295">此憑證發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="634d7-295">An error with the certificate occurs.</span></span> <span data-ttu-id="634d7-296">例如：</span><span class="sxs-lookup"><span data-stu-id="634d7-296">For example:</span></span> 
<span data-ttu-id="634d7-297">-   憑證檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="634d7-297">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="634d7-298">-   憑證無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-298">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="634d7-299">-   憑證的密碼不正確。</span><span class="sxs-lookup"><span data-stu-id="634d7-299">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="634d7-300">用來存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-300">for accessing unmanaged code.</span></span> <span data-ttu-id="634d7-301">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="634d7-302">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="634d7-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archived : bool with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-303">取得或設定值，表示 X.509 憑證已封存。</span><span class="sxs-lookup"><span data-stu-id="634d7-303">Gets or sets a value indicating that an X.509 certificate is archived.</span></span></summary>
        <value><span data-ttu-id="634d7-304">如果憑證已封存，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-304"><see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-305">這個屬性設定只在一個存放區相關聯的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-305">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="634d7-306">如果此屬性設定，而且憑證會新增至憑證存放區，值會保存。</span><span class="sxs-lookup"><span data-stu-id="634d7-306">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="634d7-307">如果從存放區擷取憑證上設定屬性，就會立即保存值。</span><span class="sxs-lookup"><span data-stu-id="634d7-307">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="634d7-308">X.509 存放區中封存的憑證未包含在傳回<xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>物件，除非<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="634d7-308">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="634d7-309">發生任何實體的封存活動時<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>值是設定或取消。</span><span class="sxs-lookup"><span data-stu-id="634d7-309">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-310">下列程式碼範例會開啟 目前使用者憑證存放區，只選取作用中憑證，然後可讓使用者選取一個或多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-310">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="634d7-311">然後此範例會將憑證資訊寫入主控台中。</span><span class="sxs-lookup"><span data-stu-id="634d7-311">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-312">憑證無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-312">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-313">取得 <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="634d7-313">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span></span></summary>
        <value><span data-ttu-id="634d7-314"><see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-314">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-315">X.509 v3 憑證格式中所定義的擴充功能可讓要包含在憑證中的其他資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-315">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="634d7-316">在中的 X.509 v3 定義以及在 RFC 3280 PKIX iso 定義幾個擴充功能的 「[憑證和憑證撤銷清單 (CRL) 設定檔](https://go.microsoft.com/fwlink/?LinkId=45286)。 」</span><span class="sxs-lookup"><span data-stu-id="634d7-316">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="634d7-317">常見的延伸模組包含金鑰使用方式的相關資訊 (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>)，索引鍵識別項 (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>)，憑證原則、 撤銷資訊 （CRL 發佈點延伸模組） 和其他用途。</span><span class="sxs-lookup"><span data-stu-id="634d7-317">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-318">下列程式碼範例會開啟 目前使用者憑證存放區，只選取作用中憑證，然後可讓使用者選取一個或多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-318">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="634d7-319">然後此範例會將憑證資訊寫入主控台中。</span><span class="sxs-lookup"><span data-stu-id="634d7-319">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-320">憑證無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-320">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-321">取得或設定憑證的相關別名 (Alias)。</span><span class="sxs-lookup"><span data-stu-id="634d7-321">Gets or sets the associated alias for a certificate.</span></span></summary>
        <value><span data-ttu-id="634d7-322">憑證的易記名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-322">The certificate's friendly name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-323">好記的名稱是可以設定 X.509 憑證存放區中的屬性。</span><span class="sxs-lookup"><span data-stu-id="634d7-323">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="634d7-324">它們用來讓使用者別名與憑證產生關聯，因此可以輕鬆地識別它們。</span><span class="sxs-lookup"><span data-stu-id="634d7-324">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="634d7-325">如果沒有好記的名稱存在的憑證，也就是空字串 ("") 會傳回。</span><span class="sxs-lookup"><span data-stu-id="634d7-325">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-326">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-326">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-327">憑證無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-327">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="634d7-328">表示位元組陣列或檔案中包含的憑證類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-328">Indicates the type of certificate contained in a byte array or file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-329">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-329">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-330">表示位元組陣列中包含的憑證類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-330">Indicates the type of certificate contained in a byte array.</span></span></summary>
        <returns><span data-ttu-id="634d7-331"><see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-331">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-332">這個方法可讓您探索的檔案中的憑證類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-332">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-333">下列程式碼範例會開啟 目前使用者憑證存放區，只選取作用中憑證，然後可讓使用者選取一個或多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-333">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="634d7-334">然後此範例會將憑證資訊寫入主控台中。</span><span class="sxs-lookup"><span data-stu-id="634d7-334">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="634d7-335"><paramref name="rawData" /> 長度為零或為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-335"><paramref name="rawData" /> has a zero length or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : string -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-336">憑證檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-336">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="634d7-337">表示檔案中包含的憑證類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-337">Indicates the type of certificate contained in a file.</span></span></summary>
        <returns><span data-ttu-id="634d7-338"><see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-338">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-339">這個方法可讓您探索的檔案中的憑證類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-339">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="634d7-340"><paramref name="fileName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-340"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="634d7-341">讀取憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-341">for reading the certificate.</span></span> <span data-ttu-id="634d7-342">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-342">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="634d7-343">相關聯的列舉型別： <see cref="F:System.IO.FileAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="634d7-343">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="F#" Value="member this.GetNameInfo : System.Security.Cryptography.X509Certificates.X509NameType * bool -&gt; string" Usage="x509Certificate2.GetNameInfo (nameType, forIssuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType"><span data-ttu-id="634d7-344">主旨的 <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="634d7-344">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span></span></param>
        <param name="forIssuer"><span data-ttu-id="634d7-345"><see langword="true" /> 表示包含簽發者名稱，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-345"><see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="634d7-346">取得憑證的主旨和簽發者名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-346">Gets the subject and issuer names from a certificate.</span></span></summary>
        <returns><span data-ttu-id="634d7-347">憑證的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-347">The name of the certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-348">應該一律使用這個方法，而不需剖析憑證，因為許多名稱的值可能位於多個位置。</span><span class="sxs-lookup"><span data-stu-id="634d7-348">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="634d7-349">使用此方法可確保會傳回適當的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-349">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-350">下列程式碼範例會開啟 目前使用者憑證存放區，只選取作用中憑證，然後可讓使用者選取一個或多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-350">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="634d7-351">然後此範例會將憑證資訊寫入主控台中。</span><span class="sxs-lookup"><span data-stu-id="634d7-351">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrivateKey : bool" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-352">取得值，指出 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件是否包含私密金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-352">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span></span></summary>
        <value><span data-ttu-id="634d7-353">如果 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件包含私密金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-353"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-354">憑證內容無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-354">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="634d7-355">用提供的憑證資訊，填入 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-355">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] -&gt; unit" Usage="x509Certificate2.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-356">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-356">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-357">用位元組陣列的資料，填入 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-357">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-358">這個方法可用來取得 X.509 憑證的未經處理位元組陣列，並填入<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>及其相關值的物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-358">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="634d7-359">這個方法會接受位元組陣列，因為它可以用於只適用於不需要密碼，包括 Base64 編碼或 DER 編碼的 X.509 憑證或 PFX/PKCS12 憑證的憑證類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-359">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="634d7-360">請注意，PFX/PKCS12 憑證可以包含多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-360">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="634d7-361">在此情況下，會使用私用的索引鍵相關聯的第一個憑證，或如果找到沒有私密金鑰，則會使用第一個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-361">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="634d7-362">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="634d7-362">for full trust for the immediate caller.</span></span> <span data-ttu-id="634d7-363">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="634d7-363">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="634d7-364">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="634d7-364">for full trust for inheritors.</span></span> <span data-ttu-id="634d7-365">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-365">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="override this.Import : string -&gt; unit" Usage="x509Certificate2.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-366">憑證的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-366">The name of a certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-367">用憑證檔的資訊，填入 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-367">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-368">這個方法會使用憑證檔案，例如檔案使用.cer 副檔名，代表 X.509 憑證，並填入<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>檔案包含憑證的物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-368">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="634d7-369">這個方法可以搭配數個憑證類型，包括 Base64 編碼或 DER 編碼的 X.509 憑證 PFX/PKCS12 憑證，例如 Authenticode 簽章者憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-369">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="634d7-370">請注意，PFX/PKCS12 憑證可以包含多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-370">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="634d7-371">在此情況下，會使用私用的索引鍵相關聯的第一個憑證，或如果找到沒有私密金鑰，則會使用第一個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-371">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="634d7-372">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="634d7-372">for full trust for the immediate caller.</span></span> <span data-ttu-id="634d7-373">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="634d7-373">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="634d7-374">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="634d7-374">for full trust for inheritors.</span></span> <span data-ttu-id="634d7-375">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-375">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-376">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-376">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-377">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-377">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="634d7-378">列舉值的位元組合，會控制匯入憑證的位置和方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-378">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-379">使用位元組陣列的資料、密碼和金鑰儲存旗標，填入 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-379">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-380">您可以使用這個方法，例如 Base64 編碼或 DER 編碼的 X.509 憑證或 PFX/PKCS12 憑證的憑證類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-380">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="634d7-381">請注意，PFX/PKCS12 憑證可以包含多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-381">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="634d7-382">在此情況下，會使用私用的索引鍵相關聯的第一個憑證，或如果找到沒有私密金鑰，則會使用第一個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-382">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-383">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-383">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-384">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-384">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="634d7-385">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="634d7-385">for full trust for the immediate caller.</span></span> <span data-ttu-id="634d7-386">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="634d7-386">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="634d7-387">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="634d7-387">for full trust for inheritors.</span></span> <span data-ttu-id="634d7-388">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-388">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="634d7-389">位元組陣列，包含來自 X.509 憑證的資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-389">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-390">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-390">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="634d7-391">列舉值的位元組合，會控制匯入憑證的位置和方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-391">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-392">用位元組陣列的資料、密碼以及用於判斷如何匯入私密金鑰的旗標，填入 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-392">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-393">這個方法可以用來填入<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件使用的位元組陣列所表示的憑證的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-393">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="634d7-394"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>值可用來控制何處以及如何匯入私用金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-394">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="634d7-395">這個方法會接受位元組陣列，並可用於例如 Base64 編碼或 DER 編碼的 X.509 憑證或 PFX/PKCS12 憑證的憑證類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-395">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="634d7-396">請注意，PFX/PKCS12 憑證可以包含多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-396">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="634d7-397">在此情況下，會使用私用的索引鍵相關聯的第一個憑證，或如果找到沒有私密金鑰，則會使用第一個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-397">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-398">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-398">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-399">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-399">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-400">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-400">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="634d7-401">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="634d7-401">for full trust for the immediate caller.</span></span> <span data-ttu-id="634d7-402">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="634d7-402">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="634d7-403">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="634d7-403">for full trust for inheritors.</span></span> <span data-ttu-id="634d7-404">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-404">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-405">憑證檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-405">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-406">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-406">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="634d7-407">列舉值的位元組合，會控制匯入憑證的位置和方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-407">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-408">用憑證檔的資訊、密碼和金鑰儲存旗標，填入 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-408">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-409">**安全性注意事項**永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-409">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-410">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-410">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="634d7-411">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="634d7-411">for full trust for the immediate caller.</span></span> <span data-ttu-id="634d7-412">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="634d7-412">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="634d7-413">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="634d7-413">for full trust for the immediate caller.</span></span> <span data-ttu-id="634d7-414">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="634d7-414">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="634d7-415">憑證檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-415">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="634d7-416">存取 X.509 憑證資料所需的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-416">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="634d7-417">列舉值的位元組合，會控制匯入憑證的位置和方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-417">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="634d7-418">用憑證檔的資訊、密碼和 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 值，填入 <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-418">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-419">可以使用這個方法填入<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>憑證檔案，密碼資訊的物件和<xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>值。</span><span class="sxs-lookup"><span data-stu-id="634d7-419">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634d7-420">永遠不會硬式編碼在原始程式碼中的密碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-420">Never hard code a password within your source code.</span></span>  <span data-ttu-id="634d7-421">可以從組件中擷取硬式編碼的密碼[Ildasm.exe （IL 反組譯工具）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六進位編輯器，或只是開啟 Notepad.exe 之類的文字編輯器中的組件。</span><span class="sxs-lookup"><span data-stu-id="634d7-421">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="634d7-422">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="634d7-422">for full trust for the immediate caller.</span></span> <span data-ttu-id="634d7-423">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="634d7-423">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="634d7-424">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="634d7-424">for full trust for inheritors.</span></span> <span data-ttu-id="634d7-425">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-425">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-426">取得憑證簽發者的辨別名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-426">Gets the distinguished name of the certificate issuer.</span></span></summary>
        <value><span data-ttu-id="634d7-427"><see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 物件，包含憑證簽發者的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-427">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-428">此屬性包含核發憑證的憑證授權單位 (CA) 的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-428">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="634d7-429">若要取得憑證的名稱，請使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="634d7-429">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="634d7-430">憑證的辨別名稱是憑證主體或簽發者的文字表示方式。</span><span class="sxs-lookup"><span data-stu-id="634d7-430">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="634d7-431">這表示會包含名稱屬性 (例如，"CN = MyName，OU = MyOrgUnit，C = US")。</span><span class="sxs-lookup"><span data-stu-id="634d7-431">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-432">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-432">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-433">憑證內容無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-433">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAfter : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-434">取得日期 (當地時間)，憑證在該日期之後就不再有效。</span><span class="sxs-lookup"><span data-stu-id="634d7-434">Gets the date in local time after which a certificate is no longer valid.</span></span></summary>
        <value><span data-ttu-id="634d7-435"><see cref="T:System.DateTime" /> 物件，表示憑證的到期日。</span><span class="sxs-lookup"><span data-stu-id="634d7-435">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-436">這個屬性指出憑證失效的到期日。</span><span class="sxs-lookup"><span data-stu-id="634d7-436">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-437">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-437">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-438">憑證無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-438">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-439">取得日期 (當地時間)，憑證會在該日期生效。</span><span class="sxs-lookup"><span data-stu-id="634d7-439">Gets the date in local time on which a certificate becomes valid.</span></span></summary>
        <value><span data-ttu-id="634d7-440"><see cref="T:System.DateTime" /> 物件，表示憑證的生效日期。</span><span class="sxs-lookup"><span data-stu-id="634d7-440">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-441">這個屬性指出憑證生效的日期。</span><span class="sxs-lookup"><span data-stu-id="634d7-441">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-442">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-442">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-443">憑證無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-443">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-444">取得或設定 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 物件，表示與憑證相關聯的私密金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-444">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="634d7-445"><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 物件，這個物件是 RSA 或 DSA 密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="634d7-445">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-446">這個屬性目前支援只有 RSA 或 DSA 金鑰，因此它會傳回<xref:System.Security.Cryptography.RSACryptoServiceProvider>或<xref:System.Security.Cryptography.DSACryptoServiceProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-446">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object.</span></span> <span data-ttu-id="634d7-447">如果沒有私密金鑰與憑證相關聯，則它會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="634d7-447">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="634d7-448">如果您將這個屬性設定為`null`或另一個金鑰，而不先刪除它，以在磁碟上保留私密金鑰檔案。</span><span class="sxs-lookup"><span data-stu-id="634d7-448">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="634d7-449">若要正確地刪除此屬性相關聯的私密金鑰，請設定`PersistKeyInCsp`要`false`，然後呼叫<xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="634d7-449">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-450">下列程式碼範例會開啟 目前使用者憑證存放區，只選取作用中憑證，然後可讓使用者選取一個或多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-450">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="634d7-451">然後此範例會將憑證資訊寫入主控台中。</span><span class="sxs-lookup"><span data-stu-id="634d7-451">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-452">金鑰值不是 RSA 或 DSA 金鑰，或該金鑰無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-452">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="634d7-453">這個屬性目前設定的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-453">The value being set for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="634d7-454">不支援這個私密金鑰的金鑰演算法。</span><span class="sxs-lookup"><span data-stu-id="634d7-454">The key algorithm for this private key is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="634d7-455">X.509 金鑰不相符。</span><span class="sxs-lookup"><span data-stu-id="634d7-455">The X.509 keys do not match.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="634d7-456">密碼編譯服務提供者金鑰為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-456">The cryptographic service provider key is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-457">取得與憑證相關聯的 <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-457">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="634d7-458"><see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-458">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-459">這個屬性會傳回<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>物件，其中包含的物件識別碼 (<xref:System.Security.Cryptography.Oid>) 表示的公用金鑰演算法、 ASN.1 編碼的參數和 (ASN.1） 編碼的金鑰值。</span><span class="sxs-lookup"><span data-stu-id="634d7-459">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="634d7-460">您也可以取得形式的索引鍵<xref:System.Security.Cryptography.AsymmetricAlgorithm>藉由參考的物件<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="634d7-460">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="634d7-461">此屬性支援只有 RSA 或 DSA 金鑰，因此它會傳回<xref:System.Security.Cryptography.RSACryptoServiceProvider>或<xref:System.Security.Cryptography.DSACryptoServiceProvider>物件，表示公開金鑰。</span><span class="sxs-lookup"><span data-stu-id="634d7-461">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-462">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-462">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-463">金鑰值不是 RSA 或 DSA 金鑰，或該金鑰無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-463">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawData : byte[]" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-464">取得憑證的未經處理資料 (Raw Data)。</span><span class="sxs-lookup"><span data-stu-id="634d7-464">Gets the raw data of a certificate.</span></span></summary>
        <value><span data-ttu-id="634d7-465">做為位元組陣列之憑證的未經處理資料。</span><span class="sxs-lookup"><span data-stu-id="634d7-465">The raw data of the certificate as a byte array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="634d7-466">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-466">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="x509Certificate2.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="634d7-467">重設 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件的狀態。</span><span class="sxs-lookup"><span data-stu-id="634d7-467">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-468">這個方法可用來重設憑證的狀態。</span><span class="sxs-lookup"><span data-stu-id="634d7-468">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="634d7-469">它也會釋放與憑證相關聯的任何資源。</span><span class="sxs-lookup"><span data-stu-id="634d7-469">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="634d7-470">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="634d7-470">for full trust for the immediate caller.</span></span> <span data-ttu-id="634d7-471">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="634d7-471">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="634d7-472">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="634d7-472">for full trust for inheritors.</span></span> <span data-ttu-id="634d7-473">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-473">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-474">取得作為位元組由大到小的十六進位字串的憑證序號。</span><span class="sxs-lookup"><span data-stu-id="634d7-474">Gets the serial number of a certificate as a big-endian hexadecimal string.</span></span></summary>
        <value><span data-ttu-id="634d7-475">Big endian 的十六進位字串作為憑證的序號。</span><span class="sxs-lookup"><span data-stu-id="634d7-475">The serial number of the certificate as a big-endian hexadecimal string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-476">憑證的序號是原始的 X.509 通訊協定的一部分。</span><span class="sxs-lookup"><span data-stu-id="634d7-476">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="634d7-477">序號是由憑證簽發者，也稱為憑證授權單位 (CA) 發出的唯一號碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-477">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-478">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-478">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-479">取得用於建立憑證簽章的演算法。</span><span class="sxs-lookup"><span data-stu-id="634d7-479">Gets the algorithm used to create the signature of a certificate.</span></span></summary>
        <value><span data-ttu-id="634d7-480">簽章演算法的物件識別碼。</span><span class="sxs-lookup"><span data-stu-id="634d7-480">The object identifier of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-481">物件識別元 (<xref:System.Security.Cryptography.Oid>) 識別的憑證所使用的簽章演算法類型。</span><span class="sxs-lookup"><span data-stu-id="634d7-481">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-482">下列程式碼範例會開啟 目前使用者憑證存放區，只選取作用中憑證，然後可讓使用者選取一個或多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-482">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="634d7-483">然後此範例會將憑證資訊寫入主控台中。</span><span class="sxs-lookup"><span data-stu-id="634d7-483">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-484">憑證無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-484">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubjectName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-485">取得憑證的主旨辨別名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-485">Gets the subject distinguished name from a certificate.</span></span></summary>
        <value><span data-ttu-id="634d7-486"><see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 物件，表示憑證主旨的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-486">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-487">主體辨別的名稱是使用者的憑證名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-487">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="634d7-488">主體的文字表示或憑證的簽發者憑證的辨別的名稱。</span><span class="sxs-lookup"><span data-stu-id="634d7-488">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="634d7-489">這表示會包含名稱屬性，例如"CN = MyName，OU = MyOrgUnit，C = US"。</span><span class="sxs-lookup"><span data-stu-id="634d7-489">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-490">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-490">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-491">憑證內容無效。</span><span class="sxs-lookup"><span data-stu-id="634d7-491">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thumbprint : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-492">取得憑證的指模。</span><span class="sxs-lookup"><span data-stu-id="634d7-492">Gets the thumbprint of a certificate.</span></span></summary>
        <value><span data-ttu-id="634d7-493">憑證的指紋。</span><span class="sxs-lookup"><span data-stu-id="634d7-493">The thumbprint of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-494">指紋使用 SHA1 演算法以動態方式產生，並且不是實際存在的憑證中。</span><span class="sxs-lookup"><span data-stu-id="634d7-494">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="634d7-495">指紋是憑證的唯一值，因為它常用來尋找特定的憑證在憑證存放區。</span><span class="sxs-lookup"><span data-stu-id="634d7-495">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-496">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-496">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="634d7-497">以文字格式顯示 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-497">Displays an X.509 certificate in text format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="x509Certificate2.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="634d7-498">以文字格式顯示 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-498">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="634d7-499">憑證資訊。</span><span class="sxs-lookup"><span data-stu-id="634d7-499">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-500">如同所有`ToString`方法，輸出可能不一致的跨版本的.NET Framework 中，因此不應針對內容剖析方法的結果。</span><span class="sxs-lookup"><span data-stu-id="634d7-500">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="634d7-501">使用屬性<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件，以取得內容的精確資訊，或使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A>方法，以取得憑證的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="634d7-501">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="634d7-502">這個方法會以文字格式顯示的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-502">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-503">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-503">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="x509Certificate2.ToString verbose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose"><span data-ttu-id="634d7-504"><see langword="true" /> 表示顯示公開金鑰、私密金鑰、擴充功能等等，而 <see langword="false" /> 則表示顯示與 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 類別類似的資訊，包括指模、序號、主旨和簽發者名稱等等。</span><span class="sxs-lookup"><span data-stu-id="634d7-504"><see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span></span></param>
        <summary><span data-ttu-id="634d7-505">以文字格式顯示 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-505">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="634d7-506">憑證資訊。</span><span class="sxs-lookup"><span data-stu-id="634d7-506">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-507">如同所有`ToString`方法，輸出可能不一致的跨版本的.NET Framework 中，因此不應針對內容剖析方法的結果。</span><span class="sxs-lookup"><span data-stu-id="634d7-507">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="634d7-508">使用屬性<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件取得精確的資訊。</span><span class="sxs-lookup"><span data-stu-id="634d7-508">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="634d7-509">這個方法會以文字格式顯示的憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-509">This method displays the certificate in text format.</span></span> <span data-ttu-id="634d7-510">如果`verbose`參數設為`true`，顯示的文字包含公開金鑰、 私密金鑰和延伸模組。</span><span class="sxs-lookup"><span data-stu-id="634d7-510">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="634d7-511">如果`verbose`設為`false`，顯示的文字包含這些欄位提供的 X.509 憑證，包括指模、 序號、 主旨和簽發者名稱和有效日期資訊。</span><span class="sxs-lookup"><span data-stu-id="634d7-511">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-512">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-512">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberSignature Language="F#" Value="member this.Verify : unit -&gt; bool" Usage="x509Certificate2.Verify " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="634d7-513">使用基本驗證原則，執行 X.509 鏈結驗證。</span><span class="sxs-lookup"><span data-stu-id="634d7-513">Performs a X.509 chain validation using basic validation policy.</span></span></summary>
        <returns><span data-ttu-id="634d7-514">如果驗證成功，則為 <see langword="true" />，如果驗證失敗則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="634d7-514"><see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-515">這個方法建置簡單的鏈結的憑證，並將基底的原則套用到該鏈結。</span><span class="sxs-lookup"><span data-stu-id="634d7-515">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="634d7-516">如果您需要有關失敗的詳細資訊，驗證憑證直接使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>物件。</span><span class="sxs-lookup"><span data-stu-id="634d7-516">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="634d7-517">請注意，預設的鏈結引擎可以使用覆寫<xref:System.Security.Cryptography.CryptoConfig>類別。</span><span class="sxs-lookup"><span data-stu-id="634d7-517">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="634d7-518">Microsoft Windows Server 2003，預設的引擎是否符合規格述 RFC3280，「[憑證和憑證撤銷清單 (CRL) 設定檔](https://go.microsoft.com/fwlink/?LinkId=45286)。 」</span><span class="sxs-lookup"><span data-stu-id="634d7-518">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-519">下列程式碼範例會開啟 目前使用者憑證存放區，只選取作用中憑證，然後可讓使用者選取一個或多個憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-519">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="634d7-520">然後此範例會將憑證資訊寫入主控台中。</span><span class="sxs-lookup"><span data-stu-id="634d7-520">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-521">憑證無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-521">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="634d7-522">取得憑證的 X.509 格式版本。</span><span class="sxs-lookup"><span data-stu-id="634d7-522">Gets the X.509 format version of a certificate.</span></span></summary>
        <value><span data-ttu-id="634d7-523">憑證格式。</span><span class="sxs-lookup"><span data-stu-id="634d7-523">The certificate format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634d7-524">有數個版本的 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-524">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="634d7-525">這個屬性會識別哪種格式的憑證用途。</span><span class="sxs-lookup"><span data-stu-id="634d7-525">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="634d7-526">例如，"3"會傳回第 3 版憑證。</span><span class="sxs-lookup"><span data-stu-id="634d7-526">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634d7-527">下列程式碼範例會建立命令列可執行檔，會將憑證檔，做為引數，並會列印到主控台的各種憑證內容。</span><span class="sxs-lookup"><span data-stu-id="634d7-527">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="634d7-528">憑證無法讀取。</span><span class="sxs-lookup"><span data-stu-id="634d7-528">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>