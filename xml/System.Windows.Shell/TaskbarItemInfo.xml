<Type Name="TaskbarItemInfo" FullName="System.Windows.Shell.TaskbarItemInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61c4ecfb7b4ff8bbfd93abb06c048ee51be972c0" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51936447" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TaskbarItemInfo : System.Windows.Freezable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TaskbarItemInfo extends System.Windows.Freezable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.TaskbarItemInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TaskbarItemInfo&#xA;Inherits Freezable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskbarItemInfo sealed : System::Windows::Freezable" />
  <TypeSignature Language="F#" Value="type TaskbarItemInfo = class&#xA;    inherit Freezable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示工作列縮圖顯示方式的相關資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.TaskbarItemInfo>類別提供的 managed 包裝函式[!INCLUDE[win7](~/includes/win7-md.md)]工作列功能。 如需有關 Windows shell 和原生工作列 Api 的詳細資訊，請參閱[工作列延伸模組](https://go.microsoft.com/fwlink/?LinkId=178479)。 <xref:System.Windows.Shell.TaskbarItemInfo> 會公開為<xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=nameWithType>上的相依性屬性<xref:System.Windows.Window>。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)]工作列提供增強的功能，可讓您使用工作列項目來傳達給使用者的狀態，並公開 （expose） 的一般工作視窗最小化或隱藏時。 所公開的功能<xref:System.Windows.Shell.TaskbarItemInfo>類別是無法使用之前的 Windows 版本比[!INCLUDE[win7](~/includes/win7-md.md)]。 使用應用程式<xref:System.Windows.Shell.TaskbarItemInfo>類別仍然可以執行舊版 Windows 中; 不過，這些工作列增強功能是在較早的版本中無法使用。  
  
 在  [!INCLUDE[win7](~/includes/win7-md.md)]，某些工作列功能可能無法使用，視使用者的設定而定。 工作列功能是無法使用，例如如果[!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)]是停用] 或 [如果以更高權限啟動應用程式。 您的應用程式應該提供其他方式與使用者互動，而不必中的增強的工作列功能[!INCLUDE[win7](~/includes/win7-md.md)]。  
  
 程式圖示，在通知區域中，也就是在工作列最右邊，通常用來傳達給使用者的應用程式狀態。 根據預設，[!INCLUDE[win7](~/includes/win7-md.md)]工作列會隱藏通知區域中的程式圖示。 不過，您可以設定<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>將映像新增至工作列按鈕，以溝通狀態，例如線上狀態的傳訊應用程式中的屬性。 覆疊影像可讓使用者看到的應用程式狀態，即使他們無法看到通知區域中的程式圖示。 您也可以顯示在工作列按鈕中執行工作，藉由設定的進度<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>和<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>屬性。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)]工作列顯示縮圖的應用程式，當您將滑鼠指標移到工作列按鈕。 根據預設會顯示整個應用程式視窗。 您可以指定要顯示縮圖中，藉由設定視窗的特定部分<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>屬性。 您也可以指定<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>工作列縮圖上方的工具提示中顯示。 即使在無法看到縮圖，因為使用者設定，會顯示工具提示。  
  
 您可以在工作列縮圖，以提供存取一般工作，而不需要切換至 [應用程式] 視窗中加入按鈕。 比方說，視窗 Media Player 所提供的播放、 暫停，以及應用程式最小化時，可讓您的 [上一頁] 按鈕會控制媒體播放，從工作列縮圖。 在工作列縮圖中的按鈕都由<xref:System.Windows.Shell.ThumbButtonInfo>物件，且包含在<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>集合。  
  
 下圖顯示的增強的功能[!INCLUDE[win7](~/includes/win7-md.md)]工作列。  
  
 ![工作列項目資訊範例](~/add/media/wpfshell-taskbariteminfo.png "工作列項目資訊範例")  
Windows 工作列增強功能  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Shell.TaskbarItemInfo>標記中。 <xref:System.Windows.Shell.TaskbarItemInfo>包含的集合<xref:System.Windows.Shell.ThumbButtonInfo>從工作列項目提供存取權的婧矔菛 Stop 命令的物件。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 下列標記和程式碼顯示上述範例在其完整的內容中。 應用程式使用<xref:System.ComponentModel.BackgroundWorker>來計算從 0 到 100 之間，並在使用者介面中顯示其進度。 可以啟動工作，並將其停止從工作列預覽。 在工作列按鈕中，會顯示進度。  
  
 [!code-xaml[Shell_TaskbarItemSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#001)]  
  
 [!code-csharp[Shell_TaskbarItemSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[Shell_TaskbarItemSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskbarItemInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskbarItemInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="taskbarItemInfo.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定工作列項目工具提示的文字。</summary>
        <value>工作列項目工具提示的文字。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 工具提示會顯示工作列縮圖上方，滑鼠指標停留在工作列按鈕上時。 如果因為使用者設定而未顯示工作列縮圖，會仍會顯示工具提示。  
  
 下圖顯示工作列<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>工具提示。  
  
 ![工作列項目資訊範例](~/add/media/wpfshell-taskbariteminfo.png "工作列項目資訊範例")  
Windows 工作列的描述  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Shell.TaskbarItemInfo>標記和集合<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>屬性。 這個範例是針對提供之較大範例的一部分<xref:System.Windows.Shell.TaskbarItemInfo>類別。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DescriptionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DescriptionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DescriptionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DescriptionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DescriptionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlay">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Overlay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Overlay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberSignature Language="VB.NET" Value="Public Property Overlay As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Overlay { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Overlay : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在工作列按鈕中的程式圖示上顯示的影像。</summary>
        <value>在工作列按鈕中的程式圖示上顯示的影像。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以將映像加入至傳達給使用者的應用程式狀態的工作列按鈕中的程式圖示。 覆疊使用靜態或以動畫顯示<xref:System.Windows.Media.ImageSource>，位於右下角的圖示在工作列按鈕中。 如果使用者設定以顯示小圖示工作列，不會顯示覆疊。  
  
 程式圖示，在通知區域中，也就是在工作列最右邊，通常用來傳達給使用者的應用程式狀態。 在  [!INCLUDE[win7](~/includes/win7-md.md)]，通知區域中的程式圖示依預設，會隱藏，因此，小於適用於通訊的狀態。 您可以使用中的工作列按鈕覆疊[!INCLUDE[win7](~/includes/win7-md.md)]隱藏通知區域中的圖示時，通訊狀態。 您的應用程式可以偵測的 Windows 版本，並提供適用於作業系統的方式通知。  
  
 覆疊影像會呈現在適當的大小。 如果<xref:System.Windows.Media.ImageSource>代表<xref:System.Drawing.Icon>，也會使用適當的位元深度。  
  
 下圖顯示工作列<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>。  
  
 ![工作列項目資訊範例](~/add/media/wpfshell-taskbariteminfo.png "工作列項目資訊範例")  
Windows 工作列覆疊  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Shell.TaskbarItemInfo>標記和集合<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>屬性。 這個範例是針對提供之較大範例的一部分<xref:System.Windows.Shell.TaskbarItemInfo>類別。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 下列範例示範如何利用程式碼設定 <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> 屬性。  
  
 [!code-csharp[Shell_TaskbarItemSample#121](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#121)]
 [!code-vb[Shell_TaskbarItemSample#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#121)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OverlayProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverlayProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverlayProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OverlayProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OverlayProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OverlayProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressState">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Shell.TaskbarItemProgressState ProgressState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressState As TaskbarItemProgressState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemProgressState ProgressState { System::Windows::Shell::TaskbarItemProgressState get(); void set(System::Windows::Shell::TaskbarItemProgressState value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressState : System.Windows.Shell.TaskbarItemProgressState with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemProgressState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示進度列指示器顯示在工作列按鈕中的方式。</summary>
        <value>列舉值，這個值表示進度列指示器顯示在工作列按鈕中的方式。 預設值為 <see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以藉由顯示進度列指示器在通訊的長時間執行的工作進度[!INCLUDE[win7](~/includes/win7-md.md)]工作列按鈕。 取決於指標的色彩<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>屬性，其中包含的其中一個<xref:System.Windows.Shell.TaskbarItemProgressState>列舉值。 當<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>是<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>，指標為綠色。 當<xref:System.Windows.Shell.TaskbarItemProgressState.Paused>，指標為黃色。 當<xref:System.Windows.Shell.TaskbarItemProgressState.Error>，指標是紅色。 這些狀態，如<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>屬性會決定由進度列指示器在工作列按鈕中有多少會填入。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 其他值都會忽略<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>。 <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 跨整個工作列按鈕會顯示閃爍綠色指示器。 任何指標會顯示<xref:System.Windows.Shell.TaskbarItemProgressState.None>。  
  
 下圖顯示在工作列進度列指示器<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>狀態。  
  
 ![工作列項目資訊範例](~/add/media/wpfshell-taskbariteminfo.png "工作列項目資訊範例")  
Windows 工作列進度列指示器  
  
   
  
## Examples  
 下列範例示範如何利用程式碼設定 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 屬性。 狀態會設定的處理常式中<xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=nameWithType>事件，指出使用者是否已停止背景工作結束但發生錯誤，或正常完成。 這個範例是針對提供之較大範例的一部分<xref:System.Windows.Shell.TaskbarItemInfo>類別。  
  
 [!code-csharp[Shell_TaskbarItemSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[Shell_TaskbarItemSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ProgressStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValue">
      <MemberSignature Language="C#" Value="public double ProgressValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ProgressValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ProgressValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressValue : double with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示進度列指示器在工作列按鈕中的飽和度。</summary>
        <value>值，這個值表示進度列指示器在工作列按鈕中的飽和度。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>屬性會以 0.0 到 1.0 之間的值。 較小且較大的數字會強制轉型成這些界限內。 <xref:System.Double.NaN> 會強制轉型為 0。  
  
 您可以藉由顯示進度列指示器在通訊的長時間執行的工作進度[!INCLUDE[win7](~/includes/win7-md.md)]工作列按鈕。 取決於指標的色彩<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>屬性，其中包含的其中一個<xref:System.Windows.Shell.TaskbarItemProgressState>列舉值。 如果<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>屬性是<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>， <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>，或<xref:System.Windows.Shell.TaskbarItemProgressState.Error>，則<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>屬性會判斷進度列指示器的飽和度。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 某些值都會忽略<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>。 <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 跨整個工作列按鈕會顯示閃爍綠色指示器。 任何指標會顯示<xref:System.Windows.Shell.TaskbarItemProgressState.None>。  
  
 下圖顯示工作列進度列指示器與<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>的 82%的費用。  
  
 ![工作列項目資訊範例](~/add/media/wpfshell-taskbariteminfo.png "工作列項目資訊範例")  
Windows 工作列進度列指示器  
  
   
  
## Examples  
 下列範例示範如何利用程式碼設定 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 屬性。 在處理常式中的設定值，則<xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=nameWithType>事件，指出目前的背景工作的進度。 這個範例是針對提供之較大範例的一部分<xref:System.Windows.Shell.TaskbarItemInfo>類別。  
  
 [!code-csharp[Shell_TaskbarItemSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[Shell_TaskbarItemSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressValueProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ProgressValueProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressValueProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfos">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberSignature Language="VB.NET" Value="Public Property ThumbButtonInfos As ThumbButtonInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::ThumbButtonInfoCollection ^ ThumbButtonInfos { System::Windows::Shell::ThumbButtonInfoCollection ^ get(); void set(System::Windows::Shell::ThumbButtonInfoCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThumbButtonInfos : System.Windows.Shell.ThumbButtonInfoCollection with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.ThumbButtonInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 相關聯之 <see cref="T:System.Windows.Window" /> 物件的集合。</summary>
        <value>與 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 相關聯之 <see cref="T:System.Windows.Window" /> 物件的集合。 預設為空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以加入按鈕，以提供一般工作的使用者可存取，而不需要切換至應用程式視窗的工作列縮圖。 比方說，Windows Media Player 會提供應用程式最小化時，可讓使用者控制媒體播放，從工作列縮圖的播放、 暫停、 轉寄、 及上一步 按鈕。 在工作列縮圖中的按鈕都由<xref:System.Windows.Shell.ThumbButtonInfo>物件，且包含在<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>集合。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)] Shell 工作列縮圖中允許最多七個按鈕。 如果超過七<xref:System.Windows.Shell.ThumbButtonInfo>物件加入至<xref:System.Windows.Shell.ThumbButtonInfoCollection>，其他的物件會被視為溢位。 當按鈕是<xref:System.Windows.Visibility.Collapsed>，它並沒有任何可見的項目，它會保留任何空間。 在此案例中，其他的按鈕，從<xref:System.Windows.Shell.ThumbButtonInfoCollection>顯示溢位。  
  
 下圖顯示一組兩個拇指按鈕與工作列預覽。  
  
 ![工作列項目資訊範例](~/add/media/wpfshell-taskbariteminfo.png "工作列項目資訊範例")  
Windows 工作列縮圖按鈕  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Shell.TaskbarItemInfo>標記中。 <xref:System.Windows.Shell.TaskbarItemInfo>包含的集合<xref:System.Windows.Shell.ThumbButtonInfo>從工作列項目提供存取權的婧矔菛 Stop 命令的物件。 這個範例是針對提供之較大範例的一部分<xref:System.Windows.Shell.TaskbarItemInfo>類別。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfosProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbButtonInfosProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThumbButtonInfosProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThumbButtonInfosProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThumbButtonInfosProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMargin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness ThumbnailClipMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness ThumbnailClipMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property ThumbnailClipMargin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness ThumbnailClipMargin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.ThumbnailClipMargin : System.Windows.Thickness with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指定應用程式視窗的工作區會顯示在工作列縮圖中的部分。</summary>
        <value>一個值，指定應用程式視窗的工作區會顯示在工作列縮圖中的部分。 預設為空白的 <see cref="T:System.Windows.Thickness" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，[!INCLUDE[win7](~/includes/win7-md.md)]工作列會顯示應用程式視窗的工作區的縮放縮圖。 您可以設定<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>屬性來指定用戶端視窗顯示縮圖中的裁剪的區域。 例如，此屬性相當實用，如果您想要專注於視窗內容的縮圖，而您排除應用程式工具列的。 這個屬性不能在看不到在應用程式視窗的縮圖中顯示內容。  
  
 指定會顯示縮圖中，藉由設定區域<xref:System.Windows.Thickness>區域周圍的框線。 框線邊緣的用戶端視窗啟動，並向內擴充指定的數量。 框線內的內容會顯示在縮圖。  
  
 下圖顯示定義框線<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>。  
  
 ![縮圖裁剪邊界](~/add/media/wpfshell-clipmargin.png "縮圖裁剪邊界")  
縮圖裁剪邊界框線  
  
 下圖顯示裁剪的縮圖預覽。  
  
 ![工作列項目資訊範例](~/add/media/wpfshell-taskbariteminfo.png "工作列項目資訊範例")  
Windows 工作列縮圖預覽  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Shell.TaskbarItemInfo>標記和集合<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>屬性。 這個範例是針對提供之較大範例的一部分<xref:System.Windows.Shell.TaskbarItemInfo>類別。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbnailClipMarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThumbnailClipMarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThumbnailClipMarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThumbnailClipMarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>