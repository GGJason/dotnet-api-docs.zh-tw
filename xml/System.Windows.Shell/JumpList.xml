<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba9c7d5f8881fef023b51e7a14a991d7c5d43b92" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51933424" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type JumpList = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示項目及工作清單，此項目及工作會顯示成為 Windows 7 工作列按鈕上的功能表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[win7](~/includes/win7-md.md)]工作列提供直接從工作列按鈕啟動程式，使用捷徑清單的增強的功能。 捷徑清單也會在[!INCLUDE[win7](~/includes/win7-md.md)]開始 功能表。 以滑鼠右鍵按一下工作列按鈕，或按一下 [開始] 功能表中的程式旁的箭號，您可以存取的捷徑清單。 如需跳躍清單的詳細資訊，請參閱[工作列](https://go.microsoft.com/fwlink/?LinkId=178478)Windows 使用者經驗的互動指導方針一節。  
  
 <xref:System.Windows.Shell.JumpList>類別中的捷徑清單功能會提供 managed 包裝函式[!INCLUDE[win7](~/includes/win7-md.md)]工作列及管理資料傳遞至[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]殼層。 所公開的功能<xref:System.Windows.Shell.JumpList>類別不是適用於版本[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]早於[!INCLUDE[win7](~/includes/win7-md.md)]。 使用應用程式<xref:System.Windows.Shell.JumpList>類別會以其他版本的[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]，但跳躍清單將無法使用。 如需有關 Windows shell 和原生跳躍清單 Api 的詳細資訊，請參閱[工作列延伸模組](https://go.microsoft.com/fwlink/?LinkId=178479)。  
  
 下圖顯示跳躍清單適用於 Windows Media Player，使用中的項目**任務**並**經常**類別。  
  
 ![Windows Media Player 跳躍清單](~/add/media/wpfshell-jumplist.png "Windows Media Player 跳躍清單")  
Windows Media Player 跳躍清單  
  
## <a name="configuring-a-jump-list"></a>設定 捷徑清單  
 捷徑清單可以包含兩種類型的項目，<xref:System.Windows.Shell.JumpTask>和<xref:System.Windows.Shell.JumpPath>。 A<xref:System.Windows.Shell.JumpTask>是程式的連結和<xref:System.Windows.Shell.JumpPath>是檔案的連結。 您可以藉由建立以視覺方式區隔跳躍清單中的項目<xref:System.Windows.Shell.JumpTask>沒有<xref:System.Windows.Shell.JumpTask.Title%2A>和<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定。 這個空白<xref:System.Windows.Shell.JumpTask>將會顯示為水平線跳躍清單中。  
  
> [!NOTE]
>  如果在指定的檔案類型<xref:System.Windows.Shell.JumpPath>未向您的應用程式，該檔案不會在跳躍清單中。 例如，如果您將新增<xref:System.Windows.Shell.JumpPath>指向.txt 檔案，必須註冊您的應用程式，以處理.txt 檔案。 如需詳細資訊，請參閱 <<c0> [ 檔案關聯的簡介](https://go.microsoft.com/fwlink/?LinkId=178480)。  
  
 跳躍項目會放在類別<xref:System.Windows.Shell.JumpList>。 根據預設，<xref:System.Windows.Shell.JumpItem>會顯示在**工作**類別目錄。 或者，您可以指定<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>針對<xref:System.Windows.Shell.JumpItem>。  
  
 您可以指定是否標準**最近**並**經常**類別會顯示在<xref:System.Windows.Shell.JumpList>藉由設定<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>和<xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>屬性。 這些類別的內容由[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]殼層。 因為這些類別可能包含許多相同的資料，您通常顯示一個或另一個則在您<xref:System.Windows.Shell.JumpList>，但非兩者。 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 如果它們是透過通用檔案對話方塊開啟，或用來開啟應用程式透過檔案類型關聯，會自動管理最近的項目。 透過跳躍清單存取項目時，您可以通知[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]殼層來新增的項目**最近**藉由呼叫類別<xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>方法。  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>套用至 Windows Shell 的捷徑清單  
 您無法直接存取殼層的跳躍清單，或讀取其內容到<xref:System.Windows.Shell.JumpList>類別。 相反地，<xref:System.Windows.Shell.JumpList>類別提供，您可以使用，並接著將套用至跳躍清單的表示法[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]殼層。 您通常會建立<xref:System.Windows.Shell.JumpList>並將它設定為第一次執行應用程式時的一次。 不過，您可以修改或取代<xref:System.Windows.Shell.JumpList>在執行階段。  
  
 當您已設定<xref:System.Windows.Shell.JumpList>屬性，您必須套用<xref:System.Windows.Shell.JumpList>Windows 殼層之前及其內容會出現在工作列跳躍清單中。 這會自動完成時<xref:System.Windows.Shell.JumpList>第一次會附加至應用程式，在 XAML 中或在呼叫<xref:System.Windows.Shell.JumpList.SetJumpList%2A>方法。 如果您修改的內容<xref:System.Windows.Shell.JumpList>在執行階段，您必須呼叫<xref:System.Windows.Shell.JumpList.Apply%2A>方法，以將其目前的內容套用至 Windows shell。  
  
## <a name="setting-a-jump-list-in-xaml"></a>在 XAML 中設定捷徑清單  
 A<xref:System.Windows.Shell.JumpList>不會自動附加至<xref:System.Windows.Application>物件。 您將附加<xref:System.Windows.Shell.JumpList>至<xref:System.Windows.Application>在 XAML 中使用的附加的屬性語法中的物件。 <xref:System.Windows.Shell.JumpList>類別會實作<xref:System.ComponentModel.ISupportInitialize>介面，以支援的 XAML 宣告<xref:System.Windows.Shell.JumpList>。 如果<xref:System.Windows.Shell.JumpList>是在 XAML 中宣告並附加至目前<xref:System.Windows.Application>，它會自動套用至[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]殼層時<xref:System.Windows.Shell.JumpList>初始化。  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>設定和修改程式碼中的捷徑清單  
 您將附加<xref:System.Windows.Shell.JumpList>要<xref:System.Windows.Application>藉由呼叫靜態程式碼中的物件<xref:System.Windows.Shell.JumpList.SetJumpList%2A>方法。 這也適用於<xref:System.Windows.Shell.JumpList>至[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]殼層。  
  
 若要修改<xref:System.Windows.Shell.JumpList>在執行階段，您呼叫<xref:System.Windows.Shell.JumpList.GetJumpList%2A>方法來取得<xref:System.Windows.Shell.JumpList>目前連結至<xref:System.Windows.Application>。 您已修改的屬性之後<xref:System.Windows.Shell.JumpList>，您必須呼叫<xref:System.Windows.Shell.JumpList.Apply%2A>方法，以將變更套用至 Windows shell。  
  
> [!NOTE]
>  您通常會建立一個<xref:System.Windows.Shell.JumpList>連結至<xref:System.Windows.Application>並套用至[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]殼層。 不過，您可以建立多個<xref:System.Windows.Shell.JumpList>物件。 只有一個<xref:System.Windows.Shell.JumpList>一次可以套用至[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]shell 中，而且只有一<xref:System.Windows.Shell.JumpList>一次可以與其相關聯<xref:System.Windows.Application>。 .NET Framework 不需要這些是相同<xref:System.Windows.Shell.JumpList>。  
  
> [!NOTE]
>  這個類別包含在類別層級套用至所有成員的連結要求。 A<xref:System.Security.SecurityException>立即呼叫端沒有完全信任權限時，會擲回。 如需安全性需求的詳細資訊，請參閱[連結要求](~/docs/framework/misc/link-demands.md)並[繼承要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。  
  
   
  
## Examples  
 下列範例示範具有跳躍清單的應用程式。 應用程式有三個按鈕可讓您將工作加入目前的跳躍清單、 清除的跳躍清單中，內容和新的跳躍清單套用至應用程式。  
  
 下列範例示範如何宣告<xref:System.Windows.Shell.JumpList>標記中。 <xref:System.Windows.Shell.JumpList>包含兩個<xref:System.Windows.Shell.JumpTask>連結，另一個<xref:System.Windows.Shell.JumpPath>。 套用<xref:System.Windows.Shell.JumpPath>殼層將會失敗的應用程式未註冊為處理.txt 檔案的副檔名。  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 下列範例示範的程式碼後置頁面`App.xaml`。 此程式碼會處理<xref:System.Windows.Shell.JumpList.JumpItemsRejected>和<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>事件。  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 下列範例顯示用來建立應用程式使用者介面的標記。  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 下列範例示範的程式碼後置頁面`MainWindow.xaml`。 此程式碼示範如何修改、 清除和建立<xref:System.Windows.Shell.JumpList>程序程式碼。 針對新跳躍清單中，靜態<xref:System.Windows.Shell.JumpList.SetJumpList%2A>會呼叫方法來建立關聯<xref:System.Windows.Shell.JumpList>目前的應用程式，並套用<xref:System.Windows.Shell.JumpList>Windows 殼層。  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">若要修改 Windows shell 的完整存取。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Shell.JumpList" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Shell.JumpList" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫端。 此成員不能由部分信任或不透明的程式碼。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Shell.JumpList : seq&lt;System.Windows.Shell.JumpItem&gt; * bool * bool -&gt; System.Windows.Shell.JumpList" Usage="new System.Windows.Shell.JumpList (items, showFrequent, showRecent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">
          <see cref="T:System.Windows.Shell.JumpItem" /> 物件的集合，這些物件會顯示在跳躍清單中。</param>
        <param name="showFrequent">值，指出是否在跳躍清單中顯示經常使用的項目。</param>
        <param name="showRecent">值，指出是否在跳躍清單中顯示最近使用的項目。</param>
        <summary>使用指定的參數，初始化 <see cref="T:System.Windows.Shell.JumpList" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最近**並**經常**類別經常包含許多相同的跳躍項目。 如此一來，應用程式通常會顯示這兩**最近**或**經常**跳躍清單中，但非兩者的類別。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫端。 此成員不能由部分信任或不透明的程式碼。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將指定的項目加入至跳躍清單的 [最近] 分類中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : string -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory itemPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">要加入至跳躍清單的路徑。</param>
        <summary>將指定的項目路徑加入至跳躍清單的 [最近] 分類中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容**最近**類別由 Windows shell。 若要顯示在跳躍清單中的最近使用的項目，請設定<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>屬性設`true`。  
  
 您可以呼叫<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29>方法來要求 Windows shell 加入至項目路徑**最近**項目清單。 如果您的應用程式未註冊為處理檔案類型的項目，它不會出現在**最近**清單和呼叫<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29>將會以無訊息模式失敗。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫端。 此成員不能由部分信任或不透明的程式碼。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpPath -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath">要加入至跳躍清單中的 <see cref="T:System.Windows.Shell.JumpPath" />。</param>
        <summary>將指定的跳躍路徑加入至跳躍清單的 [最近] 分類中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容**最近**類別由 Windows shell。 若要顯示在跳躍清單中的最近使用的項目，請設定<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>屬性設`true`。  
  
 您可以呼叫<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29>方法來要求 Windows shell 加入至指定的跳躍路徑**最近**項目清單。 如果您的應用程式未註冊為處理檔案類型的項目，它不會出現在**最近**清單和呼叫<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29>將會以無訊息模式失敗。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫端。 此成員不能由部分信任或不透明的程式碼。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpTask -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask">要加入至跳躍清單中的 <see cref="T:System.Windows.Shell.JumpTask" />。</param>
        <summary>將指定的跳躍工作加入至跳躍清單的 [最近] 分類中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容**最近**類別由 Windows shell。 若要顯示在跳躍清單中的最近使用的項目，請設定<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>屬性設`true`。  
  
 您可以呼叫<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29>方法來要求 Windows shell 加入至指定的跳躍工作**最近**項目清單。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫端。 此成員不能由部分信任或不透明的程式碼。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberSignature Language="F#" Value="member this.Apply : unit -&gt; unit" Usage="jumpList.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將目前狀態中的 <see cref="T:System.Windows.Shell.JumpList" /> 傳送至 Windows Shell。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList.Apply%2A>方法會將傳送的內容<xref:System.Windows.Shell.JumpList>Windows 殼層處於目前狀態。 此呼叫完成之後，<xref:System.Windows.Shell.JumpList.JumpItems%2A>屬性已修改為包含 Windows shell 已成功新增到其工作列跳躍清單的項目。 您可以透過事件處理常式來存取移除的項目清單<xref:System.Windows.Shell.JumpList.JumpItemsRejected>和<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>事件。  
  
   
  
## Examples  
 下列範例示範如何取得目前<xref:System.Windows.Shell.JumpList>清除的內容和<xref:System.Windows.Shell.JumpList.JumpItems%2A>集合。 <xref:System.Windows.Shell.JumpList.Apply%2A>方法接著會呼叫套用<xref:System.Windows.Shell.JumpList>變更為 Windows shell。 這個範例是提供之較大範例的一部分<xref:System.Windows.Shell.JumpList>類別概觀。  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Shell.JumpList" /> 未完全初始化。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫端。 此成員不能由部分信任或不透明的程式碼。</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="jumpList.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示 <see cref="T:System.Windows.Shell.JumpList" /> 初始化開始。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList>類別會實作<xref:System.ComponentModel.ISupportInitialize>介面，以支援的 XAML 宣告<xref:System.Windows.Shell.JumpList>。 <xref:System.Windows.Shell.JumpList.BeginInit%2A>方法時才會呼叫<xref:System.Windows.Shell.JumpList>是在 XAML 中宣告並附加至<xref:System.Windows.Application>使用附加的屬性語法。 您不從您的程式碼呼叫此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">這個 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的呼叫會在 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的先前呼叫中形成巢狀。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="jumpList.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示 <see cref="T:System.Windows.Shell.JumpList" /> 初始化結束。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList>類別會實作<xref:System.ComponentModel.ISupportInitialize>介面，以支援的 XAML 宣告<xref:System.Windows.Shell.JumpList>。 <xref:System.Windows.Shell.JumpList.EndInit%2A>方法時才會呼叫<xref:System.Windows.Shell.JumpList>是在 XAML 中宣告並附加至<xref:System.Windows.Application>使用附加的屬性語法。 您不從您的程式碼呼叫此方法。  
  
 <xref:System.Windows.Shell.JumpList.EndInit%2A>方法具有相同的效果<xref:System.Windows.Shell.JumpList.Apply%2A>方法。 <xref:System.Windows.Shell.JumpList.EndInit%2A> 內容傳送<xref:System.Windows.Shell.JumpList>Windows 殼層處於目前狀態。 此呼叫完成之後，<xref:System.Windows.Shell.JumpList.JumpItems%2A>屬性已修改為包含 Windows shell 已成功加入至跳躍清單的項目。 您可以透過事件處理常式來存取移除的項目清單<xref:System.Windows.Shell.JumpList.JumpItemsRejected>和<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">這個 <see cref="M:System.Windows.Shell.JumpList.EndInit" />呼叫沒有與 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的呼叫配對。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberSignature Language="F#" Value="static member GetJumpList : System.Windows.Application -&gt; System.Windows.Shell.JumpList" Usage="System.Windows.Shell.JumpList.GetJumpList application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application">與 <see cref="T:System.Windows.Shell.JumpList" /> 相關聯的應用程式。</param>
        <summary>傳回與應用程式相關聯的 <see cref="T:System.Windows.Shell.JumpList" /> 物件。</summary>
        <returns>與指定之應用程式相關聯的 <see cref="T:System.Windows.Shell.JumpList" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以呼叫<xref:System.Windows.Shell.JumpList.GetJumpList%2A>方法來取得<xref:System.Windows.Shell.JumpList>目前與相關聯<xref:System.Windows.Application>。 .NET Framework 不需要，這是<xref:System.Windows.Shell.JumpList>目前套用至 Windows shell。  
  
   
  
## Examples  
 下列範例示範如何取得<xref:System.Windows.Shell.JumpList>與目前的應用程式相關聯。 A<xref:System.Windows.Shell.JumpTask>新增至<xref:System.Windows.Shell.JumpList.JumpItems%2A>集合，並加入**最近**類別目錄。 <xref:System.Windows.Shell.JumpList.Apply%2A>會呼叫方法來套用更新<xref:System.Windows.Shell.JumpList>Windows 殼層。 這個範例是提供之較大範例的一部分<xref:System.Windows.Shell.JumpList>類別概觀。  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JumpItems : System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;" Usage="System.Windows.Shell.JumpList.JumpItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Shell.JumpItem" /> 物件的集合，這些物件會顯示在跳躍清單中。</summary>
        <value>
          <see cref="T:System.Windows.Shell.JumpItem" /> 物件的集合，這些物件會顯示在跳躍清單中。 預設為空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 捷徑清單可以包含兩種類型的項目，<xref:System.Windows.Shell.JumpTask>和<xref:System.Windows.Shell.JumpPath>。 A<xref:System.Windows.Shell.JumpTask>是程式的連結和<xref:System.Windows.Shell.JumpPath>是檔案的連結。  
  
 當<xref:System.Windows.Shell.JumpList>建立時，<xref:System.Windows.Shell.JumpList.JumpItems%2A>集合是空的。 您可以將任何<xref:System.Windows.Shell.JumpTask>或<xref:System.Windows.Shell.JumpPath>物件加入集合。 集合只會包含已加入您的程式項目。 之後<xref:System.Windows.Shell.JumpList>具有已成功呼叫傳遞給 Windows shell<xref:System.Windows.Shell.JumpList.EndInit%2A>或是<xref:System.Windows.Shell.JumpList.Apply%2A>方法，<xref:System.Windows.Shell.JumpList.JumpItems%2A>集合將包含已成功新增至工作列跳躍清單的項目。 未成功加入的項目會自<xref:System.Windows.Shell.JumpList.JumpItems%2A>集合。 您可以透過事件處理常式來存取移除的項目清單<xref:System.Windows.Shell.JumpList.JumpItemsRejected>和<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>事件。  
  
   
  
## Examples  
 下列範例示範如何取得目前<xref:System.Windows.Shell.JumpList>清除的內容和<xref:System.Windows.Shell.JumpList.JumpItems%2A>集合。 <xref:System.Windows.Shell.JumpList.Apply%2A>方法接著會呼叫套用<xref:System.Windows.Shell.JumpList>變更為 Windows shell。 這個範例是提供之較大範例的一部分<xref:System.Windows.Shell.JumpList>類別概觀。  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRejected : EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " Usage="member this.JumpItemsRejected : System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於無法由 Windows Shell 將跳躍項目加入至跳躍清單時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容之後<xref:System.Windows.Shell.JumpList>會套用至 Windows shell 中，<xref:System.Windows.Shell.JumpList.JumpItems%2A>屬性已修改為包含 Windows shell 已成功加入至跳躍清單的項目。 您可以透過事件處理常式來存取移除的項目清單<xref:System.Windows.Shell.JumpList.JumpItemsRejected>和<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>事件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Shell.JumpList.JumpItemsRejected>的被拒絕的項目顯示在訊息方塊中的事件。 這個範例是提供之較大範例的一部分<xref:System.Windows.Shell.JumpList>類別概觀。  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRemovedByUser : EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " Usage="member this.JumpItemsRemovedByUser : System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於已由使用者從清單中移除先前在跳躍清單中的跳躍項目時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容之後<xref:System.Windows.Shell.JumpList>會套用至 Windows shell 中，<xref:System.Windows.Shell.JumpList.JumpItems%2A>屬性已修改為包含 Windows shell 已成功加入至跳躍清單的項目。 您可以透過事件處理常式來存取移除的項目清單<xref:System.Windows.Shell.JumpList.JumpItemsRejected>和<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>事件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>的被拒絕的項目顯示在訊息方塊中的事件。 這個範例是提供之較大範例的一部分<xref:System.Windows.Shell.JumpList>類別概觀。  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberSignature Language="F#" Value="static member SetJumpList : System.Windows.Application * System.Windows.Shell.JumpList -&gt; unit" Usage="System.Windows.Shell.JumpList.SetJumpList (application, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application">與 <see cref="T:System.Windows.Shell.JumpList" /> 相關聯的應用程式。</param>
        <param name="value">要與應用程式產生關聯的 <see cref="T:System.Windows.Shell.JumpList" />。</param>
        <summary>設定與應用程式相關聯的 <see cref="T:System.Windows.Shell.JumpList" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以建立多個<xref:System.Windows.Shell.JumpList>物件。 不過，只有一個<xref:System.Windows.Shell.JumpList>一次可以與其相關聯<xref:System.Windows.Application>。 呼叫<xref:System.Windows.Shell.JumpList.SetJumpList%2A>方法來設定<xref:System.Windows.Shell.JumpList>目前與相關聯<xref:System.Windows.Application>。  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Shell.JumpList>在程式碼中。 靜態<xref:System.Windows.Shell.JumpList.SetJumpList%2A>會呼叫方法來建立關聯<xref:System.Windows.Shell.JumpList>目前的應用程式。 <xref:System.Windows.Shell.JumpList>設定時就會自動套用至 Windows shell。 這個範例是提供之較大範例的一部分<xref:System.Windows.Shell.JumpList>類別概觀。  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFrequentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出是否在跳躍清單中顯示經常使用的項目。</summary>
        <value>如果在跳躍清單中顯示經常使用的項目則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容**經常**類別由 Windows shell。 若要在跳躍清單中顯示經常使用的項目，請設定<xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>屬性設`true`。  
  
 **最近**並**經常**類別經常包含許多相同的跳躍項目。 如此一來，應用程式通常會顯示這兩**最近**或**經常**跳躍清單中，但非兩者的類別。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Shell.JumpList>設定為顯示**經常**類別目錄。 這個範例是提供之較大範例的一部分<xref:System.Windows.Shell.JumpList>類別概觀。  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRecentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出是否在跳躍清單中顯示最近使用的項目。</summary>
        <value>如果在跳躍清單中顯示最近使用的項目則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容**最近**類別由 Windows shell。 若要在跳躍清單中顯示經常使用的項目，請設定<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>屬性設`true`。  
  
 **最近**並**經常**類別經常包含許多相同的跳躍項目。 如此一來，應用程式通常會顯示這兩**最近**或**經常**跳躍清單中，但非兩者的類別。  
  
 您可以呼叫<xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>方法來要求 Windows shell 加入項目來**最近**項目清單。 如果您的應用程式未註冊為處理項目的檔案名稱類型，它不會出現在**最近**清單和呼叫<xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>將會以無訊息模式失敗。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Shell.JumpList>設定為顯示**最近**類別目錄。 這個範例是提供之較大範例的一部分<xref:System.Windows.Shell.JumpList>類別概觀。  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>