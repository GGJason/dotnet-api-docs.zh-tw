<Type Name="Message" FullName="System.Messaging.Message">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fe96c4f161160bdcc92c281cb6929789524dc9a" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53515695" /></Metadata><TypeSignature Language="C#" Value="public class Message : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Message extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Message" />
  <TypeSignature Language="VB.NET" Value="Public Class Message&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Message : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Message = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Messaging.Design.MessageDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Messaging.Design.MessageDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Messaging.Design.MessageDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fbd27-101">提供定義訊息佇列訊息所需屬性的存取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-101">Provides access to the properties needed to define a Message Queuing message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-102">使用<xref:System.Messaging.Message>類別查看，或從佇列接收訊息或傳送訊息至佇列時，讓訊息屬性的良好控制。</span><span class="sxs-lookup"><span data-stu-id="fbd27-102">Use the <xref:System.Messaging.Message> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.</span></span>  
  
 <span data-ttu-id="fbd27-103"><xref:System.Messaging.MessageQueue> 會使用<xref:System.Messaging.Message>類別窺視或接收來自佇列訊息時，因為同時<xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType>並<xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType>方法建立的新執行個體<xref:System.Messaging.Message>類別，並設定執行個體的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-103"><xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties.</span></span> <span data-ttu-id="fbd27-104"><xref:System.Messaging.Message>類別的唯讀屬性會套用至從佇列擷取訊息，而讀取/寫入屬性套用至傳送和擷取訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-104">The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages.</span></span> <span data-ttu-id="fbd27-105">當<xref:System.Messaging.MessageQueue>窺視或接收來自佇列的訊息其<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>屬性會決定哪些訊息的屬性擷取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-105">When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved.</span></span>  
  
 <span data-ttu-id="fbd27-106"><xref:System.Messaging.MessageQueue>類別的<xref:System.Messaging.MessageQueue.Send%2A>方法可讓您指定任何物件的類型傳送至該佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-106">The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue.</span></span> <span data-ttu-id="fbd27-107">您可以使用<xref:System.Messaging.MessageQueue>執行個體的<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性可指定泛型訊息傳送至佇列的設定。</span><span class="sxs-lookup"><span data-stu-id="fbd27-107">You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue.</span></span> <span data-ttu-id="fbd27-108">類型的設定包含格式器、 標籤、 加密及驗證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-108">The types of settings include formatter, label, encryption, and authentication.</span></span> <span data-ttu-id="fbd27-109">您也可以指定適當的值<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員時協調回應通知和報表的訊息應用程式訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-109">You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages.</span></span> <span data-ttu-id="fbd27-110">使用<xref:System.Messaging.Message>將訊息傳送至佇列的執行個體可讓您彈性地存取和修改其中許多屬性-單一訊息或訊息的訊息為基礎。</span><span class="sxs-lookup"><span data-stu-id="fbd27-110">Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties - either for a single message or on a message-by-message basis.</span></span> <span data-ttu-id="fbd27-111"><xref:System.Messaging.Message> 屬性會優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-111"><xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span></span>  
  
 <span data-ttu-id="fbd27-112">訊息資料儲存在<xref:System.Messaging.Message.Body%2A>屬性以及較小的範圍<xref:System.Messaging.Message.AppSpecific%2A>和<xref:System.Messaging.Message.Extension%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-112">Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties.</span></span> <span data-ttu-id="fbd27-113">加密、 序列化或還原序列化的內容訊息資料時<xref:System.Messaging.Message.Body%2A>屬性會受到影響。</span><span class="sxs-lookup"><span data-stu-id="fbd27-113">When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected.</span></span>  
  
 <span data-ttu-id="fbd27-114">內容<xref:System.Messaging.Message.Body%2A>屬性會序列化在傳送訊息時，使用<xref:System.Messaging.Message.Formatter%2A>您指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-114">The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify.</span></span> <span data-ttu-id="fbd27-115">序列化的內容位於<xref:System.Messaging.Message.BodyStream%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-115">The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property.</span></span> <span data-ttu-id="fbd27-116">您也可以設定<xref:System.Messaging.Message.BodyStream%2A>屬性直接，例如，若要傳送檔案，做為資料內容的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-116">You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message.</span></span> <span data-ttu-id="fbd27-117">您可以變更<xref:System.Messaging.Message.Body%2A>或是<xref:System.Messaging.Message.Formatter%2A>當您呼叫隨時傳送訊息，並將資料之前的屬性也會適當地序列化<xref:System.Messaging.MessageQueue.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-117">You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>.</span></span>  
  
 <span data-ttu-id="fbd27-118">所定義的屬性<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType>屬性只適用於不是類型的訊息<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-118">The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> property apply only to messages that are not of type <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="fbd27-119">如果您指定<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性<xref:System.Messaging.MessageQueue>，則相同的已命名屬性中的<xref:System.Messaging.Message>傳送至該佇列的原因来忽略這些預設屬性的執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd27-119">If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored.</span></span>  
  
 <span data-ttu-id="fbd27-120">如需執行個體的初始屬性值的清單<xref:System.Messaging.Message>，請參閱<xref:System.Messaging.Message.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="fbd27-120">For a list of initial property values for an instance of <xref:System.Messaging.Message>, see the <xref:System.Messaging.Message.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-121">下列程式碼範例示範設定格式化的訊息內文使用<xref:System.Messaging.BinaryMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-121">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="fbd27-122">下列程式碼範例示範設定格式化的訊息內文使用<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-122">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
    <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="M:System.Messaging.MessageQueue.Peek" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fbd27-123">初始化 <see cref="T:System.Messaging.Message" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd27-123">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd27-124">初始化包含空主體之 <see cref="T:System.Messaging.Message" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd27-124">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-125">若要建立的新執行個體使用此多載<xref:System.Messaging.Message>具有空白主體的類別。</span><span class="sxs-lookup"><span data-stu-id="fbd27-125">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that has an empty body.</span></span>  
  
 <span data-ttu-id="fbd27-126">指定<xref:System.Messaging.Message.Body%2A>屬性或<xref:System.Messaging.Message.BodyStream%2A>屬性，才能傳送<xref:System.Messaging.Message>物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-126">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="fbd27-127"><xref:System.Messaging.Message.Body%2A>屬性可以是任何可序列化，例如文字字串、 結構物件、 類別執行個體或內嵌的物件的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-127">The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span>  
  
 <span data-ttu-id="fbd27-128">除非您撰寫的訊息內容直接<xref:System.Messaging.Message.BodyStream%2A>屬性，設定<xref:System.Messaging.Message.Formatter%2A>再傳送訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-128">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="fbd27-129">使用序列化內文<xref:System.Messaging.Message.Formatter%2A>屬性的值，當時<xref:System.Messaging.MessageQueue.Send%2A>上呼叫方法<xref:System.Messaging.MessageQueue>執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd27-129">The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance.</span></span>  
  
 <span data-ttu-id="fbd27-130"><xref:System.Messaging.XmlMessageFormatter>鬆散偶合的因此不需要有相同的物件時使用此格式輸入上的寄件者和接收者。</span><span class="sxs-lookup"><span data-stu-id="fbd27-130">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="fbd27-131"><xref:System.Messaging.ActiveXMessageFormatter>和<xref:System.Messaging.BinaryMessageFormatter>將資料序列化成二進位表示法。</span><span class="sxs-lookup"><span data-stu-id="fbd27-131">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="fbd27-132"><xref:System.Messaging.ActiveXMessageFormatter>傳送或接收的 COM 元件時使用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-132">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="fbd27-133">下表顯示的執行個體的初始屬性值<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-133">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="fbd27-134">屬性</span><span class="sxs-lookup"><span data-stu-id="fbd27-134">Property</span></span>|<span data-ttu-id="fbd27-135">Initial value</span><span class="sxs-lookup"><span data-stu-id="fbd27-135">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="fbd27-136">0</span><span class="sxs-lookup"><span data-stu-id="fbd27-136">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="fbd27-137">Microsoft Base Cryptographic Provider 1.0 版</span><span class="sxs-lookup"><span data-stu-id="fbd27-137">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|`null`|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="fbd27-138">0</span><span class="sxs-lookup"><span data-stu-id="fbd27-138">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="fbd27-139">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="fbd27-139">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="fbd27-140">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-140">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="fbd27-141">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-141">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="fbd27-142">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-142">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="fbd27-143">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="fbd27-143">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="fbd27-144">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-144">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-145">下列程式碼範例會將兩個不同優先權的訊息傳送至佇列，接著擷取它們。</span><span class="sxs-lookup"><span data-stu-id="fbd27-145">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (object body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message(System::Object ^ body);" />
      <MemberSignature Language="F#" Value="new System.Messaging.Message : obj -&gt; System.Messaging.Message" Usage="new System.Messaging.Message body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="fbd27-146">要序列化到訊息主體中的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-146">The object to be serialized into the body of the message.</span></span></param>
        <summary><span data-ttu-id="fbd27-147">使用 <see cref="T:System.Messaging.Message" /> 將指定物件序列化到訊息主體中，以初始化 <see cref="T:System.Messaging.XmlMessageFormatter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd27-147">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-148">若要建立的新執行個體使用此多載<xref:System.Messaging.Message>類別，其中包含<xref:System.Messaging.Message.Body%2A>所指定`body`參數。</span><span class="sxs-lookup"><span data-stu-id="fbd27-148">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter.</span></span> <span data-ttu-id="fbd27-149">`body`參數可以是任何可序列化，例如文字字串、 結構物件、 類別執行個體或內嵌的物件的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-149">The `body` parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span> <span data-ttu-id="fbd27-150">使用序列化內文<xref:System.Messaging.XmlMessageFormatter>除非您變更<xref:System.Messaging.Message.Formatter%2A>屬性，才能<xref:System.Messaging.Message>傳送。</span><span class="sxs-lookup"><span data-stu-id="fbd27-150">The body is serialized using the <xref:System.Messaging.XmlMessageFormatter> unless you change the <xref:System.Messaging.Message.Formatter%2A> property before the <xref:System.Messaging.Message> is sent.</span></span> <span data-ttu-id="fbd27-151">如果您變更<xref:System.Messaging.Message.Body%2A>或是<xref:System.Messaging.Message.Formatter%2A>屬性，在任何時間，然後再呼叫<xref:System.Messaging.MessageQueue.Send%2A>，訊息會根據新的屬性值序列化。</span><span class="sxs-lookup"><span data-stu-id="fbd27-151">If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.</span></span>  
  
 <span data-ttu-id="fbd27-152"><xref:System.Messaging.XmlMessageFormatter>鬆散偶合的因此不需要有相同的物件時使用此格式輸入上的寄件者和接收者。</span><span class="sxs-lookup"><span data-stu-id="fbd27-152">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="fbd27-153"><xref:System.Messaging.ActiveXMessageFormatter>和<xref:System.Messaging.BinaryMessageFormatter>將資料序列化成二進位表示法。</span><span class="sxs-lookup"><span data-stu-id="fbd27-153">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="fbd27-154"><xref:System.Messaging.ActiveXMessageFormatter>傳送或接收的 COM 元件時使用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-154">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="fbd27-155">下表顯示的執行個體的初始屬性值<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-155">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="fbd27-156">屬性</span><span class="sxs-lookup"><span data-stu-id="fbd27-156">Property</span></span>|<span data-ttu-id="fbd27-157">Initial value</span><span class="sxs-lookup"><span data-stu-id="fbd27-157">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="fbd27-158">0</span><span class="sxs-lookup"><span data-stu-id="fbd27-158">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="fbd27-159">Microsoft Base Cryptographic Provider 1.0 版</span><span class="sxs-lookup"><span data-stu-id="fbd27-159">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|<span data-ttu-id="fbd27-160">`body` 參數。</span><span class="sxs-lookup"><span data-stu-id="fbd27-160">The `body` parameter.</span></span>|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="fbd27-161">0</span><span class="sxs-lookup"><span data-stu-id="fbd27-161">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="fbd27-162">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="fbd27-162">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="fbd27-163">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-163">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="fbd27-164">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-164">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="fbd27-165">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-165">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="fbd27-166">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="fbd27-166">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="fbd27-167">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-167">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-168">下列程式碼範例會建立新的佇列，傳送包含訂單，然後再擷取它的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-168">The following code example creates a new queue, sends a message that contains an order to it, and then retrieves it.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (object body, System.Messaging.IMessageFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object body, class System.Messaging.IMessageFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As Object, formatter As IMessageFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message(System::Object ^ body, System::Messaging::IMessageFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="new System.Messaging.Message : obj * System.Messaging.IMessageFormatter -&gt; System.Messaging.Message" Usage="new System.Messaging.Message (body, formatter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
        <Parameter Name="formatter" Type="System.Messaging.IMessageFormatter" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="fbd27-169">要序列化到訊息主體中的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-169">The object to be serialized into the body of the message.</span></span></param>
        <param name="formatter"><span data-ttu-id="fbd27-170"><see cref="T:System.Messaging.IMessageFormatter" />，指定用於序列化訊息主體的格式子。</span><span class="sxs-lookup"><span data-stu-id="fbd27-170">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body.</span></span></param>
        <summary><span data-ttu-id="fbd27-171">使用指定的格式子將指定物件序列化至訊息主體，初始化 <see cref="T:System.Messaging.Message" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd27-171">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-172">若要建立的新執行個體使用此多載<xref:System.Messaging.Message>類別，其中包含<xref:System.Messaging.Message.Body%2A>所指定`body`參數，以及使用任何有效的格式器序列化內文。</span><span class="sxs-lookup"><span data-stu-id="fbd27-172">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter and that uses any valid formatter to serialize the body.</span></span> <span data-ttu-id="fbd27-173">`body`參數是任何可序列化，例如文字字串、 結構物件、 類別執行個體或內嵌的物件的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-173">The `body` parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span> <span data-ttu-id="fbd27-174">如果您變更<xref:System.Messaging.Message.Body%2A>或是<xref:System.Messaging.Message.Formatter%2A>屬性，在任何時間，然後再呼叫<xref:System.Messaging.MessageQueue.Send%2A>，訊息會根據新的屬性值序列化。</span><span class="sxs-lookup"><span data-stu-id="fbd27-174">If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.</span></span>  
  
 <span data-ttu-id="fbd27-175"><xref:System.Messaging.XmlMessageFormatter>鬆散偶合的因此不需要有相同的物件時使用此格式輸入上的寄件者和接收者。</span><span class="sxs-lookup"><span data-stu-id="fbd27-175">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="fbd27-176"><xref:System.Messaging.ActiveXMessageFormatter>和<xref:System.Messaging.BinaryMessageFormatter>將資料序列化成二進位表示法。</span><span class="sxs-lookup"><span data-stu-id="fbd27-176">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="fbd27-177"><xref:System.Messaging.ActiveXMessageFormatter>傳送或接收的 COM 元件時使用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-177">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="fbd27-178">下表顯示的執行個體的初始屬性值<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-178">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="fbd27-179">屬性</span><span class="sxs-lookup"><span data-stu-id="fbd27-179">Property</span></span>|<span data-ttu-id="fbd27-180">Initial value</span><span class="sxs-lookup"><span data-stu-id="fbd27-180">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="fbd27-181">0</span><span class="sxs-lookup"><span data-stu-id="fbd27-181">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="fbd27-182">Microsoft Base Cryptographic Provider 1.0 版</span><span class="sxs-lookup"><span data-stu-id="fbd27-182">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|<span data-ttu-id="fbd27-183">`body` 參數。</span><span class="sxs-lookup"><span data-stu-id="fbd27-183">The `body` parameter.</span></span>|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="fbd27-184">0</span><span class="sxs-lookup"><span data-stu-id="fbd27-184">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="fbd27-185">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="fbd27-185">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="fbd27-186">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-186">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="fbd27-187">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-187">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="fbd27-188">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-188">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|<span data-ttu-id="fbd27-189">`formatter` 參數。</span><span class="sxs-lookup"><span data-stu-id="fbd27-189">The `formatter` parameter.</span></span>|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="fbd27-190">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="fbd27-190">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="fbd27-191">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="fbd27-191">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : System.Messaging.AcknowledgeTypes with get, set" Usage="System.Messaging.Message.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-192">取得或設定要傳回至負責傳送之應用程式的認可訊息類型。</span><span class="sxs-lookup"><span data-stu-id="fbd27-192">Gets or sets the type of acknowledgment message to be returned to the sending application.</span></span></summary>
        <value><span data-ttu-id="fbd27-193">其中一個 <see cref="T:System.Messaging.AcknowledgeTypes" /> 值，表示系統在管理佇列中張貼的認可訊息類型，以及將認可傳回負責傳送之應用程式的條件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-193">One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application.</span></span> <span data-ttu-id="fbd27-194">預設為 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-194">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-195"><xref:System.Messaging.Message.AcknowledgeType%2A>屬性會指定傳送應用程式所要求的通知訊息的類型。</span><span class="sxs-lookup"><span data-stu-id="fbd27-195">The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application.</span></span> <span data-ttu-id="fbd27-196">設定<xref:System.Messaging.Message.AcknowledgeType%2A>傳送的訊息，例如要求的特定項目-通知、 到達其目的地佇列的訊息，已擷取訊息或防止訊息到達，或從擷取的逾時之前的屬性目的地佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-196">Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences - for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.</span></span>  
  
 <span data-ttu-id="fbd27-197">訊息佇列將通知傳回傳送通知訊息至<xref:System.Messaging.Message.AdministrationQueue%2A>原始訊息所指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-197">Message Queuing returns notification by sending acknowledgment messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> property specified by the original message.</span></span> <span data-ttu-id="fbd27-198">通知訊息的<xref:System.Messaging.Message.Acknowledgment%2A>屬性會指出通知它所代表的型別。</span><span class="sxs-lookup"><span data-stu-id="fbd27-198">An acknowledgment message's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the type of acknowledgment that it represents.</span></span> <span data-ttu-id="fbd27-199">例如，如果已傳送通知訊息，因為郵件無法送達目的地之前<xref:System.Messaging.Message.TimeToReachQueue%2A>間隔到期時，<xref:System.Messaging.Message.Acknowledgment%2A>的通知訊息的屬性會包含值`ReachQueueTimeout`。</span><span class="sxs-lookup"><span data-stu-id="fbd27-199">For example, if an acknowledgment message was sent because a message did not reach the destination before the <xref:System.Messaging.Message.TimeToReachQueue%2A> interval expired, the <xref:System.Messaging.Message.Acknowledgment%2A> property of the acknowledgment message would contain the value `ReachQueueTimeout`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-200">下列程式碼範例會傳送，並收到包含訂單與佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-200">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="fbd27-201">它特別要求正面確認通知，當原始訊息抵達或已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-201">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-202">篩選訊息以忽略 <see cref="P:System.Messaging.Message.AcknowledgeType" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-202">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.Acknowledgment" />
      </Docs>
    </Member>
    <Member MemberName="Acknowledgment">
      <MemberSignature Language="C#" Value="public System.Messaging.Acknowledgment Acknowledgment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.Acknowledgment Acknowledgment" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Acknowledgment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Acknowledgment As Acknowledgment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Acknowledgment Acknowledgment { System::Messaging::Acknowledgment get(); };" />
      <MemberSignature Language="F#" Value="member this.Acknowledgment : System.Messaging.Acknowledgment" Usage="System.Messaging.Message.Acknowledgment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgement")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.Acknowledgment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-203">取得這個訊息所表示的認可分類。</span><span class="sxs-lookup"><span data-stu-id="fbd27-203">Gets the classification of acknowledgment that this message represents.</span></span></summary>
        <value><span data-ttu-id="fbd27-204">其中一個 <see cref="T:System.Messaging.Acknowledgment" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="fbd27-204">One of the <see cref="T:System.Messaging.Acknowledgment" /> enumeration values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-205">當您收到來自管理佇列的訊息時，閱讀<xref:System.Messaging.Message.Acknowledgment%2A>屬性，確認原始訊息的狀態。</span><span class="sxs-lookup"><span data-stu-id="fbd27-205">When you receive a message from an administration queue, read the <xref:System.Messaging.Message.Acknowledgment%2A> property to verify the status of the original message.</span></span>  
  
 <span data-ttu-id="fbd27-206">當訊息傳送至其目的地佇列時，訊息佇列可以要求張貼通知訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-206">When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message.</span></span> <span data-ttu-id="fbd27-207">比方說，這類訊息可能表示訊息到達，並且擷取在指定的逾時，還是有可能表示問題出在哪裡發生傳遞失敗。</span><span class="sxs-lookup"><span data-stu-id="fbd27-207">Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure.</span></span> <span data-ttu-id="fbd27-208">目的地佇列傳回通知訊息，並將它們公佈到原始訊息中指定的管理佇列<xref:System.Messaging.Message.AdministrationQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-208">The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property.</span></span> <span data-ttu-id="fbd27-209"><xref:System.Messaging.Message.Id%2A>的通知訊息的屬性會識別的通知訊息，而不是在原始的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-209">The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message.</span></span> <span data-ttu-id="fbd27-210">您可以在通知中找到的原始訊息識別碼<xref:System.Messaging.Message>執行個體的<xref:System.Messaging.Message.CorrelationId%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-210">You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property.</span></span>  
  
 <span data-ttu-id="fbd27-211">如果這個<xref:System.Messaging.Message>執行個體表示通知訊息，<xref:System.Messaging.Message.Acknowledgment%2A>屬性會指定類型的通知。</span><span class="sxs-lookup"><span data-stu-id="fbd27-211">If this <xref:System.Messaging.Message> instance represents an acknowledgment message, the <xref:System.Messaging.Message.Acknowledgment%2A> property specifies the type of acknowledgment.</span></span> <span data-ttu-id="fbd27-212">否則，請<xref:System.Messaging.Message.Acknowledgment%2A>屬性包含值`Normal`。</span><span class="sxs-lookup"><span data-stu-id="fbd27-212">Otherwise, the <xref:System.Messaging.Message.Acknowledgment%2A> property contains the value `Normal`.</span></span>  
  
 <span data-ttu-id="fbd27-213">使用<xref:System.Messaging.Message.AcknowledgeType%2A>屬性的原始訊息至指定的情況下會傳回通知。</span><span class="sxs-lookup"><span data-stu-id="fbd27-213">Use the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the original message to specify the circumstances under which acknowledgments will be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-214">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-214">The message has not been sent.</span></span> <span data-ttu-id="fbd27-215">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-215">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-216">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-216">-or-</span></span> 
<span data-ttu-id="fbd27-217">篩選訊息佇列以忽略 <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-217">The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekById(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveById(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-218">取得或設定接收訊息佇列產生之認可訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-218">Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</span></span></summary>
        <value><span data-ttu-id="fbd27-219">指定用於系統產生認可訊息之管理佇列的 <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-219">The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages.</span></span> <span data-ttu-id="fbd27-220">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-220">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-221">中指定的佇列<xref:System.Messaging.Message.AdministrationQueue%2A>屬性可以是任何非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-221">The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue.</span></span> <span data-ttu-id="fbd27-222">傳送至管理佇列的認可訊息可以指示原始訊息是否已抵達其目的端佇列，以及是否已從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="fbd27-222">The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.</span></span>  
  
 <span data-ttu-id="fbd27-223">當<xref:System.Messaging.Message.AcknowledgeType%2A>屬性中有任何值以外的其他`None`，傳送應用程式必須指定要做為管理佇列的佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-223">When the <xref:System.Messaging.Message.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to use as the administration queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-224">下列程式碼範例會傳送，並收到包含訂單與佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-224">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="fbd27-225">它特別要求正面確認通知，當原始訊息抵達或已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-225">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-226">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.AdministrationQueue" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-226">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.Acknowledgment" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : int with get, set" Usage="System.Messaging.Message.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-227">取得或設定額外的應用程式特定資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd27-227">Gets or sets additional, application-specific information.</span></span></summary>
        <value><span data-ttu-id="fbd27-228">應用程式的特定資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd27-228">Information that is specific to the application.</span></span> <span data-ttu-id="fbd27-229">預設值是零。</span><span class="sxs-lookup"><span data-stu-id="fbd27-229">The default is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-230"><xref:System.Messaging.Message.AppSpecific%2A>屬性包含應用程式特有的資訊可供您組織不同類型的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-230">The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages.</span></span> <span data-ttu-id="fbd27-231">例如，您可以使用應用程式特有的索引。</span><span class="sxs-lookup"><span data-stu-id="fbd27-231">For example, you can use application-specific indexes.</span></span> <span data-ttu-id="fbd27-232">要解譯的應用程式負責<xref:System.Messaging.Message.AppSpecific%2A>屬性資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd27-232">It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information.</span></span>  
  
 <span data-ttu-id="fbd27-233">可能的話，您應該納入訊息資料訊息的本文而不是<xref:System.Messaging.Message.AppSpecific%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-233">Whenever possible, you should include message data in the body of the message rather than the <xref:System.Messaging.Message.AppSpecific%2A> property.</span></span>  
  
 <span data-ttu-id="fbd27-234">當使用外部佇列，使用<xref:System.Messaging.Message.Extension%2A>屬性來指定在訊息佇列的訊息屬性不存在。</span><span class="sxs-lookup"><span data-stu-id="fbd27-234">When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.</span></span> <span data-ttu-id="fbd27-235">如同<xref:System.Messaging.Message.AppSpecific%2A>屬性，它是要了解的內容的應用程式責任<xref:System.Messaging.Message.Extension%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-235">As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-236">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.AppSpecific" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-236">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.Body" />
      </Docs>
    </Member>
    <Member MemberName="ArrivedTime">
      <MemberSignature Language="C#" Value="public DateTime ArrivedTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ArrivedTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ArrivedTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArrivedTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ArrivedTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ArrivedTime : DateTime" Usage="System.Messaging.Message.ArrivedTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgArrivedTime")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-237">取得訊息到達目的端佇列的時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-237">Gets the time that the message arrived in the destination queue.</span></span></summary>
        <value><span data-ttu-id="fbd27-238"><see cref="T:System.DateTime" />，表示訊息到達目的端佇列的時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-238">A <see cref="T:System.DateTime" /> that represents the message's arrival time in the destination queue.</span></span> <span data-ttu-id="fbd27-239">時間會被從 GMT 調整為目的端佇列所在處的電腦上的本地時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-239">The time is adjusted from GMT to the local time of the computer on which the destination queue resides.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-240">訊息的<xref:System.Messaging.Message.TimeToBeReceived%2A>屬性會指出速度必須從目的端佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-240">The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue.</span></span> <span data-ttu-id="fbd27-241"><xref:System.Messaging.Message.TimeToBeReceived%2A>屬性計時器就會在傳送訊息時，只有在訊息到達佇列時，不會啟動。</span><span class="sxs-lookup"><span data-stu-id="fbd27-241">The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-242">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.ArrivedTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-242">The following code example displays the value of a message's <xref:System.Messaging.Message.ArrivedTime%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-243">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-243">The message has not been sent.</span></span> <span data-ttu-id="fbd27-244">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-244">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-245">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-245">-or-</span></span> 
<span data-ttu-id="fbd27-246">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.ArrivedTime" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-246">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AttachSenderId : bool with get, set" Usage="System.Messaging.Message.AttachSenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-247">取得或設定值，指出是否應該將傳送者識別碼附加至訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-247">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-248">如果 <see cref="P:System.Messaging.Message.SenderId" /> 應該附加在訊息上，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-248"><see langword="true" /> if the <see cref="P:System.Messaging.Message.SenderId" /> should be attached to the message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbd27-249">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-249">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-250"><xref:System.Messaging.Message.SenderId%2A>屬性是位元組陣列，表示傳送的使用者識別碼。</span><span class="sxs-lookup"><span data-stu-id="fbd27-250">The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user.</span></span> <span data-ttu-id="fbd27-251">寄件者識別碼由訊息佇列設定，並依接收的佇列管理員可用來驗證寄件者是否有佇列的存取權限。</span><span class="sxs-lookup"><span data-stu-id="fbd27-251">The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.</span></span>  
  
 <span data-ttu-id="fbd27-252">沒有寄件者識別碼會指出傳送應用程式，訊息佇列應該不驗證訊息的寄件者，也驗證寄件者的存取權限到接收佇列中。</span><span class="sxs-lookup"><span data-stu-id="fbd27-252">The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue.</span></span> <span data-ttu-id="fbd27-253"><xref:System.Messaging.Message.SenderId%2A>是值得信任，只有當訊息已驗證，當它到達目的地佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-253">The <xref:System.Messaging.Message.SenderId%2A> is trustworthy only if the message was authenticated when it reached the destination queue.</span></span> <span data-ttu-id="fbd27-254">如果佇列接受已驗證的訊息並到達目的地佇列時，會拒絕訊息<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>或<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="fbd27-254">The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or the <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> property is `false`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fbd27-255">如果拒絕訊息時，它會傳送至無法投遞的信件佇列 (如果<xref:System.Messaging.Message.UseDeadLetterQueue%2A>是`true`)，或忽略它。</span><span class="sxs-lookup"><span data-stu-id="fbd27-255">If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored.</span></span> <span data-ttu-id="fbd27-256">當訊息無法抵達佇列時，您可以要求通知。</span><span class="sxs-lookup"><span data-stu-id="fbd27-256">You can request acknowledgments when a message fails to reach a queue.</span></span> <span data-ttu-id="fbd27-257">否則，當<xref:System.Messaging.Message.UseDeadLetterQueue%2A>是`false`訊息可能會遺失，而不發出警告。</span><span class="sxs-lookup"><span data-stu-id="fbd27-257">Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-258">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.AttachSenderId%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-258">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.AttachSenderId%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-259">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.AttachSenderId" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-259">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.SenderId" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.SenderCertificate" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool" Usage="System.Messaging.Message.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-260">取得指出訊息是否已驗證的值。</span><span class="sxs-lookup"><span data-stu-id="fbd27-260">Gets a value that indicates whether the message was authenticated.</span></span></summary>
        <value><span data-ttu-id="fbd27-261">如果訊息進入佇列時需要驗證則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-261"><see langword="true" /> if authentication was requested for the message when it entered the queue; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-262"><xref:System.Messaging.Message.Authenticated%2A>屬性僅供應用程式在互動訊息正在嘗試判斷是否已要求驗證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-262">The <xref:System.Messaging.Message.Authenticated%2A> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested.</span></span> <span data-ttu-id="fbd27-263">如果訊息在佇列中，訊息已驗證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-263">If the message is in the queue, the message was authenticated.</span></span> <span data-ttu-id="fbd27-264">相反地，如果<xref:System.Messaging.Message.Authenticated%2A>屬性是`true`，接收佇列管理員會驗證訊息，當它收到該訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-264">Conversely, if the <xref:System.Messaging.Message.Authenticated%2A> property is `true`, the receiving Queue Manager authenticated the message when it received that message.</span></span>  
  
 <span data-ttu-id="fbd27-265">您無法判斷是否訊息無法通過驗證藉由查看其屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-265">You cannot determine if a message failed authentication by looking at its properties.</span></span> <span data-ttu-id="fbd27-266">訊息佇列會捨棄驗證失敗之前傳送至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-266">Message Queuing discards messages that fail authentication before they are delivered to the queue.</span></span> <span data-ttu-id="fbd27-267">不過，您可以要求，如果傳遞失敗可防止訊息到達佇列中之傳送通知訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-267">However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-268">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.Authenticated%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-268">The following code example displays the value of a message's <xref:System.Messaging.Message.Authenticated%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-269">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-269">The message has not been sent.</span></span> <span data-ttu-id="fbd27-270">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-270">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-271">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-271">-or-</span></span> 
<span data-ttu-id="fbd27-272">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Authenticated" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-272">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationProviderName">
      <MemberSignature Language="C#" Value="public string AuthenticationProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AuthenticationProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationProviderName : string with get, set" Usage="System.Messaging.Message.AuthenticationProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticationProviderName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-273">取得或設定用來產生訊息之數位簽章的密碼編譯提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="fbd27-273">Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-274">用來產生訊息的數位簽章的密碼編譯提供者的名稱。</span><span class="sxs-lookup"><span data-stu-id="fbd27-274">The name of the cryptographic provider used to generate the digital signature of the message.</span></span> <span data-ttu-id="fbd27-275">預設值為 Microsoft Base Cryptographic Provider 1.0 版。</span><span class="sxs-lookup"><span data-stu-id="fbd27-275">The default is Microsoft Base Cryptographic Provider version 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-276">您通常會使用<xref:System.Messaging.Message.AuthenticationProviderName%2A>使用外部佇列時。</span><span class="sxs-lookup"><span data-stu-id="fbd27-276">You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues.</span></span> <span data-ttu-id="fbd27-277">訊息佇列要求的驗證提供者名稱和密碼編譯提供者 （驗證提供者），來驗證傳送至外部佇列的訊息和訊息傳遞至訊息的數位簽章的驗證提供者類型從外部佇列的佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-277">Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</span></span>  
  
 <span data-ttu-id="fbd27-278">傳送郵件時，一律設<xref:System.Messaging.Message.AuthenticationProviderName%2A>和<xref:System.Messaging.Message.ConnectorType%2A>屬性放在一起。</span><span class="sxs-lookup"><span data-stu-id="fbd27-278">When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together.</span></span> <span data-ttu-id="fbd27-279">當傳送訊息時，訊息佇列會忽略驗證提供者名稱如果也沒有設定連接器類型。</span><span class="sxs-lookup"><span data-stu-id="fbd27-279">When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.</span></span>  
  
 <span data-ttu-id="fbd27-280"><xref:System.Messaging.Message.AuthenticationProviderName%2A>屬性不可以是`null`，但它可以是空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="fbd27-280">The <xref:System.Messaging.Message.AuthenticationProviderName%2A> property cannot be `null`, but it can be an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-281">無法設定 <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-281">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.</span></span>  
  
<span data-ttu-id="fbd27-282">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-282">-or-</span></span> 
<span data-ttu-id="fbd27-283">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-283">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd27-284"><see cref="P:System.Messaging.Message.AuthenticationProviderName" /> 被設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-284">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationProviderType">
      <MemberSignature Language="C#" Value="public System.Messaging.CryptographicProviderType AuthenticationProviderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.CryptographicProviderType AuthenticationProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AuthenticationProviderType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationProviderType As CryptographicProviderType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::CryptographicProviderType AuthenticationProviderType { System::Messaging::CryptographicProviderType get(); void set(System::Messaging::CryptographicProviderType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationProviderType : System.Messaging.CryptographicProviderType with get, set" Usage="System.Messaging.Message.AuthenticationProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticationProviderType")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.CryptographicProviderType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-285">取得或設定用來產生訊息之數位簽章的密碼編譯提供者類型。</span><span class="sxs-lookup"><span data-stu-id="fbd27-285">Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-286">其中一個 <see cref="T:System.Messaging.CryptographicProviderType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="fbd27-286">One of the <see cref="T:System.Messaging.CryptographicProviderType" /> values.</span></span> <span data-ttu-id="fbd27-287">預設為 <see langword="RSA_FULL" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-287">The default is <see langword="RSA_FULL" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-288">您通常會使用<xref:System.Messaging.Message.AuthenticationProviderType%2A>時使用指定的密碼編譯服務提供者是與訊息相關聯的外部索引佇列的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-288">You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message.</span></span> <span data-ttu-id="fbd27-289">訊息佇列要求的驗證提供者名稱和密碼編譯提供者 （驗證提供者），來驗證傳送至外部佇列的訊息和訊息傳遞至訊息的數位簽章的驗證提供者類型從外部佇列的佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-289">Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</span></span>  
  
 <span data-ttu-id="fbd27-290">只有`RsaFull`旨在搭配訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-290">Only `RsaFull` is intended to be used with messaging.</span></span>  
  
 <span data-ttu-id="fbd27-291">傳送郵件時，一律設<xref:System.Messaging.Message.AuthenticationProviderType%2A>和<xref:System.Messaging.Message.ConnectorType%2A>屬性放在一起。</span><span class="sxs-lookup"><span data-stu-id="fbd27-291">When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together.</span></span> <span data-ttu-id="fbd27-292">當傳送訊息時，訊息佇列會忽略驗證提供者類型如果也沒有設定連接器類型。</span><span class="sxs-lookup"><span data-stu-id="fbd27-292">When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-293">無法設定 <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-293">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.</span></span>  
  
<span data-ttu-id="fbd27-294">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-294">-or-</span></span> 
<span data-ttu-id="fbd27-295">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-295">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="T:System.Messaging.CryptographicProviderType" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public object Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Body" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Body { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : obj with get, set" Usage="System.Messaging.Message.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-296">取得或設定訊息的內容。</span><span class="sxs-lookup"><span data-stu-id="fbd27-296">Gets or sets the content of the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-297">指定訊息內容的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-297">An object that specifies the message contents.</span></span> <span data-ttu-id="fbd27-298">物件可以是字串、日期、貨幣、數字、位元組陣列或任何 Managed 物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-298">The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-299">訊息的<xref:System.Messaging.Message.Body%2A>屬性通常會包含與訊息相關聯的資料。</span><span class="sxs-lookup"><span data-stu-id="fbd27-299">The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message.</span></span> <span data-ttu-id="fbd27-300">雖然您也可以傳送應用程式專屬資料<xref:System.Messaging.Message.AppSpecific%2A>並<xref:System.Messaging.Message.Extension%2A>屬性，您應該包含在訊息資料<xref:System.Messaging.Message.Body%2A>盡可能的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-300">Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible.</span></span> <span data-ttu-id="fbd27-301">只有<xref:System.Messaging.Message.Body%2A>要序列化或加密屬性內容。</span><span class="sxs-lookup"><span data-stu-id="fbd27-301">Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted.</span></span>  
  
 <span data-ttu-id="fbd27-302"><xref:System.Messaging.Message.Body%2A>屬性可包含任何物件，其大小不超過 4 MB。</span><span class="sxs-lookup"><span data-stu-id="fbd27-302">The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB.</span></span> <span data-ttu-id="fbd27-303">如果您使用<xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType>的類型不是任何物件傳送<xref:System.Messaging.Message>要<xref:System.Messaging.MessageQueue>，該物件將會位於<xref:System.Messaging.Message.Body%2A>屬性<xref:System.Messaging.Message>所傳回的執行個體<xref:System.Messaging.MessageQueue.Peek%2A>或<xref:System.Messaging.MessageQueue.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-303">If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>.</span></span>  
  
 <span data-ttu-id="fbd27-304">中的字串引數`MessageQueue.Send("hello.")`舉例說明這類泛型的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-304">The string argument in `MessageQueue.Send("hello.")` is an example of such a generic object.</span></span>  
  
 <span data-ttu-id="fbd27-305"><xref:System.Messaging.Message.BodyType%2A>屬性會指出所儲存訊息主體中的資訊類型。</span><span class="sxs-lookup"><span data-stu-id="fbd27-305">The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body.</span></span> <span data-ttu-id="fbd27-306">訊息佇列會使用這項資訊來識別的型別<xref:System.Messaging.Message.Body%2A>屬性內容。</span><span class="sxs-lookup"><span data-stu-id="fbd27-306">Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents.</span></span>  
  
 <span data-ttu-id="fbd27-307">指定<xref:System.Messaging.Message.Body%2A>屬性或<xref:System.Messaging.Message.BodyStream%2A>屬性，才能傳送<xref:System.Messaging.Message>物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-307">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="fbd27-308"><xref:System.Messaging.Message.Body%2A>屬性可以是任何可序列化的物件，例如文字字串的物件、 結構物件、 類別執行個體或內嵌的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-308">The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.</span></span>  
  
 <span data-ttu-id="fbd27-309">除非您撰寫的訊息內容直接<xref:System.Messaging.Message.BodyStream%2A>屬性，設定<xref:System.Messaging.Message.Formatter%2A>再傳送訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-309">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="fbd27-310">當<xref:System.Messaging.MessageQueue.Send%2A>上呼叫方法<xref:System.Messaging.MessageQueue>使用中所包含的格式器序列化執行個體，主體<xref:System.Messaging.Message.Formatter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-310">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="fbd27-311">如果您沒有指定值，以傳送訊息<xref:System.Messaging.Message.Formatter%2A>屬性，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-311">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fbd27-312">嘗試設定的訊息本文<xref:System.Decimal.MaxValue>會導致<xref:System.OverflowException>當`Send`方法<xref:System.Messaging.MessageQueue>類別稱為和<xref:System.Messaging.ActiveXMessageFormatter>用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-312">Attempting to set the body of a message to <xref:System.Decimal.MaxValue> will cause a <xref:System.OverflowException> when the `Send` method of the <xref:System.Messaging.MessageQueue> class is called and the <xref:System.Messaging.ActiveXMessageFormatter> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-313">下列程式碼範例會將兩個不同優先權的訊息傳送至佇列，接著擷取它們。</span><span class="sxs-lookup"><span data-stu-id="fbd27-313">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-314"><see cref="P:System.Messaging.Message.Formatter" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-314">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fbd27-315">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-315">-or-</span></span> 
<span data-ttu-id="fbd27-316">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Body" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-316">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span></span></exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.BodyStream" />
        <altmember cref="P:System.Messaging.Message.BodyType" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="BodyStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BodyStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BodyStream" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.BodyStream" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BodyStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyStream : System.IO.Stream with get, set" Usage="System.Messaging.Message.BodyStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgBodyStream")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-317">取得或設定訊息主體中的資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd27-317">Gets or sets the information in the body of the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-318"><see cref="T:System.IO.Stream" />，含有包含於訊息 <see cref="P:System.Messaging.Message.Body" /> 中的序列化資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd27-318">A <see cref="T:System.IO.Stream" /> that contains the serialized information included in the <see cref="P:System.Messaging.Message.Body" /> of the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-319">訊息的本文可以包含任何類型的資訊-例如，字串、 日期、 貨幣、 數字、 位元組陣列或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-319">The body of a message can consist of any type of information - for example, a string, a date, a currency, a number, an array of bytes, or any managed object.</span></span> <span data-ttu-id="fbd27-320">這項資訊會序列化為<xref:System.IO.Stream>来傳遞至佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-320">This information is serialized into a <xref:System.IO.Stream> to be passed to the queue.</span></span>  
  
 <span data-ttu-id="fbd27-321">指定<xref:System.Messaging.Message.Body%2A>屬性或<xref:System.Messaging.Message.BodyStream%2A>屬性，才能傳送<xref:System.Messaging.Message>物件。</span><span class="sxs-lookup"><span data-stu-id="fbd27-321">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="fbd27-322">如果您設定<xref:System.Messaging.Message.Body%2A>屬性，內容會序列化為<xref:System.Messaging.Message.BodyStream%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-322">If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property.</span></span> <span data-ttu-id="fbd27-323">不過，您可以選擇撰寫<xref:System.Messaging.Message.BodyStream%2A>直接屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-323">However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly.</span></span> <span data-ttu-id="fbd27-324">這非常有用，例如，當您想要開啟檔案的連接，並傳送它的內容資料流做為訊息的主體。</span><span class="sxs-lookup"><span data-stu-id="fbd27-324">This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.</span></span>  
  
 <span data-ttu-id="fbd27-325">除非您撰寫的訊息內容直接<xref:System.Messaging.Message.BodyStream%2A>屬性，設定<xref:System.Messaging.Message.Formatter%2A>再傳送訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-325">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="fbd27-326">當<xref:System.Messaging.MessageQueue.Send%2A>上呼叫方法<xref:System.Messaging.MessageQueue>使用中所包含的格式器序列化執行個體，主體<xref:System.Messaging.Message.Formatter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-326">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="fbd27-327">如果您沒有指定值，以傳送訊息<xref:System.Messaging.Message.Formatter%2A>屬性，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-327">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="fbd27-328">如果您設定<xref:System.Messaging.Message.UseEncryption%2A>屬性，以`true`針對此訊息本文中，將會加密訊息時，只有在您設定時，不<xref:System.Messaging.Message.Body%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-328">If you set the <xref:System.Messaging.Message.UseEncryption%2A> property to `true` for the body of this message, the message will be encrypted when it is sent, not when you set the <xref:System.Messaging.Message.Body%2A> property.</span></span> <span data-ttu-id="fbd27-329">因此，<xref:System.Messaging.Message.BodyStream%2A>屬性永遠不會加密。</span><span class="sxs-lookup"><span data-stu-id="fbd27-329">Therefore, the <xref:System.Messaging.Message.BodyStream%2A> property is never encrypted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-330">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Body" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-330">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span></span></exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="P:System.Messaging.Message.BodyType" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public int BodyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BodyType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BodyType { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BodyType : int with get, set" Usage="System.Messaging.Message.BodyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgBodyType")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-331">取得或設定訊息本文包含的資料類型。</span><span class="sxs-lookup"><span data-stu-id="fbd27-331">Gets or sets the type of data that the message body contains.</span></span></summary>
        <value><span data-ttu-id="fbd27-332">訊息主體的真正型別，例如字串、日期、貨幣或數字。</span><span class="sxs-lookup"><span data-stu-id="fbd27-332">The message body's true type, such as a string, a date, a currency, or a number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-333">訊息佇列會辨識本文內容，做為物件或已序列化資料流。</span><span class="sxs-lookup"><span data-stu-id="fbd27-333">Message Queuing recognizes the body contents as an object or as a serialized stream.</span></span> <span data-ttu-id="fbd27-334"><xref:System.Messaging.Message.BodyType%2A>屬性會指出內的物件型別<xref:System.Messaging.Message.Body%2A>訊息屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-334">The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message.</span></span>  
  
 <span data-ttu-id="fbd27-335"><xref:System.Messaging.XmlMessageFormatter>執行訊息內文中的原生類型與物件之間的繫結。</span><span class="sxs-lookup"><span data-stu-id="fbd27-335">The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body.</span></span> <span data-ttu-id="fbd27-336">如果您使用<xref:System.Messaging.XmlMessageFormatter>，格式器集<xref:System.Messaging.Message.BodyType%2A>為您的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-336">If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you.</span></span>  
  
 <span data-ttu-id="fbd27-337">其他格式器可以提供繫結功能以及下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="fbd27-337">Other formatters can provide binding functionality also, as shown in the following C# code.</span></span>  
  
```  
message.Formatter = new ActiveXMessageFormatter();  
object myObject message.Body;  
if (myObject is string) {  
}  
if (myObject is int) {  
}  
if (myObject is float) {  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-338">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.BodyType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-338">The following code example displays the value of a message's <xref:System.Messaging.Message.BodyType%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-339">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Body" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-339">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span></span></exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="P:System.Messaging.Message.BodyStream" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConnectorType">
      <MemberSignature Language="C#" Value="public Guid ConnectorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ConnectorType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ConnectorType" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectorType As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ConnectorType { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectorType : Guid with get, set" Usage="System.Messaging.Message.ConnectorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgConnectorType")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-340">取得或設定值，指出通常由訊息佇列設定的一些訊息屬性已由負責傳送的應用程式設定。</span><span class="sxs-lookup"><span data-stu-id="fbd27-340">Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</span></span></summary>
        <value><span data-ttu-id="fbd27-341">應用程式定義的 <see cref="T:System.Guid" />，要與連接器應用程式或訊息加密配合使用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-341">A <see cref="T:System.Guid" /> defined by the application and used in conjunction with connector applications or message encryption.</span></span> <span data-ttu-id="fbd27-342">這個 <see cref="T:System.Guid" /> 允許接收應用程式解譯通常由 Message Queuing 設定，但是卻由傳送應用程式設定的訊息屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-342">This <see cref="T:System.Guid" /> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-343">訊息佇列需要<xref:System.Messaging.Message.ConnectorType%2A>屬性設定每當應用程式設定通常會設定由訊息佇列的訊息屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-343">Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing.</span></span> <span data-ttu-id="fbd27-344">應用程式通常使用<xref:System.Messaging.Message.ConnectorType%2A>下列兩種情況：</span><span class="sxs-lookup"><span data-stu-id="fbd27-344">An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:</span></span>  
  
-   <span data-ttu-id="fbd27-345">每當連接器應用程式將訊息傳遞。</span><span class="sxs-lookup"><span data-stu-id="fbd27-345">Whenever a connector application passes a message.</span></span> <span data-ttu-id="fbd27-346"><xref:System.Messaging.Message.ConnectorType%2A>如何解譯訊息的安全性和通知屬性會告知傳送和接收的應用程式。</span><span class="sxs-lookup"><span data-stu-id="fbd27-346">The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.</span></span>  
  
-   <span data-ttu-id="fbd27-347">每當傳送應用程式，而不是訊息佇列時，會加密訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-347">Whenever the sending application, rather than Message Queuing, encrypts a message.</span></span> <span data-ttu-id="fbd27-348"><xref:System.Messaging.Message.ConnectorType%2A>會告知訊息佇列 」 使用<xref:System.Messaging.Message.DestinationSymmetricKey%2A>來解密訊息的屬性值。</span><span class="sxs-lookup"><span data-stu-id="fbd27-348">The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message.</span></span>  
  
 <span data-ttu-id="fbd27-349">您必須設定<xref:System.Messaging.Message.ConnectorType%2A>屬性，如果您設定下列屬性 （否則佇列會忽略這些屬性在傳送訊息時）：</span><span class="sxs-lookup"><span data-stu-id="fbd27-349">You must set the <xref:System.Messaging.Message.ConnectorType%2A> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):</span></span>  
  
-   <xref:System.Messaging.Message.AuthenticationProviderName%2A>  
  
-   <xref:System.Messaging.Message.AuthenticationProviderType%2A>  
  
-   <xref:System.Messaging.Message.DestinationSymmetricKey%2A>  
  
-   <xref:System.Messaging.Message.DigitalSignature%2A>  
  
-   <xref:System.Messaging.Message.MessageType%2A>  
  
-   <xref:System.Messaging.Message.SenderId%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-350">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.ConnectorType" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-350">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.DestinationSymmetricKey" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.Message.MessageType" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public string CorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorrelationId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrelationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CorrelationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : string with get, set" Usage="System.Messaging.Message.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgCorrelationId")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-351">取得或設定認可、報告和回應訊息用來參考原始訊息的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-351">Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</span></span></summary>
        <value><span data-ttu-id="fbd27-352">原始訊息的 <see cref="P:System.Messaging.Message.Id" /> 屬性指定的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-352">The message identifier specified by the <see cref="P:System.Messaging.Message.Id" /> property of the original message.</span></span> <span data-ttu-id="fbd27-353">訊息佇列產生認可或報告訊息，以及應用程式產生回應訊息時，所使用的相互關聯識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-353">The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-354">當訊息佇列產生認可或報告訊息時，它會使用相互關聯識別項屬性，來指定原始訊息的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-354">When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message.</span></span> <span data-ttu-id="fbd27-355">因此，相互關係識別項會將報告或認可訊息連結到原始訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-355">In this manner, the correlation identifier ties the report or acknowledgment message to the original message.</span></span>  
  
 <span data-ttu-id="fbd27-356">傳送應用程式可以接著使用比對通知或報表與原始訊息<xref:System.Messaging.Message.CorrelationId%2A>屬性來識別原始訊息的<xref:System.Messaging.Message.Id%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-356">The sending application can then match the acknowledgment or report with the original message by using the <xref:System.Messaging.Message.CorrelationId%2A> property to identify the original message's <xref:System.Messaging.Message.Id%2A> property.</span></span>  
  
 <span data-ttu-id="fbd27-357">連接器應用程式也必須設定<xref:System.Messaging.Message.CorrelationId%2A>的認可和報告的訊息為原始訊息的訊息識別項的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-357">Connector applications also must set the <xref:System.Messaging.Message.CorrelationId%2A> property of the acknowledgment and report messages to the message identifier of the original message.</span></span>  
  
 <span data-ttu-id="fbd27-358">當您的應用程式會將回應訊息傳送至傳送應用程式時，您可以設定<xref:System.Messaging.Message.CorrelationId%2A>原始訊息的訊息識別項的回應訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-358">When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message.</span></span> <span data-ttu-id="fbd27-359">傳送應用程式可以接著比對您的回應訊息已傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-359">The sending application can then match your response message to the message that was sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-360">下列程式碼範例會傳送，並收到包含訂單與佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-360">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="fbd27-361">它特別要求正面確認通知，當原始訊息抵達或已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-361">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-362">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.CorrelationId" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-362">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd27-363"><see cref="P:System.Messaging.Message.CorrelationId" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-363">The <see cref="P:System.Messaging.Message.CorrelationId" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DestinationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue DestinationQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue DestinationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DestinationQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DestinationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ DestinationQueue { System::Messaging::MessageQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DestinationQueue : System.Messaging.MessageQueue" Usage="System.Messaging.Message.DestinationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgDestinationQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-364">取得訊息要使用的目的端佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-364">Gets the intended destination queue for a message.</span></span></summary>
        <value><span data-ttu-id="fbd27-365"><see cref="T:System.Messaging.MessageQueue" />，會為訊息指定要使用的目的端佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-365">A <see cref="T:System.Messaging.MessageQueue" /> that specifies the intended destination queue for the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-366"><xref:System.Messaging.Message.DestinationQueue%2A>屬性最常用於判斷訊息已到達日誌或寄不出信件佇列中的原始目的端。</span><span class="sxs-lookup"><span data-stu-id="fbd27-366">The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue.</span></span> <span data-ttu-id="fbd27-367">通常，您不需要檢查這個屬性，因為您通常會從其目的端佇列擷取訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-367">Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-368">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.DestinationQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-368">The following code example displays the value of a message's <xref:System.Messaging.Message.DestinationQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-369">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-369">The message has not been sent.</span></span> <span data-ttu-id="fbd27-370">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-370">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-371">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-371">-or-</span></span> 
<span data-ttu-id="fbd27-372">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.DestinationQueue" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-372">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="DestinationSymmetricKey">
      <MemberSignature Language="C#" Value="public byte[] DestinationSymmetricKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DestinationSymmetricKey" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DestinationSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationSymmetricKey As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DestinationSymmetricKey { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationSymmetricKey : byte[] with get, set" Usage="System.Messaging.Message.DestinationSymmetricKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgDestinationSymmetricKey")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-373">取得或設定用來為應用程式加密訊息或傳送至外部佇列的訊息加密的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="fbd27-373">Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</span></span></summary>
        <value><span data-ttu-id="fbd27-374">位元組值陣列，指定用來加密訊息的目的端對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="fbd27-374">An array of byte values that specifies the destination symmetric key used to encrypt the message.</span></span> <span data-ttu-id="fbd27-375">預設值是長度為零的陣列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-375">The default is a zero-length array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-376">兩個案例要求您使用<xref:System.Messaging.Message.DestinationSymmetricKey%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-376">Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property.</span></span> <span data-ttu-id="fbd27-377">第一個時，您的應用程式，而非訊息佇列時，會加密訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-377">The first is when your application, rather than Message Queuing, encrypts a message.</span></span> <span data-ttu-id="fbd27-378">第二個是當您將加密的訊息傳送至以外的訊息佇列的佇列系統。</span><span class="sxs-lookup"><span data-stu-id="fbd27-378">The second is when you send an encrypted message to a queuing system other than Message Queuing.</span></span>  
  
 <span data-ttu-id="fbd27-379">您設定此屬性之前，您必須加密接收佇列管理員的公用金鑰的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="fbd27-379">Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager.</span></span> <span data-ttu-id="fbd27-380">當您傳送應用程式加密訊息時，接收佇列管理員會使用對稱金鑰來解密訊息，再將它傳送到其目的地佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-380">When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.</span></span>  
  
 <span data-ttu-id="fbd27-381">如果您將訊息傳送至外部佇列時，訊息是第一次收到適當的連接器應用程式，將加密的訊息轉送至接收應用程式附加的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="fbd27-381">If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application.</span></span> <span data-ttu-id="fbd27-382">就接收的應用程式，來解密訊息使用的對稱金鑰的責任。</span><span class="sxs-lookup"><span data-stu-id="fbd27-382">It is then the responsibility of the receiving application to decrypt the message using the symmetric key.</span></span>  
  
 <span data-ttu-id="fbd27-383">當您設定<xref:System.Messaging.Message.DestinationSymmetricKey%2A>屬性，您也必須設定<xref:System.Messaging.Message.ConnectorType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-383">When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property.</span></span> <span data-ttu-id="fbd27-384">當傳送訊息時，訊息佇列會忽略<xref:System.Messaging.Message.DestinationSymmetricKey%2A>屬性如果<xref:System.Messaging.Message.ConnectorType%2A>也未設定屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-384">When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.</span></span>  
  
 <span data-ttu-id="fbd27-385"><xref:System.Messaging.Message.DestinationSymmetricKey%2A>屬性的最大陣列大小為 256。</span><span class="sxs-lookup"><span data-stu-id="fbd27-385">The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property has a maximum array size of 256.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-386">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-386">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd27-387"><see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-387">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="DigitalSignature">
      <MemberSignature Language="C#" Value="public byte[] DigitalSignature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigitalSignature" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DigitalSignature" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitalSignature As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigitalSignature { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DigitalSignature : byte[] with get, set" Usage="System.Messaging.Message.DigitalSignature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgDigitalSignature")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-388">取得或設定訊息佇列用來驗證訊息的數位簽章。</span><span class="sxs-lookup"><span data-stu-id="fbd27-388">Gets or sets the digital signature that Message Queuing uses to authenticate the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-389">位元組值陣列，指定用來驗證訊息的 Message Queuing 1.0 數位簽章。</span><span class="sxs-lookup"><span data-stu-id="fbd27-389">An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message.</span></span> <span data-ttu-id="fbd27-390">預設值是長度為零的陣列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-390">The default is a zero-length array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-391">在驗證訊息傳送的訊息佇列的 1.0 版時，訊息佇列會使用數位簽章。</span><span class="sxs-lookup"><span data-stu-id="fbd27-391">Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0.</span></span> <span data-ttu-id="fbd27-392">在大部分情況下，訊息佇列會產生並設定<xref:System.Messaging.Message.DigitalSignature%2A>傳送應用程式要求驗證時的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-392">In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication.</span></span> <span data-ttu-id="fbd27-393">接收應用程式會使用這個屬性來擷取附加至訊息的數位簽章。</span><span class="sxs-lookup"><span data-stu-id="fbd27-393">The receiving application uses this property to retrieve the digital signature attached to the message.</span></span>  
  
 <span data-ttu-id="fbd27-394">您只能使用<xref:System.Messaging.Message.DigitalSignature%2A>執行 Message Queuing 2.0 版時的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-394">You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0.</span></span> <span data-ttu-id="fbd27-395">要求驗證時，傳送應用程式必須指定 Message Queuing 1.0 版簽章。</span><span class="sxs-lookup"><span data-stu-id="fbd27-395">The sending application must specify Message Queuing version 1.0 signatures when requesting authentication.</span></span> <span data-ttu-id="fbd27-396">如果傳送應用程式傳送的訊息佇列版本 2.0 簽章，此屬性會包含四個位元組，每個包含零的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="fbd27-396">If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.</span></span>  
  
 <span data-ttu-id="fbd27-397"><xref:System.Messaging.Message.DigitalSignature%2A>屬性，連同<xref:System.Messaging.Message.SenderCertificate%2A>屬性，也會使用連接器應用程式傳送訊息時。</span><span class="sxs-lookup"><span data-stu-id="fbd27-397">The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent.</span></span> <span data-ttu-id="fbd27-398">在此案例中，連接器應用程式-而不是訊息佇列-會產生數位簽章，則根據在傳送訊息之使用者的憑證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-398">In this scenario, the connector application - rather than Message Queuing - generates the digital signature, which it bases on the certificate of the user sending the message.</span></span>  
  
 <span data-ttu-id="fbd27-399"><xref:System.Messaging.Message.DigitalSignature%2A>屬性的最大陣列大小為 256。</span><span class="sxs-lookup"><span data-stu-id="fbd27-399">The <xref:System.Messaging.Message.DigitalSignature%2A> property has a maximum array size of 256.</span></span>  
  
 <span data-ttu-id="fbd27-400">當您設定<xref:System.Messaging.Message.DigitalSignature%2A>屬性，您也必須設定<xref:System.Messaging.Message.ConnectorType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-400">When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property.</span></span> <span data-ttu-id="fbd27-401">當傳送訊息時，訊息佇列會忽略<xref:System.Messaging.Message.DigitalSignature%2A>屬性如果<xref:System.Messaging.Message.ConnectorType%2A>也未設定屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-401">When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-402">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.DigitalSignature" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-402">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd27-403"><see cref="P:System.Messaging.Message.DigitalSignature" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-403">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.SenderCertificate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionAlgorithm : System.Messaging.EncryptionAlgorithm with get, set" Usage="System.Messaging.Message.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-404">取得或設定用來加密私用訊息主體的加密演算法。</span><span class="sxs-lookup"><span data-stu-id="fbd27-404">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span></span></summary>
        <value><span data-ttu-id="fbd27-405">其中一個 <see cref="T:System.Messaging.EncryptionAlgorithm" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="fbd27-405">One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values.</span></span> <span data-ttu-id="fbd27-406">預設為 <see langword="RC2" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-406">The default is <see langword="RC2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-407">如果訊息是私用 （加密），它會加密之前傳送和接收時加以解密。</span><span class="sxs-lookup"><span data-stu-id="fbd27-407">If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt.</span></span> <span data-ttu-id="fbd27-408"><xref:System.Messaging.Message.EncryptionAlgorithm%2A>屬性會指定用來加密私用訊息的訊息本文的演算法。</span><span class="sxs-lookup"><span data-stu-id="fbd27-408">The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.</span></span>  
  
 <span data-ttu-id="fbd27-409">佇列可以要求傳入訊息必須加密。</span><span class="sxs-lookup"><span data-stu-id="fbd27-409">A queue can require that incoming messages be encrypted.</span></span> <span data-ttu-id="fbd27-410">如果應用程式傳送未加密的 （非私用） 訊息到佇列只接受私用訊息，或者如果它傳送至佇列的私用訊息，只接受非私用訊息，佇列會拒絕訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-410">If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message.</span></span> <span data-ttu-id="fbd27-411">傳送應用程式可以要求此情況下，傳回負值通知訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-411">The sending application can request that a negative acknowledgment message be returned in such a case.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-412">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-412">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.EncryptionRequired" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.Messaging.Message.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-413">取得或設定與訊息關聯的其他應用程式定義資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd27-413">Gets or sets additional, application-defined information associated with the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-414">位元組值陣列，提供與訊息相關聯的應用程式定義資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd27-414">An array of byte values that provides application-defined information associated with the message.</span></span> <span data-ttu-id="fbd27-415">預設值是長度為零的陣列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-415">The default is a zero-length array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-416"><xref:System.Messaging.Message.Extension%2A>屬性提供應用程式定義的資訊，例如大型二進位物件，與訊息相關聯。</span><span class="sxs-lookup"><span data-stu-id="fbd27-416">The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message.</span></span> <span data-ttu-id="fbd27-417">它是解譯的內容接收的應用程式的責任<xref:System.Messaging.Message.Extension%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-417">It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 <span data-ttu-id="fbd27-418">可能的話，您應該包含在訊息資料<xref:System.Messaging.Message.Body%2A>訊息的屬性而非<xref:System.Messaging.Message.Extension%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-418">Where possible, you should include message data in the <xref:System.Messaging.Message.Body%2A> property of the message rather than the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 <span data-ttu-id="fbd27-419">當使用外部佇列，使用<xref:System.Messaging.Message.Extension%2A>屬性來指定在訊息佇列的訊息屬性不存在。</span><span class="sxs-lookup"><span data-stu-id="fbd27-419">When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.</span></span>  
  
 <span data-ttu-id="fbd27-420">在非 Microsoft Message Queuing 的佇列系統中存在的外部索引的佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-420">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="fbd27-421">訊息佇列通訊使用透過連接器應用程式這類佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-421">Message Queuing communicates with such queues through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-422">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Extension" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-422">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd27-423"><see cref="P:System.Messaging.Message.Extension" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-423">The <see cref="P:System.Messaging.Message.Extension" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Body" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public System.Messaging.IMessageFormatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.IMessageFormatter Formatter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatter As IMessageFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::IMessageFormatter ^ Formatter { System::Messaging::IMessageFormatter ^ get(); void set(System::Messaging::IMessageFormatter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Formatter : System.Messaging.IMessageFormatter with get, set" Usage="System.Messaging.Message.Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.IMessageFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-424">取得或設定用來將物件序列化成訊息主體，或者從訊息主體將物件還原序列化的格式子。</span><span class="sxs-lookup"><span data-stu-id="fbd27-424">Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</span></span></summary>
        <value><span data-ttu-id="fbd27-425">產生要對訊息主體寫入或讀取的資料流的 <see cref="T:System.Messaging.IMessageFormatter" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-425">The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.</span></span> <span data-ttu-id="fbd27-426">預設為 <see cref="T:System.Messaging.XmlMessageFormatter" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-426">The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-427">使用<xref:System.Messaging.Message.Formatter%2A>屬性讀取和寫入訊息時。</span><span class="sxs-lookup"><span data-stu-id="fbd27-427">Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message.</span></span> <span data-ttu-id="fbd27-428">當訊息傳送至佇列時，格式器序列化<xref:System.Messaging.Message.Body%2A>成可以傳送至訊息佇列的資料流的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-428">When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue.</span></span> <span data-ttu-id="fbd27-429">從佇列讀取時，格式器還原序列化成訊息資料<xref:System.Messaging.Message.Body%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-429">When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property.</span></span>  
  
 <span data-ttu-id="fbd27-430">除非您撰寫的訊息內容直接<xref:System.Messaging.Message.BodyStream%2A>屬性，設定<xref:System.Messaging.Message.Formatter%2A>再傳送訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-430">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="fbd27-431">當<xref:System.Messaging.MessageQueue.Send%2A>上呼叫方法<xref:System.Messaging.MessageQueue>使用中所包含的格式器序列化執行個體，主體<xref:System.Messaging.Message.Formatter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-431">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="fbd27-432">如果您沒有指定值，以傳送訊息<xref:System.Messaging.Message.Formatter%2A>屬性，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-432">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="fbd27-433"><xref:System.Messaging.XmlMessageFormatter>鬆散偶合的因此不需要有相同的物件時使用此格式輸入上的寄件者和接收者。</span><span class="sxs-lookup"><span data-stu-id="fbd27-433">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="fbd27-434"><xref:System.Messaging.ActiveXMessageFormatter>和<xref:System.Messaging.BinaryMessageFormatter>將資料序列化成二進位表示法。</span><span class="sxs-lookup"><span data-stu-id="fbd27-434">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="fbd27-435"><xref:System.Messaging.ActiveXMessageFormatter>傳送或接收的 COM 元件時使用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-435">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-436">下列程式碼範例示範設定格式化的訊息內文使用<xref:System.Messaging.BinaryMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-436">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="fbd27-437">下列程式碼範例示範設定格式化的訊息內文使用<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-437">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd27-438"><see cref="P:System.Messaging.Message.Formatter" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-438">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Messaging.HashAlgorithm with get, set" Usage="System.Messaging.Message.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-439">取得或設定訊息佇列驗證訊息或為訊息建立數位簽章時使用的雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="fbd27-439">Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</span></span></summary>
        <value><span data-ttu-id="fbd27-440">其中一個 <see cref="T:System.Messaging.HashAlgorithm" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="fbd27-440">One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values.</span></span> <span data-ttu-id="fbd27-441">對 Windows XP 來說，預設值為 <see langword="SHA" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-441">For Windows XP, the default is <see langword="SHA" />.</span></span> <span data-ttu-id="fbd27-442">否則，預設值為 <see langword="MD5" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-442">Otherwise, the default is <see langword="MD5" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-443">來源電腦上，訊息佇列會使用雜湊演算法建立一則訊息的數位簽章時。</span><span class="sxs-lookup"><span data-stu-id="fbd27-443">On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message.</span></span> <span data-ttu-id="fbd27-444">目標佇列管理員再使用相同的雜湊演算法，來驗證訊息接收時。</span><span class="sxs-lookup"><span data-stu-id="fbd27-444">The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-445">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.HashAlgorithm" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-445">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Messaging.Message.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgId")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-446">取得訊息的識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-446">Gets the message's identifier.</span></span></summary>
        <value><span data-ttu-id="fbd27-447">訊息的唯一識別項，由訊息佇列產生。</span><span class="sxs-lookup"><span data-stu-id="fbd27-447">The message's unique identifier, which is generated by Message Queuing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-448">訊息佇列在傳送訊息時，會產生的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-448">Message Queuing generates a message identifier when the message is sent.</span></span> <span data-ttu-id="fbd27-449">識別項是 20 個位元組所組成，並且包含兩個項目： 機器<xref:System.Guid>傳送端電腦的電腦上訊息的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="fbd27-449">The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer.</span></span> <span data-ttu-id="fbd27-450">這兩個項目合併起來產生網路上唯一的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-450">The combination of the two items produces a message identifier that is unique on the network.</span></span>  
  
 <span data-ttu-id="fbd27-451">訊息佇列會產生-包括認可和報告訊息的所有訊息的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-451">Message Queuing generates message identifiers for all messages - including acknowledgment and report messages.</span></span> <span data-ttu-id="fbd27-452">由訊息佇列的抵達或失敗的原始、 傳送的訊息通常傳送通知訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-452">An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message.</span></span> <span data-ttu-id="fbd27-453">您可以找到<xref:System.Messaging.Message.Id%2A>中的原始訊息的屬性值<xref:System.Messaging.Message.CorrelationId%2A>的通知訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-453">You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message.</span></span>  
  
 <span data-ttu-id="fbd27-454">您也可以使用<xref:System.Messaging.Message.Id%2A>時將回應訊息傳送至回應佇列的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-454">You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue.</span></span> <span data-ttu-id="fbd27-455">若要在回應訊息中包含原始訊息的識別碼，設定<xref:System.Messaging.Message.CorrelationId%2A>回應訊息的屬性<xref:System.Messaging.Message.Id%2A>原始訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-455">To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message.</span></span> <span data-ttu-id="fbd27-456">讀取回應訊息的應用程式然後可以使用的回應訊息的相互關聯識別碼來識別原始訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-456">The application reading the response message can then use the correlation identifier of the response message to identify the original message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-457">下列程式碼範例會傳送，並收到包含訂單與佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-457">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="fbd27-458">它特別要求正面確認通知，當原始訊息抵達或已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-458">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-459">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-459">The message has not been sent.</span></span> <span data-ttu-id="fbd27-460">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-460">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-461">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-461">-or-</span></span> 
<span data-ttu-id="fbd27-462">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Id" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-462">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.Message.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteTimeout : TimeSpan" Usage="System.Messaging.Message.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-463">指定沒有逾時。</span><span class="sxs-lookup"><span data-stu-id="fbd27-463">Specifies that no time-out exists.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-464"><xref:System.Messaging.Message.TimeToBeReceived%2A> 和<xref:System.Messaging.Message.TimeToReachQueue%2A>需要值，指定逾時。如先前的功能，逾時是從佇列接收訊息所允許的最長時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-464"><xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out. For the former, the time-out is the maximum time allowed for a message to be received from the queue.</span></span> <span data-ttu-id="fbd27-465">對於後者，逾時是允許的訊息到達佇列的時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-465">For the latter, the time-out is the time allowed for a message to reach the queue.</span></span> <span data-ttu-id="fbd27-466">在這兩種情況下，您可以指定逾時秒數，或使用<xref:System.Messaging.Message.InfiniteTimeout>表示沒有逾時。</span><span class="sxs-lookup"><span data-stu-id="fbd27-466">In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-467">下列程式碼範例示範使用<xref:System.Messaging.Message.InfiniteTimeout>欄位。</span><span class="sxs-lookup"><span data-stu-id="fbd27-467">The following code example demonstrates the use of the <xref:System.Messaging.Message.InfiniteTimeout> field.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstInTransaction">
      <MemberSignature Language="C#" Value="public bool IsFirstInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.IsFirstInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstInTransaction : bool" Usage="System.Messaging.Message.IsFirstInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgIsFirstInTransaction")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-468">取得值，指出訊息是否為交易中最先傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-468">Gets a value that indicates whether the message was the first message sent in a transaction.</span></span></summary>
        <value><span data-ttu-id="fbd27-469">如果訊息是異動中最先傳送的訊息為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-469"><see langword="true" /> if the message was the first message sent in a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-470">接收應用程式使用<xref:System.Messaging.Message.IsFirstInTransaction%2A>屬性，確認訊息已傳送到單一佇列的單一交易中的第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-470">Receiving applications use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property to verify that a message was the first message sent in a single transaction to a single queue.</span></span>  
  
 <span data-ttu-id="fbd27-471">這個屬性就只能使用 Message Queuing 2.0 版及更新版本。</span><span class="sxs-lookup"><span data-stu-id="fbd27-471">This property is available only with Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="fbd27-472">若要驗證交易的界限，您可以使用<xref:System.Messaging.Message.IsFirstInTransaction%2A>屬性，以及兩個其他屬性：<xref:System.Messaging.Message.IsLastInTransaction%2A>和<xref:System.Messaging.Message.TransactionId%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-472">To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>.</span></span> <span data-ttu-id="fbd27-473">若要檢查訊息是否是在交易中，傳送的最後一個訊息，請使用前者，使用後者來擷取交易的識別碼。</span><span class="sxs-lookup"><span data-stu-id="fbd27-473">Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</span></span>  
  
 <span data-ttu-id="fbd27-474">如果只有在交易中，傳送一則訊息<xref:System.Messaging.Message.IsFirstInTransaction%2A>並<xref:System.Messaging.Message.IsLastInTransaction%2A>屬性都設為`true`。</span><span class="sxs-lookup"><span data-stu-id="fbd27-474">If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-475">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.IsFirstInTransaction%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-475">The following code example displays the value of a message's <xref:System.Messaging.Message.IsFirstInTransaction%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-476">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-476">The message has not been sent.</span></span> <span data-ttu-id="fbd27-477">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-477">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-478">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-478">-or-</span></span> 
<span data-ttu-id="fbd27-479">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-479">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="IsLastInTransaction">
      <MemberSignature Language="C#" Value="public bool IsLastInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.IsLastInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastInTransaction : bool" Usage="System.Messaging.Message.IsLastInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgIsLastInTransaction")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-480">取得值，指出訊息是否為交易中最後傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-480">Gets a value that indicates whether the message was the last message sent in a transaction.</span></span></summary>
        <value><span data-ttu-id="fbd27-481">如果訊息是單一交易中最後傳送的訊息為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-481"><see langword="true" /> if the message was the last message sent in a single transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-482">接收應用程式使用<xref:System.Messaging.Message.IsLastInTransaction%2A>屬性，確認訊息已傳送到單一佇列的單一交易中的最後一個訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-482">Receiving applications use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property to verify that a message was the last message sent in a single transaction to a single queue.</span></span>  
  
 <span data-ttu-id="fbd27-483">這個屬性就只能使用 Message Queuing 2.0 版及更新版本。</span><span class="sxs-lookup"><span data-stu-id="fbd27-483">This property is available only with Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="fbd27-484">若要驗證交易的界限，您可以使用<xref:System.Messaging.Message.IsLastInTransaction%2A>屬性，以及兩個其他屬性：<xref:System.Messaging.Message.IsFirstInTransaction%2A>和<xref:System.Messaging.Message.TransactionId%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-484">To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>.</span></span> <span data-ttu-id="fbd27-485">若要檢查訊息是否是在交易中，傳送的第一個訊息，請使用前者，使用後者來擷取交易的識別碼。</span><span class="sxs-lookup"><span data-stu-id="fbd27-485">Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</span></span>  
  
 <span data-ttu-id="fbd27-486">如果只有在交易中，傳送一則訊息<xref:System.Messaging.Message.IsFirstInTransaction%2A>並<xref:System.Messaging.Message.IsLastInTransaction%2A>屬性都設為`true`。</span><span class="sxs-lookup"><span data-stu-id="fbd27-486">If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-487">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.IsLastInTransaction%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-487">The following code example displays the value of a message's <xref:System.Messaging.Message.IsLastInTransaction%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-488">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-488">The message has not been sent.</span></span> <span data-ttu-id="fbd27-489">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-489">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-490">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-490">-or-</span></span> 
<span data-ttu-id="fbd27-491">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.IsLastInTransaction" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-491">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.Message.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-492">取得或設定應用程式定義的 Unicode 字串，這個字串會描述訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-492">Gets or sets an application-defined Unicode string that describes the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-493">訊息的標記。</span><span class="sxs-lookup"><span data-stu-id="fbd27-493">The label of the message.</span></span> <span data-ttu-id="fbd27-494">預設為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="fbd27-494">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-495">訊息標籤可以用於多種用途。</span><span class="sxs-lookup"><span data-stu-id="fbd27-495">You can use a message label for several purposes.</span></span> <span data-ttu-id="fbd27-496">例如，您可以將它用於顯示，或者根據標籤值對訊息進行選擇性的處理。</span><span class="sxs-lookup"><span data-stu-id="fbd27-496">For example, you can use it for display purposes or to selectively process messages based on the label value.</span></span> <span data-ttu-id="fbd27-497">標籤不需要是唯一的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-497">The label does not need to be unique across messages.</span></span>  
  
 <span data-ttu-id="fbd27-498">訊息佇列和訊息標籤表示應用程式定義的值，這個值會以人們可讀取 (Human-Readable) 的詞彙協助識別佇列或訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-498">Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms.</span></span> <span data-ttu-id="fbd27-499">它負責解譯標籤內容，其中沒有任何內建的意義，訊息佇列應用程式的應用程式。</span><span class="sxs-lookup"><span data-stu-id="fbd27-499">It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-500">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.Label%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-500">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Label%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-501">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Label" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-501">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="LookupId">
      <MemberSignature Language="C#" Value="public long LookupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LookupId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.LookupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LookupId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LookupId { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LookupId : int64" Usage="System.Messaging.Message.LookupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-502">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="fbd27-502">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="fbd27-503">取得訊息的查詢識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-503">Gets the message's lookup identifier.</span></span></summary>
        <value><span data-ttu-id="fbd27-504">訊息的查詢識別項，由訊息佇列產生，且對於訊息所在佇列是唯一的。</span><span class="sxs-lookup"><span data-stu-id="fbd27-504">The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-505"><xref:System.Messaging.Message.LookupId%2A>屬性提供唯讀存取的訊息查詢識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-505">The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier.</span></span> <span data-ttu-id="fbd27-506">在 MSMQ 3.0 中引進的查詢識別是 64 位元識別碼，由訊息佇列 」 產生並指派給每個訊息，訊息會放在佇列中時。</span><span class="sxs-lookup"><span data-stu-id="fbd27-506">The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue.</span></span> <span data-ttu-id="fbd27-507">查閱識別碼不是在傳送訊息時產生的訊息識別項相同。</span><span class="sxs-lookup"><span data-stu-id="fbd27-507">The lookup identifier is not the same as the message identifier that is generated when the message is sent.</span></span>  
  
 <span data-ttu-id="fbd27-508">訊息佇列會產生所有位於任何佇列，包括應用程式所產生的目的地、 管理和報告佇列，以及系統產生的日誌、 信件、 連接器和傳出佇列的訊息查詢識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-508">Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues.</span></span> <span data-ttu-id="fbd27-509">換句話說，這包括這兩個傳送由傳送應用程式和訊息佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-509">In other words, this includes both messages sent by sending applications and by Message Queuing.</span></span> <span data-ttu-id="fbd27-510">查詢識別項是唯一的佇列和佇列之外沒有意義。</span><span class="sxs-lookup"><span data-stu-id="fbd27-510">The lookup identifier is unique to the queue and has no meaning outside the queue.</span></span>  
  
 <span data-ttu-id="fbd27-511">如果將訊息傳送至數個目的地佇列，或時它會放在其各自的佇列訊息的複本儲存在電腦日誌或佇列日誌中，如果訊息的每個複本會有它自己的查詢識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-511">If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.</span></span>  
  
 <span data-ttu-id="fbd27-512"><xref:System.Messaging.Message.LookupId%2A>屬性只能讀取從佇列擷取的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-512">The <xref:System.Messaging.Message.LookupId%2A> property can only be read on messages retrieved from a queue.</span></span>  
  
 <span data-ttu-id="fbd27-513">查閱識別碼用來讀取佇列中的特定訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-513">A lookup identifier is used to read a specific message in the queue.</span></span> <span data-ttu-id="fbd27-514">一旦已知的訊息查詢識別項，接收應用程式可以呼叫<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>或<xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A>直接移至該訊息並查看或擷取的佇列，不同於必須從佇列前端開始的資料指標的函式和瀏覽佇列的結尾</span><span class="sxs-lookup"><span data-stu-id="fbd27-514">Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,</span></span>  
  
 <span data-ttu-id="fbd27-515">取得佇列中訊息的查詢識別項是應用程式的責任。</span><span class="sxs-lookup"><span data-stu-id="fbd27-515">Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application.</span></span> <span data-ttu-id="fbd27-516">若要取得的查詢識別項的一種可能方式是建立會叫用快取的每個訊息識別項，因為它們都放在佇列中元件的目的端佇列的觸發程序。</span><span class="sxs-lookup"><span data-stu-id="fbd27-516">One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="fbd27-517">未安裝 MSMQ 3.0。</span><span class="sxs-lookup"><span data-stu-id="fbd27-517">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-518">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-518">The message has not been sent.</span></span> <span data-ttu-id="fbd27-519">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-519">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-520">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-520">-or-</span></span> 
<span data-ttu-id="fbd27-521">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.LookupId" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-521">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="MessageType">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageType MessageType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessageType MessageType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.MessageType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageType As MessageType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageType MessageType { System::Messaging::MessageType get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageType : System.Messaging.MessageType" Usage="System.Messaging.Message.MessageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgMessageType")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-522">取得訊息類型：<see langword="Normal" />、<see langword="Acknowledgment" /> 或 <see langword="Report" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-522">Gets the message type: <see langword="Normal" />, <see langword="Acknowledgment" />, or <see langword="Report" />.</span></span></summary>
        <value><span data-ttu-id="fbd27-523">其中一個 <see cref="P:System.Messaging.Message.MessageType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="fbd27-523">One of the <see cref="P:System.Messaging.Message.MessageType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-524">訊息佇列在傳送訊息時，通常會設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-524">Message Queuing typically sets this property when it sends the message.</span></span> <span data-ttu-id="fbd27-525">訊息佇列的訊息可以是下列其中一個類型：</span><span class="sxs-lookup"><span data-stu-id="fbd27-525">A Message Queuing message can be one of the following types:</span></span>  
  
-   <span data-ttu-id="fbd27-526">`Normal`其中的一般訊息從傳送至佇列，應用程式，或回應訊息傳回給傳送應用程式。</span><span class="sxs-lookup"><span data-stu-id="fbd27-526">`Normal`, which is either a typical message sent from an application to a queue, or a response message returned to the sending application.</span></span>  
  
-   <span data-ttu-id="fbd27-527">`Acknowledgement`由訊息佇列產生每當傳送應用程式要求。</span><span class="sxs-lookup"><span data-stu-id="fbd27-527">`Acknowledgement`, which Message Queuing generates whenever the sending application requests one.</span></span> <span data-ttu-id="fbd27-528">例如，訊息佇列可以產生正或負訊息，以表示原始訊息已抵達或已被讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-528">For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read.</span></span> <span data-ttu-id="fbd27-529">訊息佇列會將適當的認可訊息傳回給傳送應用程式所指定的管理佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-529">Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.</span></span>  
  
-   <span data-ttu-id="fbd27-530">`Report`由訊息佇列產生每當報告佇列在來源佇列管理員定義。</span><span class="sxs-lookup"><span data-stu-id="fbd27-530">`Report`, which Message Queuing generates whenever a report queue is defined at the source Queue Manager.</span></span> <span data-ttu-id="fbd27-531">追蹤功能啟用時，只要原始訊息進入或離開訊息佇列伺服器，訊息佇列就會傳送報告訊息至訊息佇列報告佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-531">When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-532">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.MessageType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-532">The following code example displays the value of a message's <xref:System.Messaging.Message.MessageType%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-533">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-533">The message has not been sent.</span></span> <span data-ttu-id="fbd27-534">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-534">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-535">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-535">-or-</span></span> 
<span data-ttu-id="fbd27-536">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.MessageType" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-536">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageType" />
        <altmember cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Messaging.MessagePriority with get, set" Usage="System.Messaging.Message.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-537">取得或設定訊息的優先權，用來決定訊息放置在佇列中的位置。</span><span class="sxs-lookup"><span data-stu-id="fbd27-537">Gets or sets the message priority, which determines where in the queue the message is placed.</span></span></summary>
        <value><span data-ttu-id="fbd27-538">其中一個 <see cref="T:System.Messaging.MessagePriority" /> 值，表示非交易訊息的優先層級。</span><span class="sxs-lookup"><span data-stu-id="fbd27-538">One of the <see cref="T:System.Messaging.MessagePriority" /> values, which represent the priority levels of non-transactional messages.</span></span> <span data-ttu-id="fbd27-539">預設為 <see langword="Normal" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-539">The default is <see langword="Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-540"><xref:System.Messaging.Message.Priority%2A>屬性會影響訊息佇列處理的方式在訊息移動時，以及當它到達其目的地。</span><span class="sxs-lookup"><span data-stu-id="fbd27-540">The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination.</span></span> <span data-ttu-id="fbd27-541">較高優先權的訊息在路由期間會給予喜好設定，並且插入目的端佇列的前端。</span><span class="sxs-lookup"><span data-stu-id="fbd27-541">Higher-priority messages are given preference during routing and inserted toward the front of the destination queue.</span></span> <span data-ttu-id="fbd27-542">優先權相同的訊息會根據抵達時間放置在佇列中。</span><span class="sxs-lookup"><span data-stu-id="fbd27-542">Messages with the same priority are placed in the queue according to their arrival time.</span></span>  
  
 <span data-ttu-id="fbd27-543">您可以設定有意義的優先順序只針對非交易式訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-543">You can set a meaningful priority only for non-transactional messages.</span></span> <span data-ttu-id="fbd27-544">訊息佇列會自動設定交易式訊息的優先權`Lowest`，因而導致交易式訊息的優先權會被忽略。</span><span class="sxs-lookup"><span data-stu-id="fbd27-544">Message Queuing automatically sets the priority for transactional messages to `Lowest`, which causes transactional message priority to be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-545">下列程式碼範例會將兩個不同優先權的訊息傳送至佇列，接著擷取它們。</span><span class="sxs-lookup"><span data-stu-id="fbd27-545">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-546">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Priority" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-546">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property.</span></span></exception>
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="P:System.Messaging.Message.MessageType" />
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Recoverable : bool with get, set" Usage="System.Messaging.Message.Recoverable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-547">取得或設定值，指出當發生電腦故障或網路問題時是否保證傳遞訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-547">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span></span></summary>
        <value><span data-ttu-id="fbd27-548">如果保證傳送訊息 (路由途中將訊息儲存在磁碟上) 則為 <see langword="true" />，如果不保證傳送則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-548"><see langword="true" /> if delivery of the message is guaranteed (through saving the message to disk while en route); <see langword="false" /> if delivery is not assured.</span></span> <span data-ttu-id="fbd27-549">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-549">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-550"><xref:System.Messaging.Message.Recoverable%2A>屬性會指出是否保證訊息傳遞-即使電腦損毀時的訊息目的端佇列途中。</span><span class="sxs-lookup"><span data-stu-id="fbd27-550">The <xref:System.Messaging.Message.Recoverable%2A> property indicates whether the delivery of a message is guaranteed - even if a computer crashes while the message is en route to the destination queue.</span></span>  
  
 <span data-ttu-id="fbd27-551">如果郵件的傳遞保證，訊息會儲存在本機的路由中的每一個步驟，直到訊息成功轉送至下一步 的電腦。</span><span class="sxs-lookup"><span data-stu-id="fbd27-551">If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer.</span></span> <span data-ttu-id="fbd27-552">設定<xref:System.Messaging.Message.Recoverable%2A>屬性設`true`可能會影響輸送量。</span><span class="sxs-lookup"><span data-stu-id="fbd27-552">Setting the <xref:System.Messaging.Message.Recoverable%2A> property to `true` could affect throughput.</span></span>  
  
 <span data-ttu-id="fbd27-553">如果交易式訊息，訊息佇列會自動將訊息視為可復原，不論值<xref:System.Messaging.Message.Recoverable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-553">If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <xref:System.Messaging.Message.Recoverable%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-554">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.Recoverable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-554">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Recoverable%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-555">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.Recoverable" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-555">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-556">取得或設定接收應用程式產生的回應訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-556">Gets or sets the queue that receives application-generated response messages.</span></span></summary>
        <value><span data-ttu-id="fbd27-557">傳回應用程式產生的回應訊息的 <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-557">The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned.</span></span> <span data-ttu-id="fbd27-558">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-558">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-559"><xref:System.Messaging.Message.ResponseQueue%2A>屬性會識別接收應用程式產生的回應訊息，以便接收應用程式傳回給傳送應用程式的佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-559">The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application.</span></span> <span data-ttu-id="fbd27-560">傳送應用程式會在應用程式傳送其訊息時指定回應佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-560">The sending application specifies response queues when the application sends its messages.</span></span> <span data-ttu-id="fbd27-561">任何可用的佇列都可以指定為回應佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-561">Any available queue can be specified as a response queue.</span></span>  
  
 <span data-ttu-id="fbd27-562">傳回至回應佇列的訊息是應用程式指定的。</span><span class="sxs-lookup"><span data-stu-id="fbd27-562">Messages returned to the response queue are application-specific.</span></span> <span data-ttu-id="fbd27-563">應用程式必須定義訊息的內容以及接收訊息時要採取的動作。</span><span class="sxs-lookup"><span data-stu-id="fbd27-563">The application must define the contents of the messages as well as the action to take upon receipt of a message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-564">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.ResponseQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-564">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.ResponseQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-565">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.ResponseQueue" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-565">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.DestinationQueue" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="SecurityContext">
      <MemberSignature Language="C#" Value="public System.Messaging.SecurityContext SecurityContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.SecurityContext SecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityContext As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::SecurityContext ^ SecurityContext { System::Messaging::SecurityContext ^ get(); void set(System::Messaging::SecurityContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContext : System.Messaging.SecurityContext with get, set" Usage="System.Messaging.Message.SecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.SecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-566">取得或設定訊息的安全性內容。</span><span class="sxs-lookup"><span data-stu-id="fbd27-566">Gets or sets the security context for a message.</span></span></summary>
        <value><span data-ttu-id="fbd27-567">如果先前已設定屬性，則為包含訊息之安全性內容的 <see cref="T:System.Messaging.SecurityContext" /> 物件，否則為 NULL。</span><span class="sxs-lookup"><span data-stu-id="fbd27-567">A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context for a message, if the property has previously been set; otherwise NULL.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderCertificate">
      <MemberSignature Language="C#" Value="public byte[] SenderCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property SenderCertificate As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderCertificate { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SenderCertificate : byte[] with get, set" Usage="System.Messaging.Message.SenderCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderCertificate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-568">取得或設定用來驗證訊息的安全憑證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-568">Gets or sets the security certificate used to authenticate messages.</span></span></summary>
        <value><span data-ttu-id="fbd27-569">位元組值陣列，表示安全憑證，訊息佇列會使用這個憑證驗證訊息的傳送者。</span><span class="sxs-lookup"><span data-stu-id="fbd27-569">An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message.</span></span> <span data-ttu-id="fbd27-570">預設值是長度為零的陣列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-570">The default is a zero-length array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-571">接收應用程式會使用<xref:System.Messaging.Message.SenderCertificate%2A>屬性時的訊息包含外部的安全性憑證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-571">The receiving application uses the <xref:System.Messaging.Message.SenderCertificate%2A> property when the message includes an external security certificate.</span></span>  
  
 <span data-ttu-id="fbd27-572">訊息佇列可以驗證訊息使用的內部或外部的安全性憑證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-572">Message Queuing can authenticate a message using either an internal or external security certificate.</span></span> <span data-ttu-id="fbd27-573">訊息佇列會提供內部憑證，用來驗證訊息的完整性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-573">Message Queuing provides internal certificates, which are used to verify message integrity.</span></span> <span data-ttu-id="fbd27-574">憑證授權單位提供的外部憑證，您可以透過存取<xref:System.Messaging.Message.SenderCertificate%2A>訊息屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-574">A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message.</span></span> <span data-ttu-id="fbd27-575">除了讓訊息佇列來驗證訊息、 的外部憑證可讓接收應用程式進一步驗證寄件者。</span><span class="sxs-lookup"><span data-stu-id="fbd27-575">In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender.</span></span> <span data-ttu-id="fbd27-576">內部憑證沒有任何可用的值，以接收應用程式。</span><span class="sxs-lookup"><span data-stu-id="fbd27-576">An internal certificate has no usable value to a receiving application.</span></span>  
  
 <span data-ttu-id="fbd27-577">必須以目錄服務的訊息佇列系統註冊的外部憑證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-577">An external certificate must be registered with the directory service of the Message Queuing system.</span></span> <span data-ttu-id="fbd27-578">外部憑證包含憑證授權單位、 憑證的使用者、 憑證的有效期間、 公開金鑰憑證的使用者和憑證授權單位的簽章的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd27-578">An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-579">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.SenderCertificate" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-579">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.Message.Authenticated" />
      </Docs>
    </Member>
    <Member MemberName="SenderId">
      <MemberSignature Language="C#" Value="public byte[] SenderId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderId As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderId { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderId : byte[]" Usage="System.Messaging.Message.SenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderId")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-580">取得傳送使用者的識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-580">Gets the identifier of the sending user.</span></span></summary>
        <value><span data-ttu-id="fbd27-581">識別傳送者的位元組值陣列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-581">An array of byte values that identifies the sender.</span></span> <span data-ttu-id="fbd27-582">接收佇列管理員會在驗證訊息時使用識別項，以驗證訊息傳送者和傳送者對佇列的存取權限。</span><span class="sxs-lookup"><span data-stu-id="fbd27-582">The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-583">如果<xref:System.Messaging.Message.AttachSenderId%2A>屬性是`false`，在指定的寄件者識別碼<xref:System.Messaging.Message.SenderId%2A>時傳送未屬性附加至訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-583">If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `false`, the sender identifier specified in the <xref:System.Messaging.Message.SenderId%2A> property is not attached to the message when it is sent.</span></span> <span data-ttu-id="fbd27-584">這表示訊息佇列傳送訊息到目的端佇列時，不應該驗證寄件者。</span><span class="sxs-lookup"><span data-stu-id="fbd27-584">This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue.</span></span> <span data-ttu-id="fbd27-585">如果<xref:System.Messaging.Message.AttachSenderId%2A>屬性是`true`，則<xref:System.Messaging.Message.SenderId%2A>屬性值是訊息已驗證時，才值得信任。</span><span class="sxs-lookup"><span data-stu-id="fbd27-585">If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `true`, the <xref:System.Messaging.Message.SenderId%2A> property value is trustworthy only if the message was authenticated.</span></span> <span data-ttu-id="fbd27-586">使用<xref:System.Messaging.Message.Authenticated%2A>屬性搭配<xref:System.Messaging.Message.SenderId%2A>屬性，確認 寄件者的存取權限。</span><span class="sxs-lookup"><span data-stu-id="fbd27-586">Use the <xref:System.Messaging.Message.Authenticated%2A> property in conjunction with the <xref:System.Messaging.Message.SenderId%2A> property to verify the sender's access rights.</span></span>  
  
 <span data-ttu-id="fbd27-587">連接器應用程式是使用連接器伺服器來提供訊息佇列與其他佇列的系統之間通訊的應用程式。</span><span class="sxs-lookup"><span data-stu-id="fbd27-587">A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems.</span></span> <span data-ttu-id="fbd27-588">訊息佇列需要連接器應用程式提供寄件者識別碼。</span><span class="sxs-lookup"><span data-stu-id="fbd27-588">Message Queuing requires connector applications to provide sender identification.</span></span> <span data-ttu-id="fbd27-589">您必須設定<xref:System.Messaging.Message.ConnectorType%2A>時透過連接器應用程式傳送訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-589">You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-590">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-590">The message has not been sent.</span></span> <span data-ttu-id="fbd27-591">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-591">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-592">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-592">-or-</span></span> 
<span data-ttu-id="fbd27-593">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.SenderId" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-593">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
      </Docs>
    </Member>
    <Member MemberName="SenderVersion">
      <MemberSignature Language="C#" Value="public long SenderVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SenderVersion" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long SenderVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderVersion : int64" Usage="System.Messaging.Message.SenderVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderVersion")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-594">取得用來傳送訊息的訊息佇列版本。</span><span class="sxs-lookup"><span data-stu-id="fbd27-594">Gets the version of Message Queuing used to send the message.</span></span></summary>
        <value><span data-ttu-id="fbd27-595">被用來傳送訊息的訊息佇列的版本。</span><span class="sxs-lookup"><span data-stu-id="fbd27-595">The version of Message Queuing used to send the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-596"><xref:System.Messaging.Message.SenderVersion%2A>屬性是很重要的特定功能。</span><span class="sxs-lookup"><span data-stu-id="fbd27-596">The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features.</span></span> <span data-ttu-id="fbd27-597">比方說，只能由 Message Queuing 2.0 和更新版本，支援交易處理和數位簽章用來驗證 MSMQ 1.0 所傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-597">For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.</span></span>  
  
 <span data-ttu-id="fbd27-598">傳送佇列管理員設定<xref:System.Messaging.Message.SenderVersion%2A>在傳送訊息時的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-598">The sending Queue Manager sets the <xref:System.Messaging.Message.SenderVersion%2A> property when the message is sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-599">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.SenderVersion%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-599">The following code example displays the value of a message's <xref:System.Messaging.Message.SenderVersion%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-600">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-600">The message has not been sent.</span></span> <span data-ttu-id="fbd27-601">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-601">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-602">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-602">-or-</span></span> 
<span data-ttu-id="fbd27-603">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.SenderVersion" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-603">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="SentTime">
      <MemberSignature Language="C#" Value="public DateTime SentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SentTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SentTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SentTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.SentTime : DateTime" Usage="System.Messaging.Message.SentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgSentTime")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-604">取得來源佇列管理員傳送訊息時傳送電腦上的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-604">Gets the date and time on the sending computer that the message was sent by the source queue manager.</span></span></summary>
        <value><span data-ttu-id="fbd27-605"><see cref="T:System.DateTime" />，表示訊息傳送的時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-605">A <see cref="T:System.DateTime" /> that represents the time the message was sent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-606"><xref:System.Messaging.Message.SentTime%2A>屬性會調整為此電腦的當地時間的執行個體<xref:System.Messaging.Message>類別所建立。</span><span class="sxs-lookup"><span data-stu-id="fbd27-606">The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created.</span></span> <span data-ttu-id="fbd27-607">這個時區可能是不同的來源和目的端佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-607">This time zone could be different from those of the source and destination queues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-608">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.SentTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-608">The following code example displays the value of a message's <xref:System.Messaging.Message.SentTime%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-609">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-609">The message has not been sent.</span></span> <span data-ttu-id="fbd27-610">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-610">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-611">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-611">-or-</span></span> 
<span data-ttu-id="fbd27-612">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.SentTime" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-612">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SourceMachine">
      <MemberSignature Language="C#" Value="public string SourceMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceMachine" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SourceMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceMachine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceMachine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceMachine : string" Usage="System.Messaging.Message.SourceMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgSourceMachine")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-613">取得發出訊息的電腦。</span><span class="sxs-lookup"><span data-stu-id="fbd27-613">Gets the computer from which the message originated.</span></span></summary>
        <value><span data-ttu-id="fbd27-614">傳送訊息之來源電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="fbd27-614">The name of the computer from which the message was sent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-615">格式<xref:System.Messaging.Message.SourceMachine%2A>屬性不包含上述兩個正斜線 (\\\\)。</span><span class="sxs-lookup"><span data-stu-id="fbd27-615">The format of the <xref:System.Messaging.Message.SourceMachine%2A> property does not include preceding two forward slashes (\\\\).</span></span> <span data-ttu-id="fbd27-616">例如，`myServer`有效<xref:System.Messaging.Message.SourceMachine%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-616">For example, `myServer` is a valid <xref:System.Messaging.Message.SourceMachine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-617">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.SourceMachine%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-617">The following code example displays the value of a message's <xref:System.Messaging.Message.SourceMachine%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-618">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-618">The message has not been sent.</span></span> <span data-ttu-id="fbd27-619">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-619">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-620">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-620">-or-</span></span> 
<span data-ttu-id="fbd27-621">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.SourceMachine" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-621">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="fbd27-622">無法存取電腦資訊或目錄服務。</span><span class="sxs-lookup"><span data-stu-id="fbd27-622">The computer information or directory service could not be accessed.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToBeReceived : TimeSpan with get, set" Usage="System.Messaging.Message.TimeToBeReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.TimeoutConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-623">取得或設定要從目的端佇列擷取訊息的最長時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-623">Gets or sets the maximum amount of time for the message to be received from the destination queue.</span></span></summary>
        <value><span data-ttu-id="fbd27-624">從目的地佇列接收已傳送訊息所使用的總時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-624">The total time for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="fbd27-625">預設為 <see cref="F:System.Messaging.Message.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-625">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-626"><xref:System.Messaging.Message.TimeToBeReceived%2A>屬性會指定從目的端佇列接收已傳送的訊息的總時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-626">The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="fbd27-627">時間限制包含連到目的端佇列和所花費的時間，才能接收訊息佇列中等候所花費的時間。</span><span class="sxs-lookup"><span data-stu-id="fbd27-627">The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fbd27-628">當使用依存性用戶端電腦，請務必執行訊息佇列伺服器的時鐘同步處理用戶端電腦上的時鐘。</span><span class="sxs-lookup"><span data-stu-id="fbd27-628">When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing.</span></span> <span data-ttu-id="fbd27-629">傳送訊息時，無法預期的行為，否則可能會造成其<xref:System.Messaging.Message.TimeToBeReceived%2A>屬性不是<xref:System.Messaging.Message.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-629">Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>.</span></span>  
  
 <span data-ttu-id="fbd27-630">如果指定的間隔<xref:System.Messaging.Message.TimeToBeReceived%2A>屬性到期之前從佇列移除訊息，訊息佇列捨棄的訊息中有兩種。</span><span class="sxs-lookup"><span data-stu-id="fbd27-630">If the interval specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways.</span></span> <span data-ttu-id="fbd27-631">如果訊息的 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 屬性是 `true`，訊息就會傳送到寄不出的信件佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-631">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="fbd27-632">如果<xref:System.Messaging.Message.UseDeadLetterQueue%2A>是`false`，會忽略該訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-632">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored.</span></span>  
  
 <span data-ttu-id="fbd27-633">您可以設定訊息的<xref:System.Messaging.Message.AcknowledgeType%2A>屬性來要求的訊息佇列傳送負值通知訊息回到傳送應用程式如果在計時器終止前，不會擷取訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-633">You can set the message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.</span></span>  
  
 <span data-ttu-id="fbd27-634">如果所指定的值<xref:System.Messaging.Message.TimeToBeReceived%2A>屬性是所指定的值小於<xref:System.Messaging.Message.TimeToReachQueue%2A>屬性，<xref:System.Messaging.Message.TimeToBeReceived%2A>會優先使用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-634">If the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property is less than the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="fbd27-635">當在單一交易中傳送數個訊息時，訊息佇列會使用<xref:System.Messaging.Message.TimeToBeReceived%2A>第一個訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-635">When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the first message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-636">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.TimeToBeReceived%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-636">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-637">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.TimeToBeReceived" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-637">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd27-638">為 <see cref="P:System.Messaging.Message.TimeToBeReceived" /> 指定的值無效。</span><span class="sxs-lookup"><span data-stu-id="fbd27-638">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : TimeSpan with get, set" Usage="System.Messaging.Message.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.TimeoutConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-639">取得或設定訊息抵達佇列的最大時間量。</span><span class="sxs-lookup"><span data-stu-id="fbd27-639">Gets or sets the maximum amount of time for the message to reach the queue.</span></span></summary>
        <value><span data-ttu-id="fbd27-640">從傳送訊息開始至訊息到達目的地佇列的時間限制。</span><span class="sxs-lookup"><span data-stu-id="fbd27-640">The time limit for the message to reach the destination queue, beginning from the time the message is sent.</span></span> <span data-ttu-id="fbd27-641">預設為 <see cref="F:System.Messaging.Message.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-641">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-642">如果指定的間隔<xref:System.Messaging.Message.TimeToReachQueue%2A>屬性到期的訊息抵達其目的地之前，訊息佇列捨棄的訊息中有兩種。</span><span class="sxs-lookup"><span data-stu-id="fbd27-642">If the interval specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways.</span></span> <span data-ttu-id="fbd27-643">如果訊息的 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 屬性是 `true`，訊息就會傳送到寄不出的信件佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-643">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="fbd27-644">如果<xref:System.Messaging.Message.UseDeadLetterQueue%2A>是`false`，會忽略該訊息</span><span class="sxs-lookup"><span data-stu-id="fbd27-644">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored</span></span>  
  
 <span data-ttu-id="fbd27-645">您可以設定他的訊息<xref:System.Messaging.Message.AcknowledgeType%2A>屬性來要求的訊息佇列傳送負值通知訊息回到傳送應用程式如果在計時器終止前未到達的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-645">You can set he message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.</span></span>  
  
 <span data-ttu-id="fbd27-646">如果<xref:System.Messaging.Message.TimeToReachQueue%2A>屬性設定為 0 秒時，訊息佇列會嘗試一次將訊息傳送至其目的地-如果佇列正等待訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-646">If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination - if the queue is waiting for the message.</span></span> <span data-ttu-id="fbd27-647">如果本機佇列，訊息永遠會到達。</span><span class="sxs-lookup"><span data-stu-id="fbd27-647">If the queue is local, the message always reaches it.</span></span>  
  
 <span data-ttu-id="fbd27-648">如果所指定的值<xref:System.Messaging.Message.TimeToReachQueue%2A>屬性所指定的值大於<xref:System.Messaging.Message.TimeToBeReceived%2A>屬性，<xref:System.Messaging.Message.TimeToBeReceived%2A>會優先使用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-648">If the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is greater than the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="fbd27-649">當在單一交易中傳送數個訊息時，訊息佇列會使用<xref:System.Messaging.Message.TimeToReachQueue%2A>第一個訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-649">When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the first message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-650">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.TimeToReachQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-650">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToReachQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-651">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.TimeToReachQueue" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-651">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd27-652">為 <see cref="P:System.Messaging.Message.TimeToReachQueue" /> 指定的值無效。</span><span class="sxs-lookup"><span data-stu-id="fbd27-652">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid.</span></span> <span data-ttu-id="fbd27-653">可能表示負數。</span><span class="sxs-lookup"><span data-stu-id="fbd27-653">It might represent a negative number.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public string TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionId : string" Usage="System.Messaging.Message.TransactionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionId")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-654">取得訊息所屬交易的識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-654">Gets the identifier for the transaction of which the message was a part.</span></span></summary>
        <value><span data-ttu-id="fbd27-655">與訊息相關聯之交易的識別項。</span><span class="sxs-lookup"><span data-stu-id="fbd27-655">The identifier for the transaction associated with the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-656">接收應用程式使用<xref:System.Messaging.Message.TransactionId%2A>屬性，確認已為特定交易的一部分傳送一則訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-656">Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction.</span></span> <span data-ttu-id="fbd27-657">交易識別碼包含在傳送端電腦 （第一個 16 位元），後面接著一個 4 位元組交易序號的識別碼。</span><span class="sxs-lookup"><span data-stu-id="fbd27-657">The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.</span></span>  
  
 <span data-ttu-id="fbd27-658">這個屬性是僅適用於訊息佇列版本 2.0 和更新版本。</span><span class="sxs-lookup"><span data-stu-id="fbd27-658">This property is available only for Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="fbd27-659">交易識別項不保證是唯一的因為交易序號不具持續性，然後他們重新 2 <sup>20</sup>。</span><span class="sxs-lookup"><span data-stu-id="fbd27-659">Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <sup>20</sup>.</span></span> <span data-ttu-id="fbd27-660">訊息佇列只能保證，後續的交易都會都有不同的交易序號。</span><span class="sxs-lookup"><span data-stu-id="fbd27-660">Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.</span></span>  
  
 <span data-ttu-id="fbd27-661">您可以使用<xref:System.Messaging.Message.TransactionId%2A>屬性連同<xref:System.Messaging.Message.IsFirstInTransaction%2A>和<xref:System.Messaging.Message.IsLastInTransaction%2A>屬性，以確認交易界限。</span><span class="sxs-lookup"><span data-stu-id="fbd27-661">You can use the <xref:System.Messaging.Message.TransactionId%2A> property along with the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties to verify transaction boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-662">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.TransactionId%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-662">The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionId%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-663">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-663">The message has not been sent.</span></span> <span data-ttu-id="fbd27-664">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-664">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-665">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-665">-or-</span></span> 
<span data-ttu-id="fbd27-666">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.TransactionId" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-666">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionStatusQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.TransactionStatusQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-667">取得來源電腦上的異動狀態佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-667">Gets the transaction status queue on the source computer.</span></span></summary>
        <value><span data-ttu-id="fbd27-668">來源電腦上的異動狀態佇列，用來傳回認可訊息至傳送的應用程式。</span><span class="sxs-lookup"><span data-stu-id="fbd27-668">The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.</span></span> <span data-ttu-id="fbd27-669">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-669">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-670"><xref:System.Messaging.Message.TransactionStatusQueue%2A>屬性會識別讀取回條通知接收連接器應用程式的來源電腦上的交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-670">The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications.</span></span> <span data-ttu-id="fbd27-671">訊息佇列設定屬性，並擷取交易式傳送至外部佇列的訊息時，連接器應用程式會使用屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-671">Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.</span></span>  
  
 <span data-ttu-id="fbd27-672">在非 Microsoft Message Queuing 的佇列系統中存在的外部索引的佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-672">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="fbd27-673">訊息佇列通訊使用透過連接器應用程式這類佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-673">Message Queuing communicates with such queues through a connector application.</span></span>  
  
 <span data-ttu-id="fbd27-674">連接器應用程式可以使用的異動狀態佇列來傳送通知訊息傳回給傳送應用程式。</span><span class="sxs-lookup"><span data-stu-id="fbd27-674">The connector application can use the transaction status queue to send acknowledgment messages back to the sending application.</span></span> <span data-ttu-id="fbd27-675">即使傳送的應用程式不會要求其他認可的交易狀態應該會收到這些通知。</span><span class="sxs-lookup"><span data-stu-id="fbd27-675">The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-676">下列程式碼範例會顯示訊息的值<xref:System.Messaging.Message.TransactionStatusQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-676">The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionStatusQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-677">未傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-677">The message has not been sent.</span></span> <span data-ttu-id="fbd27-678">這個屬性只能在從佇列擷取的訊息中讀取。</span><span class="sxs-lookup"><span data-stu-id="fbd27-678">This property can only be read on messages retrieved from a queue.</span></span>  
  
<span data-ttu-id="fbd27-679">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd27-679">-or-</span></span> 
<span data-ttu-id="fbd27-680">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-680">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.DestinationQueue" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAuthentication : bool with get, set" Usage="System.Messaging.Message.UseAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-681">取得或設定值，指出訊息在傳送之前是否已經 (或必須) 驗證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-681">Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</span></span></summary>
        <value><span data-ttu-id="fbd27-682">如果傳送的應用程式要求訊息的驗證則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-682"><see langword="true" /> if the sending application requested authentication for the message; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-683"><xref:System.Messaging.Message.UseAuthentication%2A>屬性會指定訊息是否需要進行驗證。</span><span class="sxs-lookup"><span data-stu-id="fbd27-683">The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated.</span></span> <span data-ttu-id="fbd27-684">如果傳送應用程式要求驗證時，訊息佇列會建立數位簽章，並使用它來簽署訊息，傳送和接收時，驗證訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-684">If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.</span></span>  
  
 <span data-ttu-id="fbd27-685">如果<xref:System.Messaging.Message.UseAuthentication%2A>是`false`和訊息傳送至佇列只接受已驗證的訊息、 在到達佇列的訊息將會遭到拒絕。</span><span class="sxs-lookup"><span data-stu-id="fbd27-685">If <xref:System.Messaging.Message.UseAuthentication%2A> is `false` and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue.</span></span>  
  
 <span data-ttu-id="fbd27-686">您無法判斷是否訊息無法通過驗證藉由查看其屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-686">You cannot determine if a message failed authentication by looking at its properties.</span></span> <span data-ttu-id="fbd27-687">訊息佇列會捨棄這類訊息之前傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-687">Message Queuing discards such messages before they are delivered to the queue.</span></span> <span data-ttu-id="fbd27-688">不過，您可以要求，如果傳遞失敗可防止訊息到達佇列中之傳送通知訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-688">However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-689">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.UseAuthentication" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-689">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDeadLetterQueue : bool with get, set" Usage="System.Messaging.Message.UseDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-690">取得或設定值，指出是否應該將無法傳遞的訊息複本傳送至無法投遞的信件佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-690">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span></span></summary>
        <value><span data-ttu-id="fbd27-691">如果訊息傳遞錯誤會導致將訊息複本傳送至無法投遞的信件佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-691"><see langword="true" /> if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbd27-692">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-692">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-693"><xref:System.Messaging.Message.UseJournalQueue%2A>和<xref:System.Messaging.Message.UseDeadLetterQueue%2A>屬性會指定如何追蹤訊息佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-693">The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message.</span></span> <span data-ttu-id="fbd27-694">如果<xref:System.Messaging.Message.UseDeadLetterQueue%2A>是`true`，傳遞失敗 （的非交易式訊息），會導致訊息傳送至非異動式寄不出信件佇列無法傳遞訊息的電腦上。</span><span class="sxs-lookup"><span data-stu-id="fbd27-694">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message.</span></span> <span data-ttu-id="fbd27-695">傳遞失敗，可能是郵件計時器過期，例如所造成的。</span><span class="sxs-lookup"><span data-stu-id="fbd27-695">Delivery failure could be caused by a message timer expiring, for example.</span></span>  
  
 <span data-ttu-id="fbd27-696">在交易式訊息的傳遞失敗，訊息佇列傳送訊息至交易式寄不出信件佇列在所有負數且不確定的情況下在來源機器上。</span><span class="sxs-lookup"><span data-stu-id="fbd27-696">In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.</span></span>  
  
 <span data-ttu-id="fbd27-697">當您將訊息儲存在寄不出信件佇列中時，您應該清除定期以移除不再需要的訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-697">When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="fbd27-698">在寄不出信件佇列對佇列所在的電腦的大小配額的計數中儲存的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-698">Messages stored in dead-letter queues count against the size quota for the computer where the queue resides.</span></span> <span data-ttu-id="fbd27-699">電腦配額由系統管理員所設定，而是指配置來儲存訊息的整個電腦上，不只是在單一佇列的大小。</span><span class="sxs-lookup"><span data-stu-id="fbd27-699">The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.</span></span>  
  
 <span data-ttu-id="fbd27-700">您不想建立日誌或寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-700">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="fbd27-701">這些是訊息佇列產生這兩個系統佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-701">These are both system queues that Message Queuing generates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-702">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.UseDeadLetterQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-702">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-703">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-703">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseEncryption : bool with get, set" Usage="System.Messaging.Message.UseEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-704">取得或設定值，指出是否將訊息設成私用。</span><span class="sxs-lookup"><span data-stu-id="fbd27-704">Gets or sets a value that indicates whether to make the message private.</span></span></summary>
        <value><span data-ttu-id="fbd27-705">如果要求訊息佇列為訊息加密則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-705"><see langword="true" /> to require Message Queuing to encrypt the message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbd27-706">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-706">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-707">若為私人訊息之前傳送和接收時解密加密其主體。</span><span class="sxs-lookup"><span data-stu-id="fbd27-707">If a message is private, its body is encrypted before it is sent and decrypted when it is received.</span></span> <span data-ttu-id="fbd27-708">若要傳送的私用訊息，傳送應用程式必須指定用於加密和 （選擇性） 的加密演算法。</span><span class="sxs-lookup"><span data-stu-id="fbd27-708">To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.</span></span>  
  
 <span data-ttu-id="fbd27-709">傳送私人訊息時，您的應用程式不必執行訊息加密。</span><span class="sxs-lookup"><span data-stu-id="fbd27-709">When sending private messages, your application does not need to perform the message encryption.</span></span> <span data-ttu-id="fbd27-710">訊息佇列可讓您加密訊息本文，如果您的應用程式會傳送 Microsoft Windows 2000 企業中，有權存取目錄服務內的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-710">Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service.</span></span> <span data-ttu-id="fbd27-711">接收私用的訊息時，接收佇列管理員一律會解密訊息內文。</span><span class="sxs-lookup"><span data-stu-id="fbd27-711">When receiving private messages, the receiving Queue Manager always decrypts the message body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-712">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.UseEncryption%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-712">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseEncryption%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-713">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.UseEncryption" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-713">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.Message.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-714">取得或設定值，指出訊息複本是否應保留在原始電腦上的電腦日誌中。</span><span class="sxs-lookup"><span data-stu-id="fbd27-714">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span></span></summary>
        <value><span data-ttu-id="fbd27-715">如果要求在訊息成功地傳輸 (從原始電腦至下一個伺服器) 後，在原始電腦的電腦日誌中保留訊息的複本則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-715"><see langword="true" /> to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbd27-716">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-716">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-717"><xref:System.Messaging.Message.UseJournalQueue%2A>和<xref:System.Messaging.Message.UseDeadLetterQueue%2A>屬性會指定如何追蹤訊息佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-717">The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message.</span></span> <span data-ttu-id="fbd27-718">如果<xref:System.Messaging.Message.UseJournalQueue%2A>是`true`，則複本會保存每個步驟，訊息會傳輸原始的電腦上電腦日誌中。</span><span class="sxs-lookup"><span data-stu-id="fbd27-718">If <xref:System.Messaging.Message.UseJournalQueue%2A> is `true`, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.</span></span>  
  
 <span data-ttu-id="fbd27-719">如果目的地佇列是在遠端電腦上，則傳送的訊息只會複製到日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-719">The sent message is only copied to the journal queue if the destination queue is on a remote computer.</span></span> <span data-ttu-id="fbd27-720">如果目的地是在本機電腦上，訊息會直接傳送至佇列沒有任何需要的日誌功能的中繼步驟。</span><span class="sxs-lookup"><span data-stu-id="fbd27-720">If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.</span></span>  
  
 <span data-ttu-id="fbd27-721">當您將訊息儲存在日誌佇列中時，清除 定期以移除不再需要的訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-721">When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="fbd27-722">計算儲存在日誌佇列的佇列所在的電腦配額的訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-722">Messages stored in journal queues count against the quota for the computer where the queue resides.</span></span> <span data-ttu-id="fbd27-723">（由系統管理員會設定電腦配額）。</span><span class="sxs-lookup"><span data-stu-id="fbd27-723">(The computer quota is set by the administrator.)</span></span>  
  
 <span data-ttu-id="fbd27-724">您不想建立日誌或寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-724">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="fbd27-725">這些是訊息佇列產生這兩個系統佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-725">These are both system queues that Message Queuing generates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-726">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.UseJournalQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-726">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseJournalQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-727">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.UseJournalQueue" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-727">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseTracing : bool with get, set" Usage="System.Messaging.Message.UseTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd27-728">取得或設定值，指出當訊息向其目的佇列移動時是否要追蹤訊息。</span><span class="sxs-lookup"><span data-stu-id="fbd27-728">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span></span></summary>
        <value><span data-ttu-id="fbd27-729">如果原始訊息路由至目的佇列的每個中間步驟都會產生要傳送至系統報告佇列的報告，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-729"><see langword="true" /> if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbd27-730">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd27-730">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd27-731"><xref:System.Messaging.Message.UseTracing%2A>屬性會指定是否要向其目的佇列移動追蹤之訊息的路由。</span><span class="sxs-lookup"><span data-stu-id="fbd27-731">The <xref:System.Messaging.Message.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue.</span></span> <span data-ttu-id="fbd27-732">如果`true`，訊息會通過訊息佇列路由伺服器每次傳送 （由訊息佇列產生） 報告訊息至報告佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-732">If `true`, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server.</span></span> <span data-ttu-id="fbd27-733">來源佇列管理員所指定的報告佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-733">The report queue is specified by the source Queue Manager.</span></span> <span data-ttu-id="fbd27-734">報告佇列並不限於由訊息佇列; 產生的報告訊息您應用程式所產生的訊息也會傳送到報告佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-734">Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.</span></span>  
  
 <span data-ttu-id="fbd27-735">使用追蹤，牽涉到設定 Active Directory，並指定訊息佇列企業版的報告佇列。</span><span class="sxs-lookup"><span data-stu-id="fbd27-735">Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise.</span></span> <span data-ttu-id="fbd27-736">系統管理員會設定這些設定。</span><span class="sxs-lookup"><span data-stu-id="fbd27-736">The administrator configures these settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd27-737">下列程式碼範例取得並設定訊息的值<xref:System.Messaging.Message.UseTracing%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-737">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseTracing%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd27-738">篩選訊息佇列以忽略 <see cref="P:System.Messaging.Message.UseTracing" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd27-738">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
  </Members>
</Type>