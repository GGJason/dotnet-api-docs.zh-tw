<Type Name="ReceiveCompletedEventArgs" FullName="System.Messaging.ReceiveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40fb7c4c36e8a9ddbae569f24bf33f51c4c52063" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37479099" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReceiveCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ReceiveCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ReceiveCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b7b6d-101">提供 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 事件的資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7b6d-101">Provides data for the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event.</span>
      </span>
      <span data-ttu-id="b7b6d-102">當非同步 (Asynchronous) 接收作業呼叫事件處理常式時，會將這個類別的執行個體 (Instance) 傳遞至處理常式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7b6d-102">When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7b6d-103">當您使用事件通知以非同步方式從佇列接收訊息時，您必須建立處理訊息的方法。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-103">When you use event notification to receive messages asynchronously from the queue, you must create a method that handles your message processing.</span></span> <span data-ttu-id="b7b6d-104">您的程式碼必須呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>開始非同步處理程序。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-104">Your code must call <xref:System.Messaging.MessageQueue.BeginReceive%2A> to begin the asynchronous processing.</span></span> <span data-ttu-id="b7b6d-105">當收到訊息時，您的應用程式會收到通知，透過<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-105">When a message is received, your application is notified through the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="b7b6d-106">執行個體<xref:System.Messaging.ReceiveCompletedEventArgs>傳入呼叫事件處理常式的事件委派。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-106">An instance of <xref:System.Messaging.ReceiveCompletedEventArgs> is passed into the event delegate that calls your event handler.</span></span> <span data-ttu-id="b7b6d-107">與相關聯的資料<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件包含在委派的<xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>參數。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-107">The data associated with the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is contained in the delegate's <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parameter.</span></span>  
  
 <span data-ttu-id="b7b6d-108">有兩種方式可提供事件完成的通知： 事件通知和回呼。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-108">There are two ways to provide notification of event completion: event notification and callbacks.</span></span> <span data-ttu-id="b7b6d-109"><xref:System.Messaging.ReceiveCompletedEventArgs> 只用於事件通知。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-109"><xref:System.Messaging.ReceiveCompletedEventArgs> is used only with event notification.</span></span> <span data-ttu-id="b7b6d-110">比較回呼和事件通知的資訊，請參閱 < 事件與比較。回呼 」 MSDN 上。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-110">For information comparing callbacks and event notification, see "Events vs. Callbacks" on MSDN.</span></span>  
  
 <span data-ttu-id="b7b6d-111"><xref:System.Messaging.ReceiveCompletedEventArgs> 可讓您存取的訊息，起始端的非同步接收作業，透過<xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-111"><xref:System.Messaging.ReceiveCompletedEventArgs> provides access to the message that initiated the end of the asynchronous receive operation, through the <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> member.</span></span> <span data-ttu-id="b7b6d-112">這是替代存取的訊息，與行為就如同呼叫<xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-112">This is an alternate access to the message, and behaves much the same as a call to <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7b6d-113">下列程式碼範例會建立事件處理常式<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，並將它與事件委派使用<xref:System.Messaging.ReceiveCompletedEventHandler>。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-113">The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.ReceiveCompletedEventHandler>.</span></span> <span data-ttu-id="b7b6d-114">事件處理常式`MyReceiveCompleted`、 從佇列接收訊息並將其主體寫入螢幕。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-114">The event handler, `MyReceiveCompleted`, receives a message from a queue and writes its body to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7b6d-115">取得或設定要求的非同步作業結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7b6d-115">Gets or sets the result of the asynchronous operation requested.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7b6d-116">
            <see cref="T:System.IAsyncResult" />，包含與接收作業相關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7b6d-116">A <see cref="T:System.IAsyncResult" /> that contains the data associated with the receive operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7b6d-117"><xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> 指出正在進行中或已完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-117"><xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> identifies ongoing or completed asynchronous operations.</span></span> <span data-ttu-id="b7b6d-118">屬性包含資料，以協助判斷哪些數個潛在的非同步作業完成，並傳遞至事件處理常式時，可讓<xref:System.Messaging.MessageQueue.EndReceive%2A>存取已完成之作業相關聯的訊息。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-118">The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <xref:System.Messaging.MessageQueue.EndReceive%2A> to access the message associated with the completed operation.</span></span>  
  
 <span data-ttu-id="b7b6d-119">當您呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>、<xref:System.IAsyncResult>即使訊息時，如果有的話，有尚未擷取作業未完成，因為會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-119">When you call <xref:System.Messaging.MessageQueue.BeginReceive%2A>, a <xref:System.IAsyncResult> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed.</span></span> <span data-ttu-id="b7b6d-120"><xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>表示非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-120">The <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> indicates the state of the asynchronous operation.</span></span> <span data-ttu-id="b7b6d-121"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 建立物件，因為它會修改在整個作業，直到<xref:System.Messaging.MessageQueue.EndReceive%2A>完成它。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-121"><xref:System.Messaging.MessageQueue.BeginReceive%2A> creates the object, which is modified throughout the operation until <xref:System.Messaging.MessageQueue.EndReceive%2A> completes it.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7b6d-122">取得與非同步接收作業關聯的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7b6d-122">Gets the message associated with the asynchronous receive operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7b6d-123">
            <see cref="T:System.Messaging.Message" />，表示非同步接收作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7b6d-123">A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous receive operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7b6d-124"><xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>屬性會提供方法來擷取訊息，起始端的非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-124">The <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> property provides a means for retrieving the message that initiated the end of the asynchronous receive operation.</span></span>  
  
 <span data-ttu-id="b7b6d-125"><xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> 第一次呼叫<xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>屬性唯讀，因此不需要呼叫<xref:System.Messaging.MessageQueue.EndReceive%2A>之前取得這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="b7b6d-125"><xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> is called the first time the <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> property is read, so it is not necessary to call <xref:System.Messaging.MessageQueue.EndReceive%2A> prior to getting the value of this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="b7b6d-126">無法擷取 <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7b6d-126">The <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> could not be retrieved.</span>
          </span>
          <span data-ttu-id="b7b6d-127">非同步作業可能已經逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7b6d-127">The time-out on the asynchronous operation might have expired.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>