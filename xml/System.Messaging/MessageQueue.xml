<Type Name="MessageQueue" FullName="System.Messaging.MessageQueue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f362dd97709b65574ff7b9474682818d0cb2c4b1" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32038290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueue : System.ComponentModel.Component, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueue extends System.ComponentModel.Component implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueue&#xA;Inherits Component&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueue : System::ComponentModel::Component, System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ReceiveCompleted")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Messaging.MessageQueueInstaller))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageQueueConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1106c-101">提供 Message Queuing 伺服器上的佇列存取。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1106c-101">Provides access to a queue on a Message Queuing server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-102">Message Queuing 技術可讓不同時間執行的應用程式跨越可能暫時離線的異質網路和系統彼此通訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-102">The Message Queuing technology allows applications running at different times to communicate across heterogeneous networks and systems that might be temporarily offline.</span></span> <span data-ttu-id="1106c-103">應用程式傳送、 接收或窺視 （讀取而不移除） 來自佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-103">Applications send, receive, or peek (read without removing) messages from queues.</span></span> <span data-ttu-id="1106c-104">訊息佇列是的選用元件[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]和 Windows NT 和必須另行安裝。</span><span class="sxs-lookup"><span data-stu-id="1106c-104">Message Queuing is an optional component of [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] and Windows NT, and must be installed separately.</span></span>  
  
 <span data-ttu-id="1106c-105"><xref:System.Messaging.MessageQueue>類別是訊息佇列的包裝函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-105">The <xref:System.Messaging.MessageQueue> class is a wrapper around Message Queuing.</span></span> <span data-ttu-id="1106c-106">有多個版本的訊息佇列，並使用<xref:System.Messaging.MessageQueue>類別可能會導致稍微不同的行為，而您使用視作業系統而定。</span><span class="sxs-lookup"><span data-stu-id="1106c-106">There are multiple versions of Message Queuing, and using the <xref:System.Messaging.MessageQueue> class can result in slightly different behavior, depending on the operating system you are using.</span></span> <span data-ttu-id="1106c-107">之特定功能的每個版本的訊息佇列的資訊，請參閱 MSDN 中的平台 SDK 中的 < 什麼是訊息佇列的新 > 主題。</span><span class="sxs-lookup"><span data-stu-id="1106c-107">For information about specific features of each version of Message Queuing, see the topic "What's New in Message Queuing" in the Platform SDK in MSDN.</span></span>  
  
 <span data-ttu-id="1106c-108"><xref:System.Messaging.MessageQueue>類別會提供訊息佇列 」 佇列的參考。</span><span class="sxs-lookup"><span data-stu-id="1106c-108">The <xref:System.Messaging.MessageQueue> class provides a reference to a Message Queuing queue.</span></span> <span data-ttu-id="1106c-109">您可以指定的路徑<xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式來連接到現有的資源，或者您可以在伺服器上建立新的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-109">You can specify a path in the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor to connect to an existing resource, or you can create a new queue on the server.</span></span> <span data-ttu-id="1106c-110">您可以呼叫之前<xref:System.Messaging.MessageQueue.Send%28System.Object%29>， <xref:System.Messaging.MessageQueue.Peek%2A>，或<xref:System.Messaging.MessageQueue.Receive%2A>，您必須建立關聯的新執行個體<xref:System.Messaging.MessageQueue>類別與現有的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-110">Before you can call <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, or <xref:System.Messaging.MessageQueue.Receive%2A>, you must associate the new instance of the <xref:System.Messaging.MessageQueue> class with an existing queue.</span></span> <span data-ttu-id="1106c-111">此時，您就可以操作佇列屬性例如<xref:System.Messaging.MessageQueue.Category%2A>和<xref:System.Messaging.MessageQueue.Label%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-111">At that point, you can manipulate the queue properties such as <xref:System.Messaging.MessageQueue.Category%2A> and <xref:System.Messaging.MessageQueue.Label%2A>.</span></span>  
  
 <span data-ttu-id="1106c-112"><xref:System.Messaging.MessageQueue> 支援兩種擷取訊息類型： 同步和非同步。</span><span class="sxs-lookup"><span data-stu-id="1106c-112"><xref:System.Messaging.MessageQueue> supports two types of message retrieval: synchronous and asynchronous.</span></span> <span data-ttu-id="1106c-113">同步方法，<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.Receive%2A>，導致處理序執行緒等待新訊息到達佇列中的指定的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="1106c-113">The synchronous methods, <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.Receive%2A>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-114">非同步方法，<xref:System.Messaging.MessageQueue.BeginPeek%2A>和<xref:System.Messaging.MessageQueue.BeginReceive%2A>，讓主應用程式工作在不同的執行緒中繼續，直到訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-114">The asynchronous methods, <xref:System.Messaging.MessageQueue.BeginPeek%2A> and <xref:System.Messaging.MessageQueue.BeginReceive%2A>, allow the main application tasks to continue in a separate thread until a message arrives in the queue.</span></span> <span data-ttu-id="1106c-115">這些方法的運作中溝通資訊在執行緒之間使用回呼與狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-115">These methods work by using callback objects and state objects to communicate information between threads.</span></span>  
  
 <span data-ttu-id="1106c-116">當您建立的新執行個體<xref:System.Messaging.MessageQueue>類別，您不需要建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-116">When you create a new instance of the <xref:System.Messaging.MessageQueue> class, you are not creating a new Message Queuing queue.</span></span> <span data-ttu-id="1106c-117">相反地，您可以使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>， <xref:System.Messaging.MessageQueue.Delete%28System.String%29>，和<xref:System.Messaging.MessageQueue.Purge%2A>方法，以管理伺服器上的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-117">Instead, you can use the <xref:System.Messaging.MessageQueue.Create%28System.String%29>, <xref:System.Messaging.MessageQueue.Delete%28System.String%29>, and <xref:System.Messaging.MessageQueue.Purge%2A> methods to manage queues on the server.</span></span>  
  
 <span data-ttu-id="1106c-118">不同於<xref:System.Messaging.MessageQueue.Purge%2A>，<xref:System.Messaging.MessageQueue.Create%28System.String%29>和<xref:System.Messaging.MessageQueue.Delete%28System.String%29>是`static`成員，因此您可以呼叫它們，而不需要建立的新執行個體<xref:System.Messaging.MessageQueue>類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-118">Unlike <xref:System.Messaging.MessageQueue.Purge%2A>, <xref:System.Messaging.MessageQueue.Create%28System.String%29> and <xref:System.Messaging.MessageQueue.Delete%28System.String%29> are `static` members, so you can call them without creating a new instance of the <xref:System.Messaging.MessageQueue> class.</span></span>  
  
 <span data-ttu-id="1106c-119">您可以設定<xref:System.Messaging.MessageQueue>物件的<xref:System.Messaging.MessageQueue.Path%2A>具有三個名稱的其中一個屬性： 易記的名稱， <xref:System.Messaging.MessageQueue.FormatName%2A>，或<xref:System.Messaging.MessageQueue.Label%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-119">You can set the <xref:System.Messaging.MessageQueue> object's <xref:System.Messaging.MessageQueue.Path%2A> property with one of three names: the friendly name, the <xref:System.Messaging.MessageQueue.FormatName%2A>, or the <xref:System.Messaging.MessageQueue.Label%2A>.</span></span> <span data-ttu-id="1106c-120">易記名稱，由佇列所定義<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>屬性，是<xref:System.Messaging.MessageQueue.MachineName%2A> \\ <xref:System.Messaging.MessageQueue.QueueName%2A>公用佇列，並<xref:System.Messaging.MessageQueue.MachineName%2A> \\ `Private$` \\ <xref:System.Messaging.MessageQueue.QueueName%2A>私用佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-120">The friendly name, which is defined by the queue's <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties, is <xref:System.Messaging.MessageQueue.MachineName%2A>\\<xref:System.Messaging.MessageQueue.QueueName%2A> for a public queue, and <xref:System.Messaging.MessageQueue.MachineName%2A>\\`Private$`\\<xref:System.Messaging.MessageQueue.QueueName%2A> for a private queue.</span></span> <span data-ttu-id="1106c-121"><xref:System.Messaging.MessageQueue.FormatName%2A>屬性可讓訊息佇列離線存取。</span><span class="sxs-lookup"><span data-stu-id="1106c-121">The <xref:System.Messaging.MessageQueue.FormatName%2A> property allows offline access to message queues.</span></span> <span data-ttu-id="1106c-122">最後，您可以使用佇列的<xref:System.Messaging.MessageQueue.Label%2A>屬性來設定佇列的<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-122">Lastly, you can use the queue's <xref:System.Messaging.MessageQueue.Label%2A> property to set the queue's <xref:System.Messaging.MessageQueue.Path%2A>.</span></span>  
  
 <span data-ttu-id="1106c-123">如需執行個體的初始屬性值的清單<xref:System.Messaging.MessageQueue>，請參閱<xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-123">For a list of initial property values for an instance of <xref:System.Messaging.MessageQueue>, see the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1106c-124">下列程式碼範例建立新<xref:System.Messaging.MessageQueue>物件，使用不同的路徑名稱語法類型。</span><span class="sxs-lookup"><span data-stu-id="1106c-124">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="1106c-125">在每個案例中，它會傳送訊息至佇列的路徑在建構函式中定義。</span><span class="sxs-lookup"><span data-stu-id="1106c-125">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 <span data-ttu-id="1106c-126">下列程式碼範例將訊息傳送至佇列，並從佇列中，使用特定應用程式類別，稱為接收訊息`Order`。</span><span class="sxs-lookup"><span data-stu-id="1106c-126">The following code example sends a message to a queue, and receives a message from a queue, using an application-specific class called `Order`.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CPP/mqreceive_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Receive_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CS/mqreceive_noparms.cs#1)]
 [!code-vb[MessageQueue.Receive_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_noparms/VB/mqreceive_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="1106c-127">只有<see cref="M:System.Messaging.MessageQueue.GetAllMessages" />方法是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1106c-127">Only the <see cref="M:System.Messaging.MessageQueue.GetAllMessages" /> method is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
    <altmember cref="T:System.Messaging.MessageQueueException" />
    <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
    <altmember cref="M:System.Messaging.MessageQueue.Peek" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="P:System.Messaging.MessageQueue.Path" />
    <altmember cref="P:System.Messaging.MessageQueue.Label" />
    <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
    <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
    <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-128">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-128">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-129">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-129">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
          <span data-ttu-id="1106c-130">在預設建構函式將新執行個體初始化之後，您必須先設定執行個體的 <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性，才能夠使用執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-130">After the default constructor initializes the new instance, you must set the instance's <see cref="P:System.Messaging.MessageQueue.Path" /> property before you can use the instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-131">若要建立的新執行個體使用此多載<xref:System.Messaging.MessageQueue>未立即繫結至訊息佇列伺服器上的佇列的類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-131">Use this overload to create a new instance of the <xref:System.Messaging.MessageQueue> class that is not immediately tied to a queue on the Message Queuing server.</span></span> <span data-ttu-id="1106c-132">才能使用這個執行個體，您必須連接到現有的 「 訊息佇列 」 佇列設定<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-132">Before using this instance, you must connect it to an existing Message Queuing queue by setting the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span> <span data-ttu-id="1106c-133">或者，您可以設定<xref:System.Messaging.MessageQueue>參考<xref:System.Messaging.MessageQueue.Create%28System.String%29>方法的傳回值，藉此建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-133">Alternatively, you can set the <xref:System.Messaging.MessageQueue> reference to the <xref:System.Messaging.MessageQueue.Create%28System.String%29> method's return value, thereby creating a new Message Queuing queue.</span></span>  
  
 <span data-ttu-id="1106c-134"><xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式具現化的新執行個體<xref:System.Messaging.MessageQueue>類別; 它不會建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-134">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor instantiates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span>  
  
 <span data-ttu-id="1106c-135">下表顯示的執行個體的初始屬性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-135">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span>  
  
|<span data-ttu-id="1106c-136">屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-136">Property</span></span>|<span data-ttu-id="1106c-137">Initial value</span><span class="sxs-lookup"><span data-stu-id="1106c-137">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="1106c-138">預設建構函式所設定的值<xref:System.Messaging.DefaultPropertiesToSend>類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-138">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<xref:System.Messaging.XmlMessageFormatter>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="1106c-139">預設建構函式所設定的值<xref:System.Messaging.MessagePropertyFilter>類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-139">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span> <span data-ttu-id="1106c-140">所有篩選值都會都設為`true`。</span><span class="sxs-lookup"><span data-stu-id="1106c-140">All the filter values are set to `true`.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-141">下列程式碼範例會建立新<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-141">The following code example creates a new <xref:System.Messaging.MessageQueue>.</span></span>  
  
 [!code-csharp[MessageQueue#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-142">這個 <see cref="T:System.Messaging.MessageQueue" /> 所參考的佇列位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-142">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-143">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體，這個執行個體會參考指定路徑的訊息佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-143">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-144">當您想要將新的繫結使用此多載<xref:System.Messaging.MessageQueue>特定訊息佇列 」 佇列，您知道的路徑，格式名稱或標籤的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-144">Use this overload when you want to tie the new <xref:System.Messaging.MessageQueue> instance to a particular Message Queuing queue, for which you know the path, format name, or label.</span></span> <span data-ttu-id="1106c-145">如果您想要授與獨佔存取權的第一個應用程式參考佇列，您必須設定<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>屬性`true`或使用傳遞的讀取權限限制參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-145">If you want to grant exclusive access to the first application that references the queue, you must set the <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property to `true` or use the constructor that passes a read-access restriction parameter.</span></span>  
  
 <span data-ttu-id="1106c-146"><xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式具現化的新執行個體<xref:System.Messaging.MessageQueue>類別; 它不會建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-146">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor instantiates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span> <span data-ttu-id="1106c-147">若要建立新的佇列中訊息佇列，使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-147">To create a new queue in Message Queuing, use <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="1106c-148">語法`path`參數取決於佇列類型它的參考下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-148">The syntax of the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-149">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-149">Queue type</span></span>|<span data-ttu-id="1106c-150">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-150">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-151">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-151">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="1106c-152">私用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-152">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="1106c-153">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-153">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="1106c-154">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-154">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="1106c-155">機器寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-155">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="1106c-156">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-156">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="1106c-157">或者，您可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>來描述為佇列路徑下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-157">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-158">參考資料</span><span class="sxs-lookup"><span data-stu-id="1106c-158">Reference</span></span>|<span data-ttu-id="1106c-159">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-159">Syntax</span></span>|<span data-ttu-id="1106c-160">範例</span><span class="sxs-lookup"><span data-stu-id="1106c-160">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="1106c-161">格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-161">Format name</span></span>|<span data-ttu-id="1106c-162">`FormatName:` [*格式名稱*]</span><span class="sxs-lookup"><span data-stu-id="1106c-162">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="1106c-163">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="1106c-163">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span><br /><br /> <span data-ttu-id="1106c-164">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="1106c-164">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="1106c-165">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="1106c-165">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="1106c-166">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="1106c-166">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span></span>|  
|<span data-ttu-id="1106c-167">ThisAddIn</span><span class="sxs-lookup"><span data-stu-id="1106c-167">Label</span></span>|<span data-ttu-id="1106c-168">`Label:` [*標籤*]</span><span class="sxs-lookup"><span data-stu-id="1106c-168">`Label:` [ *label* ]</span></span>|<span data-ttu-id="1106c-169">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="1106c-169">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="1106c-170">若要離線工作，您必須使用格式名稱語法不建構函式的路徑名稱語法。</span><span class="sxs-lookup"><span data-stu-id="1106c-170">To work offline, you must use the format name syntax, not the path name syntax for the constructor.</span></span> <span data-ttu-id="1106c-171">否則，因為主要網域控制站不是可解析成格式名稱的路徑，便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-171">Otherwise, an exception is thrown because the primary domain controller is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="1106c-172">下表顯示的執行個體的初始屬性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-172">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="1106c-173">這些值會與所指定的路徑時根據訊息佇列的屬性`path`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-173">These values are based on the properties of the Message Queuing queue with the path specified by the `path` parameter.</span></span>  
  
|<span data-ttu-id="1106c-174">屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-174">Property</span></span>|<span data-ttu-id="1106c-175">Initial value</span><span class="sxs-lookup"><span data-stu-id="1106c-175">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.Authenticate%2A>|`false`|  
|<xref:System.Messaging.MessageQueue.BasePriority%2A>|<span data-ttu-id="1106c-176">0</span><span class="sxs-lookup"><span data-stu-id="1106c-176">0</span></span>|  
|<xref:System.Messaging.MessageQueue.Category%2A>|<xref:System.Guid.Empty>|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="1106c-177">預設建構函式所設定的值<xref:System.Messaging.DefaultPropertiesToSend>類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-177">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>|<span data-ttu-id="1106c-178">`true`如果 「 訊息佇列 」 佇列的隱私權等級設定為"Body";否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="1106c-178">`true`, if the Message Queuing queue's privacy level setting is "Body"; otherwise, `false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<xref:System.Messaging.XmlMessageFormatter>|  
|<xref:System.Messaging.MessageQueue.Label%2A>|<xref:System.String.Empty>|  
|<xref:System.Messaging.MessageQueue.MachineName%2A>|<span data-ttu-id="1106c-179">訊息佇列 」 佇列的電腦名稱屬性的值。</span><span class="sxs-lookup"><span data-stu-id="1106c-179">The value of the Message Queuing queue's computer name property.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>|<xref:System.Messaging.MessageQueue.InfiniteQueueSize>|  
|<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>|<xref:System.Messaging.MessageQueue.InfiniteQueueSize>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="1106c-180">預設建構函式所設定的值<xref:System.Messaging.MessagePropertyFilter>類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-180">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Path%2A>|<span data-ttu-id="1106c-181"><xref:System.String.Empty>如果未設定的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-181"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.QueueName%2A>|<span data-ttu-id="1106c-182"><xref:System.String.Empty>如果未設定的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-182"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|`false`|  
|<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>|<span data-ttu-id="1106c-183">`true`如果已啟用訊息佇列物件的筆記本設定;否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="1106c-183">`true`, if the Message Queuing object's journal setting is enabled; otherwise, `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-184">下列程式碼範例建立新<xref:System.Messaging.MessageQueue>物件，使用不同的路徑名稱語法類型。</span><span class="sxs-lookup"><span data-stu-id="1106c-184">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="1106c-185">在每個案例中，它會傳送訊息至佇列的路徑在建構函式中定義。</span><span class="sxs-lookup"><span data-stu-id="1106c-185">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-186">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性無效，可能是因為尚未對其進行設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-186">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-187">這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列位置，可能是代表本機電腦的 "."。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-187">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span>
          </span>
        </param>
        <param name="sharedModeDenyReceive">
          <span data-ttu-id="1106c-188">
            <see langword="true" /> 表示將獨佔讀取的存取權限授與存取佇列的第一個應用程式，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-188">
              <see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-189">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體，這個執行個體會參考指定路徑且具有指定讀取權限制的訊息佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-189">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-190">當您想要將新的繫結使用此多載<xref:System.Messaging.MessageQueue>至特定訊息佇列 」 佇列，您知道的路徑，格式名稱或標籤。</span><span class="sxs-lookup"><span data-stu-id="1106c-190">Use this overload when you want to tie the new <xref:System.Messaging.MessageQueue> to a particular Message Queuing queue, for which you know the path, format name, or label.</span></span> <span data-ttu-id="1106c-191">如果您想要授與獨佔存取權的第一個應用程式參考佇列，設定`sharedModeDenyReceive`參數`true`。</span><span class="sxs-lookup"><span data-stu-id="1106c-191">If you want to grant exclusive access to the first application that references the queue, set the `sharedModeDenyReceive` parameter to `true`.</span></span> <span data-ttu-id="1106c-192">否則，設定`sharedModeDenyReceive`至`false`使用只具有建構函式或`path`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-192">Otherwise, set `sharedModeDenyReceive` to `false` or use the constructor that has only a `path` parameter.</span></span>  
  
 <span data-ttu-id="1106c-193">設定`sharedModeDenyReceive`至`true`影響存取 「 訊息佇列 」 佇列，包括其他應用程式的所有物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-193">Setting `sharedModeDenyReceive` to `true` affects all objects that access the Message Queuing queue, including other applications.</span></span> <span data-ttu-id="1106c-194">參數的效果不受限制對此應用程式。</span><span class="sxs-lookup"><span data-stu-id="1106c-194">The effects of the parameter are not restricted to this application.</span></span>  
  
 <span data-ttu-id="1106c-195"><xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式建立的新執行個體<xref:System.Messaging.MessageQueue>類別; 它不會建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-195">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor creates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span> <span data-ttu-id="1106c-196">若要建立新的佇列中訊息佇列，使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-196">To create a new queue in Message Queuing, use <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="1106c-197">語法`path`參數取決於佇列的類型。</span><span class="sxs-lookup"><span data-stu-id="1106c-197">The syntax of the `path` parameter depends on the type of queue.</span></span>  
  
|<span data-ttu-id="1106c-198">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-198">Queue type</span></span>|<span data-ttu-id="1106c-199">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-199">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-200">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-200">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="1106c-201">私用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-201">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="1106c-202">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-202">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="1106c-203">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-203">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="1106c-204">機器寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-204">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="1106c-205">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-205">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="1106c-206">或者，您可以使用格式名稱或 「 訊息佇列 」 佇列的標籤，來描述為佇列路徑。</span><span class="sxs-lookup"><span data-stu-id="1106c-206">Alternatively, you can use the format name or label of a Message Queuing queue to describe the queue path.</span></span>  
  
|<span data-ttu-id="1106c-207">參考資料</span><span class="sxs-lookup"><span data-stu-id="1106c-207">Reference</span></span>|<span data-ttu-id="1106c-208">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-208">Syntax</span></span>|<span data-ttu-id="1106c-209">範例</span><span class="sxs-lookup"><span data-stu-id="1106c-209">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="1106c-210">格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-210">Format name</span></span>|<span data-ttu-id="1106c-211">`FormatName:` [*格式名稱*]</span><span class="sxs-lookup"><span data-stu-id="1106c-211">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="1106c-212">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="1106c-212">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span><br /><br /> <span data-ttu-id="1106c-213">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="1106c-213">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="1106c-214">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="1106c-214">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="1106c-215">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="1106c-215">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span></span>|  
|<span data-ttu-id="1106c-216">ThisAddIn</span><span class="sxs-lookup"><span data-stu-id="1106c-216">Label</span></span>|<span data-ttu-id="1106c-217">`Label:` [*標籤*]</span><span class="sxs-lookup"><span data-stu-id="1106c-217">`Label:` [ *label* ]</span></span>|<span data-ttu-id="1106c-218">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="1106c-218">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="1106c-219">若要離線工作，您必須使用格式名稱語法，而不是易記名稱語法。</span><span class="sxs-lookup"><span data-stu-id="1106c-219">To work offline, you must use the format name syntax, rather than the friendly name syntax.</span></span> <span data-ttu-id="1106c-220">否則，因為網域主控站 （Active Directory 所在） 不是可解析成格式名稱的路徑，便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-220">Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="1106c-221">如果<xref:System.Messaging.MessageQueue>開啟佇列`sharedModeDenyReceive`參數設定為`true`，任何<xref:System.Messaging.MessageQueue>，後續嘗試從佇列讀取會產生<xref:System.Messaging.MessageQueueException>因為共用違規。</span><span class="sxs-lookup"><span data-stu-id="1106c-221">If a <xref:System.Messaging.MessageQueue> opens a queue with the `sharedModeDenyReceive` parameter set to `true`, any <xref:System.Messaging.MessageQueue> that subsequently tries to read from the queue generates a <xref:System.Messaging.MessageQueueException> because of a sharing violation.</span></span> <span data-ttu-id="1106c-222">A<xref:System.Messaging.MessageQueueException>如果也會擲回<xref:System.Messaging.MessageQueue>嘗試存取以獨佔模式，而另一個佇列<xref:System.Messaging.MessageQueue>已佇列的非獨佔存取。</span><span class="sxs-lookup"><span data-stu-id="1106c-222">A <xref:System.Messaging.MessageQueueException> is also thrown if a <xref:System.Messaging.MessageQueue> tries to access the queue in exclusive mode while another <xref:System.Messaging.MessageQueue> already has non-exclusive access to the queue.</span></span>  
  
 <span data-ttu-id="1106c-223">下表顯示的執行個體的初始屬性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-223">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="1106c-224">這些值所指定的路徑時，為內容的訊息佇列 」 佇列，`path`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-224">These values are based on the properties of the Message Queuing queue, with the path specified by the `path` parameter.</span></span>  
  
|<span data-ttu-id="1106c-225">屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-225">Property</span></span>|<span data-ttu-id="1106c-226">Initial value</span><span class="sxs-lookup"><span data-stu-id="1106c-226">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.Authenticate%2A>|<span data-ttu-id="1106c-227">`false`。</span><span class="sxs-lookup"><span data-stu-id="1106c-227">`false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.BasePriority%2A>|<span data-ttu-id="1106c-228">0.</span><span class="sxs-lookup"><span data-stu-id="1106c-228">0.</span></span>|  
|<xref:System.Messaging.MessageQueue.Category%2A>|<span data-ttu-id="1106c-229"><xref:System.Guid.Empty>。</span><span class="sxs-lookup"><span data-stu-id="1106c-229"><xref:System.Guid.Empty>.</span></span>|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="1106c-230">預設建構函式所設定的值<xref:System.Messaging.DefaultPropertiesToSend>類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-230">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>|<span data-ttu-id="1106c-231">`true`如果 「 訊息佇列 」 佇列的隱私權等級設定為"Body";否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="1106c-231">`true`, if the Message Queuing queue's privacy level setting is "Body"; otherwise, `false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<span data-ttu-id="1106c-232"><xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-232"><xref:System.Messaging.XmlMessageFormatter>.</span></span>|  
|<xref:System.Messaging.MessageQueue.Label%2A>|<span data-ttu-id="1106c-233"><xref:System.String.Empty>。</span><span class="sxs-lookup"><span data-stu-id="1106c-233"><xref:System.String.Empty>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MachineName%2A>|<span data-ttu-id="1106c-234">訊息佇列 」 佇列的電腦名稱屬性的值。</span><span class="sxs-lookup"><span data-stu-id="1106c-234">The value of the Message Queuing queue's computer name property.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>|<span data-ttu-id="1106c-235"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>。</span><span class="sxs-lookup"><span data-stu-id="1106c-235"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>|<span data-ttu-id="1106c-236"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>。</span><span class="sxs-lookup"><span data-stu-id="1106c-236"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="1106c-237">預設建構函式所設定的值<xref:System.Messaging.MessagePropertyFilter>類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-237">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Path%2A>|<span data-ttu-id="1106c-238"><xref:System.String.Empty>如果未設定的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-238"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.QueueName%2A>|<span data-ttu-id="1106c-239"><xref:System.String.Empty>如果未設定的建構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-239"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|<span data-ttu-id="1106c-240">`sharedModeDenyReceive` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="1106c-240">The value of the `sharedModeDenyReceive` parameter.</span></span>|  
|<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>|<span data-ttu-id="1106c-241">`true`如果已啟用訊息佇列物件的筆記本設定;否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="1106c-241">`true`, if the Message Queuing object's journal setting is enabled; otherwise, `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-242">下列程式碼範例會建立新<xref:System.Messaging.MessageQueue>獨佔存取權與設定其路徑中，並將訊息傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-242">The following code example creates a new <xref:System.Messaging.MessageQueue> with exclusive access, sets its path, and sends a message to the queue.</span></span>  
  
 [!code-cpp[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/CPP/mqctor_denysharedreceive.cpp#1)]
 [!code-csharp[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/CS/mqctor_denysharedreceive.cs#1)]
 [!code-vb[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/VB/mqctor_denysharedreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-243">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性無效，可能是因為尚未對其進行設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-243">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, System.Messaging.QueueAccessMode accessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Messaging.QueueAccessMode accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, accessMode As QueueAccessMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, System::Messaging::QueueAccessMode accessMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessMode" Type="System.Messaging.QueueAccessMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-244">這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列位置，可能是代表本機電腦的 "."。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-244">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span>
          </span>
        </param>
        <param name="accessMode">
          <span data-ttu-id="1106c-245">其中一個 <see cref="T:System.Messaging.QueueAccessMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-245">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-246">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-246">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive, bool enableCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean, enableCache As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive, bool enableCache);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" />
        <Parameter Name="enableCache" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-247">這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列位置，可能是代表本機電腦的 "."。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-247">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span>
          </span>
        </param>
        <param name="sharedModeDenyReceive">
          <span data-ttu-id="1106c-248">
            <see langword="true" /> 表示將獨佔讀取的存取權限授與存取佇列的第一個應用程式，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-248">
              <see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="enableCache">
          <span data-ttu-id="1106c-249">
            <see langword="true" /> 表示建立並使用連接快取，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-249">
              <see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-250">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-250">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1106c-251">下列程式碼範例會建立新<xref:System.Messaging.MessageQueue>具有獨佔讀取存取權與啟用快取的連接。</span><span class="sxs-lookup"><span data-stu-id="1106c-251">The following code example creates a new <xref:System.Messaging.MessageQueue> with exclusive read access and with connection caching enabled.</span></span>  
  
 [!code-cpp[MessageQueue4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue4/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueue4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue4/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache, System.Messaging.QueueAccessMode accessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive, bool enableCache, valuetype System.Messaging.QueueAccessMode accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean, enableCache As Boolean, accessMode As QueueAccessMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive, bool enableCache, System::Messaging::QueueAccessMode accessMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" />
        <Parameter Name="enableCache" Type="System.Boolean" />
        <Parameter Name="accessMode" Type="System.Messaging.QueueAccessMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-252">這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列位置，可能是代表本機電腦的 "."。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-252">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span>
          </span>
        </param>
        <param name="sharedModeDenyReceive">
          <span data-ttu-id="1106c-253">
            <see langword="true" /> 表示將獨佔讀取的存取權限授與存取佇列的第一個應用程式，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-253">
              <see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="enableCache">
          <span data-ttu-id="1106c-254">
            <see langword="true" /> 表示建立並使用連接快取，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-254">
              <see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="accessMode">
          <span data-ttu-id="1106c-255">其中一個 <see cref="T:System.Messaging.QueueAccessMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-255">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-256">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-256">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessMode">
      <MemberSignature Language="C#" Value="public System.Messaging.QueueAccessMode AccessMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.QueueAccessMode AccessMode" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.AccessMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessMode As QueueAccessMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::QueueAccessMode AccessMode { System::Messaging::QueueAccessMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.QueueAccessMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-257">取得值，表示佇列的存取模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-257">Gets a value that indicates the access mode for the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-258">其中一個 <see cref="T:System.Messaging.QueueAccessMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-258">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-259">佇列的預設存取模式是`QueueAccessMode.SendAndReceive`，除非您另外指定呼叫建構函式時。</span><span class="sxs-lookup"><span data-stu-id="1106c-259">The default access mode for a queue is `QueueAccessMode.SendAndReceive`, unless you specify otherwise when calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Authenticate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-260">取得或設定值，指出佇列是否只接受已驗證的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-260">Gets or sets a value that indicates whether the queue accepts only authenticated messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-261">如果佇列只接受驗證過的訊息則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-261">
              <see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1106c-262">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-262">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-263">訊息驗證會提供一種方法來確保訊息完整性，以及確認誰傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-263">Message authentication provides a way to ensure message integrity and to verify who sent the message.</span></span> <span data-ttu-id="1106c-264">若要要求驗證，傳送應用程式會設定訊息的驗證層級。</span><span class="sxs-lookup"><span data-stu-id="1106c-264">To request authentication, the sending application sets the message's authentication level.</span></span>  
  
 <span data-ttu-id="1106c-265">當您將<xref:System.Messaging.MessageQueue.Authenticate%2A>至`true`，限制在伺服器上，不只對此佇列的存取權<xref:System.Messaging.MessageQueue>執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-265">When you set <xref:System.Messaging.MessageQueue.Authenticate%2A> to `true`, you are restricting access to the queue on the server, not only to this <xref:System.Messaging.MessageQueue> instance.</span></span> <span data-ttu-id="1106c-266">針對相同的 「 訊息佇列 」 佇列的所有用戶端會受到影響。</span><span class="sxs-lookup"><span data-stu-id="1106c-266">All clients working against the same Message Queuing queue will be affected.</span></span>  
  
 <span data-ttu-id="1106c-267">只接受已驗證的訊息佇列將會拒絕未經驗證的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-267">A queue that accepts only authenticated messages will reject a non-authenticated message.</span></span> <span data-ttu-id="1106c-268">若要要求拒絕訊息的通知，傳送應用程式可以設定<xref:System.Messaging.Message.AcknowledgeType%2A>訊息屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-268">To request notification of message rejection, a sending application can set the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the message.</span></span> <span data-ttu-id="1106c-269">訊息拒絕的任何其他指示不存在，因此傳送應用程式可能會遺失訊息除非您要求它傳送到寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-269">Because no other indication of message rejection exists, the sending application can lose the message unless you request that it be sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="1106c-270">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-270">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-271">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-271">Workgroup mode</span></span>|<span data-ttu-id="1106c-272">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-272">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-273">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-273">Local computer</span></span>|<span data-ttu-id="1106c-274">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-274">Yes</span></span>|  
|<span data-ttu-id="1106c-275">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-275">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-276">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-276">Yes</span></span>|  
|<span data-ttu-id="1106c-277">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-277">Remote computer</span></span>|<span data-ttu-id="1106c-278">否</span><span class="sxs-lookup"><span data-stu-id="1106c-278">No</span></span>|  
|<span data-ttu-id="1106c-279">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-279">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-280">否</span><span class="sxs-lookup"><span data-stu-id="1106c-280">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-281">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.Authenticate%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-281">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Authenticate%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-282">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-282">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_BasePriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-283">取得或設定訊息佇列用來在網路上傳送公用佇列訊息的基礎優先權 (Base Priority)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-283">Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-284">傳送至 (公用) 佇列的所有訊息的單一基礎優先權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-284">The single base priority for all messages sent to the (public) queue.</span>
          </span>
          <span data-ttu-id="1106c-285">預設為零 (0)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-285">The default is zero (0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-286">訊息佇列的基底優先權會指定訊息路由至該佇列時的處理方式透過網路傳送。</span><span class="sxs-lookup"><span data-stu-id="1106c-286">A message queue's base priority specifies how a message en route to that queue is treated as it travels through the network.</span></span> <span data-ttu-id="1106c-287">您可以設定<xref:System.Messaging.MessageQueue.BasePriority%2A>來授予高或較低優先順序給所有傳送到傳送至其他佇列所指定的佇列訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-287">You can set the <xref:System.Messaging.MessageQueue.BasePriority%2A> property to confer a higher or lower priority to all messages sent to the specified queue than those sent to other queues.</span></span> <span data-ttu-id="1106c-288">設定這個屬性可以修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-288">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="1106c-289">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-289">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="1106c-290">訊息佇列的<xref:System.Messaging.MessageQueue.BasePriority%2A>無關<xref:System.Messaging.Message.Priority%2A>指定內送訊息會置於佇列的順序訊息屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-290">A message queue's <xref:System.Messaging.MessageQueue.BasePriority%2A> is not related to the <xref:System.Messaging.Message.Priority%2A> property of a message, which specifies the order in which an incoming message is placed in the queue.</span></span>  
  
 <span data-ttu-id="1106c-291"><xref:System.Messaging.MessageQueue.BasePriority%2A> 適用於為公用佇列的路徑使用指定的格式名稱。</span><span class="sxs-lookup"><span data-stu-id="1106c-291"><xref:System.Messaging.MessageQueue.BasePriority%2A> applies only to public queues whose paths are specified using the format name.</span></span> <span data-ttu-id="1106c-292">私用佇列的基本優先順序永遠是零 (0)。</span><span class="sxs-lookup"><span data-stu-id="1106c-292">The base priority of a private queue is always zero (0).</span></span>  
  
 <span data-ttu-id="1106c-293">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-293">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-294">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-294">Workgroup mode</span></span>|<span data-ttu-id="1106c-295">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-295">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-296">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-296">Local computer</span></span>|<span data-ttu-id="1106c-297">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-297">Yes</span></span>|  
|<span data-ttu-id="1106c-298">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-298">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-299">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-299">Yes</span></span>|  
|<span data-ttu-id="1106c-300">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-300">Remote computer</span></span>|<span data-ttu-id="1106c-301">否</span><span class="sxs-lookup"><span data-stu-id="1106c-301">No</span></span>|  
|<span data-ttu-id="1106c-302">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-302">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-303">否</span><span class="sxs-lookup"><span data-stu-id="1106c-303">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-304">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.BasePriority%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-304">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.BasePriority%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-305">基礎優先權設定為無效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-305">The base priority was set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-306">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-306">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPeek">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe>
          <span data-ttu-id="1106c-307">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-307">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <summary>
          <span data-ttu-id="1106c-308">啟始非同步窺視作業，方法是告知訊息佇列開始窺視訊息，並在完成時告知事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-308">Initiates an asynchronous peek operation by telling Message Queuing to begin peeking a message and notify the event handler when finished.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-309">啟始沒有逾時的非同步窺視作業。作業要等到訊息可以在佇列中使用之後才算完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-309">Initiates an asynchronous peek operation that has no time-out. The operation is not complete until a message becomes available in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-310">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-310">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-311">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件佇列中可用的訊息時。</span><span class="sxs-lookup"><span data-stu-id="1106c-311">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue.</span></span>  
  
 <span data-ttu-id="1106c-312"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-312"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-313">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-313">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="1106c-314"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 起始非同步窺視作業;<xref:System.Messaging.MessageQueue>通知，透過引發<xref:System.Messaging.MessageQueue.PeekCompleted>當訊息抵達佇列中時引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-314"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="1106c-315"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或藉由擷取結果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1106c-315">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="1106c-316"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-316">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-317">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步，您可以呼叫它來查看佇列，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-317">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-318">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-318">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-319">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-319">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-320"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginPeek%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-320">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginPeek%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-321">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-321">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-322">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-322">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-323">在此情況下，您使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-323">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-324">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引發了完成事件時，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-324">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="1106c-325">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-325">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-326">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-326">Workgroup mode</span></span>|<span data-ttu-id="1106c-327">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-327">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-328">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-328">Local computer</span></span>|<span data-ttu-id="1106c-329">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-329">Yes</span></span>|  
|<span data-ttu-id="1106c-330">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-330">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-331">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-331">Yes</span></span>|  
|<span data-ttu-id="1106c-332">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-332">Remote computer</span></span>|<span data-ttu-id="1106c-333">否</span><span class="sxs-lookup"><span data-stu-id="1106c-333">No</span></span>|  
|<span data-ttu-id="1106c-334">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-334">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-335">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-335">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-336">下列程式碼範例會建立名為事件處理常式`MyPeekCompleted`，將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式委派，並呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>起始位於路徑上的佇列上的非同步窺視作業 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="1106c-336">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="1106c-337">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，此範例窺視訊息，並將其本文寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1106c-337">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="1106c-338">此範例會接著呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A> 以起始新的非同步查看作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-338">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-339">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-339">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-340">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-340">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-341">
            <see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-341">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-342">啟始有指定逾時的非同步窺視作業。在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-342">Initiates an asynchronous peek operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-343">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-343">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-344">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引發<xref:System.Messaging.MessageQueue.PeekCompleted>時可用的訊息佇列中，或指定的時間間隔過期事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-344">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="1106c-345"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-345"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-346">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-346">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="1106c-347"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 起始非同步窺視作業;<xref:System.Messaging.MessageQueue>通知，透過引發<xref:System.Messaging.MessageQueue.PeekCompleted>當訊息抵達佇列中時引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-347"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="1106c-348"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或藉由擷取結果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1106c-348">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="1106c-349"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-349">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-350">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步，您可以呼叫它來查看佇列，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-350">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-351">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-351">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-352">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-352">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-353"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginPeek%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-353">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginPeek%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-354">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-354">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-355">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-355">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-356">在此情況下，您使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-356">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-357">這個多載指定的逾時。如果指定的間隔`timeout`參數，此元件會引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-357">This overload specifies a time-out. If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="1106c-358">因為不存在，後續呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-358">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="1106c-359">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引發了完成事件時，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-359">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="1106c-360">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-360">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-361">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-361">Workgroup mode</span></span>|<span data-ttu-id="1106c-362">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-362">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-363">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-363">Local computer</span></span>|<span data-ttu-id="1106c-364">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-364">Yes</span></span>|  
|<span data-ttu-id="1106c-365">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-365">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-366">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-366">Yes</span></span>|  
|<span data-ttu-id="1106c-367">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-367">Remote computer</span></span>|<span data-ttu-id="1106c-368">否</span><span class="sxs-lookup"><span data-stu-id="1106c-368">No</span></span>|  
|<span data-ttu-id="1106c-369">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-369">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-370">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-370">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-371">下列程式碼範例會建立使用的佇列路徑的非同步查看作業 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="1106c-371">The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</span></span> <span data-ttu-id="1106c-372">它會建立事件處理常式， `MyPeekCompleted`，並將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-372">It creates an event handler, `MyPeekCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate.</span></span> <span data-ttu-id="1106c-373"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 起始非同步窺視作業，會呼叫一分鐘的時間的逾時。</span><span class="sxs-lookup"><span data-stu-id="1106c-373"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is called with a time-out of one minute, to initiate the asynchronous peek operation.</span></span> <span data-ttu-id="1106c-374">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件或逾時到期，如果有的話，而且其本文寫入至螢幕擷取訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-374">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised or the time-out expires, the message is retrieved if one exists, and its body is written to the screen.</span></span> <span data-ttu-id="1106c-375">然後<xref:System.Messaging.MessageQueue.BeginPeek%2A>再次呼叫以起始新的非同步查看作業以相同的逾時。</span><span class="sxs-lookup"><span data-stu-id="1106c-375">Then <xref:System.Messaging.MessageQueue.BeginPeek%2A> is called again to initiate a new asynchronous peek operation with the same time-out.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/CPP/mqbeginpeek_timeout.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/CS/mqbeginpeek_timeout.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/VB/mqbeginpeek_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-376">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-376">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-377">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-377">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-378">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-378">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Object ^ stateObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-379">
            <see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-379">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="1106c-380">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-380">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-381">啟始有指定逾時和指定狀態物件的非同步窺視作業，會在作業的整個存留期內提供相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-381">Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span>
          </span>
          <span data-ttu-id="1106c-382">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-382">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-383">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-383">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-384">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引發<xref:System.Messaging.MessageQueue.PeekCompleted>時可用的訊息佇列中，或指定的時間間隔過期事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-384">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="1106c-385"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-385"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-386">您可以使用這個多載，與將在整個作業的存留期會保留作業產生關聯的資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-386">Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</span></span> <span data-ttu-id="1106c-387">此事件處理常式可以存取此資訊，查看<xref:System.IAsyncResult.AsyncState%2A>屬性<xref:System.IAsyncResult>與作業相關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-387">The event handler can access this information by looking at the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> that is associated with the operation.</span></span>  
  
 <span data-ttu-id="1106c-388">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-388">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="1106c-389"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 起始非同步窺視作業;<xref:System.Messaging.MessageQueue>通知，透過引發<xref:System.Messaging.MessageQueue.PeekCompleted>當訊息抵達佇列中時引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-389"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="1106c-390"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或藉由擷取結果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1106c-390">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="1106c-391"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-391">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-392">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步，您可以呼叫它來查看佇列，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-392">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-393">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-393">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-394">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-394">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-395"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 傳回<xref:System.IAsyncResult>可識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-395"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-396">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-396">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-397">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-397">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-398">在此情況下，您使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-398">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-399">這個多載指定逾時和狀態的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-399">This overload specifies a time-out and a state object.</span></span> <span data-ttu-id="1106c-400">如果指定的間隔`timeout`參數，此元件會引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-400">If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="1106c-401">因為不存在，後續呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-401">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="1106c-402">與此作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-402">The state object associates state information with the operation.</span></span> <span data-ttu-id="1106c-403">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次，以便起始多個作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-403">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span> <span data-ttu-id="1106c-404">如需此案例中的圖例，請參閱 < 範例 > 一節。</span><span class="sxs-lookup"><span data-stu-id="1106c-404">For an illustration of this scenario, see the Example section.</span></span>  
  
 <span data-ttu-id="1106c-405">您也可以將資訊傳遞多個處理序執行緒使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-405">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="1106c-406">如果執行緒已啟動，但回呼是在不同的執行緒的非同步案例中，為狀態物件封送處理，從事件傳遞的資訊一起傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-406">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="1106c-407">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引發了完成事件時，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-407">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="1106c-408">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-408">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-409">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-409">Workgroup mode</span></span>|<span data-ttu-id="1106c-410">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-410">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-411">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-411">Local computer</span></span>|<span data-ttu-id="1106c-412">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-412">Yes</span></span>|  
|<span data-ttu-id="1106c-413">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-413">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-414">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-414">Yes</span></span>|  
|<span data-ttu-id="1106c-415">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-415">Remote computer</span></span>|<span data-ttu-id="1106c-416">否</span><span class="sxs-lookup"><span data-stu-id="1106c-416">No</span></span>|  
|<span data-ttu-id="1106c-417">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-417">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-418">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-418">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-419">下列程式碼範例會建立使用的佇列路徑的非同步查看作業 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="1106c-419">The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</span></span> <span data-ttu-id="1106c-420">它會建立事件處理常式， `MyPeekCompleted`，並將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-420">It creates an event handler, `MyPeekCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate.</span></span> <span data-ttu-id="1106c-421"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 呼叫時，搭配一分鐘的逾時。</span><span class="sxs-lookup"><span data-stu-id="1106c-421"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is called, with a time-out of one minute.</span></span> <span data-ttu-id="1106c-422">每次呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>已識別該特定作業的唯一相關聯的整數。</span><span class="sxs-lookup"><span data-stu-id="1106c-422">Each call to <xref:System.Messaging.MessageQueue.BeginPeek%2A> has a unique associated integer that identifies that particular operation.</span></span> <span data-ttu-id="1106c-423">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，或逾時過期時，擷取訊息，如果有的話，和其主體和的特定作業的整數識別碼會寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1106c-423">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised or the time-out expired, the message, if one exists, is retrieved and its body and the operation-specific integer identifier are written to the screen.</span></span> <span data-ttu-id="1106c-424">然後<xref:System.Messaging.MessageQueue.BeginPeek%2A>會再次呼叫以起始新非同步查看具有相同的逾時和作業只完成作業的相關聯的整數。</span><span class="sxs-lookup"><span data-stu-id="1106c-424">Then <xref:System.Messaging.MessageQueue.BeginPeek%2A> is called again to initiate a new asynchronous peek operation with the same time-out and the associated integer of the just completed operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/CPP/mqbeginpeek_timeoutstateobject.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/CS/mqbeginpeek_timeoutstateobject.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/VB/mqbeginpeek_timeoutstateobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-425">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-425">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-426">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-426">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-427">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-427">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, object stateObject, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan, stateObject As Object, callback As AsyncCallback) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Object ^ stateObject, AsyncCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-428">
            <see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-428">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="1106c-429">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-429">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1106c-430">會接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-430">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-431">啟始有指定逾時和指定狀態物件的非同步窺視作業，會在作業的整個存留期內提供相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-431">Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span>
          </span>
          <span data-ttu-id="1106c-432">這個多載會透過回呼，接收作業的事件處理常式的識別通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-432">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span>
          </span>
          <span data-ttu-id="1106c-433">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-433">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-434">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-434">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-435">當您使用這個多載時，回呼參數中指定的回呼會直接叫用時可用的訊息佇列中，或指定的時間間隔已過期。<xref:System.Messaging.MessageQueue.PeekCompleted>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-435">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.PeekCompleted> event is not raised.</span></span> <span data-ttu-id="1106c-436">其他多載的<xref:System.Messaging.MessageQueue.BeginPeek%2A>依賴此元件引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-436">The other overloads of <xref:System.Messaging.MessageQueue.BeginPeek%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span>  
  
 <span data-ttu-id="1106c-437"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-437"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-438"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-438">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-439">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步，您可以呼叫它來查看佇列，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-439">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-440">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-440">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-441">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-441">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-442"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 傳回<xref:System.IAsyncResult>可識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-442"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-443">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-443">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-444">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-444">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-445">在此情況下，您使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-445">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-446">與此作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-446">The state object associates state information with the operation.</span></span> <span data-ttu-id="1106c-447">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次，以便起始多個作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-447">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="1106c-448">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-448">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-449">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-449">Workgroup mode</span></span>|<span data-ttu-id="1106c-450">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-450">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-451">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-451">Local computer</span></span>|<span data-ttu-id="1106c-452">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-452">Yes</span></span>|  
|<span data-ttu-id="1106c-453">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-453">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-454">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-454">Yes</span></span>|  
|<span data-ttu-id="1106c-455">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-455">Remote computer</span></span>|<span data-ttu-id="1106c-456">否</span><span class="sxs-lookup"><span data-stu-id="1106c-456">No</span></span>|  
|<span data-ttu-id="1106c-457">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-457">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-458">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-458">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-459">下列程式碼範例會建立非同步窺視作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-459">The following code example creates an asynchronous peek operation.</span></span> <span data-ttu-id="1106c-460">程式碼範例傳送訊息至本機訊息佇列，然後呼叫<xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>，並傳入： 逾時值為 10 秒; 識別該特定的訊息; 以及的新執行個體的唯一整數<xref:System.AsyncCallback>識別的事件處理常式， `MyPeekCompleted`.</span><span class="sxs-lookup"><span data-stu-id="1106c-460">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <xref:System.AsyncCallback> that identifies the event handler, `MyPeekCompleted`.</span></span> <span data-ttu-id="1106c-461">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，事件處理常式窺視訊息的螢幕中寫入訊息內文和整數訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="1106c-461">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the event handler peeks at the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginPeek#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginPeek/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginPeek#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginPeek/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-462">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-462">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-463">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-463">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-464">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-464">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action, object state, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.PeekAction action, object state, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::PeekAction action, System::Object ^ state, AsyncCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="action" Type="System.Messaging.PeekAction" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-465">
            <see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-465">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="1106c-466">
            <see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-466">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="1106c-467">其中一個 <see cref="T:System.Messaging.PeekAction" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-467">One of the <see cref="T:System.Messaging.PeekAction" /> values.</span>
          </span>
          <span data-ttu-id="1106c-468">指出要窺視佇列中的目前訊息，還是下一則訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-468">Indicates whether to peek at the current message in the queue, or the next message.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1106c-469">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-469">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1106c-470">
            <see cref="T:System.AsyncCallback" />，接收非同步作業的完成通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-470">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-471">啟始非同步窺視作業，該作業具有指定的逾時，並使用指定的游標、指定的窺視動作和指定的狀態物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-471">Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object.</span>
          </span>
          <span data-ttu-id="1106c-472">狀態物件提供整個作業存留期的相關聯資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-472">The state object provides associated information throughout the lifetime of the operation.</span>
          </span>
          <span data-ttu-id="1106c-473">這個多載會透過回呼，接收作業的事件處理常式的識別通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-473">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span>
          </span>
          <span data-ttu-id="1106c-474">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-474">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-475">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-475">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-476">當您使用這個多載時，回呼參數中指定的回呼時叫用直接訊息成為可用的佇列中，或指定的時間間隔已過期。</span><span class="sxs-lookup"><span data-stu-id="1106c-476">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired.</span></span> <span data-ttu-id="1106c-477"><xref:System.Messaging.MessageQueue.PeekCompleted>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-477">The <xref:System.Messaging.MessageQueue.PeekCompleted> event is not raised.</span></span> <span data-ttu-id="1106c-478">其他多載的<xref:System.Messaging.MessageQueue.BeginPeek%2A>依賴此元件引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-478">The other overloads of <xref:System.Messaging.MessageQueue.BeginPeek%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span>  
  
 <span data-ttu-id="1106c-479"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-479"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-480"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-480">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-481">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步，您可以呼叫它來查看佇列，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-481">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-482">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-482">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-483">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-483">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-484"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 傳回<xref:System.IAsyncResult>可識別方法啟動非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-484"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation started by the method.</span></span> <span data-ttu-id="1106c-485">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-485">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-486">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-486">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-487">在此情況下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-487">In this case, use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-488">與此作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-488">The state object associates state information with the operation.</span></span> <span data-ttu-id="1106c-489">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次，以便起始多個作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-489">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="1106c-490">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-490">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-491">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-491">Workgroup mode</span></span>|<span data-ttu-id="1106c-492">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-492">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-493">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-493">Local computer</span></span>|<span data-ttu-id="1106c-494">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-494">Yes</span></span>|  
|<span data-ttu-id="1106c-495">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-495">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-496">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-496">Yes</span></span>|  
|<span data-ttu-id="1106c-497">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-497">Remote computer</span></span>|<span data-ttu-id="1106c-498">否</span><span class="sxs-lookup"><span data-stu-id="1106c-498">No</span></span>|  
|<span data-ttu-id="1106c-499">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-499">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-500">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-500">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1106c-501">為 <paramref name="action" /> 參數指定 <see langword="PeekAction.Current" /> 或 <see langword="PeekAction.Next" /> 以外的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-501">A value other than <see langword="PeekAction.Current" /> or <see langword="PeekAction.Next" /> was specified for the <paramref name="action" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-502">
            <paramref name="cursor" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-502">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-503">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-503">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-504">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-504">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-505">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-505">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReceive">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe>
          <span data-ttu-id="1106c-506">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-506">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <summary>
          <span data-ttu-id="1106c-507">啟始非同步接收作業，方法是告知訊息佇列開始接收訊息，並在完成時告知事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-507">Initiates an asynchronous receive operation by telling Message Queuing to begin receiving a message and notify the event handler when finished.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-508">啟始沒有逾時的非同步接收作業。作業要等到訊息可以在佇列中使用之後才算完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-508">Initiates an asynchronous receive operation that has no time-out. The operation is not complete until a message becomes available in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-509">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-509">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-510">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件時從佇列中移除訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-510">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message has been removed from the queue.</span></span>  
  
 <span data-ttu-id="1106c-511"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-511"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-512">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-512">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="1106c-513"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業。<xref:System.Messaging.MessageQueue>通知，透過引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>當訊息抵達佇列中時引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-513"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="1106c-514"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-514">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="1106c-515"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-515">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-516">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步，您可以呼叫它來從佇列接收訊息，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-516">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-517">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-517">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-518">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-518">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-519"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-519">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-520">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-520">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-521">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-521">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-522">在此情況下，您使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-522">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-523">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引發了完成事件時，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-523">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="1106c-524">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-524">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="1106c-525">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，且會將交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>查看作業在您建立事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-525">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="1106c-526">事件處理常式可能包含的功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-526">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="1106c-527">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-527">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-528">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-528">Workgroup mode</span></span>|<span data-ttu-id="1106c-529">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-529">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-530">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-530">Local computer</span></span>|<span data-ttu-id="1106c-531">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-531">Yes</span></span>|  
|<span data-ttu-id="1106c-532">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-532">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-533">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-533">Yes</span></span>|  
|<span data-ttu-id="1106c-534">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-534">Remote computer</span></span>|<span data-ttu-id="1106c-535">否</span><span class="sxs-lookup"><span data-stu-id="1106c-535">No</span></span>|  
|<span data-ttu-id="1106c-536">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-536">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-537">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-537">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-538">下列程式碼範例鏈結非同步要求。</span><span class="sxs-lookup"><span data-stu-id="1106c-538">The following code example chains asynchronous requests.</span></span> <span data-ttu-id="1106c-539">它會假設稱為 「 myQueue 「 本機電腦上沒有佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-539">It assumes there is a queue on the local computer called "myQueue".</span></span> <span data-ttu-id="1106c-540">`Main`函式開始非同步作業，由`MyReceiveCompleted`常式。</span><span class="sxs-lookup"><span data-stu-id="1106c-540">The `Main` function begins the asynchronous operation that is handled by the `MyReceiveCompleted` routine.</span></span> <span data-ttu-id="1106c-541">`MyReceiveCompleted` 處理目前的訊息，並開始新的非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-541">`MyReceiveCompleted` processes the current message and begins a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_mre.cpp#1)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_mre.cs#1)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_mre.vb#1)]  
  
 <span data-ttu-id="1106c-542">下列程式碼範例會排入佇列的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="1106c-542">The following code example queues asynchronous requests.</span></span> <span data-ttu-id="1106c-543">若要呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>中它的傳回值。</span><span class="sxs-lookup"><span data-stu-id="1106c-543">The call to <xref:System.Messaging.MessageQueue.BeginReceive%2A> uses the <xref:System.IAsyncResult.AsyncWaitHandle%2A> in its return value.</span></span> <span data-ttu-id="1106c-544">`Main`常式等候結束之前完成的所有非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-544">The `Main` routine waits for all asynchronous operations to be completed before exiting.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_wh.cpp#2)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_wh.cs#2)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_wh.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-545">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-545">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-546">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-546">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-547">
            <see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-547">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-548">啟始有指定逾時的非同步接收作業。在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-548">Initiates an asynchronous receive operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-549">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-549">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-550">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>時可用的訊息佇列中，或指定的時間間隔過期事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-550">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="1106c-551"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-551"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-552">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-552">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="1106c-553"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業。<xref:System.Messaging.MessageQueue>通知，透過引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>當訊息抵達佇列中時引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-553"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="1106c-554"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或擷取結果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1106c-554">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="1106c-555"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-555">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-556">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步，您可以呼叫它來從佇列接收訊息，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-556">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-557">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-557">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-558">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-558">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-559">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引發了完成事件時，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-559">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="1106c-560"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-560">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-561">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-561">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-562">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-562">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-563">在此情況下，您使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-563">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-564">這個多載指定的逾時。如果指定的間隔`timeout`參數，此元件會引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-564">This overload specifies a time-out. If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="1106c-565">因為不存在，後續呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-565">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="1106c-566">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-566">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="1106c-567">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，且會將交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>查看作業在您建立事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-567">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="1106c-568">事件處理常式可能包含的功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-568">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="1106c-569">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-569">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-570">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-570">Workgroup mode</span></span>|<span data-ttu-id="1106c-571">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-571">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-572">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-572">Local computer</span></span>|<span data-ttu-id="1106c-573">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-573">Yes</span></span>|  
|<span data-ttu-id="1106c-574">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-574">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-575">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-575">Yes</span></span>|  
|<span data-ttu-id="1106c-576">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-576">Remote computer</span></span>|<span data-ttu-id="1106c-577">否</span><span class="sxs-lookup"><span data-stu-id="1106c-577">No</span></span>|  
|<span data-ttu-id="1106c-578">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-578">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-579">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-579">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-580">下列程式碼範例會建立非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-580">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="1106c-581">程式碼範例會建立事件處理常式， `MyReceiveCompleted`，並將它附加至<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件處理常式委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-581">The code example creates an event handler, `MyReceiveCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate.</span></span> <span data-ttu-id="1106c-582">程式碼範例傳送訊息至本機訊息佇列，然後呼叫<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29>，並傳入逾時值為 10 秒。</span><span class="sxs-lookup"><span data-stu-id="1106c-582">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29>, passing in a time-out value of ten seconds.</span></span> <span data-ttu-id="1106c-583">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件，事件處理常式會接收訊息，並將訊息本文寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1106c-583">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive1#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive1/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive1#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive1/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-584">
            <paramref name="timeout" /> 參數所指定的值無效，可能是因為它表示負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-584">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly because it represents a negative number.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-585">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-585">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-586">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-586">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Object ^ stateObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-587">
            <see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-587">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="1106c-588">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-588">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-589">啟始有指定逾時和指定狀態物件的非同步接收作業，會在作業的整個存留期內提供相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-589">Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span>
          </span>
          <span data-ttu-id="1106c-590">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-590">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-591">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-591">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-592">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>時可用的訊息佇列中，或指定的時間間隔過期事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-592">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="1106c-593"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-593"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-594">您可以使用這個多載，與將在整個作業的存留期會保留作業產生關聯的資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-594">Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</span></span> <span data-ttu-id="1106c-595">此事件處理常式可以偵測到這項資訊藉由查看<xref:System.IAsyncResult.AsyncState%2A>屬性<xref:System.IAsyncResult>與作業相關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-595">The event handler can detect this information by looking at the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> that is associated with the operation.</span></span>  
  
 <span data-ttu-id="1106c-596">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-596">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="1106c-597"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業。<xref:System.Messaging.MessageQueue>通知，透過引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>當訊息抵達佇列中時引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-597"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="1106c-598"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或擷取結果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1106c-598">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="1106c-599"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-599">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-600">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步，您可以呼叫它來從佇列接收訊息，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-600">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-601">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-601">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-602">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-602">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-603"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-603">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-604">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-604">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-605">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-605">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-606">在此情況下，您使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-606">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-607">這個多載指定逾時和狀態的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-607">This overload specifies a time-out and a state object.</span></span> <span data-ttu-id="1106c-608">如果指定的間隔`timeout`參數，此元件會引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-608">If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="1106c-609">因為不存在，後續呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-609">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="1106c-610">與此作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-610">The state object associates state information with the operation.</span></span> <span data-ttu-id="1106c-611">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次，以便起始多個作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-611">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="1106c-612">您也可以將資訊傳遞多個處理序執行緒使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-612">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="1106c-613">如果執行緒已啟動，但回呼是在不同的執行緒的非同步案例中，為狀態物件封送處理，從事件傳遞的資訊一起傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-613">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="1106c-614">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-614">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="1106c-615">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，且會將交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>查看作業在您建立事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-615">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="1106c-616">事件處理常式可能包含的功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-616">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="1106c-617">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-617">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-618">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-618">Workgroup mode</span></span>|<span data-ttu-id="1106c-619">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-619">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-620">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-620">Local computer</span></span>|<span data-ttu-id="1106c-621">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-621">Yes</span></span>|  
|<span data-ttu-id="1106c-622">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-622">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-623">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-623">Yes</span></span>|  
|<span data-ttu-id="1106c-624">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-624">Remote computer</span></span>|<span data-ttu-id="1106c-625">否</span><span class="sxs-lookup"><span data-stu-id="1106c-625">No</span></span>|  
|<span data-ttu-id="1106c-626">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-626">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-627">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-627">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-628">下列程式碼範例會建立非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-628">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="1106c-629">程式碼範例會建立事件處理常式， `MyReceiveCompleted`，並將它附加至<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件處理常式委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-629">The code example creates an event handler, `MyReceiveCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate.</span></span> <span data-ttu-id="1106c-630">程式碼範例傳送訊息至本機訊息佇列，然後呼叫<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29>，並傳入逾時值為 10 秒，並識別該特定訊息的唯一整數。</span><span class="sxs-lookup"><span data-stu-id="1106c-630">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29>, passing in a time-out value of ten seconds and a unique integer that identifies that particular message.</span></span> <span data-ttu-id="1106c-631">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件，事件處理常式會接收訊息，並將訊息內文和整數訊息識別項寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1106c-631">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive2#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive2/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive2#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive2/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-632">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-632">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-633">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-633">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-634">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-634">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, object stateObject, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, stateObject As Object, callback As AsyncCallback) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Object ^ stateObject, AsyncCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-635">
            <see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-635">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="1106c-636">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-636">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1106c-637">會接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-637">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-638">啟始有指定逾時和指定狀態物件的非同步接收作業，會在作業的整個存留期內提供相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-638">Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span>
          </span>
          <span data-ttu-id="1106c-639">這個多載會透過回呼，接收作業的事件處理常式的識別通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-639">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span>
          </span>
          <span data-ttu-id="1106c-640">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-640">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-641">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-641">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-642">當您使用這個多載時，回呼參數中指定的回呼會直接叫用時可用的訊息佇列中，或指定的時間間隔已過期。<xref:System.Messaging.MessageQueue.ReceiveCompleted>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-642">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is not raised.</span></span> <span data-ttu-id="1106c-643">其他多載的<xref:System.Messaging.MessageQueue.BeginReceive%2A>依賴此元件引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-643">The other overloads of <xref:System.Messaging.MessageQueue.BeginReceive%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span>  
  
 <span data-ttu-id="1106c-644"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-644"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-645">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-645">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="1106c-646"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業。<xref:System.Messaging.MessageQueue>通知，透過引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>當訊息抵達佇列中時引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-646"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="1106c-647"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或擷取結果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1106c-647">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="1106c-648"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-648">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-649">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步，您可以呼叫它來從佇列接收訊息，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-649">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-650">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-650">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-651">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-651">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-652"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-652">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-653">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-653">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-654">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-654">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-655">在此情況下，您使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-655">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-656">與此作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-656">The state object associates state information with the operation.</span></span> <span data-ttu-id="1106c-657">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次，以便起始多個作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-657">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="1106c-658">您也可以將資訊傳遞多個處理序執行緒使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-658">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="1106c-659">如果執行緒已啟動，但回呼是在不同的執行緒的非同步案例中，為狀態物件封送處理，從事件傳遞的資訊一起傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-659">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="1106c-660">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-660">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="1106c-661">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，且會將交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>查看作業在您建立事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-661">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="1106c-662">事件處理常式可能包含的功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-662">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="1106c-663">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-663">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-664">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-664">Workgroup mode</span></span>|<span data-ttu-id="1106c-665">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-665">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-666">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-666">Local computer</span></span>|<span data-ttu-id="1106c-667">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-667">Yes</span></span>|  
|<span data-ttu-id="1106c-668">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-668">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-669">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-669">Yes</span></span>|  
|<span data-ttu-id="1106c-670">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-670">Remote computer</span></span>|<span data-ttu-id="1106c-671">否</span><span class="sxs-lookup"><span data-stu-id="1106c-671">No</span></span>|  
|<span data-ttu-id="1106c-672">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-672">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-673">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-673">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-674">下列程式碼範例會建立非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-674">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="1106c-675">程式碼範例傳送訊息至本機訊息佇列，然後呼叫<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>，並傳入： 逾時值為 10 秒; 識別該特定的訊息; 以及的新執行個體的唯一整數<xref:System.AsyncCallback>識別的事件處理常式， `MyReceiveCompleted`.</span><span class="sxs-lookup"><span data-stu-id="1106c-675">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <xref:System.AsyncCallback> that identifies the event handler, `MyReceiveCompleted`.</span></span> <span data-ttu-id="1106c-676">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件，事件處理常式會接收訊息，並將訊息內文和整數訊息識別項寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1106c-676">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive3#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive3/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive3#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive3/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-677">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-677">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-678">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-678">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-679">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-679">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, System.Messaging.Cursor cursor, object state, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, object state, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Object ^ state, AsyncCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-680">
            <see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-680">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="1106c-681">
            <see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-681">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1106c-682">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-682">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1106c-683">
            <see cref="T:System.AsyncCallback" />，接收非同步作業的完成通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-683">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-684">初始化非同步接收作業，該作業具有指定的逾時，並使用指定的游標和指定的狀態物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-684">Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object.</span>
          </span>
          <span data-ttu-id="1106c-685">狀態物件提供整個作業存留期的相關聯資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-685">The state object provides associated information throughout the lifetime of the operation.</span>
          </span>
          <span data-ttu-id="1106c-686">這個多載會透過回呼，接收作業的事件處理常式的識別通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-686">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span>
          </span>
          <span data-ttu-id="1106c-687">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-687">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-688">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-688">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-689">當您使用這個多載時，回呼參數中指定的回呼會直接叫用時可用的訊息佇列中，或指定的時間間隔已過期。<xref:System.Messaging.MessageQueue.ReceiveCompleted>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-689">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is not raised.</span></span> <span data-ttu-id="1106c-690">其他多載的<xref:System.Messaging.MessageQueue.BeginReceive%2A>依賴此元件引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-690">The other overloads of <xref:System.Messaging.MessageQueue.BeginReceive%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span>  
  
 <span data-ttu-id="1106c-691"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發在佇列中已有的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-691"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-692">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="1106c-692">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="1106c-693"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業。<xref:System.Messaging.MessageQueue>通知，透過引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>當訊息抵達佇列中時引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-693"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="1106c-694"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或擷取結果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1106c-694">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="1106c-695"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-695">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="1106c-696">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步，您可以呼叫它來從佇列接收訊息，而不會封鎖目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-696">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="1106c-697">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-697">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-698">非同步作業完成之後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式可繼續接收通知。</span><span class="sxs-lookup"><span data-stu-id="1106c-698">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="1106c-699"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-699">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="1106c-700">您可以使用這個<xref:System.IAsyncResult>存留期中的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-700">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="1106c-701">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等候所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-701">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="1106c-702">在此情況下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-702">In this case, use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="1106c-703">與此作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-703">The state object associates state information with the operation.</span></span> <span data-ttu-id="1106c-704">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次，以便起始多個作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-704">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="1106c-705">您也可以將資訊傳遞多個處理序執行緒使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-705">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="1106c-706">如果執行緒已啟動，但回呼是在不同的執行緒的非同步案例中，為狀態物件封送處理，從事件傳遞的資訊一起傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-706">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="1106c-707">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-707">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="1106c-708">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，且會將交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>查看作業在您建立事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-708">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="1106c-709">事件處理常式可能包含的功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-709">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="1106c-710">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-710">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-711">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-711">Workgroup mode</span></span>|<span data-ttu-id="1106c-712">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-712">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-713">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-713">Local computer</span></span>|<span data-ttu-id="1106c-714">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-714">Yes</span></span>|  
|<span data-ttu-id="1106c-715">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-715">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-716">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-716">Yes</span></span>|  
|<span data-ttu-id="1106c-717">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-717">Remote computer</span></span>|<span data-ttu-id="1106c-718">否</span><span class="sxs-lookup"><span data-stu-id="1106c-718">No</span></span>|  
|<span data-ttu-id="1106c-719">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-719">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-720">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-720">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-721">
            <paramref name="cursor" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-721">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-722">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-722">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-723">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-723">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-724">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-724">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_CanRead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-725">取得值，指出是否可讀取 <see cref="T:System.Messaging.MessageQueue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-725">Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-726">如果 <see cref="T:System.Messaging.MessageQueue" /> 存在而且應用程式可以從它讀取，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-726">
              <see langword="true" /> if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can read from it; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-727"><xref:System.Messaging.MessageQueue.CanRead%2A> 指出應用程式是否能夠查看，或從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-727"><xref:System.Messaging.MessageQueue.CanRead%2A> indicates whether the application is able to peek or receive messages from the queue.</span></span> <span data-ttu-id="1106c-728">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`true`、<xref:System.Messaging.MessageQueue>可以接收或窺視佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-728">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `true`, the <xref:System.Messaging.MessageQueue> can receive or peek messages from the queue.</span></span> <span data-ttu-id="1106c-729">否則，不能。</span><span class="sxs-lookup"><span data-stu-id="1106c-729">Otherwise, it cannot.</span></span>  
  
 <span data-ttu-id="1106c-730"><xref:System.Messaging.MessageQueue.CanRead%2A> 是`false`如果佇列已經開啟具有獨佔讀取存取權 (或者如果它是以非獨佔存取，而這開啟<xref:System.Messaging.MessageQueue>要求獨佔存取權)，或如果應用程式沒有足夠的權限可以存取它。</span><span class="sxs-lookup"><span data-stu-id="1106c-730"><xref:System.Messaging.MessageQueue.CanRead%2A> is `false` if a queue is already open with exclusive read access (or if it's open with non-exclusive access and this <xref:System.Messaging.MessageQueue> requests exclusive access), or if the application does not have sufficient rights to access it.</span></span> <span data-ttu-id="1106c-731">如果您的應用程式會嘗試從佇列讀取時<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，存取被拒。</span><span class="sxs-lookup"><span data-stu-id="1106c-731">If your application tries to read from a queue when <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, access is denied.</span></span>  
  
 <span data-ttu-id="1106c-732">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-732">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-733">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-733">Workgroup mode</span></span>|<span data-ttu-id="1106c-734">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-734">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-735">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-735">Local computer</span></span>|<span data-ttu-id="1106c-736">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-736">Yes</span></span>|  
|<span data-ttu-id="1106c-737">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-737">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-738">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-738">Yes</span></span>|  
|<span data-ttu-id="1106c-739">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-739">Remote computer</span></span>|<span data-ttu-id="1106c-740">否</span><span class="sxs-lookup"><span data-stu-id="1106c-740">No</span></span>|  
|<span data-ttu-id="1106c-741">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-741">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-742">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-742">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-743">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.CanRead%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-743">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CanRead%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.CanWrite" />
        <altmember cref="P:System.Messaging.MessageQueue.ReadHandle" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_CanWrite")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-744">取得值，指出是否可寫入 <see cref="T:System.Messaging.MessageQueue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-744">Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be written to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-745">如果 <see cref="T:System.Messaging.MessageQueue" /> 存在，而且應用程式可以寫入它，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-745">
              <see langword="true" /> if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can write to it; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-746"><xref:System.Messaging.MessageQueue.CanWrite%2A> 指出應用程式是否能夠將訊息傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-746"><xref:System.Messaging.MessageQueue.CanWrite%2A> indicates whether the application is able to send messages to the queue.</span></span> <span data-ttu-id="1106c-747">如果<xref:System.Messaging.MessageQueue.CanWrite%2A>是`true`、<xref:System.Messaging.MessageQueue>可以傳送訊息至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-747">If <xref:System.Messaging.MessageQueue.CanWrite%2A> is `true`, the <xref:System.Messaging.MessageQueue> can send messages to the queue.</span></span> <span data-ttu-id="1106c-748">否則，不能。</span><span class="sxs-lookup"><span data-stu-id="1106c-748">Otherwise, it cannot.</span></span>  
  
 <span data-ttu-id="1106c-749"><xref:System.Messaging.MessageQueue.CanWrite%2A> 是`false`如果佇列已開啟以獨佔寫入存取權 (或者如果它是以非獨佔存取，而這開啟<xref:System.Messaging.MessageQueue>要求獨佔存取權)，或如果應用程式沒有足夠的權限可以存取它。</span><span class="sxs-lookup"><span data-stu-id="1106c-749"><xref:System.Messaging.MessageQueue.CanWrite%2A> is `false` if a queue is already open with exclusive write access (or if it's open with non-exclusive access and this <xref:System.Messaging.MessageQueue> requests exclusive access), or if the application does not have sufficient rights to access it.</span></span> <span data-ttu-id="1106c-750">如果您的應用程式嘗試寫入至佇列時<xref:System.Messaging.MessageQueue.CanWrite%2A>是`false`，存取被拒。</span><span class="sxs-lookup"><span data-stu-id="1106c-750">If your application tries to write to a queue when <xref:System.Messaging.MessageQueue.CanWrite%2A> is `false`, access is denied.</span></span>  
  
 <span data-ttu-id="1106c-751">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-751">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-752">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-752">Workgroup mode</span></span>|<span data-ttu-id="1106c-753">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-753">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-754">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-754">Local computer</span></span>|<span data-ttu-id="1106c-755">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-755">Yes</span></span>|  
|<span data-ttu-id="1106c-756">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-756">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-757">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-757">Yes</span></span>|  
|<span data-ttu-id="1106c-758">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-758">Remote computer</span></span>|<span data-ttu-id="1106c-759">否</span><span class="sxs-lookup"><span data-stu-id="1106c-759">No</span></span>|  
|<span data-ttu-id="1106c-760">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-760">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-761">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-761">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-762">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.CanWrite%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-762">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CanWrite%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.WriteHandle" />
        <altmember cref="P:System.Messaging.MessageQueue.CanRead" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Category")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-763">取得或設定佇列分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-763">Gets or sets the queue category.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-764">表示佇列分類 (訊息佇列型別識別項) 的 <see cref="T:System.Guid" />，可讓應用程式將它的佇列分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-764">A <see cref="T:System.Guid" /> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues.</span>
          </span>
          <span data-ttu-id="1106c-765">預設值為 <see langword="Guid.empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-765">The default is <see langword="Guid.empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-766">佇列類別目錄可讓應用程式將其佇列分類。</span><span class="sxs-lookup"><span data-stu-id="1106c-766">The queue category allows an application to categorize its queues.</span></span> <span data-ttu-id="1106c-767">例如，您可以在一個類別目錄和所有的訂單佇列，在另一個放置所有計費佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-767">For example, you can place all Billing queues in one category and all Order queues in another.</span></span>  
  
 <span data-ttu-id="1106c-768"><xref:System.Messaging.MessageQueue.Category%2A>屬性可存取訊息佇列類型 ID 屬性 （這是讀取/寫入），可透過存取**佇列屬性** 對話方塊中 電腦管理 主控台。</span><span class="sxs-lookup"><span data-stu-id="1106c-768">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing Type ID property (which is read/write), accessible through the **Queue Properties** dialog box in the Computer Management Console.</span></span> <span data-ttu-id="1106c-769">您可以定義新的類別。</span><span class="sxs-lookup"><span data-stu-id="1106c-769">You can define a new category.</span></span> <span data-ttu-id="1106c-770">雖然您可以使用<xref:System.Guid.NewGuid%2A>來建立類別目錄的值，而且是唯一的所有<xref:System.Guid>值，這類動作都是不必要的。</span><span class="sxs-lookup"><span data-stu-id="1106c-770">Although you can use <xref:System.Guid.NewGuid%2A> to create a category value that is unique across all <xref:System.Guid> values, such an action is unnecessary.</span></span> <span data-ttu-id="1106c-771">類別目錄值必須是相異只能從其他類別，不是從所有其他<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="1106c-771">The category value needs to be distinct only from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="1106c-772">例如，您可以指派{00000000-0000-0000-0000-000000000001}做為<xref:System.Messaging.MessageQueue.Category%2A>佇列的一組和{00000000-0000-0000-0000-000000000002}為<xref:System.Messaging.MessageQueue.Category%2A>另一個集。</span><span class="sxs-lookup"><span data-stu-id="1106c-772">For example, you can assign {00000000-0000-0000-0000-000000000001} as the <xref:System.Messaging.MessageQueue.Category%2A> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <xref:System.Messaging.MessageQueue.Category%2A> for another set.</span></span>  
  
 <span data-ttu-id="1106c-773">不需要設定<xref:System.Messaging.MessageQueue.Category%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-773">It is not necessary to set the <xref:System.Messaging.MessageQueue.Category%2A>.</span></span> <span data-ttu-id="1106c-774">這個值可以是 `null`。</span><span class="sxs-lookup"><span data-stu-id="1106c-774">The value can be `null`.</span></span>  
  
 <span data-ttu-id="1106c-775">設定這個屬性可以修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-775">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="1106c-776">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-776">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="1106c-777">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-777">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-778">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-778">Workgroup mode</span></span>|<span data-ttu-id="1106c-779">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-779">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-780">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-780">Local computer</span></span>|<span data-ttu-id="1106c-781">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-781">Yes</span></span>|  
|<span data-ttu-id="1106c-782">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-782">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-783">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-783">Yes</span></span>|  
|<span data-ttu-id="1106c-784">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-784">Remote computer</span></span>|<span data-ttu-id="1106c-785">否</span><span class="sxs-lookup"><span data-stu-id="1106c-785">No</span></span>|  
|<span data-ttu-id="1106c-786">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-786">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-787">否</span><span class="sxs-lookup"><span data-stu-id="1106c-787">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-788">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.Category%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-788">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Category%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-789">佇列分類被設定為無效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-789">The queue category was set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-790">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-790">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Id" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      </Docs>
    </Member>
    <Member MemberName="ClearConnectionCache">
      <MemberSignature Language="C#" Value="public static void ClearConnectionCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearConnectionCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ClearConnectionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearConnectionCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearConnectionCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-791">清除連接快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-791">Clears the connection cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-792">當您呼叫<xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>移除快取中儲存的格式名稱，開啟並儲存在快取中的控制代碼已關閉。</span><span class="sxs-lookup"><span data-stu-id="1106c-792">When you call <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, the format names stored in the cache are removed and handles opened and stored in the cache are closed.</span></span>  
  
 <span data-ttu-id="1106c-793">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-793">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-794">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-794">Workgroup mode</span></span>|<span data-ttu-id="1106c-795">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-795">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-796">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-796">Local computer</span></span>|<span data-ttu-id="1106c-797">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-797">Yes</span></span>|  
|<span data-ttu-id="1106c-798">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-798">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-799">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-799">Yes</span></span>|  
|<span data-ttu-id="1106c-800">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-800">Remote computer</span></span>|<span data-ttu-id="1106c-801">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-801">Yes</span></span>|  
|<span data-ttu-id="1106c-802">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-802">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-803">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-803">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-804">下列程式碼範例呼叫 <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-804">The following code example calls <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>.</span></span>  
  
 [!code-csharp[MessageQueue#8](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-805">釋放 <see cref="T:System.Messaging.MessageQueue" /> 配置的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-805">Frees all resources allocated by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-806"><xref:System.Messaging.MessageQueue.Close%2A> 釋放與相關聯的所有資源<xref:System.Messaging.MessageQueue>，如果適當的話，包含共用資源。</span><span class="sxs-lookup"><span data-stu-id="1106c-806"><xref:System.Messaging.MessageQueue.Close%2A> frees all resources associated with a <xref:System.Messaging.MessageQueue>, including shared resources if appropriate.</span></span> <span data-ttu-id="1106c-807">系統重新擷取這些資源自動是否仍然可用，例如當您呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>方法，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-807">The system re-acquires these resources automatically if they are still available, for example when you call the <xref:System.Messaging.MessageQueue.Send%28System.Object%29> method, as in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.Send("Text 1.");  
myMessageQueue.Close();  
myMessageQueue.Send("Text 2."); //Resources are re-acquired.  
```  
  
 <span data-ttu-id="1106c-808">當您呼叫<xref:System.Messaging.MessageQueue.Close%2A>，則所有<xref:System.Messaging.MessageQueue>清除直接存取 「 訊息佇列 」 佇列的屬性。<xref:System.Messaging.MessageQueue.Path%2A>， <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>， <xref:System.Messaging.MessageQueue.Formatter%2A>，和<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>所有維持原狀。</span><span class="sxs-lookup"><span data-stu-id="1106c-808">When you call <xref:System.Messaging.MessageQueue.Close%2A>, all <xref:System.Messaging.MessageQueue> properties that directly access the Message Queuing queue are cleared out. The <xref:System.Messaging.MessageQueue.Path%2A>, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, <xref:System.Messaging.MessageQueue.Formatter%2A>, and <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> all remain as they were.</span></span>  
  
 <span data-ttu-id="1106c-809"><xref:System.Messaging.MessageQueue.Close%2A> 不會不一定會釋放讀取並寫入至佇列，控點，因為可能會共用。</span><span class="sxs-lookup"><span data-stu-id="1106c-809"><xref:System.Messaging.MessageQueue.Close%2A> does not always free the read and write handles to a queue, because they might be shared.</span></span> <span data-ttu-id="1106c-810">您可以採取下列步驟以確保任何<xref:System.Messaging.MessageQueue.Close%2A>釋出至佇列的讀取和寫入控制代碼：</span><span class="sxs-lookup"><span data-stu-id="1106c-810">You can take any of the following steps to ensure that <xref:System.Messaging.MessageQueue.Close%2A> frees the read and write handles to a queue:</span></span>  
  
-   <span data-ttu-id="1106c-811">建立<xref:System.Messaging.MessageQueue>使用獨佔存取權。</span><span class="sxs-lookup"><span data-stu-id="1106c-811">Create the <xref:System.Messaging.MessageQueue> with exclusive access.</span></span> <span data-ttu-id="1106c-812">若要這樣做，請呼叫<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29>或<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，以及組`sharedModeDenyReceive`參數`true`。</span><span class="sxs-lookup"><span data-stu-id="1106c-812">To do so, call the <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29> or <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> constructor, and set the `sharedModeDenyReceive` parameter to `true`.</span></span>  
  
-   <span data-ttu-id="1106c-813">建立<xref:System.Messaging.MessageQueue>與停用快取的連接。</span><span class="sxs-lookup"><span data-stu-id="1106c-813">Create the <xref:System.Messaging.MessageQueue> with connection caching disabled.</span></span> <span data-ttu-id="1106c-814">若要這樣做，請呼叫<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29>建構函式和集合`enableConnectionCache`參數`false`。</span><span class="sxs-lookup"><span data-stu-id="1106c-814">To do so, call the <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> constructor and set the `enableConnectionCache` parameter to `false`.</span></span>  
  
-   <span data-ttu-id="1106c-815">停用連線快取。</span><span class="sxs-lookup"><span data-stu-id="1106c-815">Disable connection caching.</span></span> <span data-ttu-id="1106c-816">若要這樣做，請設定<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>屬性`false`。</span><span class="sxs-lookup"><span data-stu-id="1106c-816">To do so, set the <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="1106c-817">您應該呼叫<xref:System.Messaging.MessageQueue.Close%2A>佇列，然後再刪除訊息佇列伺服器上的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-817">You should call <xref:System.Messaging.MessageQueue.Close%2A> for a queue before you delete the queue on the Message Queuing server.</span></span> <span data-ttu-id="1106c-818">否則，訊息傳送至佇列無法擲回例外狀況，或出現在寄不出信件佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-818">Otherwise, messages sent to the queue could throw exceptions or appear in the dead-letter queue.</span></span>  
  
 <span data-ttu-id="1106c-819">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-819">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-820">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-820">Workgroup mode</span></span>|<span data-ttu-id="1106c-821">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-821">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-822">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-822">Local computer</span></span>|<span data-ttu-id="1106c-823">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-823">Yes</span></span>|  
|<span data-ttu-id="1106c-824">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-824">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-825">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-825">Yes</span></span>|  
|<span data-ttu-id="1106c-826">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-826">Remote computer</span></span>|<span data-ttu-id="1106c-827">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-827">Yes</span></span>|  
|<span data-ttu-id="1106c-828">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-828">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-829">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-829">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-830">下列程式碼範例會關閉訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-830">The following code example closes a Message Queuing queue.</span></span>  
  
 [!code-cpp[MessageQueue.Close#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Close/CPP/mqclose.cpp#1)]
 [!code-csharp[MessageQueue.Close#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Close/CS/mqclose.cs#1)]
 [!code-vb[MessageQueue.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Close/VB/mqclose.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-831">在 Message Queuing 伺服器上的指定路徑建立新的佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-831">Creates a new queue at the specified path on a Message Queuing server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue Create (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue Create(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String) As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueue ^ Create(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-832">要建立佇列的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-832">The path of the queue to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-833">在指定的路徑建立非交易的訊息佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-833">Creates a non-transactional Message Queuing queue at the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-834">表示新佇列的 <see cref="T:System.Messaging.MessageQueue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-834">A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-835">您可以使用這個多載來建立非交易式訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-835">Use this overload to create a non-transactional Message Queuing queue.</span></span>  
  
 <span data-ttu-id="1106c-836">若要建立的新執行個體<xref:System.Messaging.MessageQueue>應用程式中的類別和繫結到現有的佇列，請使用<xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-836">To create a new instance of the <xref:System.Messaging.MessageQueue> class in your application and bind it to an existing queue, use the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span> <span data-ttu-id="1106c-837">若要建立新的佇列中訊息佇列，請呼叫<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-837">To create a new queue in Message Queuing, call <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="1106c-838">語法`path`參數取決於佇列類型它的參考下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-838">The syntax for the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-839">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-839">Queue type</span></span>|<span data-ttu-id="1106c-840">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-840">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-841">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-841">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="1106c-842">私用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-842">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="1106c-843">使用 」。 「 本機電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-843">Use "." for the local computer.</span></span> <span data-ttu-id="1106c-844">如需更多的語法，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-844">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="1106c-845">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-845">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-846">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-846">Workgroup mode</span></span>|<span data-ttu-id="1106c-847">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-847">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-848">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-848">Local computer</span></span>|<span data-ttu-id="1106c-849">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-849">Yes</span></span>|  
|<span data-ttu-id="1106c-850">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-850">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-851">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-851">Yes</span></span>|  
|<span data-ttu-id="1106c-852">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-852">Remote computer</span></span>|<span data-ttu-id="1106c-853">否</span><span class="sxs-lookup"><span data-stu-id="1106c-853">No</span></span>|  
|<span data-ttu-id="1106c-854">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-854">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-855">否</span><span class="sxs-lookup"><span data-stu-id="1106c-855">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-856">下列程式碼範例會建立公用和私用佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-856">The following code example creates public and private queues.</span></span> <span data-ttu-id="1106c-857">它會傳送訊息至所選取的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-857">It sends a message to selected queues.</span></span>  
  
 [!code-cpp[MessageQueue.Create_path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Create_path/CPP/mqcreate.cpp#1)]
 [!code-csharp[MessageQueue.Create_path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Create_path/CS/mqcreate.cs#1)]
 [!code-vb[MessageQueue.Create_path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Create_path/VB/mqcreate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-858">
            <paramref name="path" /> 參數為 <see langword="null" /> 或空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-858">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-859">指定的路徑已經有佇列存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-859">A queue already exists at the specified path.</span>
          </span>
          <span data-ttu-id="1106c-860">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-860">-or-</span>
          </span>
          <span data-ttu-id="1106c-861">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-861">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue Create (string path, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue Create(string path, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, transactional As Boolean) As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueue ^ Create(System::String ^ path, bool transactional);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-862">要建立佇列的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-862">The path of the queue to create.</span>
          </span>
        </param>
        <param name="transactional">
          <span data-ttu-id="1106c-863">
            <see langword="true" /> 表示建立交易式佇列，<see langword="false" /> 表示建立非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-863">
              <see langword="true" /> to create a transactional queue; <see langword="false" /> to create a non-transactional queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-864">在指定的路徑建立交易或非交易的訊息佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-864">Creates a transactional or non-transactional Message Queuing queue at the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-865">表示新佇列的 <see cref="T:System.Messaging.MessageQueue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-865">A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-866">您可以使用這個多載來建立異動式佇列中訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-866">You can use this overload to create a transactional queue in Message Queuing.</span></span> <span data-ttu-id="1106c-867">您可以建立非交易式佇列，藉由設定`transactional`參數`false`或藉由呼叫的其他多載<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-867">You can create a non-transactional queue, by setting the `transactional` parameter to `false` or by calling the other overload of <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="1106c-868">若要建立的新執行個體<xref:System.Messaging.MessageQueue>應用程式中的類別和繫結到現有的佇列，請使用<xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-868">To create a new instance of the <xref:System.Messaging.MessageQueue> class in your application and bind it to an existing queue, use the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span> <span data-ttu-id="1106c-869">若要建立新的佇列中訊息佇列，請呼叫<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-869">To create a new queue in Message Queuing, call <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="1106c-870">語法`path`參數取決於佇列類型它的參考下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-870">The syntax for the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-871">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-871">Queue type</span></span>|<span data-ttu-id="1106c-872">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-872">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-873">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-873">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="1106c-874">私用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-874">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="1106c-875">使用 」。 「 本機電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-875">Use "." for the local computer.</span></span> <span data-ttu-id="1106c-876">如需更多的語法，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-876">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="1106c-877">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-877">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-878">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-878">Workgroup mode</span></span>|<span data-ttu-id="1106c-879">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-879">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-880">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-880">Local computer</span></span>|<span data-ttu-id="1106c-881">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-881">Yes</span></span>|  
|<span data-ttu-id="1106c-882">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-882">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-883">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-883">Yes</span></span>|  
|<span data-ttu-id="1106c-884">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-884">Remote computer</span></span>|<span data-ttu-id="1106c-885">否</span><span class="sxs-lookup"><span data-stu-id="1106c-885">No</span></span>|  
|<span data-ttu-id="1106c-886">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-886">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-887">否</span><span class="sxs-lookup"><span data-stu-id="1106c-887">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-888">下列程式碼範例會建立公用和私用的交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-888">The following code example creates public and private transactional queues.</span></span> <span data-ttu-id="1106c-889">它會傳送訊息至所選取的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-889">It sends a message to selected queues.</span></span>  
  
 [!code-cpp[MessageQueue.Create_PathTransactional#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/CPP/mqcreate_transactional.cpp#1)]
 [!code-csharp[MessageQueue.Create_PathTransactional#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/CS/mqcreate_transactional.cs#1)]
 [!code-vb[MessageQueue.Create_PathTransactional#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/VB/mqcreate_transactional.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-890">
            <paramref name="path" /> 參數為 <see langword="null" /> 或空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-890">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-891">指定的路徑已經有佇列存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-891">A queue already exists at the specified path.</span>
          </span>
          <span data-ttu-id="1106c-892">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-892">-or-</span>
          </span>
          <span data-ttu-id="1106c-893">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-893">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="CreateCursor">
      <MemberSignature Language="C#" Value="public System.Messaging.Cursor CreateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Cursor CreateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.CreateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCursor () As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Cursor ^ CreateCursor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Cursor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-894">建立目前訊息佇列的新 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-894">Creates a new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-895">目前訊息佇列的新 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-895">A new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</span>
          </span>
          <span data-ttu-id="1106c-896">讀取佇列的訊息時，這個資料指標用於保持佇列中的特定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-896">This cursor is used to maintain a specific location in the queue when reading the queue's messages.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public DateTime CreateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreateTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CreateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_CreateTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-897">取得佇列在訊息佇列中建立的時間和日期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-897">Gets the time and date that the queue was created in Message Queuing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-898">
            <see cref="T:System.DateTime" />，表示佇列的建立日期和時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-898">A <see cref="T:System.DateTime" /> that represents the date and time at which the queue was created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-899"><xref:System.Messaging.MessageQueue.CreateTime%2A> 不是指伺服器上的佇列訊息佇列，<xref:System.Messaging.MessageQueue>執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-899"><xref:System.Messaging.MessageQueue.CreateTime%2A> refers to the queue on the Message Queuing server, not the <xref:System.Messaging.MessageQueue> instance.</span></span>  
  
 <span data-ttu-id="1106c-900">如果佇列存在，則這個屬性表示的建立佇列時，佇列所在之伺服器的本機時間調整。</span><span class="sxs-lookup"><span data-stu-id="1106c-900">If the queue exists, this property represents the time the queue was created, adjusted to the local time of the server on which the queue exists.</span></span>  
  
 <span data-ttu-id="1106c-901">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-901">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-902">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-902">Workgroup mode</span></span>|<span data-ttu-id="1106c-903">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-903">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-904">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-904">Local computer</span></span>|<span data-ttu-id="1106c-905">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-905">Yes</span></span>|  
|<span data-ttu-id="1106c-906">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-906">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-907">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-907">Yes</span></span>|  
|<span data-ttu-id="1106c-908">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-908">Remote computer</span></span>|<span data-ttu-id="1106c-909">否</span><span class="sxs-lookup"><span data-stu-id="1106c-909">No</span></span>|  
|<span data-ttu-id="1106c-910">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-910">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-911">否</span><span class="sxs-lookup"><span data-stu-id="1106c-911">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-912">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.CreateTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-912">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CreateTime%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#9](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-913">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-913">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPropertiesToSend">
      <MemberSignature Language="C#" Value="public System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPropertiesToSend As DefaultPropertiesToSend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::DefaultPropertiesToSend ^ DefaultPropertiesToSend { System::Messaging::DefaultPropertiesToSend ^ get(); void set(System::Messaging::DefaultPropertiesToSend ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_DefaultPropertiesToSend")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.DefaultPropertiesToSend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-914">取得或設定應用程式傳送訊息至佇列時，會預設採用的訊息屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-914">Gets or sets the message property values to be used by default when the application sends messages to the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-915">
            <see cref="T:System.Messaging.DefaultPropertiesToSend" />，包含應用程式向佇列傳送 <see cref="T:System.Messaging.Message" /> 執行個體以外的物件時，使用的預設 Message Queuing 訊息屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-915">A <see cref="T:System.Messaging.DefaultPropertiesToSend" /> that contains the default Message Queuing message property values used when the application sends objects other than <see cref="T:System.Messaging.Message" /> instances to the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-916">當您將傳送的類型不是任何物件<xref:System.Messaging.Message>至佇列，<xref:System.Messaging.MessageQueue>將物件插入至訊息佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-916">When you send any object that is not of type <xref:System.Messaging.Message> to the queue, the <xref:System.Messaging.MessageQueue> inserts the object into a Message Queuing message.</span></span> <span data-ttu-id="1106c-917">在這段時間，<xref:System.Messaging.MessageQueue>套用至訊息中指定的屬性值<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-917">At that time, the <xref:System.Messaging.MessageQueue> applies to the message the property values you specify in the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property.</span></span> <span data-ttu-id="1106c-918">相反地，如果您傳送<xref:System.Messaging.Message>至佇列，這些屬性已指定執行個體本身，因此<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>會忽略<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="1106c-918">Conversely, if you send a <xref:System.Messaging.Message> to the queue, these properties are already specified for the instance itself, so <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> is ignored for the <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="1106c-919">雖然您可以設定屬性，透過<xref:System.Messaging.MessageQueue>物件<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>參考的訊息會傳送至佇列，而不佇列本身的屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-919">Although you set the properties through the <xref:System.Messaging.MessageQueue> object, the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> refers to the properties of the messages that are sent to the queue, not the queue itself.</span></span>  
  
 <span data-ttu-id="1106c-920">下表中，會顯示屬性的預設值。</span><span class="sxs-lookup"><span data-stu-id="1106c-920">The default values for the properties are shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-921">屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-921">Property</span></span>|<span data-ttu-id="1106c-922">預設值</span><span class="sxs-lookup"><span data-stu-id="1106c-922">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|<span data-ttu-id="1106c-923">零 (0)</span><span class="sxs-lookup"><span data-stu-id="1106c-923">Zero (0)</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|<span data-ttu-id="1106c-924">為零長度的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="1106c-924">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|<span data-ttu-id="1106c-925">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="1106c-925">Empty string ("")</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 <span data-ttu-id="1106c-926">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-926">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-927">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-927">Workgroup mode</span></span>|<span data-ttu-id="1106c-928">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-928">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-929">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-929">Local computer</span></span>|<span data-ttu-id="1106c-930">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-930">Yes</span></span>|  
|<span data-ttu-id="1106c-931">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-931">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-932">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-932">Yes</span></span>|  
|<span data-ttu-id="1106c-933">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-933">Remote computer</span></span>|<span data-ttu-id="1106c-934">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-934">Yes</span></span>|  
|<span data-ttu-id="1106c-935">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-935">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-936">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-936">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-937">下列程式碼範例會使用訊息的優先順序，以判斷傳送訊息的預設屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-937">The following code example uses the priority of a message to determine default properties to send for the message.</span></span>  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-938">無法設定佇列的預設屬性，可能是因為其中一個屬性無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-938">The default properties could not be set for the queue, possibly because one of the properties is not valid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-939">要刪除的佇列位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-939">The location of the queue to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-940">刪除 Message Queuing 伺服器上的佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-940">Deletes a queue on a Message Queuing server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-941">語法`path`參數取決於佇列的類型。</span><span class="sxs-lookup"><span data-stu-id="1106c-941">The syntax for the `path` parameter depends on the type of queue.</span></span>  
  
|<span data-ttu-id="1106c-942">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-942">Queue type</span></span>|<span data-ttu-id="1106c-943">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-943">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-944">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-944">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="1106c-945">私用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-945">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="1106c-946">如需更多的語法，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-946">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="1106c-947">或者，您可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>來描述為佇列路徑。</span><span class="sxs-lookup"><span data-stu-id="1106c-947">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path.</span></span>  
  
|<span data-ttu-id="1106c-948">參考資料</span><span class="sxs-lookup"><span data-stu-id="1106c-948">Reference</span></span>|<span data-ttu-id="1106c-949">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-949">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="1106c-950">格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-950">Format name</span></span>|<span data-ttu-id="1106c-951">使用 FormatName: [*格式名稱*]</span><span class="sxs-lookup"><span data-stu-id="1106c-951">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="1106c-952">ThisAddIn</span><span class="sxs-lookup"><span data-stu-id="1106c-952">Label</span></span>|<span data-ttu-id="1106c-953">標籤: [*標籤*]</span><span class="sxs-lookup"><span data-stu-id="1106c-953">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="1106c-954">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-954">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-955">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-955">Workgroup mode</span></span>|<span data-ttu-id="1106c-956">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-956">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-957">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-957">Local computer</span></span>|<span data-ttu-id="1106c-958">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-958">Yes</span></span>|  
|<span data-ttu-id="1106c-959">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-959">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-960">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-960">Yes</span></span>|  
|<span data-ttu-id="1106c-961">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-961">Remote computer</span></span>|<span data-ttu-id="1106c-962">否</span><span class="sxs-lookup"><span data-stu-id="1106c-962">No</span></span>|  
|<span data-ttu-id="1106c-963">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-963">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-964">否</span><span class="sxs-lookup"><span data-stu-id="1106c-964">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-965">下列程式碼範例會刪除訊息佇列 」 佇列，如果存在。</span><span class="sxs-lookup"><span data-stu-id="1106c-965">The following code example deletes a Message Queuing queue, if it exists.</span></span>  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-966">
            <paramref name="path" /> 參數為 <see langword="null" /> 或空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-966">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-967">
            <paramref name="path" /> 參數的語法無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-967">The syntax for the <paramref name="path" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="1106c-968">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-968">-or-</span>
          </span>
          <span data-ttu-id="1106c-969">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-969">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName="DenySharedReceive">
      <MemberSignature Language="C#" Value="public bool DenySharedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DenySharedReceive" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.DenySharedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property DenySharedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DenySharedReceive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_DenySharedReceive")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-970">取得或設定值，指出這個 <see cref="T:System.Messaging.MessageQueue" /> 是否具有從訊息佇列接收訊息的獨佔存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-970">Gets or sets a value that indicates whether this <see cref="T:System.Messaging.MessageQueue" /> has exclusive access to receive messages from the Message Queuing queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-971">如果這個 <see cref="T:System.Messaging.MessageQueue" /> 具有從佇列接收訊息的獨佔權限，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-971">
              <see langword="true" /> if this <see cref="T:System.Messaging.MessageQueue" /> has exclusive rights to receive messages from the queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1106c-972">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-972">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-973"><xref:System.Messaging.MessageQueue.DenySharedReceive%2A> 指定佇列所參考的共用的模式<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-973"><xref:System.Messaging.MessageQueue.DenySharedReceive%2A> specifies the shared mode of the queue referenced by this <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="1106c-974">設定<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>至`true`來表示，只有這<xref:System.Messaging.MessageQueue>應該查看，或從指定的佇列接收訊息的存取<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-974">Set <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> to `true` to indicate that only this <xref:System.Messaging.MessageQueue> should have access to peek or receive messages from the queue with the specified <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="1106c-975">如果另一個<xref:System.Messaging.MessageQueue>或另一個應用程式是相同的佇列資源，該執行個體相關聯的應用程式將無法再查看或接收訊息，但它仍然可以傳送它們。</span><span class="sxs-lookup"><span data-stu-id="1106c-975">If another <xref:System.Messaging.MessageQueue> or another application is associated with the same queue resource, that instance or application will not be able to peek or receive messages, but it can still send them.</span></span>  
  
 <span data-ttu-id="1106c-976">如果<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>是`false`，佇列可以使用多個應用程式傳送或其內，接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-976">If <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> is `false`, the queue is available to multiple applications for sending, peeking, or receiving messages.</span></span>  
  
 <span data-ttu-id="1106c-977">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-977">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-978">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-978">Workgroup mode</span></span>|<span data-ttu-id="1106c-979">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-979">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-980">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-980">Local computer</span></span>|<span data-ttu-id="1106c-981">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-981">Yes</span></span>|  
|<span data-ttu-id="1106c-982">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-982">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-983">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-983">Yes</span></span>|  
|<span data-ttu-id="1106c-984">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-984">Remote computer</span></span>|<span data-ttu-id="1106c-985">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-985">Yes</span></span>|  
|<span data-ttu-id="1106c-986">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-986">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-987">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-987">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-988">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-988">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#10](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="P:System.Messaging.MessageQueue.EnableConnectionCache" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1106c-989">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-989">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-990">處置 (Dispose) <see cref="T:System.Messaging.MessageQueue" /> 所使用的資源 (除了記憶體之外)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-990">Disposes of the resources (other than memory) used by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-991"><xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 使用完畢時，請呼叫 <xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-991">Call <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> when you are finished using the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="1106c-992"><xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 方法會將 <xref:System.Messaging.MessageQueue> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="1106c-992">The <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> method leaves the <xref:System.Messaging.MessageQueue> in an unusable state.</span></span> <span data-ttu-id="1106c-993">在呼叫<xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>，您必須釋放所有參考<xref:System.Messaging.MessageQueue>讓它所佔用的記憶體可由記憶體回收收回。</span><span class="sxs-lookup"><span data-stu-id="1106c-993">After calling <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>, you must release all references to the <xref:System.Messaging.MessageQueue> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="1106c-994">您應該呼叫<xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>您釋放最後一個參考之前<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-994">You should call <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> before you release your last reference to the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="1106c-995">否則，資源<xref:System.Messaging.MessageQueue>是使用之前，將不會釋放記憶體回收集合呼叫<xref:System.Messaging.MessageQueue>物件的解構函式。</span><span class="sxs-lookup"><span data-stu-id="1106c-995">Otherwise, the resources the <xref:System.Messaging.MessageQueue> is using will not be freed until garbage collection calls the <xref:System.Messaging.MessageQueue> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
      </Docs>
    </Member>
    <Member MemberName="EnableConnectionCache">
      <MemberSignature Language="C#" Value="public static bool EnableConnectionCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableConnectionCache" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.EnableConnectionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableConnectionCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableConnectionCache { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-996">取得或設定值，指出應用程式是否會維持連接的快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-996">Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-997">
            <see langword="true" /> 表示建立並使用連接快取，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-997">
              <see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-998">連接快取是一份結構包含讀取或寫入至佇列的控制代碼的參考。</span><span class="sxs-lookup"><span data-stu-id="1106c-998">A connection cache is a list of references to structures that contain read or write handles to queues.</span></span> <span data-ttu-id="1106c-999">當<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>是`true`、<xref:System.Messaging.MessageQueue>借用控點，從快取每次呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>， <xref:System.Messaging.MessageQueue.Peek%2A>，或<xref:System.Messaging.MessageQueue.Receive%2A>，而不是開啟新的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-999">When <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> is `true`, the <xref:System.Messaging.MessageQueue> borrows handles from the cache each time you call <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, or <xref:System.Messaging.MessageQueue.Receive%2A>, rather than open new handles.</span></span> <span data-ttu-id="1106c-1000">這可以改善效能。</span><span class="sxs-lookup"><span data-stu-id="1106c-1000">This can improve performance.</span></span> <span data-ttu-id="1106c-1001">使用連線快取也會以隔離<xref:System.Messaging.MessageQueue>網路拓撲中的變更。</span><span class="sxs-lookup"><span data-stu-id="1106c-1001">Using a connection cache also insulates the <xref:System.Messaging.MessageQueue> from changes in the network topology.</span></span>  
  
 <span data-ttu-id="1106c-1002">如果您建立新的連接到佇列時的連線快取已滿，<xref:System.Messaging.MessageQueue>至少最近存取的結構，使用覆寫新的連接。</span><span class="sxs-lookup"><span data-stu-id="1106c-1002">If you create a new connection to a queue when the connection cache is full, the <xref:System.Messaging.MessageQueue> overwrites the least recently accessed structure with the new connection.</span></span> <span data-ttu-id="1106c-1003">您可以清除快取完全是藉由呼叫<xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>，例如，如果您正在使用的佇列格式名稱已經變更，使先前的讀取和寫入控制代碼不再有效。</span><span class="sxs-lookup"><span data-stu-id="1106c-1003">You can clear the cache entirely by calling <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, for example, if the format names of the queues you are working with have changed so that the previous read and write handles are no longer valid.</span></span>  
  
 <span data-ttu-id="1106c-1004">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1004">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1005">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1005">Workgroup mode</span></span>|<span data-ttu-id="1106c-1006">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1006">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1007">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1007">Local computer</span></span>|<span data-ttu-id="1106c-1008">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1008">Yes</span></span>|  
|<span data-ttu-id="1106c-1009">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1009">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1010">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1010">Yes</span></span>|  
|<span data-ttu-id="1106c-1011">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1011">Remote computer</span></span>|<span data-ttu-id="1106c-1012">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1012">Yes</span></span>|  
|<span data-ttu-id="1106c-1013">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1013">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1014">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1014">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1015">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1015">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#11](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.ClearConnectionCache" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_EncryptionRequired")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1016">取得或設定值，指出佇列是否只接受非私用 (不加密的) 訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1016">Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1017">其中一個 <see cref="T:System.Messaging.EncryptionRequired" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1017">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values.</span>
          </span>
          <span data-ttu-id="1106c-1018">預設值為 <see langword="None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1018">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1019">當您指定需要傳送至佇列的訊息加密時，則會加密訊息內文。</span><span class="sxs-lookup"><span data-stu-id="1106c-1019">When you specify that encryption is required for the messages sent to a queue, only the message bodies are encrypted.</span></span> <span data-ttu-id="1106c-1020">其他成員 (例如，<xref:System.Messaging.Message.Label%2A>和<xref:System.Messaging.Message.SenderId%2A>屬性) 無法加密。</span><span class="sxs-lookup"><span data-stu-id="1106c-1020">The other members (for example, the <xref:System.Messaging.Message.Label%2A> and <xref:System.Messaging.Message.SenderId%2A> properties) cannot be encrypted.</span></span>  
  
 <span data-ttu-id="1106c-1021">設定這個屬性可以修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1021">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="1106c-1022">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-1022">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="1106c-1023">加密的訊息，可讓訊息私用。</span><span class="sxs-lookup"><span data-stu-id="1106c-1023">Encrypting a message makes the message private.</span></span> <span data-ttu-id="1106c-1024">您可以指定佇列的加密需求是`None`， `Body`，或`Optional`藉由設定<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>屬性適當地。</span><span class="sxs-lookup"><span data-stu-id="1106c-1024">You can specify the queue's encryption requirement to be `None`, `Body`, or `Optional` by setting the <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> property appropriately.</span></span> <span data-ttu-id="1106c-1025"><xref:System.Messaging.Message.UseEncryption%2A>訊息的設定必須對應至佇列的加密需求。</span><span class="sxs-lookup"><span data-stu-id="1106c-1025">The <xref:System.Messaging.Message.UseEncryption%2A> setting of the message must correspond to the encryption requirement of the queue.</span></span> <span data-ttu-id="1106c-1026">如果訊息並未加密，但佇列指定`Body`，或者如果訊息已加密，但佇列指定`None`，佇列將會拒絕訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1026">If the message is not encrypted but the queue specifies `Body`, or if the message is encrypted but the queue specifies `None`, the message is rejected by the queue.</span></span> <span data-ttu-id="1106c-1027">如果傳送應用程式要求在此事件的負值通知訊息，訊息佇列指出傳送應用程式的訊息被拒絕。</span><span class="sxs-lookup"><span data-stu-id="1106c-1027">If the sending application requests a negative acknowledgment message in this event, Message Queuing indicates the message's rejection to the sending application.</span></span> <span data-ttu-id="1106c-1028">如果<xref:System.Messaging.Message.UseDeadLetterQueue%2A>屬性是`true`，失敗加密的訊息傳送至寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1028">If the <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, a message that fails encryption is sent to the dead-letter queue.</span></span> <span data-ttu-id="1106c-1029">否則，訊息就會遺失。</span><span class="sxs-lookup"><span data-stu-id="1106c-1029">Otherwise, the message is lost.</span></span>  
  
 <span data-ttu-id="1106c-1030">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1030">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1031">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1031">Workgroup mode</span></span>|<span data-ttu-id="1106c-1032">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1032">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1033">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1033">Local computer</span></span>|<span data-ttu-id="1106c-1034">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1034">Yes</span></span>|  
|<span data-ttu-id="1106c-1035">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1035">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1036">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1036">Yes</span></span>|  
|<span data-ttu-id="1106c-1037">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1037">Remote computer</span></span>|<span data-ttu-id="1106c-1038">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1038">No</span></span>|  
|<span data-ttu-id="1106c-1039">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1039">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1040">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1040">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1041">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1041">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#12](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1042">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1042">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="EndPeek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message EndPeek (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message EndPeek(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndPeek (asyncResult As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ EndPeek(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1106c-1043">
            <see cref="T:System.IAsyncResult" />，識別要完成的非同步窺視作業，並要從其中擷取最終結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1043">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous peek operation to finish and from which to retrieve an end result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1044">完成指定的非同步窺視作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1044">Completes the specified asynchronous peek operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1045">與完成的非同步作業相關的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1045">The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1046">當<xref:System.Messaging.MessageQueue.PeekCompleted>引發事件時，<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>完成作業所起始的<xref:System.Messaging.MessageQueue.BeginPeek%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-1046">When the <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> completes the operation that was initiated by the <xref:System.Messaging.MessageQueue.BeginPeek%2A> call.</span></span> <span data-ttu-id="1106c-1047">若要這樣做，<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>窺視訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1047">To do so, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> peeks the message.</span></span>  
  
 <span data-ttu-id="1106c-1048"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 可以指定逾時，這會導致<xref:System.Messaging.MessageQueue.PeekCompleted>逾時發生之前佇列會出現訊息。 如果要產生的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1048"><xref:System.Messaging.MessageQueue.BeginPeek%2A> can specify a time-out, which causes the <xref:System.Messaging.MessageQueue.PeekCompleted> event to be raised if the time-out occurs before a message appears in the queue.</span></span> <span data-ttu-id="1106c-1049">當沒有訊息抵達佇列的後續呼叫中發生逾時<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-1049">When a time-out occurs without a message arriving in the queue, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> throws an exception.</span></span>  
  
 <span data-ttu-id="1106c-1050"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 用來讀取訊息造成<xref:System.Messaging.MessageQueue.PeekCompleted>會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1050"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is used to read the message that caused the <xref:System.Messaging.MessageQueue.PeekCompleted> event to be raised.</span></span>  
  
 <span data-ttu-id="1106c-1051">如果您想要繼續將以非同步方式查看訊息，可以一次呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>之後呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1051">If you want to continue to asynchronously peek messages, you can again call <xref:System.Messaging.MessageQueue.BeginPeek%2A> after calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="1106c-1052">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1052">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1053">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1053">Workgroup mode</span></span>|<span data-ttu-id="1106c-1054">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1054">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1055">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1055">Local computer</span></span>|<span data-ttu-id="1106c-1056">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1056">Yes</span></span>|  
|<span data-ttu-id="1106c-1057">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1057">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1058">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1058">Yes</span></span>|  
|<span data-ttu-id="1106c-1059">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1059">Remote computer</span></span>|<span data-ttu-id="1106c-1060">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1060">No</span></span>|  
|<span data-ttu-id="1106c-1061">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1061">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1062">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1062">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1063">下列程式碼範例會建立名為事件處理常式`MyPeekCompleted`，將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式委派，並呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>起始位於路徑上的佇列上的非同步窺視作業 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="1106c-1063">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="1106c-1064">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，此範例窺視訊息，並將其本文寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1106c-1064">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="1106c-1065">此範例會接著呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A> 以起始新的非同步查看作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-1065">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-1066">
            <paramref name="asyncResult" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1066">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1067">
            <paramref name="asyncResult" /> 參數的語法無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1067">The syntax of the <paramref name="asyncResult" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1068">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1068">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message EndReceive (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message EndReceive(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ EndReceive(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1106c-1069">
            <see cref="T:System.IAsyncResult" />，識別要完成的非同步接收作業，並要從其中擷取最終結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1069">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous receive operation to finish and from which to retrieve an end result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1070">完成指定的非同步接收作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1070">Completes the specified asynchronous receive operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1071">與完成的非同步作業相關的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1071">The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1072">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>引發事件時，<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>完成作業所起始的<xref:System.Messaging.MessageQueue.BeginReceive%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-1072">When the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> completes the operation that was initiated by the <xref:System.Messaging.MessageQueue.BeginReceive%2A> call.</span></span> <span data-ttu-id="1106c-1073">若要這樣做，<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1073">To do so, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> receives the message.</span></span>  
  
 <span data-ttu-id="1106c-1074"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 可以指定逾時，這會導致<xref:System.Messaging.MessageQueue.ReceiveCompleted>逾時發生之前佇列會出現訊息。 如果要產生的事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1074"><xref:System.Messaging.MessageQueue.BeginReceive%2A> can specify a time-out, which causes the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event to be raised if the time-out occurs before a message appears in the queue.</span></span> <span data-ttu-id="1106c-1075">當沒有訊息抵達佇列的後續呼叫中發生逾時<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-1075">When a time-out occurs without a message arriving in the queue, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> throws an exception.</span></span>  
  
 <span data-ttu-id="1106c-1076"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 用來讀取 （從佇列移除） 所造成的訊息<xref:System.Messaging.MessageQueue.ReceiveCompleted>會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1076"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is used to read (removing from the queue) the message that caused the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event to be raised.</span></span>  
  
 <span data-ttu-id="1106c-1077">如果您想要繼續以非同步方式接收訊息，可以一次呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>之後呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1077">If you want to continue to asynchronously receive messages, you can again call <xref:System.Messaging.MessageQueue.BeginReceive%2A> after calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="1106c-1078">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1078">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1079">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1079">Workgroup mode</span></span>|<span data-ttu-id="1106c-1080">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1080">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1081">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1081">Local computer</span></span>|<span data-ttu-id="1106c-1082">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1082">Yes</span></span>|  
|<span data-ttu-id="1106c-1083">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1083">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1084">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1084">Yes</span></span>|  
|<span data-ttu-id="1106c-1085">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1085">Remote computer</span></span>|<span data-ttu-id="1106c-1086">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1086">No</span></span>|  
|<span data-ttu-id="1106c-1087">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1087">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1088">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1088">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1089">下列程式碼範例鏈結非同步要求。</span><span class="sxs-lookup"><span data-stu-id="1106c-1089">The following code example chains asynchronous requests.</span></span> <span data-ttu-id="1106c-1090">它會假設稱為 「 myQueue 「 本機電腦上沒有佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1090">It assumes there is a queue on the local computer called "myQueue".</span></span> <span data-ttu-id="1106c-1091">`Main`函式開始非同步作業，由`MyReceiveCompleted`常式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1091">The `Main` function begins the asynchronous operation that is handled by the `MyReceiveCompleted` routine.</span></span> <span data-ttu-id="1106c-1092">`MyReceiveCompleted` 處理目前的訊息，並開始新的非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-1092">`MyReceiveCompleted` processes the current message and begins a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_mre.cpp#1)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_mre.cs#1)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_mre.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-1093">
            <paramref name="asyncResult" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1093">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1094">
            <paramref name="asyncResult" /> 參數的語法無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1094">The syntax of the <paramref name="asyncResult" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1095">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1095">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1106c-1096">要尋找的佇列位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1096">The location of the queue to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1097">判斷指定路徑上是否存在訊息佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1097">Determines whether a Message Queuing queue exists at the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1098">如果指定路徑上的佇列存在則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1098">
              <see langword="true" /> if a queue with the specified path exists; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1099"><xref:System.Messaging.MessageQueue.Exists%28System.String%29>方法來判斷訊息佇列 」 佇列是否存在指定的路徑。</span><span class="sxs-lookup"><span data-stu-id="1106c-1099">The <xref:System.Messaging.MessageQueue.Exists%28System.String%29> method determines whether a Message Queuing queue exists at a specified path.</span></span> <span data-ttu-id="1106c-1100">沒有方法可用來判斷具有指定的格式名稱的佇列是否存在。</span><span class="sxs-lookup"><span data-stu-id="1106c-1100">No method exists to determine whether a queue with a specified format name exists.</span></span> <span data-ttu-id="1106c-1101">如需有關格式名稱語法和其他路徑語法形式的詳細資訊，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。)</span><span class="sxs-lookup"><span data-stu-id="1106c-1101">For more information about the format name syntax and other path syntax forms, see the <xref:System.Messaging.MessageQueue.Path%2A> property.)</span></span>  
  
 <span data-ttu-id="1106c-1102"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 是昂貴的作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-1102"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> is an expensive operation.</span></span> <span data-ttu-id="1106c-1103">只有在必要時在應用程式中，請使用它。</span><span class="sxs-lookup"><span data-stu-id="1106c-1103">Use it only when it is necessary within the application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1106c-1104"><xref:System.Messaging.MessageQueue.Exists%28System.String%29>方法不支援<xref:System.Messaging.MessageQueue.FormatName%2A>前置詞。</span><span class="sxs-lookup"><span data-stu-id="1106c-1104">The <xref:System.Messaging.MessageQueue.Exists%28System.String%29> method does not support the <xref:System.Messaging.MessageQueue.FormatName%2A> prefix.</span></span>  
  
 <span data-ttu-id="1106c-1105">語法`path`參數類型而定的佇列下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-1105">The syntax for the `path` parameter depends on the type of queue, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-1106">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-1106">Queue type</span></span>|<span data-ttu-id="1106c-1107">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-1107">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-1108">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1108">Public queue</span></span>|`MachineName`\\`QueueName`|  
  
 <span data-ttu-id="1106c-1109"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 無法呼叫來確認遠端私用佇列存在。</span><span class="sxs-lookup"><span data-stu-id="1106c-1109"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> cannot be called to verify the existence of a remote private queue.</span></span>  
  
 <span data-ttu-id="1106c-1110">如需更多的語法，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1110">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="1106c-1111">或者，您可以使用<xref:System.Messaging.MessageQueue.Label%2A>來描述為佇列路徑。</span><span class="sxs-lookup"><span data-stu-id="1106c-1111">Alternatively, you can use the <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path.</span></span>  
  
|<span data-ttu-id="1106c-1112">參考資料</span><span class="sxs-lookup"><span data-stu-id="1106c-1112">Reference</span></span>|<span data-ttu-id="1106c-1113">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-1113">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="1106c-1114">ThisAddIn</span><span class="sxs-lookup"><span data-stu-id="1106c-1114">Label</span></span>|<span data-ttu-id="1106c-1115">標籤: [ `label` ]</span><span class="sxs-lookup"><span data-stu-id="1106c-1115">Label:[ `label` ]</span></span>|  
  
 <span data-ttu-id="1106c-1116">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1116">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1117">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1117">Workgroup mode</span></span>|<span data-ttu-id="1106c-1118">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1118">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1119">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1119">Local computer</span></span>|<span data-ttu-id="1106c-1120">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1120">Yes</span></span>|  
|<span data-ttu-id="1106c-1121">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1121">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1122">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1122">No</span></span>|  
|<span data-ttu-id="1106c-1123">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1123">Remote computer</span></span>|<span data-ttu-id="1106c-1124">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1124">No</span></span>|  
|<span data-ttu-id="1106c-1125">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1125">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1126">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1126">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1127">下列程式碼範例會確認是否 「 訊息佇列 」 佇列存在，然後將它刪除。</span><span class="sxs-lookup"><span data-stu-id="1106c-1127">The following code example verifies whether a Message Queuing queue exists, and then deletes it.</span></span>  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1128">
            <paramref name="path" /> 語法無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1128">The <paramref name="path" /> syntax is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1129">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1129">An error occurred when accessing a Message Queuing method.</span>
          </span>
          <span data-ttu-id="1106c-1130">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1130">-or-</span>
          </span>
          <span data-ttu-id="1106c-1131">
            <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> 方法會在遠端私用佇列上呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1131">The <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> method is being called on a remote private queue</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-1132">確認佇列是否存在時，應用程式會使用格式名稱語法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1132">The application used format name syntax when verifying queue existence.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName="FormatName">
      <MemberSignature Language="C#" Value="public string FormatName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.FormatName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_FormatName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1133">取得訊息佇列在佇列建立時產生的唯一佇列名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1133">Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1134">在網路上唯一的佇列名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1134">The name for the queue, which is unique on the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1135"><xref:System.Messaging.MessageQueue.FormatName%2A>屬性包含佇列的格式名稱。</span><span class="sxs-lookup"><span data-stu-id="1106c-1135">The <xref:System.Messaging.MessageQueue.FormatName%2A> property contains the format name of the queue.</span></span> <span data-ttu-id="1106c-1136">訊息佇列使用的格式名稱來識別開啟的佇列，以及如何存取它。</span><span class="sxs-lookup"><span data-stu-id="1106c-1136">Message Queuing uses the format name to identify which queue to open and how to access it.</span></span> <span data-ttu-id="1106c-1137">不同於大部分的佇列的特性，格式名稱不是訊息佇列應用程式佇列屬性，因此您無法透過訊息佇列的管理工具存取它。</span><span class="sxs-lookup"><span data-stu-id="1106c-1137">Unlike most of a queue's characteristics, the format name is not a Message Queuing application queue property, so you cannot access it through the Message Queuing management tool.</span></span> <span data-ttu-id="1106c-1138">格式名稱是在佇列中，只是唯一的名稱建立佇列，或稍後再產生應用程式時，訊息佇列產生的。</span><span class="sxs-lookup"><span data-stu-id="1106c-1138">The format name is simply a unique name for the queue, which Message Queuing generates when it creates the queue or which the application generates later.</span></span>  
  
 <span data-ttu-id="1106c-1139">如果您指定使用的路徑名稱語法的路徑 (例如`myComputer\myQueue`) 而不是您讀取或寫入至佇列時，請使用格式名稱語法，在網域主控站 （這會使用 Active Directory） 將轉譯<xref:System.Messaging.MessageQueue.Path%2A>到相關聯的<xref:System.Messaging.MessageQueue.FormatName%2A>之前存取佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1139">If you specify a path using the path name syntax (such as `myComputer\myQueue`) rather than using the format name syntax when you read or write to the queue, the primary domain controller (which uses Active Directory) translates the <xref:System.Messaging.MessageQueue.Path%2A> into the associated <xref:System.Messaging.MessageQueue.FormatName%2A> before accessing the queue.</span></span> <span data-ttu-id="1106c-1140">如果您的應用程式離線工作時，您必須使用格式名稱語法。否則，主要網域控制站將無法執行路徑轉譯。</span><span class="sxs-lookup"><span data-stu-id="1106c-1140">If your application is working offline, you must use the format name syntax; otherwise, the primary domain controller will not be available to perform the path translation.</span></span>  
  
 <span data-ttu-id="1106c-1141">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1141">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1142">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1142">Workgroup mode</span></span>|<span data-ttu-id="1106c-1143">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1143">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1144">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1144">Local computer</span></span>|<span data-ttu-id="1106c-1145">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1145">Yes</span></span>|  
|<span data-ttu-id="1106c-1146">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1146">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1147">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1147">Yes</span></span>|  
|<span data-ttu-id="1106c-1148">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1148">Remote computer</span></span>|<span data-ttu-id="1106c-1149">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1149">Yes</span></span>|  
|<span data-ttu-id="1106c-1150">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1150">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1151">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1151">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1152">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.FormatName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1152">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.FormatName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#13](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1153">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1153">The <see cref="P:System.Messaging.MessageQueue.Path" /> is not set.</span>
          </span>
          <span data-ttu-id="1106c-1154">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1154">-or-</span>
          </span>
          <span data-ttu-id="1106c-1155">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1155">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public System.Messaging.IMessageFormatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.IMessageFormatter Formatter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatter As IMessageFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::IMessageFormatter ^ Formatter { System::Messaging::IMessageFormatter ^ get(); void set(System::Messaging::IMessageFormatter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageFormatterConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Formatter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.IMessageFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1156">取得或設定對佇列寫入或讀取訊息時，用來將物件序列化成訊息主體，或者從訊息主體將物件還原序列化的格式子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1156">Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1157">產生要對訊息主體寫入或讀取的資料流的 <see cref="T:System.Messaging.IMessageFormatter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1157">The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.</span>
          </span>
          <span data-ttu-id="1106c-1158">預設值為 <see cref="T:System.Messaging.XmlMessageFormatter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1158">The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1159"><xref:System.Messaging.MessageQueue.Formatter%2A>屬性包含格式子物件，您的應用程式讀取或寫入至佇列時，轉換訊息的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-1159">The <xref:System.Messaging.MessageQueue.Formatter%2A> property contains an instance of a formatter object, which transforms messages when your application reads or writes to the queue.</span></span>  
  
 <span data-ttu-id="1106c-1160">當應用程式傳送訊息至佇列時，格式器會將物件序列化成資料流，並將它插入訊息內文。</span><span class="sxs-lookup"><span data-stu-id="1106c-1160">When the application sends message to the queue, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="1106c-1161">格式器時從佇列讀取時，會將訊息資料還原序列化<xref:System.Messaging.Message.Body%2A>屬性<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1161">When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="1106c-1162"><xref:System.Messaging.XmlMessageFormatter>鬆散偶合，如此就不需要有相同的物件時使用此格式輸入上的寄件者和接收者。</span><span class="sxs-lookup"><span data-stu-id="1106c-1162">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="1106c-1163"><xref:System.Messaging.ActiveXMessageFormatter>和<xref:System.Messaging.BinaryMessageFormatter>將資料序列化為二進位表示法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1163">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="1106c-1164"><xref:System.Messaging.ActiveXMessageFormatter>傳送或接收的 COM 元件時使用。</span><span class="sxs-lookup"><span data-stu-id="1106c-1164">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="1106c-1165"><xref:System.Messaging.BinaryMessageFormatter> 和<xref:System.Messaging.ActiveXMessageFormatter>提供更快速的輸送量比<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1165"><xref:System.Messaging.BinaryMessageFormatter> and <xref:System.Messaging.ActiveXMessageFormatter> provide faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="1106c-1166"><xref:System.Messaging.ActiveXMessageFormatter>允許與 Visual Basic 6.0 訊息佇列應用程式的互通性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1166">The <xref:System.Messaging.ActiveXMessageFormatter> allows interoperability with Visual Basic 6.0 Message Queuing applications.</span></span>  
  
 <span data-ttu-id="1106c-1167">當您的應用程式會將訊息傳送至佇列，<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>只適用於使用預設的訊息屬性，這些訊息<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1167">When your application sends messages to the queue, the <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> applies only to those messages that use the default message properties, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span></span> <span data-ttu-id="1106c-1168">如果您傳送<xref:System.Messaging.Message>至佇列，訊息佇列使用中定義的格式器<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性改為序列化內文。</span><span class="sxs-lookup"><span data-stu-id="1106c-1168">If you send a <xref:System.Messaging.Message> to the queue, Message Queuing uses the formatter defined in the <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property to serialize the body instead.</span></span>  
  
 <span data-ttu-id="1106c-1169"><xref:System.Messaging.MessageQueue>類別一律會使用<xref:System.Messaging.Message>接收或窺視佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1169">The <xref:System.Messaging.MessageQueue> class will always use a <xref:System.Messaging.Message> to receive or peek a message from the queue.</span></span> <span data-ttu-id="1106c-1170">使用還原序列化訊息<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1170">The message is deserialized using the <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1106c-1171">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1171">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1172">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1172">Workgroup mode</span></span>|<span data-ttu-id="1106c-1173">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1173">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1174">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1174">Local computer</span></span>|<span data-ttu-id="1106c-1175">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1175">Yes</span></span>|  
|<span data-ttu-id="1106c-1176">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1176">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1177">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1177">Yes</span></span>|  
|<span data-ttu-id="1106c-1178">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1178">Remote computer</span></span>|<span data-ttu-id="1106c-1179">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1179">No</span></span>|  
|<span data-ttu-id="1106c-1180">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1180">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1181">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1181">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1182">下列程式碼範例示範的格式化訊息本文會使用<xref:System.Messaging.BinaryMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1182">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="1106c-1183">下列程式碼範例示範的格式化訊息本文會使用<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1183">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
      </Docs>
    </Member>
    <Member MemberName="GetAllMessages">
      <MemberSignature Language="C#" Value="public System.Messaging.Message[] GetAllMessages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message[] GetAllMessages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetAllMessages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMessages () As Message()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Messaging::Message ^&gt; ^ GetAllMessages();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1184">傳回佇列中的所有訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1184">Returns all the messages that are in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1185">
            <see cref="T:System.Messaging.Message" /> 型別的陣列，表示佇列中的所有訊息，順序與出現在訊息佇列中的順序一樣。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1185">An array of type <see cref="T:System.Messaging.Message" /> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1186"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> 這些訊息傳回佇列中的訊息、 非動態連結的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="1106c-1186"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> returns a static snapshot of the messages in the queue, not dynamic links to those messages.</span></span> <span data-ttu-id="1106c-1187">因此，您無法使用陣列，若要修改佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1187">Therefore, you cannot use the array to modify the messages in the queue.</span></span> <span data-ttu-id="1106c-1188">如果您想即時、 動態互動 （例如，若要刪除訊息的能力） 佇列時，呼叫<xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A>方法，這個方法會傳回佇列中訊息的動態清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1188">If you want real-time, dynamic interaction with the queue (such as the ability to delete messages), call the <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> method, which returns a dynamic list of the messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-1189">因為<xref:System.Messaging.MessageQueue.GetAllMessages%2A>呼叫此方法傳回佇列中訊息的複本時，陣列不會反映新的訊息到達佇列或從佇列中移除的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1189">Because <xref:System.Messaging.MessageQueue.GetAllMessages%2A> returns a copy of the messages in the queue at the time the method was called, the array does not reflect new messages that arrive in the queue or messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="1106c-1190"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> 擷取尚未經過篩選的屬性<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1190"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> retrieves only those properties not filtered out by the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property.</span></span>  
  
 <span data-ttu-id="1106c-1191">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1191">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1192">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1192">Workgroup mode</span></span>|<span data-ttu-id="1106c-1193">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1193">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1194">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1194">Local computer</span></span>|<span data-ttu-id="1106c-1195">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1195">Yes</span></span>|  
|<span data-ttu-id="1106c-1196">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1196">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1197">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1197">Yes</span></span>|  
|<span data-ttu-id="1106c-1198">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1198">Remote computer</span></span>|<span data-ttu-id="1106c-1199">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1199">No</span></span>|  
|<span data-ttu-id="1106c-1200">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1200">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1201">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1201">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1202">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.GetAllMessages%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1202">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#21](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#21)]
 [!code-csharp[MessageQueue2#21](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1203">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1203">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1204">列舉佇列中的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1204">Enumerates the messages in a queue.</span>
          </span>
          <span data-ttu-id="1106c-1205">
            <see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> 已被取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1205">
              <see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> is deprecated.</span>
          </span>
          <span data-ttu-id="1106c-1206">應改用 <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1206">
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1207">
            <see cref="T:System.Collections.IEnumerator" />，提供佇列中訊息的動態連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1207">A <see cref="T:System.Collections.IEnumerator" /> that provides a dynamic connection to the messages in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1208">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1208">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1209">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1209">Workgroup mode</span></span>|<span data-ttu-id="1106c-1210">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1210">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1211">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1211">Local computer</span></span>|<span data-ttu-id="1106c-1212">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1212">Yes</span></span>|  
|<span data-ttu-id="1106c-1213">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1213">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1214">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1214">Yes</span></span>|  
|<span data-ttu-id="1106c-1215">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1215">Remote computer</span></span>|<span data-ttu-id="1106c-1216">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1216">No</span></span>|  
|<span data-ttu-id="1106c-1217">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1217">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1218">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1218">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1219">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.GetEnumerator%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1219">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.GetEnumerator%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#22](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#22)]
 [!code-csharp[MessageQueue2#22](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetMachineId">
      <MemberSignature Language="C#" Value="public static Guid GetMachineId (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetMachineId(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMachineId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMachineId (machineName As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetMachineId(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="1106c-1220">包含佇列的電腦名稱，前端沒有兩條反斜線 (\\\\)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1220">The name of the computer that contains the queue, without the two preceding backslashes (\\\\).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1221">取得這個 <see cref="T:System.Messaging.MessageQueue" /> 參考之佇列所在位置的電腦識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1221">Gets the identifier of the computer on which the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> is located.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1222">
            <see cref="T:System.Guid" />，表示佇列所在之電腦的唯一識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1222">A <see cref="T:System.Guid" /> that represents a unique identifier for the computer on which the queue is located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1223">您可以使用電腦的識別碼有兩種用途，和其他項目： 讀取電腦日誌，並設定安全性憑證。</span><span class="sxs-lookup"><span data-stu-id="1106c-1223">You can use a computer's identifier for two purposes, among others: to read the computer journal and to set security certificates.</span></span> <span data-ttu-id="1106c-1224">不過，您不能呼叫<xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>遠端電腦，當您離線工作因為應用程式必須具有網域控制站上的目錄服務的存取權。</span><span class="sxs-lookup"><span data-stu-id="1106c-1224">However, you cannot call <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29> for a remote computer when you are working offline because the application must have access to the directory service on the domain controller.</span></span>  
  
 <span data-ttu-id="1106c-1225">電腦識別元 （或電腦的識別項） 是<xref:System.Guid>訊息佇列時，會建立將電腦新增至企業。</span><span class="sxs-lookup"><span data-stu-id="1106c-1225">The computer identifier (or machine identifier) is a <xref:System.Guid> that Message Queuing creates when a computer is added to the enterprise.</span></span> <span data-ttu-id="1106c-1226">訊息佇列的結合電腦識別項與`Machine`和`Journal`關鍵字來建立電腦日誌的格式名稱，其語法`Machine=<computeridentifier>;Journal`。</span><span class="sxs-lookup"><span data-stu-id="1106c-1226">Message Queuing combines the computer identifier with the `Machine` and `Journal` keywords to create the machine journal's format name, which has the syntax `Machine=<computeridentifier>;Journal`.</span></span> <span data-ttu-id="1106c-1227">機器筆記本中，也稱為日誌佇列中，為已儲存之系統佇列應用程式所產生的訊息時<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="1106c-1227">The machine journal, which is also known as the journal queue, is a system queue that stores copies of application-generated messages when the <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="1106c-1228">建構佇列格式名稱時，此語法日誌才有效。</span><span class="sxs-lookup"><span data-stu-id="1106c-1228">This syntax for the journal is only valid when constructing the format name for the queue.</span></span> <span data-ttu-id="1106c-1229">路徑名稱語法不`MachineName` \\ `Journal$`。</span><span class="sxs-lookup"><span data-stu-id="1106c-1229">The path name syntax is `MachineName`\\`Journal$`.</span></span>  
  
 <span data-ttu-id="1106c-1230">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1230">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1231">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1231">Workgroup mode</span></span>|<span data-ttu-id="1106c-1232">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1232">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1233">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1233">Local computer</span></span>|<span data-ttu-id="1106c-1234">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1234">No</span></span>|  
|<span data-ttu-id="1106c-1235">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1235">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1236">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1236">No</span></span>|  
|<span data-ttu-id="1106c-1237">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1237">Remote computer</span></span>|<span data-ttu-id="1106c-1238">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1238">No</span></span>|  
|<span data-ttu-id="1106c-1239">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1239">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1240">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1240">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1241">下列程式碼範例呼叫 <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1241">The following code example calls <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>.</span></span>  
  
 [!code-csharp[MessageQueue#14](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1242">無法擷取電腦識別項，可能是因為目錄服務無法使用；例如，如果您是離線工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1242">The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.</span>
          </span>
          <span data-ttu-id="1106c-1243">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1243">-or-</span>
          </span>
          <span data-ttu-id="1106c-1244">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1244">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageEnumerator">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageEnumerator GetMessageEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.MessageEnumerator GetMessageEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageEnumerator () As MessageEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::MessageEnumerator ^ GetMessageEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1245">為佇列中的所有訊息建立列舉值物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1245">Creates an enumerator object for all the messages in the queue.</span>
          </span>
          <span data-ttu-id="1106c-1246">
            <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> 已被取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1246">
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> is deprecated.</span>
          </span>
          <span data-ttu-id="1106c-1247">應改用 <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1247">
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1248">
            <see cref="T:System.Messaging.MessageEnumerator" />，保有在佇列中所包含的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1248">The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1249"><xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> 建立佇列中的所有訊息的動態清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1249"><xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> creates a dynamic list of all the messages in a queue.</span></span> <span data-ttu-id="1106c-1250">您可以從佇列中移除位於列舉值的目前位置的訊息藉由呼叫<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>如<xref:System.Messaging.MessageEnumerator>，<xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-1250">You can remove from the queue the message at the enumerator's current position by calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> for the <xref:System.Messaging.MessageEnumerator> that <xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> returns.</span></span>  
  
 <span data-ttu-id="1106c-1251">因為資料指標相關聯的訊息佇列中的動態清單，列舉型別會反映您對佇列中的訊息進行任何修改，如果訊息超出目前的游標位置。</span><span class="sxs-lookup"><span data-stu-id="1106c-1251">Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</span></span> <span data-ttu-id="1106c-1252">比方說，放置游標的目前位置，超出的低優先權訊息但不是插入該位置之前較高優先權的訊息，可以自動存取列舉值。</span><span class="sxs-lookup"><span data-stu-id="1106c-1252">For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</span></span> <span data-ttu-id="1106c-1253">不過，您可以重設列舉型別，藉此將游標移回至清單中，開頭藉由呼叫<xref:System.Messaging.MessageEnumerator.Reset%2A>如<xref:System.Messaging.MessageEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1253">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageEnumerator.Reset%2A> for the <xref:System.Messaging.MessageEnumerator>.</span></span>  
  
 <span data-ttu-id="1106c-1254">列舉中訊息的順序會反映在佇列中，其順序，所以較高優先權的訊息會出現在優先順序較低的。</span><span class="sxs-lookup"><span data-stu-id="1106c-1254">The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</span></span>  
  
 <span data-ttu-id="1106c-1255">如果您想將它們之訊息佇列，而不是動態的連接靜態快照集時，呼叫<xref:System.Messaging.MessageQueue.GetAllMessages%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1255">If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span> <span data-ttu-id="1106c-1256">這個方法傳回的陣列<xref:System.Messaging.Message>代表訊息的時呼叫此方法的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1256">This method returns an array of <xref:System.Messaging.Message> objects, which represent the messages at the time the method was called.</span></span>  
  
 <span data-ttu-id="1106c-1257">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1257">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1258">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1258">Workgroup mode</span></span>|<span data-ttu-id="1106c-1259">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1259">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1260">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1260">Local computer</span></span>|<span data-ttu-id="1106c-1261">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1261">Yes</span></span>|  
|<span data-ttu-id="1106c-1262">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1262">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1263">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1263">Yes</span></span>|  
|<span data-ttu-id="1106c-1264">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1264">Remote computer</span></span>|<span data-ttu-id="1106c-1265">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1265">Yes</span></span>|  
|<span data-ttu-id="1106c-1266">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1266">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1267">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1267">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1268">下列程式碼範例在佇列取得訊息的動態清單和計數的所有訊息<xref:System.Messaging.Message.Priority%2A>屬性設定為<xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1268">The following code example gets a dynamic list of messages in a queue and counts all messages with the <xref:System.Messaging.Message.Priority%2A> property set to <xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CPP/mqgetmessageenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CS/mqgetmessageenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/VB/mqgetmessageenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetAllMessages" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageEnumerator2">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageEnumerator GetMessageEnumerator2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.MessageEnumerator GetMessageEnumerator2() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageEnumerator2 () As MessageEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::MessageEnumerator ^ GetMessageEnumerator2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1269">為佇列中的所有訊息建立列舉值物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1269">Creates an enumerator object for all the messages in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1270">
            <see cref="T:System.Messaging.MessageEnumerator" />，保有在佇列中所包含的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1270">The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1271"><xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> 建立佇列中的所有訊息的動態清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1271"><xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> creates a dynamic list of all the messages in a queue.</span></span> <span data-ttu-id="1106c-1272">您可以從佇列中移除位於列舉值的目前位置的訊息藉由呼叫<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>如<xref:System.Messaging.MessageEnumerator>，<xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-1272">You can remove from the queue the message at the enumerator's current position by calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> for the <xref:System.Messaging.MessageEnumerator> that <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> returns.</span></span>  
  
 <span data-ttu-id="1106c-1273">因為資料指標相關聯的訊息佇列中的動態清單，列舉型別會反映您對佇列中的訊息進行任何修改，如果訊息超出目前的游標位置。</span><span class="sxs-lookup"><span data-stu-id="1106c-1273">Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</span></span> <span data-ttu-id="1106c-1274">比方說，放置游標的目前位置，超出的低優先權訊息但不是插入該位置之前較高優先權的訊息，可以自動存取列舉值。</span><span class="sxs-lookup"><span data-stu-id="1106c-1274">For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</span></span> <span data-ttu-id="1106c-1275">不過，您可以重設列舉型別，藉此將游標移回至清單中，開頭藉由呼叫<xref:System.Messaging.MessageEnumerator.Reset%2A>如<xref:System.Messaging.MessageEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1275">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageEnumerator.Reset%2A> for the <xref:System.Messaging.MessageEnumerator>.</span></span>  
  
 <span data-ttu-id="1106c-1276">列舉中訊息的順序會反映在佇列中，其順序，所以較高優先權的訊息會出現在優先順序較低的。</span><span class="sxs-lookup"><span data-stu-id="1106c-1276">The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</span></span>  
  
 <span data-ttu-id="1106c-1277">如果您想將它們之訊息佇列，而不是動態的連接靜態快照集時，呼叫<xref:System.Messaging.MessageQueue.GetAllMessages%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1277">If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span> <span data-ttu-id="1106c-1278">這個方法傳回的陣列<xref:System.Messaging.Message>代表訊息的時呼叫此方法的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1278">This method returns an array of <xref:System.Messaging.Message> objects, which represent the messages at the time the method was called.</span></span>  
  
 <span data-ttu-id="1106c-1279">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1279">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1280">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1280">Workgroup mode</span></span>|<span data-ttu-id="1106c-1281">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1281">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1282">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1282">Local computer</span></span>|<span data-ttu-id="1106c-1283">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1283">Yes</span></span>|  
|<span data-ttu-id="1106c-1284">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1284">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1285">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1285">Yes</span></span>|  
|<span data-ttu-id="1106c-1286">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1286">Remote computer</span></span>|<span data-ttu-id="1106c-1287">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1287">Yes</span></span>|  
|<span data-ttu-id="1106c-1288">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1288">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1289">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1289">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetAllMessages" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMessageQueueEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1290">為網路上公用佇列的動態清單建立列舉值物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1290">Creates an enumerator object for a dynamic listing of the public queues on the network.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMessageQueueEnumerator">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMessageQueueEnumerator () As MessageQueueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueueEnumerator ^ GetMessageQueueEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1291">提供順向資料指標語意，以列舉網路上的所有公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1291">Provides forward-only cursor semantics to enumerate through all public queues on the network.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1292">提供網路上所有公用訊息佇列動態清單的 <see cref="T:System.Messaging.MessageQueueEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1292">A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of all the public message queues on the network.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1293">這個多載<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>傳回位於網路的所有公用佇列的列舉。</span><span class="sxs-lookup"><span data-stu-id="1106c-1293">This overload of <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> returns an enumeration of all the public queues that are on the network.</span></span>  
  
 <span data-ttu-id="1106c-1294">因為資料指標相關聯的動態清單，列舉型別會反映您對刪除或資料指標的目前位置之後加入佇列的佇列清單所做的任何修改。</span><span class="sxs-lookup"><span data-stu-id="1106c-1294">Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue list for queues deleted or added beyond the cursor's current position.</span></span> <span data-ttu-id="1106c-1295">不會反映加入或刪除的資料指標的目前位置前面的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1295">Additions or deletion of queues located before the cursor's current position are not reflected.</span></span> <span data-ttu-id="1106c-1296">比方說，佇列，附加到資料指標位置之外，但不是其中插入該位置之前，可以自動存取列舉值。</span><span class="sxs-lookup"><span data-stu-id="1106c-1296">For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</span></span> <span data-ttu-id="1106c-1297">不過，您可以重設列舉型別，藉此將游標移回至清單中，開頭藉由呼叫<xref:System.Messaging.MessageQueueEnumerator.Reset%2A>如<xref:System.Messaging.MessageQueueEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1297">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> for the <xref:System.Messaging.MessageQueueEnumerator>.</span></span>  
  
 <span data-ttu-id="1106c-1298">沒有佇列的網路中未定義順序。</span><span class="sxs-lookup"><span data-stu-id="1106c-1298">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="1106c-1299">列舉值不會排序，例如電腦、 標籤、 公用或私用狀態，或任何其他可存取的準則。</span><span class="sxs-lookup"><span data-stu-id="1106c-1299">An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</span></span>  
  
 <span data-ttu-id="1106c-1300">如果您想在網路，而不是動態的連線，佇列的靜態快照集時，呼叫<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>或<xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1300">If you want a static snapshot of the queues on the network rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> or <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>.</span></span> <span data-ttu-id="1106c-1301">這兩種方法的每個傳回的陣列<xref:System.Messaging.MessageQueue>代表佇列的時呼叫此方法的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1301">Each of these two methods returns an array of <xref:System.Messaging.MessageQueue> objects, which represent the queues at the time the method was called.</span></span>  
  
 <span data-ttu-id="1106c-1302">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1302">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1303">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1303">Workgroup mode</span></span>|<span data-ttu-id="1106c-1304">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1304">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1305">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1305">Local computer</span></span>|<span data-ttu-id="1106c-1306">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1306">No</span></span>|  
|<span data-ttu-id="1106c-1307">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1307">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1308">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1308">No</span></span>|  
|<span data-ttu-id="1106c-1309">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1309">Remote computer</span></span>|<span data-ttu-id="1106c-1310">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1310">No</span></span>|  
|<span data-ttu-id="1106c-1311">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1311">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1312">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1312">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1313">下列程式碼範例會逐一查看網路中的所有訊息佇列，並檢查每個佇列的路徑。</span><span class="sxs-lookup"><span data-stu-id="1106c-1313">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="1106c-1314">最後，它會在網路上顯示公用佇列的數目。</span><span class="sxs-lookup"><span data-stu-id="1106c-1314">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageQueueEnumerator">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator (System.Messaging.MessageQueueCriteria criteria);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator(class System.Messaging.MessageQueueCriteria criteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMessageQueueEnumerator (criteria As MessageQueueCriteria) As MessageQueueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueueEnumerator ^ GetMessageQueueEnumerator(System::Messaging::MessageQueueCriteria ^ criteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.Messaging.MessageQueueCriteria" />
      </Parameters>
      <Docs>
        <param name="criteria">
          <span data-ttu-id="1106c-1315">
            <see cref="T:System.Messaging.MessageQueueCriteria" />，包含用來篩選可用訊息佇列的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1315">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the available message queues.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1316">提供順向資料指標語意，以列舉網路上所有符合指定準則的公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1316">Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1317">提供網路上所有公用訊息佇列動態清單的 <see cref="T:System.Messaging.MessageQueueEnumerator" />，其符合 <paramref name="criteria" /> 參數指定的限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1317">A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <paramref name="criteria" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1318">這個多載<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>傳回符合準則的應用程式準則中所定義的網路上的所有公用佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1318">This overload of <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> returns a listing of all the public queues on the network that satisfy criteria defined in the application criteria.</span></span> <span data-ttu-id="1106c-1319">您可以指定建立或修改時間、 電腦名稱、 標籤、 類別目錄或上述任何組合，例如，排入佇列要包括的準則。</span><span class="sxs-lookup"><span data-stu-id="1106c-1319">You can specify the criteria to include, for example, queue creation or modification time, computer name, label, category, or any combination of these.</span></span>  
  
 <span data-ttu-id="1106c-1320">因為資料指標相關聯的動態清單，列舉型別會反映您對資料指標的目前位置之後，就會發生的佇列進行任何修改。</span><span class="sxs-lookup"><span data-stu-id="1106c-1320">Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue that occurs beyond the cursor's current position.</span></span> <span data-ttu-id="1106c-1321">不會反映佇列資料指標的目前位置前面的變更。</span><span class="sxs-lookup"><span data-stu-id="1106c-1321">Changes to queues located before the cursor's current position are not reflected.</span></span> <span data-ttu-id="1106c-1322">比方說，佇列，附加到資料指標位置之外，但不是其中插入該位置之前，可以自動存取列舉值。</span><span class="sxs-lookup"><span data-stu-id="1106c-1322">For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</span></span> <span data-ttu-id="1106c-1323">不過，您可以重設列舉型別，藉此將游標移回至清單中，開頭藉由呼叫<xref:System.Messaging.MessageQueueEnumerator.Reset%2A>如<xref:System.Messaging.MessageQueueEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1323">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> for the <xref:System.Messaging.MessageQueueEnumerator>.</span></span>  
  
 <span data-ttu-id="1106c-1324">沒有佇列的網路中未定義順序。</span><span class="sxs-lookup"><span data-stu-id="1106c-1324">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="1106c-1325">列舉值不會排序，例如電腦、 標籤、 公用或私用狀態，或任何其他可存取的準則。</span><span class="sxs-lookup"><span data-stu-id="1106c-1325">An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</span></span>  
  
 <span data-ttu-id="1106c-1326">如果您想在網路，而不是動態的連線，佇列的靜態快照集時，指定的準則<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>或呼叫<xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1326">If you want a static snapshot of the queues on the network rather than a dynamic connection to them, specify criteria for <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> or call <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>.</span></span> <span data-ttu-id="1106c-1327">這兩種方法的每個傳回的陣列<xref:System.Messaging.MessageQueue>代表佇列的時呼叫此方法的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1327">Each of these two methods returns an array of <xref:System.Messaging.MessageQueue> objects, which represent the queues at the time the method was called.</span></span> <span data-ttu-id="1106c-1328">呼叫<xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>，或<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>提供相同的結果，與呼叫<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>的篩選條件與<xref:System.Messaging.MessageQueue.Category%2A>， <xref:System.Messaging.MessageQueue.Label%2A>，和<xref:System.Messaging.MessageQueue.MachineName%2A>分別。</span><span class="sxs-lookup"><span data-stu-id="1106c-1328">Calling <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, or <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> provides the same results as calling <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> with the filtering criteria of <xref:System.Messaging.MessageQueue.Category%2A>, <xref:System.Messaging.MessageQueue.Label%2A>, and <xref:System.Messaging.MessageQueue.MachineName%2A>, respectively.</span></span>  
  
 <span data-ttu-id="1106c-1329">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1329">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1330">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1330">Workgroup mode</span></span>|<span data-ttu-id="1106c-1331">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1331">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1332">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1332">Local computer</span></span>|<span data-ttu-id="1106c-1333">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1333">No</span></span>|  
|<span data-ttu-id="1106c-1334">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1334">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1335">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1335">No</span></span>|  
|<span data-ttu-id="1106c-1336">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1336">Remote computer</span></span>|<span data-ttu-id="1106c-1337">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1337">No</span></span>|  
|<span data-ttu-id="1106c-1338">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1338">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1339">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1339">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1340">下列程式碼範例會逐一訊息佇列，並顯示最後一天中建立且存在於每個佇列的路徑在電腦"MyComputer"。</span><span class="sxs-lookup"><span data-stu-id="1106c-1340">The following code example iterates through message queues and displays the path of each queue that was created in the last day and that exists on the computer "MyComputer".</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CPP/mqgetmessagequeueenumerator_criteria.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CS/mqgetmessagequeueenumerator_criteria.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/VB/mqgetmessagequeueenumerator_criteria.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetPrivateQueuesByMachine">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPrivateQueuesByMachine (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPrivateQueuesByMachine(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPrivateQueuesByMachine (machineName As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPrivateQueuesByMachine(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="1106c-1341">要從其中擷取私用佇列的電腦。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1341">The computer from which to retrieve the private queues.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1342">擷取所指定電腦上的所有私用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1342">Retrieves all the private queues on the specified computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1343">
            <see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的私用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1343">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved private queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1344"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> 擷取指定的電腦上之佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="1106c-1344"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> retrieves a static snapshot of the queues on a specified computer.</span></span>  
  
 <span data-ttu-id="1106c-1345">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1345">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1346">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1346">Workgroup mode</span></span>|<span data-ttu-id="1106c-1347">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1347">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1348">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1348">Local computer</span></span>|<span data-ttu-id="1106c-1349">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1349">Yes</span></span>|  
|<span data-ttu-id="1106c-1350">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1350">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1351">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1351">Yes</span></span>|  
|<span data-ttu-id="1106c-1352">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1352">Remote computer</span></span>|<span data-ttu-id="1106c-1353">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1353">Yes</span></span>|  
|<span data-ttu-id="1106c-1354">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1354">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1355">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1355">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1356">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1356">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1357">
            <paramref name="machineName" /> 參數為 <see langword="null" /> 或空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1357">The <paramref name="machineName" /> parameter is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1358">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1358">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPublicQueues">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1359">擷取網路上所有的公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1359">Retrieves all the public queues on the network.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPublicQueues">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueues ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueues" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueues () As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1360">擷取網路上所有的公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1360">Retrieves all the public queues on the network.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1361">
            <see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1361">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1362">如果您想在網路上的所有公用佇列的完整清單，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="1106c-1362">Use this overload if you want a complete list of all the public queues on the network.</span></span> <span data-ttu-id="1106c-1363">如果您想要限制特定準則，例如<xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Category%2A>，或上次修改的時間使用這個方法的另一個多載。</span><span class="sxs-lookup"><span data-stu-id="1106c-1363">If you want to restrict the list by certain criteria, such as <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, or last modified time use another overload of this method.</span></span> <span data-ttu-id="1106c-1364">(或者，您可以使用<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>，或<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>。)</span><span class="sxs-lookup"><span data-stu-id="1106c-1364">(Alternatively, you can use <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, or <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>.)</span></span>  
  
 <span data-ttu-id="1106c-1365"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="1106c-1365"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="1106c-1366">若要互動之佇列的動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1366">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span>  
  
 <span data-ttu-id="1106c-1367">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1367">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1368">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1368">Workgroup mode</span></span>|<span data-ttu-id="1106c-1369">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1369">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1370">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1370">Local computer</span></span>|<span data-ttu-id="1106c-1371">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1371">No</span></span>|  
|<span data-ttu-id="1106c-1372">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1372">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1373">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1373">No</span></span>|  
|<span data-ttu-id="1106c-1374">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1374">Remote computer</span></span>|<span data-ttu-id="1106c-1375">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1375">No</span></span>|  
|<span data-ttu-id="1106c-1376">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1376">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1377">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1377">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1378">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1378">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1379">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1379">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueues">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueues (System.Messaging.MessageQueueCriteria criteria);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueues(class System.Messaging.MessageQueueCriteria criteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueues (criteria As MessageQueueCriteria) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueues(System::Messaging::MessageQueueCriteria ^ criteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.Messaging.MessageQueueCriteria" />
      </Parameters>
      <Docs>
        <param name="criteria">
          <span data-ttu-id="1106c-1380">
            <see cref="T:System.Messaging.MessageQueueCriteria" />，包含用來篩選佇列的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1380">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the queues.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1381">擷取網路上符合指定準則的所有公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1381">Retrieves all the public queues on the network that meet the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1382">
            <see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1382">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1383">如果您想要依標籤、 類別或電腦名稱，篩選網路上的所有公用佇列<xref:System.Messaging.MessageQueue>類別包含可提供該功能的特定方法 (<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>，和<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>分別)。</span><span class="sxs-lookup"><span data-stu-id="1106c-1383">If you want to filter all the public queues on the network by label, category, or computer name, the <xref:System.Messaging.MessageQueue> class contains specific methods that provide that functionality (<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, and <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>, respectively).</span></span> <span data-ttu-id="1106c-1384">使用此多載以取得所有公用佇列的網路上 （例如，如果您想要指定標籤和分類） 符合一個以上的這些準則的清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1384">Use this overload to get a list of all the public queues on the network that meet more than one of these criteria (for example, if you want to specify both a label and a category).</span></span> <span data-ttu-id="1106c-1385">您也可以根據篩選準則訊息以外<xref:System.Messaging.MessageQueue.Label%2A>， <xref:System.Messaging.MessageQueue.Category%2A>，和<xref:System.Messaging.MessageQueue.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1385">You can also filter by message criteria other than <xref:System.Messaging.MessageQueue.Label%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, and <xref:System.Messaging.MessageQueue.MachineName%2A>.</span></span> <span data-ttu-id="1106c-1386">例如，您可以使用這個多載以篩選出的佇列的上次修改時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-1386">For example, you use this overload to filter by a queue's last-modified time.</span></span> <span data-ttu-id="1106c-1387">只要建立的新執行個體<xref:System.Messaging.MessageQueueCriteria>類別、 執行個體中，設定適當的屬性，並傳遞做為執行個體`criteria`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1387">Simply create a new instance of the <xref:System.Messaging.MessageQueueCriteria> class, set the appropriate properties in the instance, and pass the instance as the `criteria` parameter.</span></span>  
  
 <span data-ttu-id="1106c-1388"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="1106c-1388"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="1106c-1389">若要互動之佇列的動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1389">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span>  
  
 <span data-ttu-id="1106c-1390">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1390">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1391">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1391">Workgroup mode</span></span>|<span data-ttu-id="1106c-1392">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1392">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1393">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1393">Local computer</span></span>|<span data-ttu-id="1106c-1394">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1394">No</span></span>|  
|<span data-ttu-id="1106c-1395">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1395">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1396">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1396">No</span></span>|  
|<span data-ttu-id="1106c-1397">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1397">Remote computer</span></span>|<span data-ttu-id="1106c-1398">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1398">No</span></span>|  
|<span data-ttu-id="1106c-1399">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1399">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1400">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1400">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1401">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1401">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1402">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1402">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueCriteria" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByCategory">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByCategory (Guid category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByCategory(valuetype System.Guid category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByCategory (category As Guid) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByCategory(Guid category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="1106c-1403">
            <see cref="T:System.Guid" />，會將要擷取的佇列集設為群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1403">A <see cref="T:System.Guid" /> that groups the set of queues to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1404">擷取網路上屬於指定分類的所有公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1404">Retrieves all the public queues on the network that belong to the specified category.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1405">
            <see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1405">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1406">使用這個方法依類別篩選公用佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1406">Use this method to filter the public queues by category.</span></span> <span data-ttu-id="1106c-1407"><xref:System.Messaging.MessageQueue.Category%2A>屬性提供的訊息佇列類型 ID 屬性 （這是讀取/寫入） 的特定佇列的存取。</span><span class="sxs-lookup"><span data-stu-id="1106c-1407">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type ID property (which is read/write) of a particular queue.</span></span> <span data-ttu-id="1106c-1408">雖然您可以使用<xref:System.Guid.NewGuid%2A>來建立類別目錄的值，而且是唯一的所有<xref:System.Guid>值，都則不需要。</span><span class="sxs-lookup"><span data-stu-id="1106c-1408">Although you can use <xref:System.Guid.NewGuid%2A> to create a category value that is unique across all <xref:System.Guid> values, it is not necessary.</span></span> <span data-ttu-id="1106c-1409">類別目錄值必須是相異只能從其他類別，不是從所有其他<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="1106c-1409">The category value needs to be distinct only from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="1106c-1410">例如，您可以指派{00000000-0000-0000-0000-000000000001}做為<xref:System.Messaging.MessageQueue.Category%2A>佇列的一組和{00000000-0000-0000-0000-000000000002}為<xref:System.Messaging.MessageQueue.Category%2A>另一個集。</span><span class="sxs-lookup"><span data-stu-id="1106c-1410">For example, you can assign {00000000-0000-0000-0000-000000000001} as the <xref:System.Messaging.MessageQueue.Category%2A> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <xref:System.Messaging.MessageQueue.Category%2A> for another set.</span></span>  
  
 <span data-ttu-id="1106c-1411"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="1106c-1411"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="1106c-1412">若要互動之佇列的動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1412">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="1106c-1413">您可以指定類別的一部分<xref:System.Messaging.MessageQueueCriteria>您傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1413">You can specify the category as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="1106c-1414">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1414">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1415">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1415">Workgroup mode</span></span>|<span data-ttu-id="1106c-1416">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1416">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1417">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1417">Local computer</span></span>|<span data-ttu-id="1106c-1418">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1418">No</span></span>|  
|<span data-ttu-id="1106c-1419">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1419">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1420">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1420">No</span></span>|  
|<span data-ttu-id="1106c-1421">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1421">Remote computer</span></span>|<span data-ttu-id="1106c-1422">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1422">No</span></span>|  
|<span data-ttu-id="1106c-1423">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1423">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1424">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1424">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1425">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1425">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1426">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1426">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByLabel">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByLabel (string label);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByLabel(string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByLabel (label As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByLabel(System::String ^ label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label">
          <span data-ttu-id="1106c-1427">標記，該標記會將要擷取的佇列集設為群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1427">A label that groups the set of queues to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1428">擷取網路上具有指定標籤的所有公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1428">Retrieves all the public queues on the network that carry the specified label.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1429">
            <see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1429">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1430">若要依標籤篩選公用佇列，使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1430">Use this method to filter the public queues by label.</span></span>  
  
 <span data-ttu-id="1106c-1431"><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="1106c-1431"><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="1106c-1432">若要互動之佇列的動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1432">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="1106c-1433">您可以指定標籤的一部分<xref:System.Messaging.MessageQueueCriteria>您傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1433">You can specify the label as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="1106c-1434">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1434">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1435">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1435">Workgroup mode</span></span>|<span data-ttu-id="1106c-1436">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1436">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1437">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1437">Local computer</span></span>|<span data-ttu-id="1106c-1438">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1438">No</span></span>|  
|<span data-ttu-id="1106c-1439">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1439">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1440">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1440">No</span></span>|  
|<span data-ttu-id="1106c-1441">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1441">Remote computer</span></span>|<span data-ttu-id="1106c-1442">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1442">No</span></span>|  
|<span data-ttu-id="1106c-1443">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1443">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1444">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1444">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1445">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1445">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1446">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1446">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-1447">
            <paramref name="label" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1447">The <paramref name="label" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByMachine">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByMachine (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByMachine(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByMachine (machineName As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByMachine(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="1106c-1448">電腦的名稱，包含要擷取的公用佇列集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1448">The name of the computer that contains the set of public queues to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1449">擷取位於指定電腦上的所有公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1449">Retrieves all the public queues that reside on the specified computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1450">
            <see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考電腦上的公用佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1450">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the public queues on the computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1451">使用這個方法依電腦篩選公用佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1451">Use this method to filter the public queues by computer.</span></span>  
  
 <span data-ttu-id="1106c-1452"><xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="1106c-1452"><xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="1106c-1453">若要互動之佇列的動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1453">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="1106c-1454">您可以指定電腦名稱的一部分<xref:System.Messaging.MessageQueueCriteria>您傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1454">You can specify the computer name as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="1106c-1455">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1455">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1456">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1456">Workgroup mode</span></span>|<span data-ttu-id="1106c-1457">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1457">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1458">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1458">Local computer</span></span>|<span data-ttu-id="1106c-1459">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1459">No</span></span>|  
|<span data-ttu-id="1106c-1460">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1460">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1461">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1461">No</span></span>|  
|<span data-ttu-id="1106c-1462">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1462">Remote computer</span></span>|<span data-ttu-id="1106c-1463">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1463">No</span></span>|  
|<span data-ttu-id="1106c-1464">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1464">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1465">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1465">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1466">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="1106c-1466">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1467">
            <paramref name="machineName" /> 參數的語法不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1467">The <paramref name="machineName" /> parameter has incorrect syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1468">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1468">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityContext">
      <MemberSignature Language="C#" Value="public static System.Messaging.SecurityContext GetSecurityContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.SecurityContext GetSecurityContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSecurityContext () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::SecurityContext ^ GetSecurityContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1469">擷取 MSMQ 在這次呼叫時與目前使用者 (執行緒識別) 產生關聯的安全性內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1469">Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1470">包含安全性內容的 <see cref="T:System.Messaging.SecurityContext" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1470">A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Messaging.Message.SecurityContext" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_GuidId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1471">取得佇列的唯一訊息佇列識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1471">Gets the unique Message Queuing identifier of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1472">
            <see cref="P:System.Messaging.MessageQueue.Id" />，表示 Message Queuing 應用程式所產生的訊息識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1472">A <see cref="P:System.Messaging.MessageQueue.Id" /> that represents the message identifier generated by the Message Queuing application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1473">訊息佇列設定<xref:System.Messaging.MessageQueue.Id%2A>屬性會在建立佇列時。</span><span class="sxs-lookup"><span data-stu-id="1106c-1473">Message Queuing sets the <xref:System.Messaging.MessageQueue.Id%2A> property when it creates the queue.</span></span> <span data-ttu-id="1106c-1474">這個屬性只適用於公用佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1474">This property is only available for public queues.</span></span>  
  
 <span data-ttu-id="1106c-1475">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1475">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1476">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1476">Workgroup mode</span></span>|<span data-ttu-id="1106c-1477">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1477">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1478">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1478">Local computer</span></span>|<span data-ttu-id="1106c-1479">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1479">Yes</span></span>|  
|<span data-ttu-id="1106c-1480">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1480">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1481">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1481">Yes</span></span>|  
|<span data-ttu-id="1106c-1482">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1482">Remote computer</span></span>|<span data-ttu-id="1106c-1483">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1483">No</span></span>|  
|<span data-ttu-id="1106c-1484">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1484">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1485">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1485">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1486">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.Id%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1486">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.Id%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#15](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1487">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1487">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteQueueSize">
      <MemberSignature Language="C#" Value="public static readonly long InfiniteQueueSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 InfiniteQueueSize" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteQueueSize As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long InfiniteQueueSize;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1488">指定佇列沒有大小限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1488">Specifies that no size restriction exists for a queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1489">設定時，經常會使用這個成員<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>或<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1489">This member is frequently used when setting <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> or <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1490">下列程式碼範例示範如何使用<xref:System.Messaging.MessageQueue.InfiniteQueueSize>成員。</span><span class="sxs-lookup"><span data-stu-id="1106c-1490">The following code example demonstrates the use of the <xref:System.Messaging.MessageQueue.InfiniteQueueSize> member.</span></span>  
  
 [!code-csharp[MessageQueue#16](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueue.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeout;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1491">指定窺視 (Peek) 或接收訊息的方法沒有逾時限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1491">Specifies that no time-out exists for methods that peek or receive messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1492"><xref:System.Messaging.MessageQueue> 支援兩種擷取訊息類型： 同步和非同步。</span><span class="sxs-lookup"><span data-stu-id="1106c-1492"><xref:System.Messaging.MessageQueue> supports two types of message retrieval: synchronous and asynchronous.</span></span> <span data-ttu-id="1106c-1493">同步方法，<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.Receive%2A>，導致處理序執行緒等待新訊息到達佇列中的指定的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="1106c-1493">The synchronous methods, <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.Receive%2A>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-1494">如果指定的時間間隔為<xref:System.Messaging.MessageQueue.InfiniteTimeout>，處理序執行緒會保持封鎖，直到新訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1494">If the specified time interval is <xref:System.Messaging.MessageQueue.InfiniteTimeout>, the process thread remains blocked until a new message is available.</span></span> <span data-ttu-id="1106c-1495">相反地，<xref:System.Messaging.MessageQueue.BeginPeek%2A>和<xref:System.Messaging.MessageQueue.BeginReceive%2A>（非同步方法），允許不同的執行緒中繼續，直到訊息抵達佇列中的主應用程式工作。</span><span class="sxs-lookup"><span data-stu-id="1106c-1495">On the other hand, <xref:System.Messaging.MessageQueue.BeginPeek%2A> and <xref:System.Messaging.MessageQueue.BeginReceive%2A> (the asynchronous methods), allow the main application tasks to continue in a separate thread until a message arrives in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1496">下列程式碼範例示範如何使用<xref:System.Messaging.MessageQueue.InfiniteTimeout>成員。</span><span class="sxs-lookup"><span data-stu-id="1106c-1496">The following code example demonstrates the use of the <xref:System.Messaging.MessageQueue.InfiniteTimeout> member.</span></span>  
  
 [!code-csharp[MessageQueue#17](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Label")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1497">取得或設定佇列描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1497">Gets or sets the queue description.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1498">訊息佇列的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1498">The label for the message queue.</span>
          </span>
          <span data-ttu-id="1106c-1499">預設為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1499">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1500">訊息佇列標籤的最大長度為 124 個字元。</span><span class="sxs-lookup"><span data-stu-id="1106c-1500">The maximum length of a message queue label is 124 characters.</span></span>  
  
 <span data-ttu-id="1106c-1501"><xref:System.Messaging.MessageQueue.Label%2A>屬性不需要是唯一的所有佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1501">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across all queues.</span></span> <span data-ttu-id="1106c-1502">不過，如果多個佇列都共用相同<xref:System.Messaging.MessageQueue.Label%2A>，您不能使用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>廣播到所有的這些訊息的方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1502">However, if multiple queues share the same <xref:System.Messaging.MessageQueue.Label%2A>, you cannot use the <xref:System.Messaging.MessageQueue.Send%28System.Object%29> method to broadcast a message to all of them.</span></span> <span data-ttu-id="1106c-1503">如果您使用的標籤語法<xref:System.Messaging.MessageQueue.Path%2A>屬性傳送訊息時，發生例外狀況會擲回<xref:System.Messaging.MessageQueue.Label%2A>不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="1106c-1503">If you use the label syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property when you send the message, an exception will be thrown if the <xref:System.Messaging.MessageQueue.Label%2A> is not unique.</span></span>  
  
 <span data-ttu-id="1106c-1504">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1504">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1505">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1505">Workgroup mode</span></span>|<span data-ttu-id="1106c-1506">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1506">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1507">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1507">Local computer</span></span>|<span data-ttu-id="1106c-1508">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1508">Yes</span></span>|  
|<span data-ttu-id="1106c-1509">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1509">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1510">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1510">Yes</span></span>|  
|<span data-ttu-id="1106c-1511">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1511">Remote computer</span></span>|<span data-ttu-id="1106c-1512">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1512">No</span></span>|  
|<span data-ttu-id="1106c-1513">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1513">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1514">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1514">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1515">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.Label%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1515">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Label%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#18](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1516">標籤設為無效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1516">The label was set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1517">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1517">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LastModifyTime">
      <MemberSignature Language="C#" Value="public DateTime LastModifyTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastModifyTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.LastModifyTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastModifyTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastModifyTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_LastModifyTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1518">取得上次修改佇列屬性的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1518">Gets the last time the properties of a queue were modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1519">
            <see cref="T:System.DateTime" />，指出佇列屬性上次修改的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1519">A <see cref="T:System.DateTime" /> that indicates when the queue properties were last modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1520">建立佇列時，包含上次修改時間和任何<xref:System.Messaging.MessageQueue>屬性，例如修改 「 訊息佇列 」 佇列， <xref:System.Messaging.MessageQueue.BasePriority%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1520">The last modification time includes when the queue was created and any <xref:System.Messaging.MessageQueue> property that modifies the Message Queuing queue, such as <xref:System.Messaging.MessageQueue.BasePriority%2A>.</span></span> <span data-ttu-id="1106c-1521">值<xref:System.Messaging.MessageQueue.LastModifyTime%2A>屬性代表本機電腦的系統時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-1521">The value of the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property represents the system time of the local computer.</span></span>  
  
 <span data-ttu-id="1106c-1522">您必須呼叫<xref:System.Messaging.MessageQueue.Refresh%2A>再取得<xref:System.Messaging.MessageQueue.LastModifyTime%2A>屬性; 否則修改相關聯的時間與這個<xref:System.Messaging.MessageQueue>可能不是最新資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-1522">You must call <xref:System.Messaging.MessageQueue.Refresh%2A> before getting the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property; otherwise, the modification time associated with this <xref:System.Messaging.MessageQueue> might not be current.</span></span>  
  
 <span data-ttu-id="1106c-1523">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1523">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1524">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1524">Workgroup mode</span></span>|<span data-ttu-id="1106c-1525">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1525">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1526">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1526">Local computer</span></span>|<span data-ttu-id="1106c-1527">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1527">Yes</span></span>|  
|<span data-ttu-id="1106c-1528">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1528">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1529">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1529">Yes</span></span>|  
|<span data-ttu-id="1106c-1530">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1530">Remote computer</span></span>|<span data-ttu-id="1106c-1531">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1531">No</span></span>|  
|<span data-ttu-id="1106c-1532">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1532">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1533">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1533">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1534">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.LastModifyTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1534">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#19](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1535">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1535">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
        <altmember cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MachineName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1536">取得或設定訊息佇列位置的電腦名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1536">Gets or sets the name of the computer where the Message Queuing queue is located.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1537">佇列位置的電腦名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1537">The name of the computer where the queue is located.</span>
          </span>
          <span data-ttu-id="1106c-1538">訊息佇列預設是 "."，也就是本機電腦。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1538">The Message Queuing default is ".", the local computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1539"><xref:System.Messaging.MessageQueue.MachineName%2A>是不可或缺的元件之佇列的易記名稱語法<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1539">The <xref:System.Messaging.MessageQueue.MachineName%2A> is an integral component of the friendly name syntax of the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="1106c-1540">下表顯示當您想要識別使用其易記名稱的佇列路徑，您應該使用佇列的指定類型的語法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1540">The following table shows the syntax you should use for a queue of a specified type when you want to identify the queue path using its friendly name.</span></span>  
  
|<span data-ttu-id="1106c-1541">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-1541">Queue type</span></span>|<span data-ttu-id="1106c-1542">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-1542">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-1543">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1543">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="1106c-1544">私用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1544">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="1106c-1545">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1545">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="1106c-1546">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1546">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="1106c-1547">機器寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1547">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="1106c-1548">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1548">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="1106c-1549">使用 」。 「 本機電腦時指定<xref:System.Messaging.MessageQueue.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1549">Use "." for the local computer when specifying the <xref:System.Messaging.MessageQueue.MachineName%2A>.</span></span> <span data-ttu-id="1106c-1550">例如，只有電腦名稱辨識這個屬性， `Server0`。</span><span class="sxs-lookup"><span data-stu-id="1106c-1550">Only the computer name is recognized for this property, for example, `Server0`.</span></span> <span data-ttu-id="1106c-1551"><xref:System.Messaging.MessageQueue.MachineName%2A>屬性不支援 IP 位址的格式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1551">The <xref:System.Messaging.MessageQueue.MachineName%2A> property does not support the IP address format.</span></span>  
  
 <span data-ttu-id="1106c-1552">如果您定義<xref:System.Messaging.MessageQueue.Path%2A>的<xref:System.Messaging.MessageQueue.MachineName%2A>，應用程式在離線工作，因為網域控制站是所需路徑轉譯時，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-1552">If you define the <xref:System.Messaging.MessageQueue.Path%2A> in terms of the <xref:System.Messaging.MessageQueue.MachineName%2A>, the application throws an exception when working offline because the domain controller is required for path translation.</span></span> <span data-ttu-id="1106c-1553">因此，您必須使用<xref:System.Messaging.MessageQueue.FormatName%2A>如<xref:System.Messaging.MessageQueue.Path%2A>離線工作時的語法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1553">Therefore, you must use the <xref:System.Messaging.MessageQueue.FormatName%2A> for the <xref:System.Messaging.MessageQueue.Path%2A> syntax when working offline.</span></span>  
  
 <span data-ttu-id="1106c-1554"><xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Path%2A>，和<xref:System.Messaging.MessageQueue.QueueName%2A>相關屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1554">The <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, and <xref:System.Messaging.MessageQueue.QueueName%2A> properties are related.</span></span> <span data-ttu-id="1106c-1555">變更<xref:System.Messaging.MessageQueue.MachineName%2A>屬性原因<xref:System.Messaging.MessageQueue.Path%2A>来變更屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1555">Changing the <xref:System.Messaging.MessageQueue.MachineName%2A> property causes the <xref:System.Messaging.MessageQueue.Path%2A> property to change.</span></span> <span data-ttu-id="1106c-1556">建置在新<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1556">It is built from the new <xref:System.Messaging.MessageQueue.MachineName%2A> and the <xref:System.Messaging.MessageQueue.QueueName%2A>.</span></span> <span data-ttu-id="1106c-1557">變更<xref:System.Messaging.MessageQueue.Path%2A>（例如，若要使用的格式名稱語法） 會重設<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>屬性來參考新的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1557">Changing the <xref:System.Messaging.MessageQueue.Path%2A> (for example, to use the format name syntax) resets the <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties to refer to the new queue.</span></span> <span data-ttu-id="1106c-1558">如果<xref:System.Messaging.MessageQueue.QueueName%2A>屬性是空的<xref:System.Messaging.MessageQueue.Path%2A>設為您指定之電腦的日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1558">If the <xref:System.Messaging.MessageQueue.QueueName%2A> property is empty, the <xref:System.Messaging.MessageQueue.Path%2A> is set to the Journal queue of the computer you specify.</span></span>  
  
 <span data-ttu-id="1106c-1559">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1559">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1560">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1560">Workgroup mode</span></span>|<span data-ttu-id="1106c-1561">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1561">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1562">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1562">Local computer</span></span>|<span data-ttu-id="1106c-1563">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1563">Yes</span></span>|  
|<span data-ttu-id="1106c-1564">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1564">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1565">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1565">Yes</span></span>|  
|<span data-ttu-id="1106c-1566">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1566">Remote computer</span></span>|<span data-ttu-id="1106c-1567">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1567">Yes</span></span>|  
|<span data-ttu-id="1106c-1568">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1568">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1569">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1569">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1570">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.MachineName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1570">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MachineName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#20](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1571">電腦的名稱無效，可能是因為語法不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1571">The name of the computer is not valid, possibly because the syntax is incorrect.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1572">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1572">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MaximumJournalSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1573">取得或設定日誌佇列的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1573">Gets or sets the maximum size of the journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1574">日誌佇列大小的最大值 (以 KB 為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1574">The maximum size, in kilobytes, of the journal queue.</span>
          </span>
          <span data-ttu-id="1106c-1575">訊息佇列預設不指定上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1575">The Message Queuing default specifies that no limit exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1576"><xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> 提供存取訊息佇列的日誌存放區限制。</span><span class="sxs-lookup"><span data-stu-id="1106c-1576"><xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> provides access to the Message Queuing journal storage limit.</span></span> <span data-ttu-id="1106c-1577">它是相關時，才<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="1106c-1577">It is relevant only when <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> is `true`.</span></span> <span data-ttu-id="1106c-1578">設定這個屬性可以修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1578">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="1106c-1579">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體</span><span class="sxs-lookup"><span data-stu-id="1106c-1579">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change</span></span>  
  
 <span data-ttu-id="1106c-1580">如果您將訊息儲存在日誌或寄不出的信件佇列，您應該定期清除佇列，以便移除不再需要的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1580">If you store messages in a journal or dead-letter queue, you should periodically clear the queue to remove messages that are no longer needed.</span></span> <span data-ttu-id="1106c-1581">這類佇列中的訊息都會計佇列所在的電腦的訊息配額。</span><span class="sxs-lookup"><span data-stu-id="1106c-1581">Messages in such a queue count toward the message quota for the computer where the queue resides.</span></span> <span data-ttu-id="1106c-1582">（系統管理員設定電腦配額）。</span><span class="sxs-lookup"><span data-stu-id="1106c-1582">(The administrator sets the computer quota.)</span></span>  
  
 <span data-ttu-id="1106c-1583">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1583">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1584">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1584">Workgroup mode</span></span>|<span data-ttu-id="1106c-1585">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1585">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1586">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1586">Local computer</span></span>|<span data-ttu-id="1106c-1587">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1587">Yes</span></span>|  
|<span data-ttu-id="1106c-1588">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1588">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1589">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1589">Yes</span></span>|  
|<span data-ttu-id="1106c-1590">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1590">Remote computer</span></span>|<span data-ttu-id="1106c-1591">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1591">No</span></span>|  
|<span data-ttu-id="1106c-1592">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1592">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1593">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1593">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1594">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1594">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#21](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1595">日誌佇列的最大值設定為無效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1595">The maximum journal queue size was set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1596">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1596">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumQueueSize" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MaximumQueueSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1597">取得或設定佇列的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1597">Gets or sets the maximum size of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1598">佇列的最大值 (以 KB 計)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1598">The maximum size, in kilobytes, of the queue.</span>
          </span>
          <span data-ttu-id="1106c-1599">訊息佇列預設不指定上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1599">The Message Queuing default specifies that no limit exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1600"><xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>存取訊息佇列訊息存放區限制，從電腦的系統管理員定義的訊息配額分開的。</span><span class="sxs-lookup"><span data-stu-id="1106c-1600">The <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> provides access to the Message Queuing message storage limit, which is separate from the computer's message quota that the administrator defines.</span></span> <span data-ttu-id="1106c-1601">如需訊息配額的詳細資訊，請參閱<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1601">For more information about the message quota, see <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>.</span></span>  
  
 <span data-ttu-id="1106c-1602">設定這個屬性可以修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1602">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="1106c-1603">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體</span><span class="sxs-lookup"><span data-stu-id="1106c-1603">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change</span></span>  
  
 <span data-ttu-id="1106c-1604">如果嘗試超過佇列大小上限或電腦訊息配額時，訊息可能會遺失。</span><span class="sxs-lookup"><span data-stu-id="1106c-1604">If an attempt is made to exceed either the maximum queue size or the computer message quota, messages might be lost.</span></span> <span data-ttu-id="1106c-1605">當到達佇列配額時，訊息佇列通知，表示傳回負值通知訊息的佇列已滿，傳送應用程式的管理佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1605">When the queue quota is reached, Message Queuing notifies the administration queue of the sending application to indicate that the queue is full, by returning a negative acknowledgment message.</span></span> <span data-ttu-id="1106c-1606">訊息佇列會繼續傳送負值通知，直到佇列中的訊息總大小低於限制。</span><span class="sxs-lookup"><span data-stu-id="1106c-1606">Message Queuing continues to send negative acknowledgments until the total size of the messages in the queue drops below the limit.</span></span>  
  
 <span data-ttu-id="1106c-1607">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1607">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1608">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1608">Workgroup mode</span></span>|<span data-ttu-id="1106c-1609">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1609">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1610">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1610">Local computer</span></span>|<span data-ttu-id="1106c-1611">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1611">Yes</span></span>|  
|<span data-ttu-id="1106c-1612">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1612">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1613">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1613">Yes</span></span>|  
|<span data-ttu-id="1106c-1614">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1614">Remote computer</span></span>|<span data-ttu-id="1106c-1615">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1615">No</span></span>|  
|<span data-ttu-id="1106c-1616">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1616">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1617">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1617">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1618">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1618">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#22](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1619">佇列大小的最大值包含負值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1619">The maximum queue size contains a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1620">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1620">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="MessageReadPropertyFilter">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePropertyFilter MessageReadPropertyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessagePropertyFilter MessageReadPropertyFilter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MessageReadPropertyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageReadPropertyFilter As MessagePropertyFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePropertyFilter ^ MessageReadPropertyFilter { System::Messaging::MessagePropertyFilter ^ get(); void set(System::Messaging::MessagePropertyFilter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MessageReadPropertyFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePropertyFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1621">取得或設定接收或窺視訊息的屬性篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1621">Gets or sets the property filter for receiving or peeking messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1622">佇列用來為每個訊息篩選它所接收或窺視的屬性集的 <see cref="T:System.Messaging.MessagePropertyFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1622">The <see cref="T:System.Messaging.MessagePropertyFilter" /> used by the queue to filter the set of properties it receives or peeks for each message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1623">此篩選器是一組限制的訊息屬性的布林值，<xref:System.Messaging.MessageQueue>接收或窺視。</span><span class="sxs-lookup"><span data-stu-id="1106c-1623">This filter is a set of Boolean values restricting the message properties that the <xref:System.Messaging.MessageQueue> receives or peeks.</span></span> <span data-ttu-id="1106c-1624">當<xref:System.Messaging.MessageQueue>接收或窺視訊息從伺服器佇列中，它會擷取只有這些屬性的<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>值是`true`。</span><span class="sxs-lookup"><span data-stu-id="1106c-1624">When the <xref:System.Messaging.MessageQueue> receives or peeks a message from the server queue, it retrieves only those properties for which the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> value is `true`.</span></span>  
  
 <span data-ttu-id="1106c-1625">下圖顯示的初始屬性值的<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1625">The following shows initial property values for the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property.</span></span> <span data-ttu-id="1106c-1626">這些設定是相同於呼叫<xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A>上<xref:System.Messaging.MessagePropertyFilter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1626">These settings are identical to calling <xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A> on a <xref:System.Messaging.MessagePropertyFilter>.</span></span>  
  
|<span data-ttu-id="1106c-1627">屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-1627">Property</span></span>|<span data-ttu-id="1106c-1628">預設值</span><span class="sxs-lookup"><span data-stu-id="1106c-1628">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.AppSpecific%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.ArrivedTime%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.AttachSenderId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Authenticated%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AuthenticationProviderName%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AuthenticationProviderType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Body%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.ConnectorType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.CorrelationId%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|<span data-ttu-id="1106c-1629">1024 個位元組</span><span class="sxs-lookup"><span data-stu-id="1106c-1629">1024 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|<span data-ttu-id="1106c-1630">255 個位元組</span><span class="sxs-lookup"><span data-stu-id="1106c-1630">255 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|<span data-ttu-id="1106c-1631">255 個位元組</span><span class="sxs-lookup"><span data-stu-id="1106c-1631">255 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DestinationQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.DigitalSignature%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Extension%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.HashAlgorithm%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Id%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.IsFirstInTransaction%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.IsLastInTransaction%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Label%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.MessageType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Priority%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Recoverable%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderCertificate%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderVersion%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SentTime%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.SourceMachine%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TimeToBeReceived%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TimeToReachQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TransactionId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TransactionStatusQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseTracing%2A>|`false`|  
  
 <span data-ttu-id="1106c-1632">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1632">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1633">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1633">Workgroup mode</span></span>|<span data-ttu-id="1106c-1634">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1634">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1635">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1635">Local computer</span></span>|<span data-ttu-id="1106c-1636">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1636">Yes</span></span>|  
|<span data-ttu-id="1106c-1637">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1637">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1638">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1638">Yes</span></span>|  
|<span data-ttu-id="1106c-1639">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1639">Remote computer</span></span>|<span data-ttu-id="1106c-1640">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1640">Yes</span></span>|  
|<span data-ttu-id="1106c-1641">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1641">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1642">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1642">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1643">下列程式碼範例使用<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>限制接收的訊息內容。</span><span class="sxs-lookup"><span data-stu-id="1106c-1643">The following code example uses the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> to restrict the message properties received.</span></span>  
  
 [!code-cpp[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/CPP/mqmessagereadpropertyfilter.cpp#1)]
 [!code-csharp[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/CS/mqmessagereadpropertyfilter.cs#1)]
 [!code-vb[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/VB/mqmessagereadpropertyfilter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1644">篩選條件為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1644">The filter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MulticastAddress")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1645">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1645">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="1106c-1646">取得或設定與佇列相關聯的多點傳送位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1646">Gets or sets the multicast address associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1647">
            <see cref="T:System.String" />，包含有效的多點傳送位址 (在下面所示的表單中)，否則為 <see langword="null" />，表示佇列未與多點傳送位址相關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1647">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span>
          </span>  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1648"><xref:System.Messaging.MessageQueue.MulticastAddress%2A>屬性用來將非交易式佇列與傳送訊息時可以使用多點傳送位址產生關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-1648">The <xref:System.Messaging.MessageQueue.MulticastAddress%2A> property is used to associate a non-transactional queue with a multicast address that can be used when sending messages.</span></span> <span data-ttu-id="1106c-1649">您無法將交易式佇列與多點傳送位址。</span><span class="sxs-lookup"><span data-stu-id="1106c-1649">You cannot associate a transactional queue with a multicast address.</span></span> <span data-ttu-id="1106c-1650">當傳送應用程式會將訊息傳送至多點傳送位址時，訊息佇列傳送至該位址相關聯的每個佇列的訊息的複本。</span><span class="sxs-lookup"><span data-stu-id="1106c-1650">When the sending application sends messages to a multicast address, Message Queuing sends a copy of the message to every queue associated with that address.</span></span>  
  
 <span data-ttu-id="1106c-1651">IP 多點傳送位址必須在類別 D 範圍從 224.0.0.0 到 239.255.255.255，對應到前四個高序位位元等於 1110年的設定。</span><span class="sxs-lookup"><span data-stu-id="1106c-1651">IP multicast addresses must be in the class D range from 224.0.0.0 to 239.255.255.255, which corresponds to setting the first four high-order bits equal to 1110.</span></span> <span data-ttu-id="1106c-1652">不過，只有某些特定範圍的位址範圍中都未保留，可用於傳送多點傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1652">However, only certain ranges of addresses in this range are unreserved and available for sending multicast messages.</span></span> <span data-ttu-id="1106c-1653">如需保留的多點傳送位址的最新清單，請參閱[網際網路指定編號 Authority (IANA) 網際網路多點傳送位址](http://go.microsoft.com/fwlink/?linkid=3859)網頁。</span><span class="sxs-lookup"><span data-stu-id="1106c-1653">For the latest list of reserved multicast addresses, see the [Internet Assigned Number Authority (IANA) Internet Multicast Addresses](http://go.microsoft.com/fwlink/?linkid=3859) Web page.</span></span> <span data-ttu-id="1106c-1654">沒有任何通訊埠編號上的限制。</span><span class="sxs-lookup"><span data-stu-id="1106c-1654">There are no restrictions on the port number.</span></span>  
  
 <span data-ttu-id="1106c-1655">如果數個來源電腦傳送多點傳送的訊息，而且您想要特定的佇列接收訊息從一個來源電腦，每台來源電腦必須將訊息傳送至不同的 IP 位址和連接埠號碼組合。</span><span class="sxs-lookup"><span data-stu-id="1106c-1655">If several source computers are sending multicast messages and you want a specific queue to receive messages from only one source computer, each source computer must send messages to a different combination of IP address and port number.</span></span>  
  
 <span data-ttu-id="1106c-1656">若要中斷關聯的佇列，從多點傳送位址，設定<xref:System.Messaging.MessageQueue.MulticastAddress%2A>屬性設為零長度字串。</span><span class="sxs-lookup"><span data-stu-id="1106c-1656">To dissociate a queue from a multicast address, set the <xref:System.Messaging.MessageQueue.MulticastAddress%2A> property to a zero-length string.</span></span> <span data-ttu-id="1106c-1657">請勿將它設為`null`，因為這會導致<xref:System.ArgumentNullException>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1657">Do not set it to `null`, as this will result in a <xref:System.ArgumentNullException>.</span></span>  
  
 <span data-ttu-id="1106c-1658">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1658">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1659">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1659">Workgroup mode</span></span>|<span data-ttu-id="1106c-1660">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1660">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1661">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1661">Local computer</span></span>|<span data-ttu-id="1106c-1662">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1662">Yes</span></span>|  
|<span data-ttu-id="1106c-1663">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1663">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1664">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1664">Yes</span></span>|  
|<span data-ttu-id="1106c-1665">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1665">Remote computer</span></span>|<span data-ttu-id="1106c-1666">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1666">No</span></span>|  
|<span data-ttu-id="1106c-1667">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1667">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1668">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1668">No</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1106c-1669">未安裝 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1669">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Path")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1670">取得或設定佇列路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1670">Gets or sets the queue's path.</span>
          </span>
          <span data-ttu-id="1106c-1671">設定 <see cref="P:System.Messaging.MessageQueue.Path" /> 會使 <see cref="T:System.Messaging.MessageQueue" /> 指向新佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1671">Setting the <see cref="P:System.Messaging.MessageQueue.Path" /> causes the <see cref="T:System.Messaging.MessageQueue" /> to point to a new queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-1672">
            <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1672">The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="1106c-1673">預設值取決於您使用的 <see cref="M:System.Messaging.MessageQueue.#ctor" /> 建構函式，可以是 <see langword="null" />，或者是由建構函式的 <paramref name="path" /> 參數指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1673">The default depends on which <see cref="M:System.Messaging.MessageQueue.#ctor" /> constructor you use; it is either <see langword="null" /> or is specified by the constructor's <paramref name="path" /> parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1674">語法<xref:System.Messaging.MessageQueue.Path%2A>屬性取決於佇列類型它點至下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-1674">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it points to, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-1675">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-1675">Queue type</span></span>|<span data-ttu-id="1106c-1676">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-1676">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-1677">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1677">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="1106c-1678">私用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1678">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="1106c-1679">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1679">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="1106c-1680">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1680">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="1106c-1681">機器寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1681">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="1106c-1682">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-1682">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="1106c-1683">使用"。"代表本機電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-1683">Use "." to represent the local computer.</span></span>  
  
 <span data-ttu-id="1106c-1684"><xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Path%2A>，和<xref:System.Messaging.MessageQueue.QueueName%2A>相關屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1684">The <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, and <xref:System.Messaging.MessageQueue.QueueName%2A> properties are related.</span></span> <span data-ttu-id="1106c-1685">變更<xref:System.Messaging.MessageQueue.MachineName%2A>屬性原因<xref:System.Messaging.MessageQueue.Path%2A>来變更屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1685">Changing the <xref:System.Messaging.MessageQueue.MachineName%2A> property causes the <xref:System.Messaging.MessageQueue.Path%2A> property to change.</span></span> <span data-ttu-id="1106c-1686">建置在新<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1686">It is built from the new <xref:System.Messaging.MessageQueue.MachineName%2A> and the <xref:System.Messaging.MessageQueue.QueueName%2A>.</span></span> <span data-ttu-id="1106c-1687">變更<xref:System.Messaging.MessageQueue.Path%2A>（例如，若要使用的格式名稱語法） 會重設<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>屬性來參考新的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1687">Changing the <xref:System.Messaging.MessageQueue.Path%2A> (for example, to use the format name syntax) resets the <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties to refer to the new queue.</span></span>  
  
 <span data-ttu-id="1106c-1688">或者，您可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>來描述為佇列路徑下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-1688">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-1689">參考資料</span><span class="sxs-lookup"><span data-stu-id="1106c-1689">Reference</span></span>|<span data-ttu-id="1106c-1690">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-1690">Syntax</span></span>|<span data-ttu-id="1106c-1691">範例</span><span class="sxs-lookup"><span data-stu-id="1106c-1691">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="1106c-1692">格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1692">Format name</span></span>|<span data-ttu-id="1106c-1693">`FormatName:` [*格式名稱*]</span><span class="sxs-lookup"><span data-stu-id="1106c-1693">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="1106c-1694">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="1106c-1694">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span>|  
|<span data-ttu-id="1106c-1695">ThisAddIn</span><span class="sxs-lookup"><span data-stu-id="1106c-1695">Label</span></span>|<span data-ttu-id="1106c-1696">`Label:` [*標籤*]</span><span class="sxs-lookup"><span data-stu-id="1106c-1696">`Label:` [ *label* ]</span></span>|<span data-ttu-id="1106c-1697">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="1106c-1697">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="1106c-1698">如果您使用的標籤語法<xref:System.Messaging.MessageQueue.Path%2A>屬性傳送訊息時，發生例外狀況會擲回<xref:System.Messaging.MessageQueue.Label%2A>不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="1106c-1698">If you use the label syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property when you send the message, an exception will be thrown if the <xref:System.Messaging.MessageQueue.Label%2A> is not unique.</span></span>  
  
 <span data-ttu-id="1106c-1699">若要設為離線工作，您必須使用第一個資料表中的格式名稱語法，而不是易記名稱語法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1699">To work offline, you must use the format name syntax, rather than the friendly name syntax in the first table.</span></span> <span data-ttu-id="1106c-1700">否則，因為網域主控站 （Active Directory 所在） 不是可解析成格式名稱的路徑，便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-1700">Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="1106c-1701">設定新的路徑時，關閉訊息佇列，並釋放所有控制代碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-1701">Setting a new path closes the message queue and releases all handles.</span></span>  
  
 <span data-ttu-id="1106c-1702">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1702">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1703">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1703">Workgroup mode</span></span>|<span data-ttu-id="1106c-1704">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1704">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1705">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1705">Local computer</span></span>|<span data-ttu-id="1106c-1706">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1706">Yes</span></span>|  
|<span data-ttu-id="1106c-1707">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1707">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1708">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1708">Yes</span></span>|  
|<span data-ttu-id="1106c-1709">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1709">Remote computer</span></span>|<span data-ttu-id="1106c-1710">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1710">Yes</span></span>|  
|<span data-ttu-id="1106c-1711">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1711">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1712">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1712">Yes</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1106c-1713">工作群組模式中，您可以只使用私用佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1713">In workgroup mode you can only use private queues.</span></span> <span data-ttu-id="1106c-1714">您指定的路徑，使用私用佇列語法`MachineName` \\ `Private$` \\ `QueueName`。</span><span class="sxs-lookup"><span data-stu-id="1106c-1714">You specify the path using the private queue syntax `MachineName`\\`Private$`\\`QueueName`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1715">下列程式碼範例建立新<xref:System.Messaging.MessageQueue>物件，使用不同的路徑名稱語法類型。</span><span class="sxs-lookup"><span data-stu-id="1106c-1715">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="1106c-1716">在每個案例中，它會傳送訊息至佇列的路徑在建構函式中定義。</span><span class="sxs-lookup"><span data-stu-id="1106c-1716">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1717">路徑無效，可能是因為語法無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1717">The path is not valid, possibly because the syntax is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Peek">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe>
          <span data-ttu-id="1106c-1718">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1718">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <summary>
          <span data-ttu-id="1106c-1719">傳回佇列中第一個訊息的複本，但不從佇列中移除訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1719">Returns a copy of the first message in the queue without removing the message from the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1720">傳回而不移除 (窺視) 這個 <see cref="T:System.Messaging.MessageQueue" /> 所參考佇列中的第一個訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1720">Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="1106c-1721">
            <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，因此會封鎖目前的執行緒，直到訊息可以使用為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1721">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1722">表示佇列中第一個訊息的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1722">The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1723">若要查看佇列中，或等候直到有訊息佇列中，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="1106c-1723">Use this overload to peek a queue, or to wait until a message exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-1724"><xref:System.Messaging.MessageQueue.Peek%2A>方法讀取，但不會移除，從佇列的第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1724">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, the first message from the queue.</span></span> <span data-ttu-id="1106c-1725">因此，重複呼叫<xref:System.Messaging.MessageQueue.Peek%2A>傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1725">Therefore, repeated calls to <xref:System.Messaging.MessageQueue.Peek%2A> return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-1726"><xref:System.Messaging.MessageQueue.Receive%2A>方法，相反地，同時讀取，並從佇列中移除第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1726">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes the first message from the queue.</span></span> <span data-ttu-id="1106c-1727">重複呼叫<xref:System.Messaging.MessageQueue.Receive%2A>，因此，會傳回不同的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1727">Repeated calls to <xref:System.Messaging.MessageQueue.Receive%2A>, therefore, return different messages.</span></span>  
  
 <span data-ttu-id="1106c-1728">訊息佇列會根據優先權和抵達時間在佇列中排序訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1728">Message Queuing orders messages in the queue according to priority and arrival time.</span></span> <span data-ttu-id="1106c-1729">只有在優先順序較高的舊之前放置較新的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1729">A newer message is placed before an older one only if it is of a higher priority.</span></span>  
  
 <span data-ttu-id="1106c-1730">當目前的執行緒可接受進行封鎖並同時等候訊息到達佇列時，請使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1730">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-1731">這個多載不會指定逾時，應用程式可能會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="1106c-1731">Because this overload does not specify a time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="1106c-1732">當您需要應用程式繼續執行而不要等候，請使用非同步的 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1732">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span> <span data-ttu-id="1106c-1733">或者，您可以指定的逾時訊息到達佇列中所使用的多載<xref:System.Messaging.MessageQueue.Peek%2A>所指定的逾時。</span><span class="sxs-lookup"><span data-stu-id="1106c-1733">Alternatively, you can specify a time-out for a message to arrive in the queue by using the overload of <xref:System.Messaging.MessageQueue.Peek%2A> that specifies a time-out.</span></span>  
  
 <span data-ttu-id="1106c-1734">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1734">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1735">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1735">Workgroup mode</span></span>|<span data-ttu-id="1106c-1736">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1736">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1737">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1737">Local computer</span></span>|<span data-ttu-id="1106c-1738">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1738">Yes</span></span>|  
|<span data-ttu-id="1106c-1739">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1739">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1740">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1740">Yes</span></span>|  
|<span data-ttu-id="1106c-1741">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1741">Remote computer</span></span>|<span data-ttu-id="1106c-1742">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1742">No</span></span>|  
|<span data-ttu-id="1106c-1743">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1743">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1744">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1744">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1745">下列範例會使用<xref:System.Messaging.MessageQueue.Peek%2A>佇列上的方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1745">The following examples use the <xref:System.Messaging.MessageQueue.Peek%2A> method on a queue.</span></span>  
  
 <span data-ttu-id="1106c-1746">在第一個範例中，應用程式會等到訊息成為佇列中可用。</span><span class="sxs-lookup"><span data-stu-id="1106c-1746">In the first example, the application waits until a message becomes available in the queue.</span></span> <span data-ttu-id="1106c-1747">請注意第一個範例不會存取訊息到達。它只會暫停處理，直到訊息抵達。</span><span class="sxs-lookup"><span data-stu-id="1106c-1747">Note that the first example does not access the message that arrives; it merely pauses processing until a message arrives.</span></span> <span data-ttu-id="1106c-1748">如果佇列中已有一則訊息，它會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-1748">If a message already exists in the queue, it will return immediately.</span></span>  
  
 <span data-ttu-id="1106c-1749">在第二個範例中，包含應用程式定義的訊息`Order`類別傳送至佇列，並接著會從佇列查看。</span><span class="sxs-lookup"><span data-stu-id="1106c-1749">In the second example, a message that contains an application-defined `Order` class is sent to the queue, and then peeked from the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Peek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Peek_noparms/CPP/mqpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Peek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Peek_noparms/CS/mqpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.Peek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Peek_noparms/VB/mqpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1750">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1750">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-1751">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1751">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-1752">
            <see cref="T:System.TimeSpan" />，指出等待含有訊息之佇列的最長時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1752">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1753">傳回而不移除 (窺視) 這個 <see cref="T:System.Messaging.MessageQueue" /> 所參考佇列中的第一個訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1753">Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="1106c-1754">
            <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，因此會封鎖目前的執行緒，直到訊息可以使用或發生指定的逾時為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1754">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1755">表示佇列中第一個訊息的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1755">The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1756">若要查看佇列中，或等候一段指定的時間，直到有訊息佇列中，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="1106c-1756">Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</span></span> <span data-ttu-id="1106c-1757">如果佇列中已有一則訊息的方法會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-1757">The method returns immediately if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-1758"><xref:System.Messaging.MessageQueue.Peek%2A>方法讀取，但不會移除，從佇列的第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1758">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, the first message from the queue.</span></span> <span data-ttu-id="1106c-1759">因此，重複呼叫<xref:System.Messaging.MessageQueue.Peek%2A>傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1759">Therefore, repeated calls to <xref:System.Messaging.MessageQueue.Peek%2A> return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-1760"><xref:System.Messaging.MessageQueue.Receive%2A>方法，相反地，同時讀取，並從佇列中移除第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1760">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes the first message from the queue.</span></span> <span data-ttu-id="1106c-1761">重複呼叫<xref:System.Messaging.MessageQueue.Receive%2A>，因此，會傳回不同的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1761">Repeated calls to <xref:System.Messaging.MessageQueue.Receive%2A>, therefore, return different messages.</span></span>  
  
 <span data-ttu-id="1106c-1762">訊息佇列會根據優先權和抵達時間在佇列中排序訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1762">Message Queuing orders messages in the queue according to priority and arrival time.</span></span> <span data-ttu-id="1106c-1763">只有在優先順序較高的舊之前放置較新的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1763">A newer message is placed before an older one only if it is of a higher priority.</span></span>  
  
 <span data-ttu-id="1106c-1764">當目前的執行緒可接受進行封鎖並同時等候訊息到達佇列時，請使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1764">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-1765">執行緒會封鎖到指定的期間內的時間或無限期如果指出<xref:System.Messaging.MessageQueue.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1765">The thread will be blocked up to the specified period of time, or indefinitely if you indicated <xref:System.Messaging.MessageQueue.InfiniteTimeout>.</span></span> <span data-ttu-id="1106c-1766">當您需要應用程式繼續執行而不要等候，請使用非同步的 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1766">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-1767">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1767">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1768">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1768">Workgroup mode</span></span>|<span data-ttu-id="1106c-1769">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1769">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1770">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1770">Local computer</span></span>|<span data-ttu-id="1106c-1771">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1771">Yes</span></span>|  
|<span data-ttu-id="1106c-1772">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1772">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1773">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1773">Yes</span></span>|  
|<span data-ttu-id="1106c-1774">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1774">Remote computer</span></span>|<span data-ttu-id="1106c-1775">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1775">No</span></span>|  
|<span data-ttu-id="1106c-1776">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1776">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1777">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1777">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1778">下列程式碼範例使用<xref:System.Messaging.MessageQueue.Peek%2A>方法，檢查佇列是否是空的零的逾時。</span><span class="sxs-lookup"><span data-stu-id="1106c-1778">The following code example uses the <xref:System.Messaging.MessageQueue.Peek%2A> method with a time-out of zero to check whether the queue is empty.</span></span>  
  
 [!code-cpp[MessageQueue.Peek_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Peek_timeout/CPP/mqpeek_timeout.cpp#1)]
 [!code-csharp[MessageQueue.Peek_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Peek_timeout/CS/mqpeek_timeout.cs#1)]
 [!code-vb[MessageQueue.Peek_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Peek_timeout/VB/mqpeek_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1779">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1779">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1780">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1780">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-1781">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1781">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.PeekAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::PeekAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="action" Type="System.Messaging.PeekAction" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-1782">
            <see cref="T:System.TimeSpan" />，指出等待含有訊息之佇列的最長時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1782">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="1106c-1783">
            <see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1783">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="1106c-1784">其中一個 <see cref="T:System.Messaging.PeekAction" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1784">One of the <see cref="T:System.Messaging.PeekAction" /> values.</span>
          </span>
          <span data-ttu-id="1106c-1785">指出要窺視佇列中的目前訊息，還是下一則訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1785">Indicates whether to peek at the current message in the queue, or the next message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1786">使用指定的游標傳回而不移除 (窺視) 佇列中的目前或下一則訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1786">Returns without removing (peeks) the current or next message in the queue, using the specified cursor.</span>
          </span>
          <span data-ttu-id="1106c-1787">
            <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，因此會封鎖目前的執行緒，直到訊息可以使用或發生指定的逾時為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1787">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1788">
            <see cref="T:System.Messaging.Message" />，表示佇列中的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1788">A <see cref="T:System.Messaging.Message" /> that represents a message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1789">若要查看佇列中，或等候一段指定的時間，直到有訊息佇列中，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="1106c-1789">Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</span></span> <span data-ttu-id="1106c-1790">如果佇列中已有一則訊息的方法會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-1790">The method returns immediately if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="1106c-1791"><xref:System.Messaging.MessageQueue.Peek%2A>方法讀取，但不會移除，將訊息從佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1791">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, a message from the queue.</span></span> <span data-ttu-id="1106c-1792"><xref:System.Messaging.MessageQueue.Receive%2A>方法，相反地，同時讀取，並從佇列移除訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1792">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes a message from the queue.</span></span>  
  
 <span data-ttu-id="1106c-1793">當目前的執行緒可接受進行封鎖並同時等候訊息到達佇列時，請使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1793">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-1794">最多指定的期間內的時間或無限期地封鎖執行緒如果指出<xref:System.Messaging.MessageQueue.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1794">The thread is blocked up to the specified period of time, or indefinitely if you indicated <xref:System.Messaging.MessageQueue.InfiniteTimeout>.</span></span> <span data-ttu-id="1106c-1795">當您需要應用程式繼續執行而不要等候，請使用非同步的 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1795">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-1796">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1796">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1797">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1797">Workgroup mode</span></span>|<span data-ttu-id="1106c-1798">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1798">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1799">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1799">Local computer</span></span>|<span data-ttu-id="1106c-1800">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1800">Yes</span></span>|  
|<span data-ttu-id="1106c-1801">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1801">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1802">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1802">Yes</span></span>|  
|<span data-ttu-id="1106c-1803">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1803">Remote computer</span></span>|<span data-ttu-id="1106c-1804">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1804">No</span></span>|  
|<span data-ttu-id="1106c-1805">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1805">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1806">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1806">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1106c-1807">為 <paramref name="action" /> 參數指定 <see langword="PeekAction.Current" /> 或 <see langword="PeekAction.Next" /> 以外的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1807">A value other than <see langword="PeekAction.Current" /> or <see langword="PeekAction.Next" /> was specified for the <paramref name="action" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-1808">
            <paramref name="cursor" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1808">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1809">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1809">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="1106c-1810">可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1810">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1811">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1811">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-1812">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1812">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.PeekAction" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekByCorrelationId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1813">窺視符合指定關聯識別項的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1813">Peeks a message that matches a given correlation identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByCorrelationId (string correlationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByCorrelationId(string correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByCorrelationId (correlationId As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByCorrelationId(System::String ^ correlationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="1106c-1814">要窺視訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1814">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1815">窺視符合指定關聯識別項的訊息，而且在佇列中目前沒有指定關聯識別項的訊息時，立即引發例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1815">Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1816">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1816">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1817">這個方法會在所參照的佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1817">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="1106c-1818">如果不找到任何訊息符合`correlationID`參數時，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-1818">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1106c-1819"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來將繫結傳送至相關聯的回應、 報表或通知訊息至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1819">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="1106c-1820">另外兩個方法可讓您查看佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1820">Two other methods allow you to peek messages in a queue.</span></span> <span data-ttu-id="1106c-1821"><xref:System.Messaging.MessageQueue.Peek%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法用來擷取訊息，藉由指定其唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-1821">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="1106c-1822">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1822">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1823">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1823">Workgroup mode</span></span>|<span data-ttu-id="1106c-1824">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1824">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1825">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1825">Local computer</span></span>|<span data-ttu-id="1106c-1826">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1826">Yes</span></span>|  
|<span data-ttu-id="1106c-1827">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1827">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1828">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1828">Yes</span></span>|  
|<span data-ttu-id="1106c-1829">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1829">Remote computer</span></span>|<span data-ttu-id="1106c-1830">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1830">No</span></span>|  
|<span data-ttu-id="1106c-1831">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1831">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1832">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1832">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1833">下列程式碼範例會將傳送和接收包含訂單與佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1833">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="1106c-1834">它特別要求正值通知，當原始訊息抵達或已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="1106c-1834">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-1835">
            <paramref name="correlationId" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1835">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-1836">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1836">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1837">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1837">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="PeekByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByCorrelationId (string correlationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByCorrelationId(string correlationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByCorrelationId (correlationId As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByCorrelationId(System::String ^ correlationId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="1106c-1838">要窺視訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1838">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1106c-1839">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1839">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1840">窺視符合指定的關聯識別項的訊息，並且等候佇列中出現具有指定關聯識別項的訊息，或者等候直到逾時到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1840">Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1841">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1841">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1842">這個方法會在所參照的佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1842">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="1106c-1843">如果不找到任何訊息符合`correlationID`參數，以及任何新訊息到達佇列中所指定的期間內`timeout`參數時，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-1843">If no message is found that matches the `correlationID` parameter, and no new message arrives in the queue within the period specified by the `timeout` parameter, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1106c-1844">`timeout`參數未指定此方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="1106c-1844">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="1106c-1845">相反地，它會指定新訊息到達佇列中等候的時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-1845">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-1846">每次新的訊息抵達時，這個方法會檢查<xref:System.Messaging.Message.CorrelationId%2A>新訊息是否符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1846">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="1106c-1847">否則，這個方法的逾時期間的開始，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-1847">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="1106c-1848">因此，如果新的訊息持續逾時期間內抵達時，可能會此方法才能繼續執行，直到逾時期間過期且沒有任何新的訊息抵達，或是在訊息抵達其之前<xref:System.Messaging.Message.CorrelationId%2A>符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1848">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="1106c-1849"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來將繫結傳送至相關聯的回應、 報表或通知訊息至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1849">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="1106c-1850">另外兩個方法可讓您查看佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1850">Two other methods allow you to peek messages in a queue.</span></span> <span data-ttu-id="1106c-1851"><xref:System.Messaging.MessageQueue.Peek%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法用來擷取訊息，藉由指定其唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-1851">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="1106c-1852">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1852">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1853">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1853">Workgroup mode</span></span>|<span data-ttu-id="1106c-1854">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1854">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1855">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1855">Local computer</span></span>|<span data-ttu-id="1106c-1856">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1856">Yes</span></span>|  
|<span data-ttu-id="1106c-1857">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1857">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1858">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1858">Yes</span></span>|  
|<span data-ttu-id="1106c-1859">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1859">Remote computer</span></span>|<span data-ttu-id="1106c-1860">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1860">No</span></span>|  
|<span data-ttu-id="1106c-1861">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1861">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1862">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1862">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1863">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1863">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#5](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#5)]
 [!code-csharp[MessageQueue2#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-1864">
            <paramref name="correlationId" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1864">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1865">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1865">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-1866">佇列中沒有具有指定 <paramref name="correlationId" /> 的訊息，且該訊息未在逾時到期前到達。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1866">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1867">訊息沒有在逾時到期前到達。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1867">A message did not arrive before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-1868">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1868">-or-</span>
          </span>
          <span data-ttu-id="1106c-1869">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1869">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekById">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1870">傳回具有指定訊息識別項的訊息複本，但不從佇列中移除訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1870">Returns a copy of the message that has the specified message identifier without removing the message from the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekById (id As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekById(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1106c-1871">要窺視訊息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1871">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1872">窺視訊息識別項符合 <paramref name="id" /> 參數的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1872">Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1873">
            <see cref="T:System.Messaging.Message" /> 屬性符合 <paramref name="id" /> 參數的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1873">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1874">使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>讀取，但不會從佇列移除訊息具有已知的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="1106c-1874">Use <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> to read, without removing from the queue, a message that has a known message identifier.</span></span> <span data-ttu-id="1106c-1875">訊息的識別項是唯一的訊息佇列企業中，因此中會有最多一個訊息佇列符合給定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1875">The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="1106c-1876">如果佇列目前也不會包含訊息，則這個多載會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-1876">This overload throws an exception if the queue does not currently contain the message.</span></span>  
  
 <span data-ttu-id="1106c-1877">兩個額外的方法可讓您查看佇列中的訊息：<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1877">Two additional methods allow you to peek messages in a queue: <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="1106c-1878"><xref:System.Messaging.MessageQueue.Peek%2A>方法會傳回第一個訊息在佇列中。<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>傳回通知、 報表或已傳送至佇列的訊息後建立的應用程式產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1878">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue; <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="1106c-1879">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1879">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1880">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1880">Workgroup mode</span></span>|<span data-ttu-id="1106c-1881">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1881">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1882">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1882">Local computer</span></span>|<span data-ttu-id="1106c-1883">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1883">Yes</span></span>|  
|<span data-ttu-id="1106c-1884">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1884">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1885">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1885">Yes</span></span>|  
|<span data-ttu-id="1106c-1886">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1886">Remote computer</span></span>|<span data-ttu-id="1106c-1887">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1887">No</span></span>|  
|<span data-ttu-id="1106c-1888">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1888">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1889">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1889">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1890">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1890">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#6](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#6)]
 [!code-csharp[MessageQueue2#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-1891">
            <paramref name="id" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1891">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-1892">具有指定 <paramref name="id" /> 的訊息不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1892">No message with the specified <paramref name="id" /> exists.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1893">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1893">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="PeekById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekById (string id, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekById(string id, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekById (id As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekById(System::String ^ id, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1106c-1894">要窺視訊息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1894">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1106c-1895">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1895">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1896">窺視訊息識別項符合 <paramref name="id" /> 參數的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1896">Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</span>
          </span>
          <span data-ttu-id="1106c-1897">等待直到訊息出現在佇列中，或等到發生逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1897">Waits until the message appears in the queue or a time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1898">
            <see cref="T:System.Messaging.Message" /> 屬性符合 <paramref name="id" /> 參數的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1898">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1899">使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>讀取，但不會從佇列移除訊息具有已知的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="1106c-1899">Use <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> to read, without removing from the queue, a message that has a known message identifier.</span></span> <span data-ttu-id="1106c-1900">訊息的識別項是唯一的訊息佇列企業中，因此中會有最多一個訊息佇列符合給定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1900">The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="1106c-1901">如果佇列目前也不會包含訊息，而且發生逾時前未到達新訊息，則這個多載會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-1901">This overload throws an exception if the queue does not currently contain the message and a new message does not arrive before the time-out occurs.</span></span>  
  
 <span data-ttu-id="1106c-1902">`timeout`參數未指定此方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="1106c-1902">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="1106c-1903">相反地，它會指定新訊息到達佇列中等候的時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-1903">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-1904">每次新的訊息抵達時，這個方法會檢查<xref:System.Messaging.Message.Id%2A>新訊息是否符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1904">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="1106c-1905">否則，這個方法的逾時期間的開始，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-1905">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="1106c-1906">因此，如果新的訊息持續逾時期間內抵達時，可能會此方法才能繼續執行，直到逾時期間過期且沒有任何新的訊息抵達，或是在訊息抵達其之前<xref:System.Messaging.Message.Id%2A>符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1906">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="1106c-1907">兩個額外的方法可讓您查看佇列中的訊息：<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-1907">Two additional methods allow you to peek messages in a queue: <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="1106c-1908"><xref:System.Messaging.MessageQueue.Peek%2A>方法會傳回第一個訊息在佇列中。<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>傳回通知、 報表或已傳送至佇列的訊息後建立的應用程式產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-1908">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue; <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="1106c-1909">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1909">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1910">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1910">Workgroup mode</span></span>|<span data-ttu-id="1106c-1911">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1911">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1912">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1912">Local computer</span></span>|<span data-ttu-id="1106c-1913">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1913">Yes</span></span>|  
|<span data-ttu-id="1106c-1914">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1914">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1915">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1915">Yes</span></span>|  
|<span data-ttu-id="1106c-1916">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1916">Remote computer</span></span>|<span data-ttu-id="1106c-1917">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1917">No</span></span>|  
|<span data-ttu-id="1106c-1918">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1918">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1919">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1919">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1920">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1920">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#7](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#7)]
 [!code-csharp[MessageQueue2#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-1921">
            <paramref name="id" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1921">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-1922">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1922">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-1923">佇列中沒有具有指定 <paramref name="id" /> 的訊息，且該訊息未在 <paramref name="timeout" /> 參數指定的逾時到期前到達。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1923">The message with the specified <paramref name="id" /> does not exist in the queue and did not arrive before the period specified by the <paramref name="timeout" /> parameter expired.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1924">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1924">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekByLookupId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1925">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1925">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="1106c-1926">窺視佇列中的特定訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1926">Peeks at a specific message from the queue.</span>
          </span>
          <span data-ttu-id="1106c-1927">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1927">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByLookupId (long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByLookupId(int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByLookupId (lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByLookupId(long lookupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lookupId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="lookupId">
          <span data-ttu-id="1106c-1928">要窺視之訊息的 <see cref="P:System.Messaging.Message.LookupId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1928">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1929">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1929">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="1106c-1930">窺視符合非交易佇列之指定查詢識別項的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1930">Peeks at the message that matches the given lookup identifier from a non-transactional queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1931">傳入符合 <paramref name="lookupId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.LookupId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1931">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1932">您可以使用這個方法，而不移除它從佇列讀取具有已知的查閱識別項。</span><span class="sxs-lookup"><span data-stu-id="1106c-1932">Use this method to read a message with a known lookup identifier without removing it from the queue.</span></span> <span data-ttu-id="1106c-1933">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1933">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="1106c-1934"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，應該會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1934">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="1106c-1935">讀取具有指定的查詢識別碼的訊息，並將它從佇列移除，請使用<xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1935">To read a message with a specified lookup identifier and remove it from the queue, use the <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-1936">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1936">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1937">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1937">Workgroup mode</span></span>|<span data-ttu-id="1106c-1938">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1938">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1939">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1939">Local computer</span></span>|<span data-ttu-id="1106c-1940">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1940">Yes</span></span>|  
|<span data-ttu-id="1106c-1941">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1941">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1942">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1942">Yes</span></span>|  
|<span data-ttu-id="1106c-1943">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1943">Remote computer</span></span>|<span data-ttu-id="1106c-1944">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1944">No</span></span>|  
|<span data-ttu-id="1106c-1945">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1945">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1946">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1946">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1106c-1947">未安裝 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1947">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-1948">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1948">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1949">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1949">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="PeekByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByLookupId (System.Messaging.MessageLookupAction action, long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByLookupId (action As MessageLookupAction, lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByLookupId(System::Messaging::MessageLookupAction action, long lookupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" />
        <Parameter Name="lookupId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="1106c-1950">其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定如何在佇列中讀取訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1950">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span>
          </span>
          <span data-ttu-id="1106c-1951">請指定下列其中一個選項：</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1951">Specify one of the following:</span>
          </span>
          <span data-ttu-id="1106c-1952">
            <see langword="MessageLookupAction.Current" />：窺視 <c>lookupId</c> 指定的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1952">
              <see langword="MessageLookupAction.Current" />: Peeks at the message specified by <c>lookupId</c>.</span>
          </span>
          <span data-ttu-id="1106c-1953">
            <see langword="MessageLookupAction.Next" />：窺視 <c>lookupId</c> 指定的訊息後面的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1953">
              <see langword="MessageLookupAction.Next" />: Peeks at the message following the message specified by <c>lookupId</c>.</span>
          </span>
          <span data-ttu-id="1106c-1954">
            <see langword="MessageLookupAction.Previous" />：窺視 <c>lookupId</c> 指定的訊息前面的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1954">
              <see langword="MessageLookupAction.Previous" />: Peeks at the message preceding the message specified by <c>lookupId</c>.</span>
          </span>
          <span data-ttu-id="1106c-1955">
            <see langword="MessageLookupAction.First" />：窺視佇列中的第一則訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1955">
              <see langword="MessageLookupAction.First" />: Peeks at the first message in the queue.</span>
          </span>
          <span data-ttu-id="1106c-1956">
            <c>lookupId</c> 參數必須設定為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1956">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
          <span data-ttu-id="1106c-1957">
            <see langword="MessageLookupAction.Last" />：窺視佇列中的最後一則訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1957">
              <see langword="MessageLookupAction.Last" />: Peeks at the last message in the queue.</span>
          </span>
          <span data-ttu-id="1106c-1958">
            <c>lookupId</c> 參數必須設定為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1958">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
        </param>
        <param name="lookupId">
          <span data-ttu-id="1106c-1959">要窺視之訊息的 <see cref="P:System.Messaging.Message.LookupId" />，或者為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1959">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at, or 0.</span>
          </span>
          <span data-ttu-id="1106c-1960">存取佇列中第一則或最後一則訊息時會使用 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1960">0 is used when accessing the first or last message in the queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-1961">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1961">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="1106c-1962">窺視佇列中的特定訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1962">Peeks at a specific message from the queue.</span>
          </span>
          <span data-ttu-id="1106c-1963">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1963">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-1964">傳入之 <paramref name="action" /> 和 <paramref name="lookupId" /> 參數所指定的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1964">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1965">您可以使用這個方法，而不移除它從佇列讀取具有已知的查閱識別項。</span><span class="sxs-lookup"><span data-stu-id="1106c-1965">Use this method to read a message with a known lookup identifier without removing it from the queue.</span></span> <span data-ttu-id="1106c-1966">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-1966">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="1106c-1967"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，應該會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-1967">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="1106c-1968">讀取具有指定識別碼的訊息，並將它從佇列移除，請使用<xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1968">To read a message with a specified identifier and remove it from the queue, use the <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-1969">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1969">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1970">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1970">Workgroup mode</span></span>|<span data-ttu-id="1106c-1971">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-1971">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-1972">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1972">Local computer</span></span>|<span data-ttu-id="1106c-1973">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1973">Yes</span></span>|  
|<span data-ttu-id="1106c-1974">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1974">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-1975">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1975">Yes</span></span>|  
|<span data-ttu-id="1106c-1976">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-1976">Remote computer</span></span>|<span data-ttu-id="1106c-1977">否</span><span class="sxs-lookup"><span data-stu-id="1106c-1977">No</span></span>|  
|<span data-ttu-id="1106c-1978">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-1978">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-1979">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-1979">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1106c-1980">未安裝 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1980">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-1981">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1981">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-1982">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1982">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-1983">
            <paramref name="action" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1983">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="PeekCompleted">
      <MemberSignature Language="C#" Value="public event System.Messaging.PeekCompletedEventHandler PeekCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Messaging.PeekCompletedEventHandler PeekCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Messaging.MessageQueue.PeekCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PeekCompleted As PeekCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Messaging::PeekCompletedEventHandler ^ PeekCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_PeekCompleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.PeekCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1984">發生於訊息已讀取但未從佇列中移除時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1984">Occurs when a message is read without being removed from the queue.</span>
          </span>
          <span data-ttu-id="1106c-1985">這是非同步作業 <see cref="M:System.Messaging.MessageQueue.BeginPeek" /> 的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1985">This is a result of the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginPeek" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1986"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 在非同步處理用來引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件佇列中出現一則訊息時。</span><span class="sxs-lookup"><span data-stu-id="1106c-1986"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is used in asynchronous processing to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message is available in the queue.</span></span>  
  
 <span data-ttu-id="1106c-1987"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 用來完成作業的呼叫所初始化<xref:System.Messaging.MessageQueue.BeginPeek%2A>和窺視訊息時<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1987"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is used to complete the operation initiated by a call to <xref:System.Messaging.MessageQueue.BeginPeek%2A> and peek the message when the <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised.</span></span>  
  
 <span data-ttu-id="1106c-1988">建立 <xref:System.Messaging.PeekCompletedEventHandler> 委派時，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-1988">When you create a <xref:System.Messaging.PeekCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="1106c-1989">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-1989">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="1106c-1990">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1990">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="1106c-1991">如需事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1106c-1991">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1106c-1992">下列程式碼範例會建立名為事件處理常式`MyPeekCompleted`，將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式委派，並呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>起始位於路徑上的佇列上的非同步窺視作業 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="1106c-1992">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="1106c-1993">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，此範例窺視訊息，並將其本文寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1106c-1993">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="1106c-1994">此範例會接著呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A> 以起始新的非同步查看作業</span><span class="sxs-lookup"><span data-stu-id="1106c-1994">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Sub Purge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Purge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-1995">刪除佇列中所包含的所有訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-1995">Deletes all the messages contained in the queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-1996">清除佇列會導致訊息佇列設定的佇列修改旗標，會影響<xref:System.Messaging.MessageQueue.LastModifyTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-1996">Purging the queue causes Message Queuing to set the queue modification flag, which affects the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property.</span></span> <span data-ttu-id="1106c-1997">從佇列中清除的訊息都會遺失。它們不會傳送到寄不出信件佇列或日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-1997">Messages that are purged from the queue are lost; they are not sent to the dead-letter queue or the journal queue.</span></span>  
  
 <span data-ttu-id="1106c-1998">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-1998">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-1999">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-1999">Workgroup mode</span></span>|<span data-ttu-id="1106c-2000">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2000">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2001">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2001">Local computer</span></span>|<span data-ttu-id="1106c-2002">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2002">Yes</span></span>|  
|<span data-ttu-id="1106c-2003">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2003">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2004">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2004">Yes</span></span>|  
|<span data-ttu-id="1106c-2005">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2005">Remote computer</span></span>|<span data-ttu-id="1106c-2006">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2006">No</span></span>|  
|<span data-ttu-id="1106c-2007">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2007">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2008">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2008">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2009">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Purge%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2009">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Purge%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#29](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#29)]
 [!code-csharp[MessageQueue2#29](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2010">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2010">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
        <altmember cref="M:System.Messaging.MessageQueue.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public string QueueName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QueueName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_QueueName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2011">取得或設定識別佇列的易記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2011">Gets or sets the friendly name that identifies the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-2012">名稱，識別這個 <see cref="T:System.Messaging.MessageQueue" /> 所參考的佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2012">The name that identifies the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="1106c-2013">這個值不能為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2013">The value cannot be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2014">您可以結合<xref:System.Messaging.MessageQueue.QueueName%2A>與<xref:System.Messaging.MessageQueue.MachineName%2A>建立易記<xref:System.Messaging.MessageQueue.Path%2A>佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="1106c-2014">You can combine the <xref:System.Messaging.MessageQueue.QueueName%2A> with the <xref:System.Messaging.MessageQueue.MachineName%2A> to create a friendly <xref:System.Messaging.MessageQueue.Path%2A> name for the queue.</span></span> <span data-ttu-id="1106c-2015">易記名稱變化的語法<xref:System.Messaging.MessageQueue.Path%2A>屬性取決於佇列類型下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="1106c-2015">The syntax for the friendly name variation of the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1106c-2016">佇列類型</span><span class="sxs-lookup"><span data-stu-id="1106c-2016">Queue type</span></span>|<span data-ttu-id="1106c-2017">語法</span><span class="sxs-lookup"><span data-stu-id="1106c-2017">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="1106c-2018">公用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-2018">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="1106c-2019">私用佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-2019">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="1106c-2020">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="1106c-2020">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
  
 <span data-ttu-id="1106c-2021">使用"。"代表本機電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-2021">Use "." to represent the local computer.</span></span>  
  
 <span data-ttu-id="1106c-2022">變更<xref:System.Messaging.MessageQueue.QueueName%2A>屬性會影響<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-2022">Changing the <xref:System.Messaging.MessageQueue.QueueName%2A> property affects the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span> <span data-ttu-id="1106c-2023">如果您設定<xref:System.Messaging.MessageQueue.QueueName%2A>未設定<xref:System.Messaging.MessageQueue.MachineName%2A>屬性，<xref:System.Messaging.MessageQueue.Path%2A>屬性變成。\\`QueueName`.</span><span class="sxs-lookup"><span data-stu-id="1106c-2023">If you set the <xref:System.Messaging.MessageQueue.QueueName%2A> without setting the <xref:System.Messaging.MessageQueue.MachineName%2A> property, the <xref:System.Messaging.MessageQueue.Path%2A> property becomes .\\`QueueName`.</span></span> <span data-ttu-id="1106c-2024">否則，<xref:System.Messaging.MessageQueue.Path%2A>變成`MachineName` \\ `QueueName`。</span><span class="sxs-lookup"><span data-stu-id="1106c-2024">Otherwise, the <xref:System.Messaging.MessageQueue.Path%2A> becomes `MachineName`\\`QueueName`.</span></span>  
  
 <span data-ttu-id="1106c-2025">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2025">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2026">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2026">Workgroup mode</span></span>|<span data-ttu-id="1106c-2027">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2027">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2028">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2028">Local computer</span></span>|<span data-ttu-id="1106c-2029">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2029">Yes</span></span>|  
|<span data-ttu-id="1106c-2030">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2030">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2031">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2031">Yes</span></span>|  
|<span data-ttu-id="1106c-2032">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2032">Remote computer</span></span>|<span data-ttu-id="1106c-2033">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2033">Yes</span></span>|  
|<span data-ttu-id="1106c-2034">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2034">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2035">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2035">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2036">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.QueueName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-2036">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.QueueName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#24](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2037">佇列名稱是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2037">The queue name is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="ReadHandle">
      <MemberSignature Language="C#" Value="public IntPtr ReadHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ReadHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.ReadHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ReadHandle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_ReadHandle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2038">取得用來從訊息佇列讀取訊息的原生控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2038">Gets the native handle used to read messages from the message queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-2039">用來從佇列窺視或接收訊息之原生佇列物件的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2039">A handle to the native queue object that you use for peeking and receiving messages from the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2040"><xref:System.Messaging.MessageQueue.ReadHandle%2A>提供用於窺視或從佇列接收訊息的訊息佇列物件的原生 Windows 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-2040">The <xref:System.Messaging.MessageQueue.ReadHandle%2A> provides a native Windows handle to the message queue object that is used for peeking and receiving messages from the queue.</span></span> <span data-ttu-id="1106c-2041">如果您變更佇列的路徑，控制代碼關閉並重新開啟新的值。</span><span class="sxs-lookup"><span data-stu-id="1106c-2041">If you change the path of the queue, the handle is closed and reopened with a new value.</span></span>  
  
 <span data-ttu-id="1106c-2042">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2042">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2043">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2043">Workgroup mode</span></span>|<span data-ttu-id="1106c-2044">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2044">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2045">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2045">Local computer</span></span>|<span data-ttu-id="1106c-2046">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2046">Yes</span></span>|  
|<span data-ttu-id="1106c-2047">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2047">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2048">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2048">Yes</span></span>|  
|<span data-ttu-id="1106c-2049">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2049">Remote computer</span></span>|<span data-ttu-id="1106c-2050">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2050">No</span></span>|  
|<span data-ttu-id="1106c-2051">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2051">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2052">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2052">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2053">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2053">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.CanRead" />
        <altmember cref="P:System.Messaging.MessageQueue.WriteHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Receive">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe>
          <span data-ttu-id="1106c-2054">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2054">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <summary>
          <span data-ttu-id="1106c-2055">接收佇列中的第一個訊息，並將它從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2055">Receives the first message in the queue, removing it from the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2056">接收由 <see cref="T:System.Messaging.MessageQueue" /> 參考的第一個在佇列中可用的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2056">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="1106c-2057">這個呼叫是同步的，而且會阻礙目前執行的執行緒，直到訊息可以使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2057">This call is synchronous, and blocks the current thread of execution until a message is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2058">
            <see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2058">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2059">使用這個多載會收到訊息從佇列中，或等到有訊息佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2059">Use this overload to receive a message from a queue, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2060"><xref:System.Messaging.MessageQueue.Receive%2A>方法允許同步讀取一個訊息，因而從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2060">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="1106c-2061">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回跟在佇列中，或新的、 高優先權的訊息的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2061">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue, or new, higher priority messages.</span></span>  
  
 <span data-ttu-id="1106c-2062">若要讀取佇列中的第一個訊息，而不需移除佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2062">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="1106c-2063"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2063">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2064">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2064">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2065">因為此多載的<xref:System.Messaging.MessageQueue.Receive%2A>方法會指定無限逾時、 應用程式可能會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="1106c-2065">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="1106c-2066">如果應用程式處理應該不需等到訊息繼續，請考慮使用非同步的方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2066">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2067">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2067">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2068">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2068">Workgroup mode</span></span>|<span data-ttu-id="1106c-2069">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2069">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2070">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2070">Local computer</span></span>|<span data-ttu-id="1106c-2071">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2071">Yes</span></span>|  
|<span data-ttu-id="1106c-2072">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2072">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2073">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2073">Yes</span></span>|  
|<span data-ttu-id="1106c-2074">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2074">Remote computer</span></span>|<span data-ttu-id="1106c-2075">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2075">No</span></span>|  
|<span data-ttu-id="1106c-2076">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2076">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2077">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2077">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2078">下列程式碼範例從佇列接收訊息，並輸出至畫面的訊息的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-2078">The following code example receives a message from a queue and outputs information about that message to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CPP/mqreceive_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Receive_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CS/mqreceive_noparms.cs#1)]
 [!code-vb[MessageQueue.Receive_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_noparms/VB/mqreceive_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2079">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2079">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="1106c-2080">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2080">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2081">接收由 <see cref="T:System.Messaging.MessageQueue" /> 參考的第一個在交易佇列中可用的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2081">Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="1106c-2082">這個呼叫是同步的，而且會阻礙目前執行的執行緒，直到訊息可以使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2082">This call is synchronous, and blocks the current thread of execution until a message is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2083">
            <see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2083">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2084">若要從使用內部交易內容所定義的交易式佇列接收訊息中使用此多載`transaction`參數或等到有訊息佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2084">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2085"><xref:System.Messaging.MessageQueue.Receive%2A>方法允許同步讀取一個訊息，因而從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2085">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="1106c-2086">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回佇列中遵循的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2086">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2087">因為在交易式佇列上呼叫此方法時，收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2087">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2088">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2088">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2089">若要讀取佇列中的第一個訊息，而不需移除佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2089">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="1106c-2090"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2090">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2091">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2091">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="1106c-2092">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會移除任何訊息佇列中，會是 nothing 回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2092">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2093">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2093">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2094">因為此多載的<xref:System.Messaging.MessageQueue.Receive%2A>方法會指定無限逾時、 應用程式可能會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="1106c-2094">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="1106c-2095">如果應用程式處理應該不需等到訊息繼續，請考慮使用非同步的方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2095">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2096">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2096">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2097">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2097">Workgroup mode</span></span>|<span data-ttu-id="1106c-2098">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2098">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2099">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2099">Local computer</span></span>|<span data-ttu-id="1106c-2100">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2100">Yes</span></span>|  
|<span data-ttu-id="1106c-2101">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2101">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2102">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2102">Yes</span></span>|  
|<span data-ttu-id="1106c-2103">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2103">Remote computer</span></span>|<span data-ttu-id="1106c-2104">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2104">No</span></span>|  
|<span data-ttu-id="1106c-2105">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2105">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2106">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2106">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2107">下列程式碼範例會連接到本機電腦上的交易式佇列，並將訊息傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-2107">The following code example connects to a transactional queue on the local computer and sends a message to the queue.</span></span> <span data-ttu-id="1106c-2108">然後會收到含有訂單的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2108">It then receives the message that contains an order.</span></span> <span data-ttu-id="1106c-2109">如果遇到非交易式佇列，則會擲回例外狀況並回復交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-2109">If it encounters a non-transactional queue, it will throw and exception and rollback the transaction.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_transaction/CPP/mqreceive_transaction.cpp#1)]
 [!code-csharp[MessageQueue.Receive_transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_transaction/CS/mqreceive_transaction.cs#1)]
 [!code-vb[MessageQueue.Receive_transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_transaction/VB/mqreceive_transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2110">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2110">An error occurred when accessing a Message Queuing method.</span>
          </span>
          <span data-ttu-id="1106c-2111">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2111">-or-</span>
          </span>
          <span data-ttu-id="1106c-2112">該佇列是非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2112">The queue is non-transactional.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-2113">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2113">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="transactionType">
          <span data-ttu-id="1106c-2114">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2114">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2115">接收由 <see cref="T:System.Messaging.MessageQueue" /> 參考的第一個在佇列中可用的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2115">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="1106c-2116">這個呼叫是同步的，而且會阻礙目前執行的執行緒，直到訊息可以使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2116">This call is synchronous, and blocks the current thread of execution until a message is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2117">
            <see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2117">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2118">若要從使用異動內容所定義的佇列接收訊息中使用此多載`transactionType`參數或等到有訊息佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2118">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2119">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2119">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="1106c-2120">指定`Single`如果您想要接收的訊息當做單一的內部異動。</span><span class="sxs-lookup"><span data-stu-id="1106c-2120">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-2121">您可以指定`None`如果您想要從交易內容外部異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2121">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="1106c-2122"><xref:System.Messaging.MessageQueue.Receive%2A>方法允許同步讀取一個訊息，因而從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2122">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="1106c-2123">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回佇列中遵循的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2123">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2124">如果這個方法呼叫從異動式佇列接收訊息時，收到的訊息將傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2124">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2125">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2125">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2126">若要讀取佇列中的第一個訊息，而不需移除佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2126">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="1106c-2127"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2127">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2128">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2128">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="1106c-2129">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會移除任何訊息佇列中，會是 nothing 回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2129">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2130">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2130">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2131">因為此多載的<xref:System.Messaging.MessageQueue.Receive%2A>方法會指定無限逾時、 應用程式可能會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="1106c-2131">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="1106c-2132">如果應用程式處理應該不需等到訊息繼續，請考慮使用非同步的方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2132">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2133">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2133">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2134">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2134">Workgroup mode</span></span>|<span data-ttu-id="1106c-2135">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2135">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2136">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2136">Local computer</span></span>|<span data-ttu-id="1106c-2137">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2137">Yes</span></span>|  
|<span data-ttu-id="1106c-2138">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2138">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2139">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2139">Yes</span></span>|  
|<span data-ttu-id="1106c-2140">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2140">Remote computer</span></span>|<span data-ttu-id="1106c-2141">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2141">No</span></span>|  
|<span data-ttu-id="1106c-2142">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2142">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2143">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2143">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2144">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2144">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#9](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#9)]
 [!code-csharp[MessageQueue2#9](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2145">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2145">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2146">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2146">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-2147">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2147">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-2148">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2148">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2149">接收 <see cref="T:System.Messaging.MessageQueue" /> 所參考之佇列中的第一個可用訊息，並等候直到佇列中有可用訊息，或者逾時到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2149">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2150">
            <see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2150">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2151">使用這個多載來接收訊息，如果佇列中沒有訊息，則在指定時間期限傳回。</span><span class="sxs-lookup"><span data-stu-id="1106c-2151">Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2152"><xref:System.Messaging.MessageQueue.Receive%2A>方法允許同步讀取一個訊息，它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2152">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, removing it from the queue.</span></span> <span data-ttu-id="1106c-2153">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回跟在佇列中，或新的、 高優先權的訊息的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2153">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue, or new, higher priority messages.</span></span>  
  
 <span data-ttu-id="1106c-2154">若要讀取佇列中的第一個訊息，而不需移除佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2154">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="1106c-2155"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2155">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2156">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2156">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2157">執行緒將給定的期間內的時間或無限期地封鎖您指定的值如果<xref:System.Messaging.MessageQueue.InfiniteTimeout>如`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2157">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="1106c-2158">如果應用程式處理應該繼續而不等待的訊息，請考慮使用非同步的方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2158">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2159">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2159">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2160">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2160">Workgroup mode</span></span>|<span data-ttu-id="1106c-2161">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2161">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2162">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2162">Local computer</span></span>|<span data-ttu-id="1106c-2163">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2163">Yes</span></span>|  
|<span data-ttu-id="1106c-2164">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2164">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2165">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2165">Yes</span></span>|  
|<span data-ttu-id="1106c-2166">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2166">Remote computer</span></span>|<span data-ttu-id="1106c-2167">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2167">No</span></span>|  
|<span data-ttu-id="1106c-2168">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2168">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2169">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2169">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2170">下列程式碼範例從佇列接收訊息，並輸出至畫面的訊息的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-2170">The following code example receives a message from a queue and outputs information about that message to the screen.</span></span> <span data-ttu-id="1106c-2171">此範例會暫停執行五秒，等待訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2171">The example pauses execution for up to five seconds while waiting for a message to arrive in the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_timeout/CPP/mqreceive_timeout.cpp#1)]
 [!code-csharp[MessageQueue.Receive_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_timeout/CS/mqreceive_timeout.cs#1)]
 [!code-vb[MessageQueue.Receive_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_timeout/VB/mqreceive_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2172">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2172">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2173">訊息沒有在逾時到期前到達佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2173">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2174">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2174">-or-</span>
          </span>
          <span data-ttu-id="1106c-2175">存取訊息佇列方法時發生錯誤</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2175">An error occurred when accessing a Message Queuing method</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-2176">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2176">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-2177">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2177">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="1106c-2178">
            <see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2178">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2179">使用指定的游標接收佇列中的目前訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2179">Receives the current message in the queue, using a specified cursor.</span>
          </span>
          <span data-ttu-id="1106c-2180">如果沒有可用的訊息，則這個方法會等到有訊息可用或逾時為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2180">If no message is available, this method waits until either a message is available, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2181">
            <see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2181">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2182">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2182">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2183">訊息沒有在逾時到期前到達佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2183">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2184">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2184">-or-</span>
          </span>
          <span data-ttu-id="1106c-2185">存取訊息佇列方法時發生錯誤</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2185">An error occurred when accessing a Message Queuing method</span>
          </span>
          <span data-ttu-id="1106c-2186">使用這個多載來接收訊息，如果佇列中沒有訊息，則在指定時間期限傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2186">Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-2187">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2187">The method is not thread safe.</span>
          </span>
        </threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-2188">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2188">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-2189">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2189">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2190">接收 <see cref="T:System.Messaging.MessageQueue" /> 所參考之交易佇列中的第一個可用訊息，並且等候直到佇列中出現可用訊息，或逾時過期為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2190">Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2191">
            <see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2191">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2192">若要從使用內部交易內容所定義的交易式佇列接收訊息中使用此多載`transaction`參數，並傳回指定期間內的時間，如果佇列中沒有其他訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2192">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, and return within a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2193"><xref:System.Messaging.MessageQueue.Receive%2A>方法允許同步讀取一個訊息，因而從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2193">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="1106c-2194">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回佇列中遵循的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2194">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2195">因為在交易式佇列上呼叫此方法時，收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2195">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2196">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2196">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2197">若要讀取佇列中的第一個訊息，而不需移除佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2197">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="1106c-2198"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2198">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2199">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2199">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="1106c-2200">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會移除任何訊息佇列中，會是 nothing 回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2200">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2201">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2201">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2202">執行緒將給定的期間內的時間或無限期地封鎖您指定的值如果<xref:System.Messaging.MessageQueue.InfiniteTimeout>如`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2202">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="1106c-2203">如果應用程式處理應該繼續而不等待的訊息，請考慮使用非同步的方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2203">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2204">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2204">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2205">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2205">Workgroup mode</span></span>|<span data-ttu-id="1106c-2206">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2206">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2207">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2207">Local computer</span></span>|<span data-ttu-id="1106c-2208">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2208">Yes</span></span>|  
|<span data-ttu-id="1106c-2209">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2209">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2210">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2210">Yes</span></span>|  
|<span data-ttu-id="1106c-2211">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2211">Remote computer</span></span>|<span data-ttu-id="1106c-2212">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2212">No</span></span>|  
|<span data-ttu-id="1106c-2213">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2213">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2214">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2214">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2215">下列程式碼範例示範如何使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2215">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/CPP/mqreceive_timeouttransaction.cpp#1)]
 [!code-csharp[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/CS/mqreceive_timeouttransaction.cs#1)]
 [!code-vb[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/VB/mqreceive_timeouttransaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2216">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2216">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2217">訊息沒有在逾時到期前到達佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2217">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2218">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2218">-or-</span>
          </span>
          <span data-ttu-id="1106c-2219">該佇列是非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2219">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="1106c-2220">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2220">-or-</span>
          </span>
          <span data-ttu-id="1106c-2221">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2221">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-2222">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2222">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-2223">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2223">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-2224">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2224">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2225">接收由 <see cref="T:System.Messaging.MessageQueue" /> 參考的第一個在佇列中可用的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2225">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="1106c-2226">這個呼叫是同步的，並且會等候直到佇列中出現可用訊息，或逾時過期為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2226">This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2227">
            <see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2227">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2228">若要從使用異動內容所定義的佇列接收訊息中使用此多載`transactionType`參數，並傳回在指定的一段時間，如果佇列中沒有其他訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2228">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2229">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2229">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="1106c-2230">指定`Single`如果您想要接收的訊息當做單一的內部異動。</span><span class="sxs-lookup"><span data-stu-id="1106c-2230">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-2231">您可以指定`None`如果您想要從交易內容外部異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2231">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="1106c-2232"><xref:System.Messaging.MessageQueue.Receive%2A>方法允許同步讀取一個訊息，因而從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2232">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="1106c-2233">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回佇列中遵循的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2233">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2234">如果這個方法呼叫從異動式佇列接收訊息時，收到的訊息將傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2234">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2235">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2235">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2236">若要讀取佇列中的第一個訊息，而不需移除佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2236">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="1106c-2237"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2237">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2238">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2238">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="1106c-2239">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會移除任何訊息佇列中，會是 nothing 回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2239">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2240">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2240">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2241">執行緒將給定的期間內的時間或無限期地封鎖您指定的值如果<xref:System.Messaging.MessageQueue.InfiniteTimeout>如`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2241">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="1106c-2242">如果應用程式處理應該繼續而不等待的訊息，請考慮使用非同步的方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2242">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2243">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2243">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2244">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2244">Workgroup mode</span></span>|<span data-ttu-id="1106c-2245">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2245">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2246">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2246">Local computer</span></span>|<span data-ttu-id="1106c-2247">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2247">Yes</span></span>|  
|<span data-ttu-id="1106c-2248">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2248">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2249">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2249">Yes</span></span>|  
|<span data-ttu-id="1106c-2250">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2250">Remote computer</span></span>|<span data-ttu-id="1106c-2251">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2251">No</span></span>|  
|<span data-ttu-id="1106c-2252">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2252">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2253">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2253">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2254">下列程式碼範例示範如何使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2254">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[MessageQueue2#8](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#8)]
 [!code-csharp[MessageQueue2#8](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2255">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2255">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2256">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2256">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2257">訊息沒有在逾時到期前到達佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2257">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2258">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2258">-or-</span>
          </span>
          <span data-ttu-id="1106c-2259">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2259">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-2260">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2260">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-2261">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2261">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="1106c-2262">
            <see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2262">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-2263">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2263">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2264">使用指定的游標接收佇列中的目前訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2264">Receives the current message in the queue, using a specified cursor.</span>
          </span>
          <span data-ttu-id="1106c-2265">如果沒有可用的訊息，則這個方法會等到有訊息可用或逾時為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2265">If no message is available, this method waits until either a message is available, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2266">
            <see cref="T:System.Messaging.Message" />，參考佇列中的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2266">A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2267">若要從使用內部交易內容所定義的交易式佇列接收訊息中使用此多載`transaction`參數，並傳回指定期間內的時間，如果佇列中沒有其他訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2267">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, and return within a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2268"><xref:System.Messaging.MessageQueue.Receive%2A>方法允許同步讀取一個訊息，因而從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2268">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="1106c-2269">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>遵循的訊息傳回佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2269">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2270">因為這個方法呼叫交易式佇列，如果交易已中止所收到的訊息會傳回至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-2270">Because this method is called on a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2271">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2271">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2272">若要讀取佇列中的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2272">To read a message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="1106c-2273">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2273">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="1106c-2274">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會移除任何訊息佇列中，沒有要回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2274">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there is nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2275">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2275">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2276">給定的期間內的時間或無限期地封鎖執行緒如果您指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>如`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2276">The thread is blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="1106c-2277">如果應用程式處理應該繼續而不等待的訊息，請考慮使用非同步的方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2277">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2278">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2278">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2279">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2279">Workgroup mode</span></span>|<span data-ttu-id="1106c-2280">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2280">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2281">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2281">Local computer</span></span>|<span data-ttu-id="1106c-2282">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2282">Yes</span></span>|  
|<span data-ttu-id="1106c-2283">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2283">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2284">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2284">Yes</span></span>|  
|<span data-ttu-id="1106c-2285">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2285">Remote computer</span></span>|<span data-ttu-id="1106c-2286">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2286">No</span></span>|  
|<span data-ttu-id="1106c-2287">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2287">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2288">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2288">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2289">
            <paramref name="cursor" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2289">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1106c-2290">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2290">-or-</span>
          </span>
          <span data-ttu-id="1106c-2291">
            <paramref name="transaction" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2291">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2292">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2292">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="1106c-2293">可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2293">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2294">訊息沒有在逾時到期前到達佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2294">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2295">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2295">-or-</span>
          </span>
          <span data-ttu-id="1106c-2296">該佇列是非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2296">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="1106c-2297">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2297">-or-</span>
          </span>
          <span data-ttu-id="1106c-2298">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2298">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-2299">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2299">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1106c-2300">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2300">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="1106c-2301">
            <see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2301">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-2302">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息產生關聯的交易內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2302">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values that describes the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2303">使用指定的游標接收佇列中的目前訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2303">Receives the current message in the queue, using a specified cursor.</span>
          </span>
          <span data-ttu-id="1106c-2304">如果沒有可用的訊息，則這個方法會等到有訊息可用或逾時為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2304">If no message is available, this method waits until either a message is available, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2305">
            <see cref="T:System.Messaging.Message" />，參考佇列中的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2305">A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2306">若要從使用異動內容所定義的佇列接收訊息中使用此多載`transactionType`參數，並傳回在指定的一段時間，如果佇列中沒有其他訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2306">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2307">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2307">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="1106c-2308">指定`Single`如果您想要接收的訊息當做單一的內部異動。</span><span class="sxs-lookup"><span data-stu-id="1106c-2308">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-2309">您可以指定`None`如果您想要從交易內容外部異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2309">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="1106c-2310"><xref:System.Messaging.MessageQueue.Receive%2A>方法允許同步讀取一個訊息，因而從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2310">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="1106c-2311">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>遵循的訊息傳回佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2311">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2312">如果呼叫這個方法會從異動式佇列接收訊息，會收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2312">If this method is called to receive a message from a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2313">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2313">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2314">若要讀取佇列中的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2314">To read a message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="1106c-2315">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2315">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="1106c-2316">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會移除任何訊息佇列中，沒有要回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2316">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there is nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2317">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2317">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2318">給定的期間內的時間或無限期地封鎖執行緒如果您指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>如`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2318">The thread is blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="1106c-2319">如果應用程式處理應該繼續而不等待的訊息，請考慮使用非同步的方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2319">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1106c-2320">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2320">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2321">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2321">Workgroup mode</span></span>|<span data-ttu-id="1106c-2322">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2322">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2323">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2323">Local computer</span></span>|<span data-ttu-id="1106c-2324">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2324">Yes</span></span>|  
|<span data-ttu-id="1106c-2325">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2325">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2326">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2326">Yes</span></span>|  
|<span data-ttu-id="1106c-2327">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2327">Remote computer</span></span>|<span data-ttu-id="1106c-2328">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2328">No</span></span>|  
|<span data-ttu-id="1106c-2329">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2329">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2330">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2330">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2331">
            <paramref name="cursor" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2331">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2332">指定給 <paramref name="timeout" /> 參數的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2332">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="1106c-2333">可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2333">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2334">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2334">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2335">訊息沒有在逾時到期前到達佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2335">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2336">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2336">-or-</span>
          </span>
          <span data-ttu-id="1106c-2337">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2337">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="1106c-2338">這個方法不是安全執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2338">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveByCorrelationId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2339">接收符合指定關聯識別項的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2339">Receives a message that matches a given correlation identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="1106c-2340">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2340">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2341">接收符合指定關聯識別項的訊息 (從非交易佇列中)，如果佇列中目前不存在具有指定關聯識別項的訊息，則立即引發例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2341">Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2342">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2342">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2343">這個方法會在所參照的非交易式佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2343">This method looks in the non-transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2344">如果不找到任何訊息符合`correlationID`參數時，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2344">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="1106c-2345">否則，訊息會從佇列中移除，並傳回到應用程式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2345">Otherwise, the message is removed from the queue and returned to the application.</span></span>  
  
 <span data-ttu-id="1106c-2346"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來將繫結傳送至相關聯的回應、 報表或通知訊息至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2346">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="1106c-2347">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2347">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2348"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法擷取一則訊息，藉由指定其唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-2348">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method retrieves a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="1106c-2349">若要讀取具有指定的相互關聯識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2349">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2350"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2350">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2351">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2351">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2352">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2352">Workgroup mode</span></span>|<span data-ttu-id="1106c-2353">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2353">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2354">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2354">Local computer</span></span>|<span data-ttu-id="1106c-2355">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2355">Yes</span></span>|  
|<span data-ttu-id="1106c-2356">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2356">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2357">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2357">Yes</span></span>|  
|<span data-ttu-id="1106c-2358">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2358">Remote computer</span></span>|<span data-ttu-id="1106c-2359">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2359">No</span></span>|  
|<span data-ttu-id="1106c-2360">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2360">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2361">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2361">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2362">下列程式碼範例會將傳送和接收包含訂單與佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2362">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="1106c-2363">它特別要求正值通知，當原始訊息抵達或已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="1106c-2363">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2364">
            <paramref name="correlationId" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2364">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2365">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2365">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2366">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2366">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="1106c-2367">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2367">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-2368">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2368">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2369">接收符合指定關聯識別項的訊息 (從交易佇列中)，如果佇列中目前不存在具有指定關聯識別項的訊息，則立即引發例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2369">Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2370">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2370">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2371">這個方法會在所參照的交易式佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2371">This method looks in the transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2372">如果不找到任何訊息符合`correlationID`參數時，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2372">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="1106c-2373">否則，訊息是從佇列中移除並傳回應用程式使用所定義的內部交易內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2373">Otherwise, the message is removed from the queue and returned to the application using the internal transaction context defined by the `transaction` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2374">因為在交易式佇列上呼叫此方法時，收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2374">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2375">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2375">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2376"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來將繫結傳送至相關聯的回應、 報表或通知訊息至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2376">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="1106c-2377">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2377">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2378"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定其唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-2378">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="1106c-2379">若要讀取具有指定的相互關聯識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2379">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2380"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2380">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2381">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2381">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="1106c-2382">因為<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不會移除任何訊息佇列中，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2382">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2383">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2383">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2384">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2384">Workgroup mode</span></span>|<span data-ttu-id="1106c-2385">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2385">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2386">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2386">Local computer</span></span>|<span data-ttu-id="1106c-2387">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2387">Yes</span></span>|  
|<span data-ttu-id="1106c-2388">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2388">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2389">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2389">Yes</span></span>|  
|<span data-ttu-id="1106c-2390">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2390">Remote computer</span></span>|<span data-ttu-id="1106c-2391">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2391">No</span></span>|  
|<span data-ttu-id="1106c-2392">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2392">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2393">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2393">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2394">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2394">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#14](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#14)]
 [!code-csharp[MessageQueue2#14](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2395">
            <paramref name="correlationId" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2395">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1106c-2396">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2396">-or-</span>
          </span>
          <span data-ttu-id="1106c-2397">
            <paramref name="transaction" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2397">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2398">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2398">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2399">該佇列是非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2399">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="1106c-2400">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2400">-or-</span>
          </span>
          <span data-ttu-id="1106c-2401">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2401">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="1106c-2402">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2402">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-2403">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2403">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2404">接收符合指定關聯識別項的訊息，如果佇列中目前不存在具有指定關聯識別項的訊息，則立即引發例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2404">Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2405">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2405">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2406">這個方法會在所參照的佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2406">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2407">如果不找到任何訊息符合`correlationID`參數時，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2407">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="1106c-2408">否則，訊息是從佇列中移除，並傳回到應用程式使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2408">Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2409">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2409">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="1106c-2410">指定`Single`如果您想要接收的訊息當做單一的內部異動。</span><span class="sxs-lookup"><span data-stu-id="1106c-2410">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-2411">您可以指定`None`如果您想要從交易內容外部異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2411">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="1106c-2412">如果這個方法呼叫從異動式佇列接收訊息時，收到的訊息將傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2412">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2413">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2413">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2414"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來將繫結傳送至相關聯的回應、 報表或通知訊息至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2414">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="1106c-2415">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2415">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2416"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定其唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-2416">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="1106c-2417">若要讀取具有指定的相互關聯識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2417">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2418"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2418">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2419">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2419">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="1106c-2420">因為<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不會移除任何訊息佇列中，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2420">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2421">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2421">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2422">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2422">Workgroup mode</span></span>|<span data-ttu-id="1106c-2423">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2423">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2424">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2424">Local computer</span></span>|<span data-ttu-id="1106c-2425">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2425">Yes</span></span>|  
|<span data-ttu-id="1106c-2426">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2426">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2427">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2427">Yes</span></span>|  
|<span data-ttu-id="1106c-2428">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2428">Remote computer</span></span>|<span data-ttu-id="1106c-2429">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2429">No</span></span>|  
|<span data-ttu-id="1106c-2430">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2430">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2431">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2431">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2432">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2432">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#11](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#11)]
 [!code-csharp[MessageQueue2#11](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2433">
            <paramref name="correlationId" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2433">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2434">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2434">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2435">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2435">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2436">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2436">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="1106c-2437">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2437">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1106c-2438">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2438">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2439">接收符合指定關聯識別項的訊息 (從非交易佇列中)，並且等待佇列中出現具有指定關聯識別項的訊息，或者逾時到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2439">Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2440">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2440">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2441">這個方法會在所參照的非交易式佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2441">This method looks in the non-transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2442">這個方法會立即傳回如果所指定的訊息相互關聯識別項`correlationId`參數是在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2442">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue.</span></span> <span data-ttu-id="1106c-2443">否則，方法會等候指定的一段時間的新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2443">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="1106c-2444">如果逾時到期前未到達新訊息，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2444">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1106c-2445">`timeout`參數未指定此方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="1106c-2445">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="1106c-2446">相反地，它會指定新訊息到達佇列中等候的時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-2446">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2447">每次新的訊息抵達時，這個方法會檢查<xref:System.Messaging.Message.CorrelationId%2A>新訊息是否符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2447">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2448">否則，這個方法的逾時期間的開始，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2448">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="1106c-2449">因此，如果新的訊息持續逾時期間內抵達時，可能會此方法才能繼續執行，直到逾時期間過期且沒有任何新的訊息抵達，或是在訊息抵達其之前<xref:System.Messaging.Message.CorrelationId%2A>符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2449">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2450"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來將繫結傳送至相關聯的回應、 報表或通知訊息至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2450">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="1106c-2451">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2451">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2452"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定其唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-2452">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="1106c-2453">若要讀取具有指定的相互關聯識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2453">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2454"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2454">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2455">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2455">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2456">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2456">Workgroup mode</span></span>|<span data-ttu-id="1106c-2457">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2457">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2458">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2458">Local computer</span></span>|<span data-ttu-id="1106c-2459">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2459">Yes</span></span>|  
|<span data-ttu-id="1106c-2460">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2460">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2461">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2461">Yes</span></span>|  
|<span data-ttu-id="1106c-2462">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2462">Remote computer</span></span>|<span data-ttu-id="1106c-2463">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2463">No</span></span>|  
|<span data-ttu-id="1106c-2464">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2464">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2465">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2465">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2466">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2466">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#10](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#10)]
 [!code-csharp[MessageQueue2#10](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2467">
            <paramref name="correlationId" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2467">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2468">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2468">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2469">佇列中沒有具有指定 <paramref name="correlationId" /> 的訊息，且該訊息未在逾時到期前到達。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2469">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2470">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2470">-or-</span>
          </span>
          <span data-ttu-id="1106c-2471">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2471">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="1106c-2472">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2472">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1106c-2473">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2473">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-2474">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2474">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2475">接收符合指定關聯識別項的訊息 (從交易佇列中)，並且等待佇列中出現具有指定關聯識別項的訊息，或者逾時到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2475">Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2476">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2476">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2477">這個方法會在所參照的交易式佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2477">This method looks in the transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2478">這個方法會立即傳回如果所指定的訊息相互關聯識別項`correlationId`參數是在佇列中，使用所定義的內部異動內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2478">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="1106c-2479">否則，方法會等候指定的一段時間的新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2479">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="1106c-2480">如果逾時到期前未到達新訊息，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2480">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1106c-2481">`timeout`參數未指定此方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="1106c-2481">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="1106c-2482">相反地，它會指定新訊息到達佇列中等候的時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-2482">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2483">每次新的訊息抵達時，這個方法會檢查<xref:System.Messaging.Message.CorrelationId%2A>新訊息是否符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2483">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2484">否則，這個方法的逾時期間的開始，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2484">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="1106c-2485">因此，如果新的訊息持續逾時期間內抵達時，可能會此方法才能繼續執行，直到逾時期間過期且沒有任何新的訊息抵達，或是在訊息抵達其之前<xref:System.Messaging.Message.CorrelationId%2A>符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2485">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2486">因為在交易式佇列上呼叫此方法時，收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2486">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2487">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2487">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2488"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來將繫結傳送至相關聯的回應、 報表或通知訊息至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2488">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="1106c-2489">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2489">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2490"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定其唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-2490">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="1106c-2491">若要讀取具有指定的相互關聯識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2491">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2492"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2492">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2493">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2493">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="1106c-2494">因為<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不會移除任何訊息佇列中，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2494">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2495">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2495">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2496">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2496">Workgroup mode</span></span>|<span data-ttu-id="1106c-2497">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2497">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2498">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2498">Local computer</span></span>|<span data-ttu-id="1106c-2499">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2499">Yes</span></span>|  
|<span data-ttu-id="1106c-2500">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2500">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2501">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2501">Yes</span></span>|  
|<span data-ttu-id="1106c-2502">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2502">Remote computer</span></span>|<span data-ttu-id="1106c-2503">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2503">No</span></span>|  
|<span data-ttu-id="1106c-2504">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2504">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2505">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2505">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2506">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2506">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#13)]
 [!code-csharp[MessageQueue2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2507">
            <paramref name="correlationId" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2507">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1106c-2508">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2508">-or-</span>
          </span>
          <span data-ttu-id="1106c-2509">
            <paramref name="transaction" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2509">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2510">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2510">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2511">佇列中沒有具有指定 <paramref name="correlationId" /> 的訊息，且該訊息未在逾時到期前到達。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2511">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2512">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2512">-or-</span>
          </span>
          <span data-ttu-id="1106c-2513">該佇列是非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2513">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="1106c-2514">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2514">-or-</span>
          </span>
          <span data-ttu-id="1106c-2515">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2515">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="1106c-2516">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2516">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1106c-2517">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2517">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-2518">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2518">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2519">接收符合指定關聯識別項的訊息，並且等待佇列中出現具有指定關聯識別項的訊息，或者逾時到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2519">Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2520">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2520">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2521">這個方法會在所參照的佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2521">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2522">這個方法會立即傳回如果所指定的訊息相互關聯識別項`correlationId`參數是在佇列中，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2522">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="1106c-2523">否則，方法會等候指定的一段時間的新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2523">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="1106c-2524">如果逾時到期前未到達新訊息，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2524">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1106c-2525">`timeout`參數未指定此方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="1106c-2525">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="1106c-2526">相反地，它會指定新訊息到達佇列中等候的時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-2526">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2527">每次新的訊息抵達時，這個方法會檢查<xref:System.Messaging.Message.CorrelationId%2A>新訊息是否符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2527">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2528">否則，這個方法的逾時期間的開始，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2528">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="1106c-2529">因此，如果新的訊息持續逾時期間內抵達時，可能會此方法才能繼續執行，直到逾時期間過期且沒有任何新的訊息抵達，或是在訊息抵達其之前<xref:System.Messaging.Message.CorrelationId%2A>符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2529">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span> <span data-ttu-id="1106c-2530">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2530">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="1106c-2531">指定`Single`如果您想要接收的訊息當做單一的內部異動。</span><span class="sxs-lookup"><span data-stu-id="1106c-2531">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-2532">您可以指定`None`如果您想要從交易內容外部異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2532">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="1106c-2533">如果這個方法呼叫從異動式佇列接收訊息時，收到的訊息將傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2533">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2534">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2534">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2535"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來將繫結傳送至相關聯的回應、 報表或通知訊息至佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2535">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="1106c-2536">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2536">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2537"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定其唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="1106c-2537">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="1106c-2538">若要讀取具有指定的相互關聯識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2538">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2539"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2539">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2540">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2540">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="1106c-2541">因為<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不會移除任何訊息佇列中，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2541">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2542">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2542">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2543">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2543">Workgroup mode</span></span>|<span data-ttu-id="1106c-2544">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2544">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2545">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2545">Local computer</span></span>|<span data-ttu-id="1106c-2546">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2546">Yes</span></span>|  
|<span data-ttu-id="1106c-2547">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2547">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2548">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2548">Yes</span></span>|  
|<span data-ttu-id="1106c-2549">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2549">Remote computer</span></span>|<span data-ttu-id="1106c-2550">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2550">No</span></span>|  
|<span data-ttu-id="1106c-2551">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2551">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2552">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2552">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2553">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2553">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#12](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#12)]
 [!code-csharp[MessageQueue2#12](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2554">
            <paramref name="correlationId" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2554">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2555">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2555">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2556">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2556">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2557">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2557">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2558">佇列中沒有具有指定 <paramref name="correlationId" /> 的訊息，且該訊息未在逾時到期前到達。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2558">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2559">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2559">-or-</span>
          </span>
          <span data-ttu-id="1106c-2560">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2560">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveById">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2561">接收符合指定識別項的訊息，並將它從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2561">Receives the message that matches the given identifier, removing it from the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1106c-2562">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2562">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2563">從非交易佇列中接收符合指定識別項的訊息，如果佇列中目前不存在具有指定識別項的訊息，則立即引發例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2563">Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2564">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2564">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2565">讀取具有已知識別碼的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2565">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="1106c-2566">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2566">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2567"><xref:System.Messaging.Message.Id%2A>訊息屬性是唯一的訊息佇列企業中，因此會有最多一個訊息符合的佇列中給定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2567">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2568">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2568">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2569"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息後建立的應用程式產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2569">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="1106c-2570">若要讀取具有指定識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2570">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2571"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2571">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2572">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2572">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2573">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2573">Workgroup mode</span></span>|<span data-ttu-id="1106c-2574">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2574">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2575">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2575">Local computer</span></span>|<span data-ttu-id="1106c-2576">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2576">Yes</span></span>|  
|<span data-ttu-id="1106c-2577">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2577">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2578">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2578">Yes</span></span>|  
|<span data-ttu-id="1106c-2579">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2579">Remote computer</span></span>|<span data-ttu-id="1106c-2580">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2580">No</span></span>|  
|<span data-ttu-id="1106c-2581">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2581">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2582">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2582">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2583">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2583">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#16](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#16)]
 [!code-csharp[MessageQueue2#16](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2584">
            <paramref name="id" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2584">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2585">找不到具有指定 <paramref name="id" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2585">The message with the specified <paramref name="id" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2586">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2586">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1106c-2587">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2587">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-2588">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2588">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2589">接收符合指定識別項的訊息 (從交易佇列中)，如果佇列中目前不存在具有指定識別項的訊息，則立即引發例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2589">Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2590">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2590">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2591">使用這個方法來讀取具有已知識別碼的訊息，並將它移除從佇列中，使用所定義的內部異動內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2591">Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="1106c-2592">這個方法擲回例外狀況的立即訊息是否不在佇列中</span><span class="sxs-lookup"><span data-stu-id="1106c-2592">This method throws an exception immediately if the message is not in the queue</span></span>  
  
 <span data-ttu-id="1106c-2593"><xref:System.Messaging.Message.Id%2A>訊息屬性是唯一的訊息佇列企業中，因此會有最多一個訊息符合的佇列中給定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2593">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2594">因為在交易式佇列上呼叫此方法時，收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2594">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2595">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2595">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2596">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2596">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2597"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息後建立的應用程式產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2597">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="1106c-2598">若要讀取具有指定識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2598">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2599"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2599">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2600">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2600">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="1106c-2601">因為<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不會移除任何訊息佇列中，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2601">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2602">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2602">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2603">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2603">Workgroup mode</span></span>|<span data-ttu-id="1106c-2604">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2604">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2605">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2605">Local computer</span></span>|<span data-ttu-id="1106c-2606">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2606">Yes</span></span>|  
|<span data-ttu-id="1106c-2607">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2607">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2608">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2608">Yes</span></span>|  
|<span data-ttu-id="1106c-2609">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2609">Remote computer</span></span>|<span data-ttu-id="1106c-2610">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2610">No</span></span>|  
|<span data-ttu-id="1106c-2611">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2611">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2612">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2612">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2613">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2613">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#17](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#17)]
 [!code-csharp[MessageQueue2#17](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2614">
            <paramref name="id" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2614">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1106c-2615">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2615">-or-</span>
          </span>
          <span data-ttu-id="1106c-2616">
            <paramref name="transaction" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2616">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2617">找不到具有指定 <paramref name="id" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2617">The message with the specified <paramref name="id" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2618">該佇列是非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2618">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="1106c-2619">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2619">-or-</span>
          </span>
          <span data-ttu-id="1106c-2620">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2620">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1106c-2621">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2621">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-2622">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2622">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2623">接收符合指定識別項的訊息，如果佇列中目前不存在具有指定識別項的訊息，則立即引發例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2623">Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2624">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2624">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2625">讀取具有已知識別碼的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2625">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="1106c-2626">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2626">This method throws an exception immediately if the message is not in the queue.</span></span> <span data-ttu-id="1106c-2627">否則，訊息是從佇列中移除，並傳回到應用程式使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2627">Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2628">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2628">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="1106c-2629">指定`Single`如果您想要接收的訊息當做單一的內部異動。</span><span class="sxs-lookup"><span data-stu-id="1106c-2629">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-2630">您可以指定`None`如果您想要從交易內容外部異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2630">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="1106c-2631"><xref:System.Messaging.Message.Id%2A>訊息屬性是唯一的訊息佇列企業中，因此會有最多一個訊息符合的佇列中給定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2631">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="1106c-2632">如果具有指定識別碼的訊息是以外與此相關聯的佇列中<xref:System.Messaging.MessageQueue>執行個體，將無法找到訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2632">If the message with the specified identifier is in a queue other than the one associated with this <xref:System.Messaging.MessageQueue> instance, the message will not be found.</span></span>  
  
 <span data-ttu-id="1106c-2633">如果這個方法呼叫從異動式佇列接收訊息時，收到的訊息將傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2633">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2634">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2634">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2635">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2635">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2636"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息後建立的應用程式產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2636">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="1106c-2637">若要讀取具有指定識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2637">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2638"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2638">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2639">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2639">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="1106c-2640">因為<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不會移除任何訊息佇列中，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2640">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2641">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2641">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2642">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2642">Workgroup mode</span></span>|<span data-ttu-id="1106c-2643">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2643">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2644">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2644">Local computer</span></span>|<span data-ttu-id="1106c-2645">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2645">Yes</span></span>|  
|<span data-ttu-id="1106c-2646">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2646">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2647">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2647">Yes</span></span>|  
|<span data-ttu-id="1106c-2648">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2648">Remote computer</span></span>|<span data-ttu-id="1106c-2649">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2649">No</span></span>|  
|<span data-ttu-id="1106c-2650">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2650">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2651">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2651">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2652">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2652">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#15)]
 [!code-csharp[MessageQueue2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2653">
            <paramref name="id" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2653">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2654">找不到具有指定 <paramref name="id" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2654">The message with the specified <paramref name="id" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2655">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2655">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2656">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2656">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1106c-2657">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2657">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1106c-2658">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2658">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2659">接收符合指定識別項的訊息 (從非交易佇列中)，並且等待佇列中出現具有指定識別項的訊息，或者逾時到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2659">Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2660">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2660">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2661">讀取具有已知識別碼的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2661">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="1106c-2662">這個方法會立即傳回如果所指定的訊息識別項`id`參數是在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2662">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue.</span></span> <span data-ttu-id="1106c-2663">否則，方法會等候指定的一段時間的新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2663">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="1106c-2664">如果逾時到期前未到達新訊息，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2664">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1106c-2665">`timeout`參數未指定此方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="1106c-2665">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="1106c-2666">相反地，它會指定新訊息到達佇列中等候的時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-2666">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2667">每次新的訊息抵達時，這個方法會檢查<xref:System.Messaging.Message.Id%2A>新訊息是否符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2667">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="1106c-2668">否則，這個方法的逾時期間的開始，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2668">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="1106c-2669">因此，如果新的訊息持續逾時期間內抵達時，可能會此方法才能繼續執行，直到逾時期間過期且沒有任何新的訊息抵達，或是在訊息抵達其之前<xref:System.Messaging.Message.Id%2A>符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2669">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2670"><xref:System.Messaging.Message.Id%2A>訊息屬性是唯一的訊息佇列企業中，因此會有最多一個訊息符合的佇列中給定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2670">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2671">使用此多載的<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>時，只要新訊息到達佇列所指定的逾時期間內會繼續封鎖目前的執行緒可接受`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2671">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="1106c-2672">執行緒會為封鎖至少在特定期間的時間或無限期如果您指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>如`timeout`參數，或如果新訊息到達佇列所指定的逾時期間內繼續`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2672">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2673">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2673">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2674"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息後建立的應用程式產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2674">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="1106c-2675">若要讀取具有指定識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2675">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2676"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2676">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2677">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2677">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2678">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2678">Workgroup mode</span></span>|<span data-ttu-id="1106c-2679">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2679">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2680">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2680">Local computer</span></span>|<span data-ttu-id="1106c-2681">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2681">Yes</span></span>|  
|<span data-ttu-id="1106c-2682">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2682">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2683">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2683">Yes</span></span>|  
|<span data-ttu-id="1106c-2684">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2684">Remote computer</span></span>|<span data-ttu-id="1106c-2685">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2685">No</span></span>|  
|<span data-ttu-id="1106c-2686">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2686">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2687">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2687">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2688">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2688">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#20](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#20)]
 [!code-csharp[MessageQueue2#20](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2689">
            <paramref name="id" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2689">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2690">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2690">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2691">具有指定 <paramref name="id" /> 的訊息未在逾時到期前到達佇列中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2691">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2692">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2692">-or-</span>
          </span>
          <span data-ttu-id="1106c-2693">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2693">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1106c-2694">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2694">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1106c-2695">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2695">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-2696">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2696">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2697">接收符合指定識別項的訊息 (從交易佇列中)，並且等待佇列中出現具有指定識別項的訊息，或者逾時到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2697">Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2698">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2698">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2699">使用這個方法來讀取具有已知識別碼的訊息，並將它移除從佇列中，使用所定義的內部異動內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2699">Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="1106c-2700">這個方法會立即傳回如果所指定的訊息識別項`id`參數是在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2700">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue.</span></span> <span data-ttu-id="1106c-2701">否則，方法會等候指定的一段時間的新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2701">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="1106c-2702">如果逾時到期前未到達新訊息，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2702">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1106c-2703">`timeout`參數未指定此方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="1106c-2703">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="1106c-2704">相反地，它會指定新訊息到達佇列中等候的時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-2704">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2705">每次新的訊息抵達時，這個方法會檢查<xref:System.Messaging.Message.Id%2A>新訊息是否符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2705">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="1106c-2706">否則，這個方法的逾時期間的開始，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2706">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="1106c-2707">因此，如果新的訊息持續逾時期間內抵達時，可能會此方法才能繼續執行，直到逾時期間過期且沒有任何新的訊息抵達，或是在訊息抵達其之前<xref:System.Messaging.Message.Id%2A>符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2707">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2708"><xref:System.Messaging.Message.Id%2A>訊息屬性是唯一的訊息佇列企業中，因此會有最多一個訊息符合的佇列中給定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2708">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2709">使用此多載的<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>時，只要新訊息到達佇列所指定的逾時期間內會繼續封鎖目前的執行緒可接受`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2709">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="1106c-2710">執行緒會為封鎖至少在特定期間的時間或無限期如果您指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>如`timeout`參數，或如果新訊息到達佇列所指定的逾時期間內繼續`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2710">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the timeout period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2711">因為在交易式佇列上呼叫此方法時，收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2711">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2712">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2712">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2713">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2713">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2714"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息後建立的應用程式產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2714">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="1106c-2715">若要讀取具有指定識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2715">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2716"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2716">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2717">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2717">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="1106c-2718">因為<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不會移除任何訊息佇列中，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2718">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2719">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2719">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2720">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2720">Workgroup mode</span></span>|<span data-ttu-id="1106c-2721">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2721">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2722">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2722">Local computer</span></span>|<span data-ttu-id="1106c-2723">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2723">Yes</span></span>|  
|<span data-ttu-id="1106c-2724">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2724">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2725">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2725">Yes</span></span>|  
|<span data-ttu-id="1106c-2726">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2726">Remote computer</span></span>|<span data-ttu-id="1106c-2727">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2727">No</span></span>|  
|<span data-ttu-id="1106c-2728">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2728">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2729">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2729">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2730">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2730">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#18)]
 [!code-csharp[MessageQueue2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2731">
            <paramref name="id" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2731">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1106c-2732">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2732">-or-</span>
          </span>
          <span data-ttu-id="1106c-2733">
            <paramref name="transaction" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2733">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2734">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2734">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2735">具有指定 <paramref name="id" /> 的訊息未在逾時到期前到達佇列中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2735">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2736">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2736">-or-</span>
          </span>
          <span data-ttu-id="1106c-2737">該佇列是非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2737">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="1106c-2738">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2738">-or-</span>
          </span>
          <span data-ttu-id="1106c-2739">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2739">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="1106c-2740">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2740">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1106c-2741">
            <see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2741">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-2742">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2742">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2743">接收符合指定識別項的訊息，並且等待佇列中出現具有指定識別項的訊息，或者逾時到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2743">Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2744">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2744">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2745">讀取具有已知識別碼的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2745">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="1106c-2746">這個方法會立即傳回如果所指定的訊息識別項`id`參數是在佇列中，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2746">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="1106c-2747">否則，方法會等候指定的一段時間的新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2747">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="1106c-2748">如果逾時到期前未到達新訊息，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2748">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1106c-2749">`timeout`參數未指定此方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="1106c-2749">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="1106c-2750">相反地，它會指定新訊息到達佇列中等候的時間。</span><span class="sxs-lookup"><span data-stu-id="1106c-2750">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="1106c-2751">每次新的訊息抵達時，這個方法會檢查<xref:System.Messaging.Message.Id%2A>新訊息是否符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2751">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="1106c-2752">否則，這個方法的逾時期間的開始，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="1106c-2752">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="1106c-2753">因此，如果新的訊息持續逾時期間內抵達時，可能會此方法才能繼續執行，直到逾時期間過期且沒有任何新的訊息抵達，或是在訊息抵達其之前<xref:System.Messaging.Message.Id%2A>符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2753">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2754">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2754">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="1106c-2755">指定`Single`如果您想要接收的訊息當做單一的內部異動。</span><span class="sxs-lookup"><span data-stu-id="1106c-2755">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-2756">您可以指定`None`如果您想要從交易內容外部異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2756">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="1106c-2757"><xref:System.Messaging.Message.Id%2A>訊息屬性是唯一的訊息佇列企業中，因此會有最多一個訊息符合的佇列中給定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2757">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="1106c-2758">如果具有指定識別碼的訊息是以外與此相關聯的佇列中<xref:System.Messaging.MessageQueue>執行個體，將無法找到訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2758">If the message with the specified identifier is in a queue other than the one associated with this <xref:System.Messaging.MessageQueue> instance, the message will not be found.</span></span>  
  
 <span data-ttu-id="1106c-2759">使用此多載的<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>時，只要新訊息到達佇列所指定的逾時期間內會繼續封鎖目前的執行緒可接受`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2759">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="1106c-2760">執行緒會為封鎖至少在特定期間的時間或無限期如果您指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>如`timeout`參數，或如果新訊息到達佇列所指定的逾時期間內繼續`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2760">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2761">如果這個方法呼叫從異動式佇列接收訊息時，收到的訊息將傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2761">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2762">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2762">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2763">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2763">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="1106c-2764"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息後建立的應用程式產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2764">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="1106c-2765">若要讀取具有指定識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2765">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="1106c-2766"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2766">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="1106c-2767">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2767">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="1106c-2768">因為<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不會移除任何訊息佇列中，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2768">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2769">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2769">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2770">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2770">Workgroup mode</span></span>|<span data-ttu-id="1106c-2771">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2771">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2772">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2772">Local computer</span></span>|<span data-ttu-id="1106c-2773">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2773">Yes</span></span>|  
|<span data-ttu-id="1106c-2774">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2774">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2775">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2775">Yes</span></span>|  
|<span data-ttu-id="1106c-2776">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2776">Remote computer</span></span>|<span data-ttu-id="1106c-2777">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2777">No</span></span>|  
|<span data-ttu-id="1106c-2778">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2778">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2779">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2779">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2780">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2780">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#19](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#19)]
 [!code-csharp[MessageQueue2#19](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2781">
            <paramref name="id" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2781">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-2782">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2782">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2783">具有指定 <paramref name="id" /> 的訊息未在逾時到期前到達佇列中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2783">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="1106c-2784">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2784">-or-</span>
          </span>
          <span data-ttu-id="1106c-2785">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2785">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2786">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2786">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveByLookupId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2787">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2787">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="1106c-2788">接收佇列中的特定訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2788">Receives a specific message from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2789">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2789">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(long lookupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lookupId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="lookupId">
          <span data-ttu-id="1106c-2790">要接收訊息的 <see cref="P:System.Messaging.Message.LookupId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2790">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2791">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2791">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="1106c-2792">接收符合非交易佇列之指定查詢識別項的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2792">Receives the message that matches the given lookup identifier from a non-transactional queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2793">傳入符合 <paramref name="lookupId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.LookupId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2793">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2794">使用此方法來讀取訊息與已知的查閱識別項，並從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="1106c-2794">Use this method to read a message with a known lookup identifier and remove it from the queue.</span></span> <span data-ttu-id="1106c-2795">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2795">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2796"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，應該會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2796">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2797">若要讀取具有指定的查詢識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2797">To read a message with a specified lookup identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="1106c-2798">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2798">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2799">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2799">Workgroup mode</span></span>|<span data-ttu-id="1106c-2800">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2800">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2801">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2801">Local computer</span></span>|<span data-ttu-id="1106c-2802">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2802">Yes</span></span>|  
|<span data-ttu-id="1106c-2803">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2803">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2804">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2804">Yes</span></span>|  
|<span data-ttu-id="1106c-2805">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2805">Remote computer</span></span>|<span data-ttu-id="1106c-2806">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2806">No</span></span>|  
|<span data-ttu-id="1106c-2807">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2807">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2808">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2808">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1106c-2809">未安裝 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2809">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2810">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2810">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2811">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2811">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (action As MessageLookupAction, lookupId As Long, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(System::Messaging::MessageLookupAction action, long lookupId, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" />
        <Parameter Name="lookupId" Type="System.Int64" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="1106c-2812">其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定如何在佇列中讀取訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2812">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span>
          </span>
          <span data-ttu-id="1106c-2813">請指定下列其中一個選項：</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2813">Specify one of the following:</span>
          </span>
          <span data-ttu-id="1106c-2814">
            <see langword="MessageLookupAction.Current" />：接收 <c>lookupId</c> 指定的訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2814">
              <see langword="MessageLookupAction.Current" />: Receives the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2815">
            <see langword="MessageLookupAction.Next" />：接收 <c>lookupId</c> 指定的訊息後面的訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2815">
              <see langword="MessageLookupAction.Next" />: Receives the message following the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2816">
            <see langword="MessageLookupAction.Previous" />：接收 <c>lookupId</c> 指定的訊息前面的訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2816">
              <see langword="MessageLookupAction.Previous" />: Receives the message preceding the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2817">
            <see langword="MessageLookupAction.First" />：接收佇列中的第一則訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2817">
              <see langword="MessageLookupAction.First" />: Receives the first message in the queue and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2818">
            <c>lookupId</c> 參數必須設定為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2818">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
          <span data-ttu-id="1106c-2819">
            <see langword="MessageLookupAction.Last" />：接收佇列中的最後一則訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2819">
              <see langword="MessageLookupAction.Last" />: Receives the last message in the queue and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2820">
            <c>lookupId</c> 參數必須設定為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2820">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
        </param>
        <param name="lookupId">
          <span data-ttu-id="1106c-2821">要接收之訊息的 <see cref="P:System.Messaging.Message.LookupId" />，或者為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2821">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.</span>
          </span>
          <span data-ttu-id="1106c-2822">存取佇列中第一則或最後一則訊息時會使用 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2822">0 is used when accessing the first or last message in the queue.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-2823">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2823">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2824">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2824">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="1106c-2825">接收交易佇列中的特定訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2825">Receives a specific message from a transactional queue.</span>
          </span>
          <span data-ttu-id="1106c-2826">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2826">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2827">傳入之 <paramref name="lookupId" /> 和 <paramref name="action" /> 參數所指定的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2827">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="lookupId" /> and <paramref name="action" /> parameters passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2828">使用這個方法來讀取具有已知的查閱識別項，並將它移除從佇列中，使用所定義的交易內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2828">Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="1106c-2829">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2829">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2830"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，應該會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2830">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2831">因為在交易式佇列上呼叫此方法時，收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2831">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2832">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2832">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2833">若要讀取具有指定識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2833">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span> <span data-ttu-id="1106c-2834">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2834">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>.</span></span> <span data-ttu-id="1106c-2835">因為<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>不會移除任何佇列的訊息，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2835">Because <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2836">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2836">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2837">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2837">Workgroup mode</span></span>|<span data-ttu-id="1106c-2838">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2838">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2839">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2839">Local computer</span></span>|<span data-ttu-id="1106c-2840">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2840">Yes</span></span>|  
|<span data-ttu-id="1106c-2841">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2841">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2842">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2842">Yes</span></span>|  
|<span data-ttu-id="1106c-2843">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2843">Remote computer</span></span>|<span data-ttu-id="1106c-2844">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2844">No</span></span>|  
|<span data-ttu-id="1106c-2845">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2845">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2846">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2846">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1106c-2847">未安裝 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2847">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2848">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2848">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2849">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2849">An error occurred when accessing a Message Queuing method.</span>
          </span>
          <span data-ttu-id="1106c-2850">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2850">-or-</span>
          </span>
          <span data-ttu-id="1106c-2851">該佇列是非交易式佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2851">The queue is non-transactional.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2852">
            <paramref name="action" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2852">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (action As MessageLookupAction, lookupId As Long, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(System::Messaging::MessageLookupAction action, long lookupId, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" />
        <Parameter Name="lookupId" Type="System.Int64" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="1106c-2853">其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定如何在佇列中讀取訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2853">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span>
          </span>
          <span data-ttu-id="1106c-2854">請指定下列其中一個選項：</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2854">Specify one of the following:</span>
          </span>
          <span data-ttu-id="1106c-2855">
            <see langword="MessageLookupAction.Current" />：接收 <c>lookupId</c> 指定的訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2855">
              <see langword="MessageLookupAction.Current" />: Receives the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2856">
            <see langword="MessageLookupAction.Next" />：接收 <c>lookupId</c> 指定的訊息後面的訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2856">
              <see langword="MessageLookupAction.Next" />: Receives the message following the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2857">
            <see langword="MessageLookupAction.Previous" />：接收 <c>lookupId</c> 指定的訊息前面的訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2857">
              <see langword="MessageLookupAction.Previous" />: Receives the message preceding the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2858">
            <see langword="MessageLookupAction.First" />：接收佇列中的第一則訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2858">
              <see langword="MessageLookupAction.First" />: Receives the first message in the queue and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2859">
            <c>lookupId</c> 參數必須設定為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2859">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
          <span data-ttu-id="1106c-2860">
            <see langword="MessageLookupAction.Last" />：接收佇列中的最後一則訊息，並且從佇列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2860">
              <see langword="MessageLookupAction.Last" />: Receives the last message in the queue and removes it from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2861">
            <c>lookupId</c> 參數必須設定為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2861">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
        </param>
        <param name="lookupId">
          <span data-ttu-id="1106c-2862">要接收之訊息的 <see cref="P:System.Messaging.Message.LookupId" />，或者為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2862">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.</span>
          </span>
          <span data-ttu-id="1106c-2863">存取佇列中第一則或最後一則訊息時會使用 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2863">0 is used when accessing the first or last message in the queue.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-2864">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2864">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2865">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2865">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="1106c-2866">使用指定的交易內容接收佇列中的特定訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2866">Receives a specific message from the queue, using the specified transaction context.</span>
          </span>
          <span data-ttu-id="1106c-2867">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2867">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1106c-2868">傳入之 <paramref name="action" /> 和 <paramref name="lookupId" /> 參數所指定的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2868">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2869">使用這個方法來讀取具有已知的查閱識別項，並將它移除從佇列中，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2869">Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="1106c-2870">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="1106c-2870">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2871"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，應該會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2871">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="1106c-2872">若要讀取具有指定識別碼的訊息而不需移除佇列，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2872">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span> <span data-ttu-id="1106c-2873">沒有與呼叫所傳回的訊息相關聯交易內容<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2873">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>.</span></span> <span data-ttu-id="1106c-2874">因為<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>不會移除任何佇列的訊息，就是如果中止的交易已回復並無關聯。</span><span class="sxs-lookup"><span data-stu-id="1106c-2874">Because <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="1106c-2875">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-2875">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="1106c-2876">指定`Single`如果您想要接收的訊息當做單一的內部異動。</span><span class="sxs-lookup"><span data-stu-id="1106c-2876">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-2877">您可以指定`None`如果您想要從交易內容外部異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2877">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="1106c-2878">如果這個方法呼叫從異動式佇列接收訊息時，收到的訊息將傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2878">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="1106c-2879">訊息不是永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="1106c-2879">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="1106c-2880">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2880">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2881">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2881">Workgroup mode</span></span>|<span data-ttu-id="1106c-2882">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2882">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2883">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2883">Local computer</span></span>|<span data-ttu-id="1106c-2884">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2884">Yes</span></span>|  
|<span data-ttu-id="1106c-2885">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2885">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2886">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2886">Yes</span></span>|  
|<span data-ttu-id="1106c-2887">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2887">Remote computer</span></span>|<span data-ttu-id="1106c-2888">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2888">No</span></span>|  
|<span data-ttu-id="1106c-2889">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2889">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2890">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2890">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1106c-2891">未安裝 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2891">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1106c-2892">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2892">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2893">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2893">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-2894">
            <paramref name="action" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2894">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span>
          </span>
          <span data-ttu-id="1106c-2895">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2895">-or-</span>
          </span>
          <span data-ttu-id="1106c-2896">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2896">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveCompleted">
      <MemberSignature Language="C#" Value="public event System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReceiveCompleted As ReceiveCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Messaging::ReceiveCompletedEventHandler ^ ReceiveCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_ReceiveCompleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.ReceiveCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2897">發生於從佇列移除訊息時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2897">Occurs when a message has been removed from the queue.</span>
          </span>
          <span data-ttu-id="1106c-2898">這個事件是由非同步作業 <see cref="M:System.Messaging.MessageQueue.BeginReceive" /> 所引發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2898">This event is raised by the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginReceive" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2899"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 在非同步處理用來引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件佇列中出現一則訊息時。</span><span class="sxs-lookup"><span data-stu-id="1106c-2899"><xref:System.Messaging.MessageQueue.BeginReceive%2A> is used in asynchronous processing to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message is available in the queue.</span></span>  
  
 <span data-ttu-id="1106c-2900"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 用來完成作業的呼叫所初始化<xref:System.Messaging.MessageQueue.BeginReceive%2A>和窺視訊息時<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-2900"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is used to complete the operation initiated by a call to <xref:System.Messaging.MessageQueue.BeginReceive%2A> and peek the message when the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised.</span></span>  
  
 <span data-ttu-id="1106c-2901">建立 <xref:System.Messaging.ReceiveCompletedEventHandler> 委派時，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2901">When you create a <xref:System.Messaging.ReceiveCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="1106c-2902">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="1106c-2902">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="1106c-2903">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2903">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="1106c-2904">如需事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1106c-2904">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2905">下列程式碼範例會建立名為事件處理常式`MyReceiveCompleted`，將它附加至<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件處理常式委派，並呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>啟始的非同步接收作業是位於路徑的佇列上 「。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="1106c-2905">The following code example creates an event handler named `MyReceiveCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginReceive%2A> to initiate an asynchronous receive operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="1106c-2906">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件，範例接收訊息，並將其本文寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="1106c-2906">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the example receives the message and writes its body to the screen.</span></span> <span data-ttu-id="1106c-2907">此範例會接著呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A> 以起始新的非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="1106c-2907">The example then calls <xref:System.Messaging.MessageQueue.BeginReceive%2A> again to initiate a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2908">重新整理由 <see cref="T:System.Messaging.MessageQueue" /> 所表示的屬性，以反映資源的目前狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2908">Refreshes the properties presented by the <see cref="T:System.Messaging.MessageQueue" /> to reflect the current state of the resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2909"><xref:System.Messaging.MessageQueue.Refresh%2A> 同步處理的屬性<xref:System.Messaging.MessageQueue>與其相關聯的訊息佇列伺服器資源。</span><span class="sxs-lookup"><span data-stu-id="1106c-2909"><xref:System.Messaging.MessageQueue.Refresh%2A> synchronizes the properties of a <xref:System.Messaging.MessageQueue> with its associated Message Queuing server resource.</span></span> <span data-ttu-id="1106c-2910">如果任何內容，例如<xref:System.Messaging.MessageQueue.Label%2A>或<xref:System.Messaging.MessageQueue.Category%2A>，已經在伺服器上變更以來<xref:System.Messaging.MessageQueue>已建立，<xref:System.Messaging.MessageQueue.Refresh%2A>更新<xref:System.Messaging.MessageQueue>以新的資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-2910">If any property, such as <xref:System.Messaging.MessageQueue.Label%2A> or <xref:System.Messaging.MessageQueue.Category%2A>, has changed on the server since the time the <xref:System.Messaging.MessageQueue> was created, <xref:System.Messaging.MessageQueue.Refresh%2A> updates the <xref:System.Messaging.MessageQueue> with the new information.</span></span>  
  
 <span data-ttu-id="1106c-2911">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2911">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2912">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2912">Workgroup mode</span></span>|<span data-ttu-id="1106c-2913">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2913">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2914">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2914">Local computer</span></span>|<span data-ttu-id="1106c-2915">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2915">Yes</span></span>|  
|<span data-ttu-id="1106c-2916">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2916">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2917">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2917">Yes</span></span>|  
|<span data-ttu-id="1106c-2918">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2918">Remote computer</span></span>|<span data-ttu-id="1106c-2919">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2919">No</span></span>|  
|<span data-ttu-id="1106c-2920">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2920">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2921">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2921">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2922">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Refresh%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2922">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Refresh%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#28](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#28)]
 [!code-csharp[MessageQueue2#28](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      </Docs>
    </Member>
    <Member MemberName="ResetPermissions">
      <MemberSignature Language="C#" Value="public void ResetPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ResetPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPermissions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPermissions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2923">將使用權限清單重設為作業系統的預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2923">Resets the permission list to the operating system's default values.</span>
          </span>
          <span data-ttu-id="1106c-2924">移除任何附加至預設清單的佇列使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2924">Removes any queue permissions you have appended to the default list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2925">當您呼叫<xref:System.Messaging.MessageQueue.ResetPermissions%2A>，權限清單返回其預設值。</span><span class="sxs-lookup"><span data-stu-id="1106c-2925">When you call <xref:System.Messaging.MessageQueue.ResetPermissions%2A>, you return the permission list to its default values.</span></span> <span data-ttu-id="1106c-2926">一般而言，這所有使用權限，授與佇列建立者，並提供每個使用者群組的下列權限：</span><span class="sxs-lookup"><span data-stu-id="1106c-2926">Generally, this grants the queue creator all permissions, and gives the group Everyone the following rights:</span></span>  
  
-   <span data-ttu-id="1106c-2927">取得佇列的屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-2927">Get the properties of the queue.</span></span>  
  
-   <span data-ttu-id="1106c-2928">取得佇列的權限。</span><span class="sxs-lookup"><span data-stu-id="1106c-2928">Get queue permissions.</span></span>  
  
-   <span data-ttu-id="1106c-2929">寫入至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-2929">Write to the queue.</span></span>  
  
 <span data-ttu-id="1106c-2930">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2930">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2931">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2931">Workgroup mode</span></span>|<span data-ttu-id="1106c-2932">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2932">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2933">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2933">Local computer</span></span>|<span data-ttu-id="1106c-2934">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2934">Yes</span></span>|  
|<span data-ttu-id="1106c-2935">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2935">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2936">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2936">Yes</span></span>|  
|<span data-ttu-id="1106c-2937">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2937">Remote computer</span></span>|<span data-ttu-id="1106c-2938">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2938">No</span></span>|  
|<span data-ttu-id="1106c-2939">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2939">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2940">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2940">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2941">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ResetPermissions%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-2941">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ResetPermissions%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#27](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#27)]
 [!code-csharp[MessageQueue2#27](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2942">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2942">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-2943">將物件傳送至佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2943">Sends an object to a queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1106c-2944">要傳送至佇列的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2944">The object to send to the queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2945">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的非交易佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2945">Sends an object to non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2946">傳送訊息，其中包含使用此多載`obj`參數所參照的佇列<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2946">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="1106c-2947">傳送至佇列的物件可以是<xref:System.Messaging.Message>或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-2947">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="1106c-2948">如果您不是傳送任何物件<xref:System.Messaging.Message>，物件會序列化並插入至訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="1106c-2948">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="1106c-2949">如果您使用這個多載，將訊息傳送至異動式佇列，訊息會傳送到寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-2949">If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</span></span> <span data-ttu-id="1106c-2950">如果您想要包含其他訊息是交易的一部分的訊息時，使用多載採用<xref:System.Messaging.MessageQueueTransaction>或<xref:System.Messaging.MessageQueueTransactionType>做為參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2950">If you want the message to be part of a transaction that contains other messages, use an overload that takes a <xref:System.Messaging.MessageQueueTransaction> or <xref:System.Messaging.MessageQueueTransactionType> as a parameter.</span></span>  
  
 <span data-ttu-id="1106c-2951">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式子的預設值為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2951">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="1106c-2952"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2952">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="1106c-2953">如果您指定，例如，標籤或優先順序使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-2953">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="1106c-2954">當傳送<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-2954">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1106c-2955">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2955">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2956">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2956">Workgroup mode</span></span>|<span data-ttu-id="1106c-2957">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2957">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2958">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2958">Local computer</span></span>|<span data-ttu-id="1106c-2959">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2959">Yes</span></span>|  
|<span data-ttu-id="1106c-2960">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2960">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2961">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2961">Yes</span></span>|  
|<span data-ttu-id="1106c-2962">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2962">Remote computer</span></span>|<span data-ttu-id="1106c-2963">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2963">No</span></span>|  
|<span data-ttu-id="1106c-2964">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2964">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2965">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2965">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2966">下列程式碼範例會連接到訊息佇列，並將訊息傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-2966">The following code example connects to a message queue and sends a message to the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Send_obj#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Send_obj/CPP/mqsend_generic.cpp#1)]
 [!code-csharp[MessageQueue.Send_obj#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Send_obj/CS/mqsend_generic.cs#1)]
 [!code-vb[MessageQueue.Send_obj#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Send_obj/VB/mqsend_generic.vb#1)]  
  
 <span data-ttu-id="1106c-2967">下列程式碼範例會將傳送應用程式定義`Order`類別至佇列，然後從該佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2967">The following code example sends an application-defined `Order` class to a queue and then receives a message from that queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2968">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2968">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="1106c-2969">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2969">-or-</span>
          </span>
          <span data-ttu-id="1106c-2970">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2970">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, transaction As MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1106c-2971">要傳送至佇列的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2971">The object to send to the queue.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-2972">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2972">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-2973">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的交易佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2973">Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-2974">傳送訊息，其中包含使用此多載`obj`異動式佇列所參考的參數<xref:System.Messaging.MessageQueue>，使用內部交易內容所定義`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-2974">Use this overload to send a message that contains the `obj` parameter to the transactional queue referenced by the <xref:System.Messaging.MessageQueue>, using an internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="1106c-2975">傳送至佇列的物件可以是<xref:System.Messaging.Message>或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-2975">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="1106c-2976">如果您不是傳送任何物件<xref:System.Messaging.Message>，物件會序列化並插入至訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="1106c-2976">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="1106c-2977">如果您使用這個多載，將訊息傳送至非交易式佇列，訊息可以傳送到寄不出信件佇列而不擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2977">If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</span></span>  
  
 <span data-ttu-id="1106c-2978">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式子的預設值為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2978">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="1106c-2979"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="1106c-2979">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="1106c-2980">如果您指定，例如，標籤或優先順序使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-2980">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="1106c-2981">當傳送<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-2981">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1106c-2982"><xref:System.Messaging.MessageQueueTransaction> 為執行緒的 apartment 感知的功能，因此，如果已 apartment 狀態`STA`，您無法使用多個執行緒中的交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-2982"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="1106c-2983">Visual Basic 會將主執行緒的狀態`STA`，因此您必須先套用<xref:System.MTAThreadAttribute>中`Main`副程式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2983">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="1106c-2984">否則，使用其他執行緒傳送交易式訊息時，會擲回 <xref:System.Messaging.MessageQueueException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-2984">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="1106c-2985">您套用<xref:System.MTAThreadAttribute>使用下列的片段。</span><span class="sxs-lookup"><span data-stu-id="1106c-2985">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="1106c-2986">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-2986">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-2987">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-2987">Workgroup mode</span></span>|<span data-ttu-id="1106c-2988">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-2988">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-2989">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2989">Local computer</span></span>|<span data-ttu-id="1106c-2990">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2990">Yes</span></span>|  
|<span data-ttu-id="1106c-2991">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2991">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-2992">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2992">Yes</span></span>|  
|<span data-ttu-id="1106c-2993">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-2993">Remote computer</span></span>|<span data-ttu-id="1106c-2994">否</span><span class="sxs-lookup"><span data-stu-id="1106c-2994">No</span></span>|  
|<span data-ttu-id="1106c-2995">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-2995">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-2996">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-2996">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-2997">下列程式碼範例會將字串傳送至異動式佇列，然後從該佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-2997">The following code example sends a string to a transactional queue and then receives a message from that queue.</span></span>  
  
 [!code-cpp[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/CPP/mqsend_objtransaction.cpp#1)]
 [!code-csharp[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/CS/mqsend_objtransaction.cs#1)]
 [!code-vb[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/VB/mqsend_objtransaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-2998">
            <paramref name="transaction" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2998">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-2999">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-2999">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="1106c-3000">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3000">-or-</span>
          </span>
          <span data-ttu-id="1106c-3001">訊息佇列應用程式指出不正確的交易用法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3001">The Message Queuing application indicated an incorrect transaction use.</span>
          </span>
          <span data-ttu-id="1106c-3002">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3002">-or-</span>
          </span>
          <span data-ttu-id="1106c-3003">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3003">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, transactionType As MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1106c-3004">要傳送至佇列的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3004">The object to send to the queue.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-3005">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3005">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-3006">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3006">Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3007">傳送訊息，其中包含使用此多載`obj`參數所參照的佇列<xref:System.Messaging.MessageQueue>，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3007">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="1106c-3008">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來傳送訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-3008">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</span></span> <span data-ttu-id="1106c-3009">指定`Single`如果您想要以單一的內部交易傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-3009">Specify `Single` if you want to send the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-3010">您可以指定`None`如果您想要將交易式訊息傳送至非交易式的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-3010">You can specify `None` if you want to send a transactional message to a non-transactional thread.</span></span>  
  
 <span data-ttu-id="1106c-3011">傳送至佇列的物件可以是<xref:System.Messaging.Message>或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-3011">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="1106c-3012">如果您不是傳送任何物件<xref:System.Messaging.Message>，物件會序列化並插入至訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="1106c-3012">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="1106c-3013">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式子的預設值為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3013">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="1106c-3014"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3014">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="1106c-3015">如果您指定，例如，標籤或優先順序使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3015">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="1106c-3016">當傳送<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-3016">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1106c-3017">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3017">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3018">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3018">Workgroup mode</span></span>|<span data-ttu-id="1106c-3019">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3019">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3020">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3020">Local computer</span></span>|<span data-ttu-id="1106c-3021">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3021">Yes</span></span>|  
|<span data-ttu-id="1106c-3022">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3022">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3023">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3023">Yes</span></span>|  
|<span data-ttu-id="1106c-3024">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3024">Remote computer</span></span>|<span data-ttu-id="1106c-3025">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3025">No</span></span>|  
|<span data-ttu-id="1106c-3026">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3026">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3027">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3027">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3028">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3028">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#2)]
 [!code-csharp[MessageQueue2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-3029">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3029">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3030">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3030">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="1106c-3031">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3031">-or-</span>
          </span>
          <span data-ttu-id="1106c-3032">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3032">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1106c-3033">要傳送至佇列的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3033">The object to send to the queue.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="1106c-3034">訊息的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3034">The label of the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-3035">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的非交易佇列，並指定訊息的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3035">Sends an object to the non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3036">傳送訊息，其中包含使用此多載`obj`參數所參照的佇列<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3036">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="1106c-3037">您可以使用這個多載，指定識別訊息的字串標記。</span><span class="sxs-lookup"><span data-stu-id="1106c-3037">With this overload, you can specify the string label that identifies the message.</span></span> <span data-ttu-id="1106c-3038">傳送至佇列的物件可以是<xref:System.Messaging.Message>、 結構、 資料物件或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-3038">The object you send to the queue can be a <xref:System.Messaging.Message>, a structure, a data object, or any managed object.</span></span> <span data-ttu-id="1106c-3039">如果您不是傳送任何物件<xref:System.Messaging.Message>，物件會序列化並插入至訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="1106c-3039">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="1106c-3040">訊息標籤是不同於訊息佇列的標籤，但兩者都是應用程式相依，而且不會繼承到訊息佇列的意義。</span><span class="sxs-lookup"><span data-stu-id="1106c-3040">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="1106c-3041">如果您使用這個多載，將訊息傳送至異動式佇列，訊息會傳送到寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3041">If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</span></span> <span data-ttu-id="1106c-3042">如果您想要包含其他訊息是交易的一部分的訊息時，使用多載採用<xref:System.Messaging.MessageQueueTransaction>或<xref:System.Messaging.MessageQueueTransactionType>做為參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3042">If you want the message to be part of a transaction that contains other messages, use an overload that takes a <xref:System.Messaging.MessageQueueTransaction> or <xref:System.Messaging.MessageQueueTransactionType> as a parameter.</span></span>  
  
 <span data-ttu-id="1106c-3043"><xref:System.Messaging.MessageQueue.Path%2A>屬性這<xref:System.Messaging.MessageQueue>傳送訊息之前，必須指定執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-3043">The <xref:System.Messaging.MessageQueue.Path%2A> property for this <xref:System.Messaging.MessageQueue> instance must be specified before you send the message.</span></span> <span data-ttu-id="1106c-3044">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式子的預設值為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3044">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="1106c-3045"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3045">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="1106c-3046">如果您指定，例如，標籤或優先順序使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3046">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="1106c-3047">當傳送<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-3047">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1106c-3048">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3048">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3049">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3049">Workgroup mode</span></span>|<span data-ttu-id="1106c-3050">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3050">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3051">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3051">Local computer</span></span>|<span data-ttu-id="1106c-3052">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3052">Yes</span></span>|  
|<span data-ttu-id="1106c-3053">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3053">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3054">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3054">Yes</span></span>|  
|<span data-ttu-id="1106c-3055">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3055">Remote computer</span></span>|<span data-ttu-id="1106c-3056">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3056">No</span></span>|  
|<span data-ttu-id="1106c-3057">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3057">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3058">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3058">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3059">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3059">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueue2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-3060">
            <paramref name="label" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3060">The <paramref name="label" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3061">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3061">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="1106c-3062">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3062">-or-</span>
          </span>
          <span data-ttu-id="1106c-3063">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3063">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String, transaction As MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1106c-3064">要傳送至佇列的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3064">The object to send to the queue.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="1106c-3065">訊息的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3065">The label of the message.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="1106c-3066">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3066">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-3067">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的交易佇列，並指定訊息的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3067">Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3068">傳送訊息，其中包含使用此多載`obj`異動式佇列所參考的參數<xref:System.Messaging.MessageQueue>，使用內部交易內容所定義`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3068">Use this overload to send a message that contains the `obj` parameter to the transactional queue referenced by the <xref:System.Messaging.MessageQueue>, using an internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="1106c-3069">您可以使用這個多載，指定識別訊息的字串標記。</span><span class="sxs-lookup"><span data-stu-id="1106c-3069">With this overload, you can specify the string label that identifies the message.</span></span> <span data-ttu-id="1106c-3070">傳送至佇列的物件可以是<xref:System.Messaging.Message>、 結構、 資料物件或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-3070">The object you send to the queue can be a <xref:System.Messaging.Message>, a structure, a data object, or any managed object.</span></span> <span data-ttu-id="1106c-3071">如果您不是傳送任何物件<xref:System.Messaging.Message>，物件會序列化並插入至訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="1106c-3071">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="1106c-3072">訊息標籤是不同於訊息佇列的標籤，但兩者都是應用程式相依，而且不會繼承到訊息佇列的意義。</span><span class="sxs-lookup"><span data-stu-id="1106c-3072">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="1106c-3073">如果您使用這個多載，將訊息傳送至非交易式佇列，訊息可以傳送到寄不出信件佇列而不擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-3073">If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</span></span>  
  
 <span data-ttu-id="1106c-3074">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式子的預設值為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3074">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="1106c-3075"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3075">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="1106c-3076">如果您指定，例如，標籤或優先順序使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3076">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="1106c-3077">當傳送<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3077">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property</span></span>  
  
 <span data-ttu-id="1106c-3078"><xref:System.Messaging.MessageQueueTransaction> 為執行緒的 apartment 感知的功能，因此，如果已 apartment 狀態`STA`，您無法使用多個執行緒中的交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-3078"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="1106c-3079">Visual Basic 會將主執行緒的狀態`STA`，因此您必須先套用<xref:System.MTAThreadAttribute>中`Main`副程式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3079">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="1106c-3080">否則，使用其他執行緒傳送交易式訊息時，會擲回 <xref:System.Messaging.MessageQueueException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-3080">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="1106c-3081">您套用<xref:System.MTAThreadAttribute>使用下列的片段。</span><span class="sxs-lookup"><span data-stu-id="1106c-3081">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="1106c-3082">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3082">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3083">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3083">Workgroup mode</span></span>|<span data-ttu-id="1106c-3084">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3084">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3085">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3085">Local computer</span></span>|<span data-ttu-id="1106c-3086">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3086">Yes</span></span>|  
|<span data-ttu-id="1106c-3087">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3087">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3088">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3088">Yes</span></span>|  
|<span data-ttu-id="1106c-3089">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3089">Remote computer</span></span>|<span data-ttu-id="1106c-3090">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3090">No</span></span>|  
|<span data-ttu-id="1106c-3091">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3091">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3092">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3092">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3093">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3093">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#4](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#4)]
 [!code-csharp[MessageQueue2#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-3094">
            <paramref name="label" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3094">The <paramref name="label" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1106c-3095">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3095">-or-</span>
          </span>
          <span data-ttu-id="1106c-3096">
            <paramref name="transaction" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3096">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3097">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3097">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="1106c-3098">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3098">-or-</span>
          </span>
          <span data-ttu-id="1106c-3099">訊息佇列應用程式指出不正確的交易使用方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3099">The Message Queuing application indicated an incorrect transaction usage.</span>
          </span>
          <span data-ttu-id="1106c-3100">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3100">-or-</span>
          </span>
          <span data-ttu-id="1106c-3101">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3101">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String, transactionType As MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1106c-3102">要傳送至佇列的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3102">The object to send to the queue.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="1106c-3103">訊息的標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3103">The label of the message.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="1106c-3104">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3104">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-3105">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列，並指定訊息的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3105">Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3106">傳送訊息，其中包含使用此多載`obj`參數所參照的佇列<xref:System.Messaging.MessageQueue>，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3106">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="1106c-3107">指定`Automatic`如`transactionType`參數，如果已經有外部交易內容附加到您要用來傳送訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-3107">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</span></span> <span data-ttu-id="1106c-3108">指定`Single`如果您想要以單一的內部交易傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-3108">Specify `Single` if you want to send the message as a single internal transaction.</span></span> <span data-ttu-id="1106c-3109">您可以指定`None`如果您想要將交易式訊息傳送至非交易式的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-3109">You can specify `None` if you want to send a transactional message to a non-transactional thread.</span></span>  
  
 <span data-ttu-id="1106c-3110">傳送至佇列的物件可以是<xref:System.Messaging.Message>或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-3110">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="1106c-3111">如果您不是傳送任何物件<xref:System.Messaging.Message>，物件會序列化並插入至訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="1106c-3111">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span> <span data-ttu-id="1106c-3112">您可以使用這個多載，指定識別訊息的字串標記。</span><span class="sxs-lookup"><span data-stu-id="1106c-3112">With this overload, you can specify the string label that identifies the message.</span></span>  
  
 <span data-ttu-id="1106c-3113">訊息標籤是不同於訊息佇列的標籤，但兩者都是應用程式相依，而且不會繼承到訊息佇列的意義。</span><span class="sxs-lookup"><span data-stu-id="1106c-3113">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="1106c-3114">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式子的預設值為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3114">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="1106c-3115"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="1106c-3115">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="1106c-3116">如果您指定，例如，標籤或優先順序使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3116">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="1106c-3117">當傳送<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>，和訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-3117">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1106c-3118">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3118">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3119">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3119">Workgroup mode</span></span>|<span data-ttu-id="1106c-3120">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3120">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3121">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3121">Local computer</span></span>|<span data-ttu-id="1106c-3122">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3122">Yes</span></span>|  
|<span data-ttu-id="1106c-3123">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3123">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3124">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3124">Yes</span></span>|  
|<span data-ttu-id="1106c-3125">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3125">Remote computer</span></span>|<span data-ttu-id="1106c-3126">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3126">No</span></span>|  
|<span data-ttu-id="1106c-3127">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3127">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3128">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3128">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3129">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3129">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#3](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#3)]
 [!code-csharp[MessageQueue2#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1106c-3130">
            <paramref name="label" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3130">The <paramref name="label" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueTransaction">
          <span data-ttu-id="1106c-3131">訊息佇列應用程式指出不正確的交易使用方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3131">The Message Queuing application indicated an incorrect transaction usage.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1106c-3132">
            <paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3132">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3133">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3133">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="1106c-3134">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3134">-or-</span>
          </span>
          <span data-ttu-id="1106c-3135">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3135">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetPermissions">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-3136">將使用權限加入至目前集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3136">Adds permissions to the current set.</span>
          </span>
          <span data-ttu-id="1106c-3137">這控制誰有權限可存取佇列屬性和佇列中的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3137">This controls who has access rights to queue properties and messages in the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Messaging.AccessControlList dacl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(class System.Messaging.AccessControlList dacl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (dacl As AccessControlList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Messaging::AccessControlList ^ dacl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dacl" Type="System.Messaging.AccessControlList" />
      </Parameters>
      <Docs>
        <param name="dacl">
          <span data-ttu-id="1106c-3138">
            <see cref="T:System.Messaging.AccessControlList" />，包含指定信任項和要授與之使用權限的一個或多個存取控制項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3138">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and the permissions to grant.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-3139">根據存取控制清單的內容指派佇列的存取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3139">Assigns access rights to the queue based on the contents of an access control list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3140">使用此多載來授與、 拒絕或撤銷權限使用集合的存取控制項目指定信任者和權限資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-3140">Use this overload to grant, deny, or revoke rights by using a collection of access control entries to specify trustee and permissions information.</span></span> <span data-ttu-id="1106c-3141">這會使用，例如，同時授與權限給多個使用者。</span><span class="sxs-lookup"><span data-stu-id="1106c-3141">This is used, for example, to grant permissions to multiple users at the same time.</span></span>  
  
 <span data-ttu-id="1106c-3142">您指定當您建構的信任者`ace`參數可以是個別使用者、 使用者、 群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-3142">The trustee you specify when you construct the `ace` parameter can be an individual user, a group of users, or a computer.</span></span> <span data-ttu-id="1106c-3143">如果個別之信任項目，使用格式`DOMAIN` \\ `user`。</span><span class="sxs-lookup"><span data-stu-id="1106c-3143">If the trustee is an individual, use the format `DOMAIN`\\`user`.</span></span> <span data-ttu-id="1106c-3144">您可以指定"。"表示本機電腦信任項。</span><span class="sxs-lookup"><span data-stu-id="1106c-3144">You can specify "." for the trustee to indicate the local computer.</span></span>  
  
 <span data-ttu-id="1106c-3145">您透過指派權限<xref:System.Messaging.MessageQueue.SetPermissions%2A>新增至現有清單的權限。</span><span class="sxs-lookup"><span data-stu-id="1106c-3145">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="1106c-3146">根據預設，公用或私用佇列的建立者擁有完整控制權，而且每個人都已取得佇列屬性，取得權限，然後再寫入佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="1106c-3146">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="1106c-3147">當您呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>，使用者和權限的資訊會附加至現有清單的底部。</span><span class="sxs-lookup"><span data-stu-id="1106c-3147">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="1106c-3148">系統會檢查每個<xref:System.Messaging.AccessControlEntry>順序，直到發生下列事件之一為止：</span><span class="sxs-lookup"><span data-stu-id="1106c-3148">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="1106c-3149">拒絕存取時<xref:System.Messaging.AccessControlEntry>明確拒絕任何要求的存取權限，其中一個執行緒的存取權杖中所列的信任。</span><span class="sxs-lookup"><span data-stu-id="1106c-3149">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="1106c-3150">一或多個允許存取的<xref:System.Messaging.AccessControlEntry>明確列出的執行緒存取權杖中的信任者授與所有要求的存取權限的項目。</span><span class="sxs-lookup"><span data-stu-id="1106c-3150">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="1106c-3151">所有<xref:System.Messaging.AccessControlEntry>已檢查的項目，而且沒有仍在至少一個要求的存取權限未明確允許，在此情況下，會隱含拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="1106c-3151">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="1106c-3152">當您建構`dacl`新增參數，<xref:System.Messaging.AccessControlEntry>執行個體來您<xref:System.Messaging.AccessControlList>集合。</span><span class="sxs-lookup"><span data-stu-id="1106c-3152">When you construct the `dacl` parameter, you add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="1106c-3153">當您建構每個存取控制項目時，您可以指定一般或標準存取權限。</span><span class="sxs-lookup"><span data-stu-id="1106c-3153">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="1106c-3154">佇列的權限可以是下列任何組合：</span><span class="sxs-lookup"><span data-stu-id="1106c-3154">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="1106c-3155">刪除</span><span class="sxs-lookup"><span data-stu-id="1106c-3155">Delete</span></span>  
  
-   <span data-ttu-id="1106c-3156">讀取安全性</span><span class="sxs-lookup"><span data-stu-id="1106c-3156">Read Security</span></span>  
  
-   <span data-ttu-id="1106c-3157">寫入安全性</span><span class="sxs-lookup"><span data-stu-id="1106c-3157">Write Security</span></span>  
  
-   <span data-ttu-id="1106c-3158">同步處理</span><span class="sxs-lookup"><span data-stu-id="1106c-3158">Synchronize</span></span>  
  
-   <span data-ttu-id="1106c-3159">修改擁有者</span><span class="sxs-lookup"><span data-stu-id="1106c-3159">Modify Owner</span></span>  
  
-   <span data-ttu-id="1106c-3160">讀取</span><span class="sxs-lookup"><span data-stu-id="1106c-3160">Read</span></span>  
  
-   <span data-ttu-id="1106c-3161">Write</span><span class="sxs-lookup"><span data-stu-id="1106c-3161">Write</span></span>  
  
-   <span data-ttu-id="1106c-3162">執行</span><span class="sxs-lookup"><span data-stu-id="1106c-3162">Execute</span></span>  
  
-   <span data-ttu-id="1106c-3163">必要</span><span class="sxs-lookup"><span data-stu-id="1106c-3163">Required</span></span>  
  
-   <span data-ttu-id="1106c-3164">全部</span><span class="sxs-lookup"><span data-stu-id="1106c-3164">All</span></span>  
  
-   <span data-ttu-id="1106c-3165">無</span><span class="sxs-lookup"><span data-stu-id="1106c-3165">None</span></span>  
  
 <span data-ttu-id="1106c-3166">這些權限，您可以使用位元 OR 運算子來結合的位元旗標組。</span><span class="sxs-lookup"><span data-stu-id="1106c-3166">These rights are a set of bit flags that you can combine using the OR bitwise operator.</span></span>  
  
-   <span data-ttu-id="1106c-3167">完全控制</span><span class="sxs-lookup"><span data-stu-id="1106c-3167">Full Control</span></span>  
  
-   <span data-ttu-id="1106c-3168">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3168">Delete Message</span></span>  
  
-   <span data-ttu-id="1106c-3169">接收訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3169">Receive Message</span></span>  
  
-   <span data-ttu-id="1106c-3170">查看訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3170">Peek Message</span></span>  
  
-   <span data-ttu-id="1106c-3171">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3171">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="1106c-3172">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3172">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="1106c-3173">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3173">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="1106c-3174">取得權限</span><span class="sxs-lookup"><span data-stu-id="1106c-3174">Get Permissions</span></span>  
  
-   <span data-ttu-id="1106c-3175">設定權限</span><span class="sxs-lookup"><span data-stu-id="1106c-3175">Set Permissions</span></span>  
  
-   <span data-ttu-id="1106c-3176">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="1106c-3176">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="1106c-3177">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3177">Write Message</span></span>  
  
 <span data-ttu-id="1106c-3178">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3178">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3179">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3179">Workgroup mode</span></span>|<span data-ttu-id="1106c-3180">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3180">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3181">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3181">Local computer</span></span>|<span data-ttu-id="1106c-3182">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3182">Yes</span></span>|  
|<span data-ttu-id="1106c-3183">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3183">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3184">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3184">Yes</span></span>|  
|<span data-ttu-id="1106c-3185">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3185">Remote computer</span></span>|<span data-ttu-id="1106c-3186">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3186">No</span></span>|  
|<span data-ttu-id="1106c-3187">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3187">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3188">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3188">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3189">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3189">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29>.</span></span>      
  
 [!code-cpp[MessageQueue2#26](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#26)]
 [!code-csharp[MessageQueue2#26](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3190">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3190">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.AccessControlList" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Messaging.MessageQueueAccessControlEntry ace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(class System.Messaging.MessageQueueAccessControlEntry ace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (ace As MessageQueueAccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Messaging::MessageQueueAccessControlEntry ^ ace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ace" Type="System.Messaging.MessageQueueAccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="ace">
          <span data-ttu-id="1106c-3191">指定使用者、存取類型和使用權限類型的 <see cref="T:System.Messaging.MessageQueueAccessControlEntry" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3191">A <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> that specifies a user, an access type, and a permission type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-3192">根據存取控制項目的內容指派佇列的存取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3192">Assigns access rights to the queue based on the contents of an access control entry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3193">使用此多載來授與、 拒絕或撤銷權限所使用的存取控制項目指定信任者和權限資訊。</span><span class="sxs-lookup"><span data-stu-id="1106c-3193">Use this overload to grant, deny, or revoke rights by using an access control entry to specify trustee and rights information.</span></span>  
  
 <span data-ttu-id="1106c-3194">您指定當您建構的信任者`ace`參數可以是個別使用者、 使用者、 群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-3194">The trustee you specify when you construct the `ace` parameter can be an individual user, a group of users, or a computer.</span></span> <span data-ttu-id="1106c-3195">如果個別之信任項目，使用格式`DOMAIN` \\ `user`。</span><span class="sxs-lookup"><span data-stu-id="1106c-3195">If the trustee is an individual, use the format `DOMAIN`\\`user`.</span></span> <span data-ttu-id="1106c-3196">您可以指定"。"表示本機電腦信任項。</span><span class="sxs-lookup"><span data-stu-id="1106c-3196">You can specify "." for the trustee to indicate the local computer.</span></span>  
  
 <span data-ttu-id="1106c-3197">您透過指派權限<xref:System.Messaging.MessageQueue.SetPermissions%2A>新增至現有清單的權限。</span><span class="sxs-lookup"><span data-stu-id="1106c-3197">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="1106c-3198">根據預設，公用或私用佇列的建立者擁有完整控制權，而且每個人都已取得佇列屬性，取得權限，然後再寫入佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="1106c-3198">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="1106c-3199">當您呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>，使用者和權限的資訊會附加至現有清單的底部。</span><span class="sxs-lookup"><span data-stu-id="1106c-3199">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="1106c-3200">系統會檢查每個<xref:System.Messaging.AccessControlEntry>順序，直到發生下列事件之一為止：</span><span class="sxs-lookup"><span data-stu-id="1106c-3200">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="1106c-3201">拒絕存取時<xref:System.Messaging.AccessControlEntry>明確拒絕任何要求的存取權限，其中一個執行緒的存取權杖中所列的信任。</span><span class="sxs-lookup"><span data-stu-id="1106c-3201">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="1106c-3202">一或多個允許存取的<xref:System.Messaging.AccessControlEntry>明確列出的執行緒存取權杖中的信任者授與所有要求的存取權限的項目。</span><span class="sxs-lookup"><span data-stu-id="1106c-3202">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="1106c-3203">所有<xref:System.Messaging.AccessControlEntry>已檢查的項目，而且沒有仍在至少一個要求的存取權限未明確允許，在此情況下，會隱含拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="1106c-3203">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="1106c-3204">佇列中，您在中指定的權限`rights`參數在建構時您<xref:System.Messaging.MessageQueueAccessControlEntry>，可以是下列任何組合：</span><span class="sxs-lookup"><span data-stu-id="1106c-3204">The rights to a queue, which you specify in the `rights` parameter when you construct your <xref:System.Messaging.MessageQueueAccessControlEntry>, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="1106c-3205">完全控制</span><span class="sxs-lookup"><span data-stu-id="1106c-3205">Full Control</span></span>  
  
-   <span data-ttu-id="1106c-3206">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3206">Delete Message</span></span>  
  
-   <span data-ttu-id="1106c-3207">接收訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3207">Receive Message</span></span>  
  
-   <span data-ttu-id="1106c-3208">查看訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3208">Peek Message</span></span>  
  
-   <span data-ttu-id="1106c-3209">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3209">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="1106c-3210">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3210">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="1106c-3211">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3211">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="1106c-3212">取得權限</span><span class="sxs-lookup"><span data-stu-id="1106c-3212">Get Permissions</span></span>  
  
-   <span data-ttu-id="1106c-3213">設定權限</span><span class="sxs-lookup"><span data-stu-id="1106c-3213">Set Permissions</span></span>  
  
-   <span data-ttu-id="1106c-3214">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="1106c-3214">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="1106c-3215">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3215">Write Message</span></span>  
  
 <span data-ttu-id="1106c-3216">`rights`您指定的參數的建構函式`ace`參數是旗標為<xref:System.Messaging.MessageQueueAccessRights>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="1106c-3216">The `rights` parameter you specify in the constructor for the `ace` parameter is a flag of the <xref:System.Messaging.MessageQueueAccessRights> enumeration.</span></span> <span data-ttu-id="1106c-3217">它代表一組您可以使用位元運算子來結合的位元旗標或當您建置`rights`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3217">It represents a set of bit flags that you can combine using the bitwise operator OR when you build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="1106c-3218">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3218">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3219">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3219">Workgroup mode</span></span>|<span data-ttu-id="1106c-3220">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3220">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3221">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3221">Local computer</span></span>|<span data-ttu-id="1106c-3222">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3222">Yes</span></span>|  
|<span data-ttu-id="1106c-3223">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3223">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3224">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3224">Yes</span></span>|  
|<span data-ttu-id="1106c-3225">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3225">Remote computer</span></span>|<span data-ttu-id="1106c-3226">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3226">No</span></span>|  
|<span data-ttu-id="1106c-3227">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3227">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3228">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3228">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3229">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3229">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#24](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#24)]
 [!code-csharp[MessageQueue2#24](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3230">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3230">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
        <altmember cref="T:System.Messaging.MessageQueueAccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(string user, valuetype System.Messaging.MessageQueueAccessRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (user As String, rights As MessageQueueAccessRights)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::String ^ user, System::Messaging::MessageQueueAccessRights rights);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="rights" Type="System.Messaging.MessageQueueAccessRights" />
      </Parameters>
      <Docs>
        <param name="user">
          <span data-ttu-id="1106c-3231">取得其他佇列權限的個人、群組或電腦。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3231">The individual, group, or computer that gets additional rights to the queue.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="1106c-3232">
            <see cref="T:System.Messaging.MessageQueueAccessRights" />，指出訊息佇列指派給 <c>user</c> 傳入之佇列的一組權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3232">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <c>user</c> passed in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-3233">為電腦、群組或使用者提供指定的存取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3233">Gives a computer, group, or user the specified access rights.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3234">若要授與指定權限給個別使用者使用這個多載。</span><span class="sxs-lookup"><span data-stu-id="1106c-3234">Use this overload to grant specified rights to an individual user.</span></span> <span data-ttu-id="1106c-3235">使用者可以是任何有效的信任者，包括個別使用者、 使用者、 群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-3235">The user can be any valid trustee, which includes individual users, groups of users, or a computer.</span></span> <span data-ttu-id="1106c-3236">如果是個別的使用者，使用格式`DOMAIN` \\ `user`如`user`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3236">If the user is an individual, use the format `DOMAIN`\\`user` for the `user` parameter.</span></span> <span data-ttu-id="1106c-3237">您可以指定"。"的`user`參數，以指定本機電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-3237">You can specify "." for the `user` parameter to indicate the local computer.</span></span>  
  
 <span data-ttu-id="1106c-3238">您透過指派權限<xref:System.Messaging.MessageQueue.SetPermissions%2A>新增至現有清單的權限。</span><span class="sxs-lookup"><span data-stu-id="1106c-3238">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="1106c-3239">根據預設，公用或私用佇列的建立者擁有完整控制權，而且每個人都已取得佇列屬性，取得權限，然後再寫入佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="1106c-3239">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="1106c-3240">當您呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>，使用者和權限的資訊會附加至現有清單的底部。</span><span class="sxs-lookup"><span data-stu-id="1106c-3240">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="1106c-3241">系統會檢查每個<xref:System.Messaging.AccessControlEntry>順序，直到發生下列事件之一為止：</span><span class="sxs-lookup"><span data-stu-id="1106c-3241">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="1106c-3242">拒絕存取時<xref:System.Messaging.AccessControlEntry>明確拒絕任何要求的存取權限，其中一個執行緒的存取權杖中所列的信任。</span><span class="sxs-lookup"><span data-stu-id="1106c-3242">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="1106c-3243">一或多個允許存取的<xref:System.Messaging.AccessControlEntry>明確列出的執行緒存取權杖中的信任者授與所有要求的存取權限的項目。</span><span class="sxs-lookup"><span data-stu-id="1106c-3243">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="1106c-3244">所有<xref:System.Messaging.AccessControlEntry>已檢查的項目，而且沒有仍在至少一個要求的存取權限未明確允許，在此情況下，會隱含拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="1106c-3244">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="1106c-3245">中指定佇列的權限`rights`參數，可以是下列任何組合：</span><span class="sxs-lookup"><span data-stu-id="1106c-3245">The rights to a queue, specified in the `rights` parameter, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="1106c-3246">完全控制</span><span class="sxs-lookup"><span data-stu-id="1106c-3246">Full Control</span></span>  
  
-   <span data-ttu-id="1106c-3247">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3247">Delete Message</span></span>  
  
-   <span data-ttu-id="1106c-3248">接收訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3248">Receive Message</span></span>  
  
-   <span data-ttu-id="1106c-3249">查看訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3249">Peek Message</span></span>  
  
-   <span data-ttu-id="1106c-3250">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3250">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="1106c-3251">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3251">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="1106c-3252">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3252">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="1106c-3253">取得權限</span><span class="sxs-lookup"><span data-stu-id="1106c-3253">Get Permissions</span></span>  
  
-   <span data-ttu-id="1106c-3254">設定權限</span><span class="sxs-lookup"><span data-stu-id="1106c-3254">Set Permissions</span></span>  
  
-   <span data-ttu-id="1106c-3255">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="1106c-3255">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="1106c-3256">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3256">Write Message</span></span>  
  
 <span data-ttu-id="1106c-3257"><xref:System.Messaging.MessageQueueAccessRights>列舉，代表一組您可以使用位元運算子來結合的位元旗標，或建置`rights`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3257">The <xref:System.Messaging.MessageQueueAccessRights> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="1106c-3258">使用這個多載中，您可以只授與權限。您無法撤銷或拒絕它們。</span><span class="sxs-lookup"><span data-stu-id="1106c-3258">With this overload, you can only grant permissions; you cannot revoke or deny them.</span></span> <span data-ttu-id="1106c-3259">您必須使用不同的多載來明確地授與任何<xref:System.Messaging.AccessControlEntryType>以外`Allow`。</span><span class="sxs-lookup"><span data-stu-id="1106c-3259">You must use a different overload to explicitly grant any <xref:System.Messaging.AccessControlEntryType> other than `Allow`.</span></span>  
  
 <span data-ttu-id="1106c-3260">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3260">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3261">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3261">Workgroup mode</span></span>|<span data-ttu-id="1106c-3262">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3262">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3263">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3263">Local computer</span></span>|<span data-ttu-id="1106c-3264">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3264">Yes</span></span>|  
|<span data-ttu-id="1106c-3265">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3265">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3266">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3266">Yes</span></span>|  
|<span data-ttu-id="1106c-3267">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3267">Remote computer</span></span>|<span data-ttu-id="1106c-3268">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3268">No</span></span>|  
|<span data-ttu-id="1106c-3269">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3269">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3270">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3270">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3271">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3271">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#23](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#23)]
 [!code-csharp[MessageQueue2#23](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1106c-3272">
            <paramref name="user" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3272">The <paramref name="user" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3273">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3273">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(string user, valuetype System.Messaging.MessageQueueAccessRights rights, valuetype System.Messaging.AccessControlEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (user As String, rights As MessageQueueAccessRights, entryType As AccessControlEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::String ^ user, System::Messaging::MessageQueueAccessRights rights, System::Messaging::AccessControlEntryType entryType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="rights" Type="System.Messaging.MessageQueueAccessRights" />
        <Parameter Name="entryType" Type="System.Messaging.AccessControlEntryType" />
      </Parameters>
      <Docs>
        <param name="user">
          <span data-ttu-id="1106c-3274">取得其他佇列權限的個人、群組或電腦。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3274">The individual, group, or computer that gets additional rights to the queue.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="1106c-3275">
            <see cref="T:System.Messaging.MessageQueueAccessRights" />，指出訊息佇列指派給 <c>user</c> 傳入之佇列的一組權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3275">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <c>user</c> passed in.</span>
          </span>
        </param>
        <param name="entryType">
          <span data-ttu-id="1106c-3276">
            <see cref="T:System.Messaging.AccessControlEntryType" />，指定要授與、拒絕或是撤銷 <c>rights</c> 參數所指定的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3276">A <see cref="T:System.Messaging.AccessControlEntryType" /> that specifies whether to grant, deny, or revoke the permissions specified by the <c>rights</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1106c-3277">以指定的存取控制類型 (允許、拒絕、撤銷或設定)，為電腦、群組或使用者提供指定的存取權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3277">Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3278">使用此多載來授與、 拒絕或撤銷個別使用者的指定權限。</span><span class="sxs-lookup"><span data-stu-id="1106c-3278">Use this overload to grant, deny, or revoke specified rights for an individual user.</span></span> <span data-ttu-id="1106c-3279">使用者可以是任何有效的信任者，包括個別使用者、 使用者、 群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-3279">The user can be any valid trustee, which includes individual users, groups of users, or a computer.</span></span> <span data-ttu-id="1106c-3280">如果是個別的使用者，使用格式`DOMAIN` \\ `user`如`user`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3280">If the user is an individual, use the format `DOMAIN`\\`user` for the `user` parameter.</span></span> <span data-ttu-id="1106c-3281">您可以指定"。"的`user`參數，以指定本機電腦。</span><span class="sxs-lookup"><span data-stu-id="1106c-3281">You can specify "." for the `user` parameter to indicate the local computer.</span></span>  
  
 <span data-ttu-id="1106c-3282">您透過指派權限<xref:System.Messaging.MessageQueue.SetPermissions%2A>新增至現有清單的權限。</span><span class="sxs-lookup"><span data-stu-id="1106c-3282">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="1106c-3283">根據預設，公用或私用佇列的建立者擁有完整控制權，而且每個人都已取得佇列屬性，取得權限，然後再寫入佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="1106c-3283">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="1106c-3284">當您呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>，使用者和權限的資訊會附加至現有清單的底部。</span><span class="sxs-lookup"><span data-stu-id="1106c-3284">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="1106c-3285">系統會檢查每個<xref:System.Messaging.AccessControlEntry>順序，直到發生下列事件之一為止：</span><span class="sxs-lookup"><span data-stu-id="1106c-3285">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="1106c-3286">拒絕存取時<xref:System.Messaging.AccessControlEntry>明確拒絕任何要求的存取權限，其中一個執行緒的存取權杖中所列的信任。</span><span class="sxs-lookup"><span data-stu-id="1106c-3286">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="1106c-3287">一或多個允許存取的<xref:System.Messaging.AccessControlEntry>明確列出的執行緒存取權杖中的信任者授與所有要求的存取權限的項目。</span><span class="sxs-lookup"><span data-stu-id="1106c-3287">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="1106c-3288">所有<xref:System.Messaging.AccessControlEntry>已檢查的項目，而且沒有仍在至少一個要求的存取權限未明確允許，在此情況下，會隱含拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="1106c-3288">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="1106c-3289">中指定佇列的權限`rights`參數，可以是下列任何組合：</span><span class="sxs-lookup"><span data-stu-id="1106c-3289">The rights to a queue, specified in the `rights` parameter, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="1106c-3290">完全控制</span><span class="sxs-lookup"><span data-stu-id="1106c-3290">Full Control</span></span>  
  
-   <span data-ttu-id="1106c-3291">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3291">Delete Message</span></span>  
  
-   <span data-ttu-id="1106c-3292">接收訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3292">Receive Message</span></span>  
  
-   <span data-ttu-id="1106c-3293">查看訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3293">Peek Message</span></span>  
  
-   <span data-ttu-id="1106c-3294">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3294">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="1106c-3295">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3295">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="1106c-3296">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="1106c-3296">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="1106c-3297">取得權限</span><span class="sxs-lookup"><span data-stu-id="1106c-3297">Get Permissions</span></span>  
  
-   <span data-ttu-id="1106c-3298">設定權限</span><span class="sxs-lookup"><span data-stu-id="1106c-3298">Set Permissions</span></span>  
  
-   <span data-ttu-id="1106c-3299">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="1106c-3299">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="1106c-3300">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="1106c-3300">Write Message</span></span>  
  
 <span data-ttu-id="1106c-3301"><xref:System.Messaging.MessageQueueAccessRights>列舉，代表一組您可以使用位元運算子來結合的位元旗標，或建置`rights`參數。</span><span class="sxs-lookup"><span data-stu-id="1106c-3301">The <xref:System.Messaging.MessageQueueAccessRights> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="1106c-3302">下表顯示這個方法中是否有提供各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3302">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3303">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3303">Workgroup mode</span></span>|<span data-ttu-id="1106c-3304">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3304">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3305">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3305">Local computer</span></span>|<span data-ttu-id="1106c-3306">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3306">Yes</span></span>|  
|<span data-ttu-id="1106c-3307">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3307">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3308">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3308">Yes</span></span>|  
|<span data-ttu-id="1106c-3309">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3309">Remote computer</span></span>|<span data-ttu-id="1106c-3310">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3310">No</span></span>|  
|<span data-ttu-id="1106c-3311">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3311">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3312">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3312">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3313">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3313">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#25](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#25)]
 [!code-csharp[MessageQueue2#25](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3314">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3314">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
        <altmember cref="T:System.Messaging.AccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-3315">取得或設定封送處理從 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 或 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件產生之事件處理常式呼叫的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3315">Gets or sets the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-3316">
            <see cref="T:System.ComponentModel.ISynchronizeInvoke" />，表示封送處理 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 或 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件產生之事件處理常式呼叫的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3316">A <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, which represents the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span>
          </span>
          <span data-ttu-id="1106c-3317">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3317">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3318">A<xref:System.Messaging.MessageQueue.ReceiveCompleted>或<xref:System.Messaging.MessageQueue.PeekCompleted>事件產生<xref:System.Messaging.MessageQueue.BeginReceive%2A>或<xref:System.Messaging.MessageQueue.BeginPeek%2A>分別要求特定執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-3318">A <xref:System.Messaging.MessageQueue.ReceiveCompleted> or <xref:System.Messaging.MessageQueue.PeekCompleted> event results from a <xref:System.Messaging.MessageQueue.BeginReceive%2A> or <xref:System.Messaging.MessageQueue.BeginPeek%2A> request, respectively, to a specific thread.</span></span> <span data-ttu-id="1106c-3319">一般而言，<xref:System.Messaging.MessageQueue.SynchronizingObject%2A>時設定其相關的元件放置於控制項或表單，因為這些元件會繫結至特定執行緒。</span><span class="sxs-lookup"><span data-stu-id="1106c-3319">Typically, the <xref:System.Messaging.MessageQueue.SynchronizingObject%2A> is set when its related component is placed inside a control or a form, because those components are bound to a specific thread.</span></span>  
  
 <span data-ttu-id="1106c-3320">通常，同步處理物件封送處理成單一執行緒的方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="1106c-3320">Typically, the synchronizing object marshals a method call into a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Transactional")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-3321">取得值，指出佇列是否只接受交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3321">Gets a value that indicates whether the queue accepts only transactions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-3322">如果佇列只接收做為交易一部分傳送的訊息則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3322">
              <see langword="true" /> if the queue accepts only messages sent as part of a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3323">交易式訊息參考到單一異動結合數個相關訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-3323">Transactional messaging refers to the coupling of several related messages into a single transaction.</span></span> <span data-ttu-id="1106c-3324">傳送訊息，因為在交易期間可確保訊息傳送順序，只傳遞一次，並從其目的地佇列成功擷取。</span><span class="sxs-lookup"><span data-stu-id="1106c-3324">Sending messages as part of a transaction ensures that the messages are delivered in order, delivered only once, and successfully retrieved from their destination queue.</span></span>  
  
 <span data-ttu-id="1106c-3325">如果佇列是交易式，它會接受會當做交易之一部分傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-3325">If a queue is transactional, it accepts only messages that are sent as part of a transaction.</span></span> <span data-ttu-id="1106c-3326">不過，非交易式訊息可以傳送或從本機交易佇列接收，而不使用明確交易式<xref:System.Messaging.MessageQueueTransaction.Begin%2A>， <xref:System.Messaging.MessageQueueTransaction.Commit%2A>，和<xref:System.Messaging.MessageQueueTransaction.Abort%2A>語法。</span><span class="sxs-lookup"><span data-stu-id="1106c-3326">However, a non-transactional message can be sent or received from a local transaction queue without explicitly using transactional <xref:System.Messaging.MessageQueueTransaction.Begin%2A>, <xref:System.Messaging.MessageQueueTransaction.Commit%2A>, and <xref:System.Messaging.MessageQueueTransaction.Abort%2A> syntax.</span></span> <span data-ttu-id="1106c-3327">如果非交易式訊息傳送至異動式佇列，這個元件會建立單一訊息交易，除了在參考上使用直接格式名稱的遠端電腦的佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3327">If a non-transactional message is sent to a transactional queue, this component creates a single-message transaction for it, except in the case of referencing a queue on a remote computer using a direct format name.</span></span> <span data-ttu-id="1106c-3328">在此情況下，傳送訊息時，您不會指定在交易內容，如果不為您建立一個，訊息會傳送到寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3328">In this situation, if you do not specify a transaction context when sending a message, one is not created for you and the message will be sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="1106c-3329">如果您的非交易式訊息傳送至異動式佇列時，您將無法復原期間發生例外狀況訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-3329">If you send a non-transactional message to a transactional queue, you will not be able to roll back the message in the event of an exception.</span></span>  
  
 <span data-ttu-id="1106c-3330"><xref:System.Messaging.MessageQueueTransaction> 為執行緒的 apartment 感知的功能，因此，如果已 apartment 狀態`STA`，您無法使用多個執行緒中的交易。</span><span class="sxs-lookup"><span data-stu-id="1106c-3330"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="1106c-3331">Visual Basic 會將主執行緒的狀態`STA`，因此您必須先套用<xref:System.MTAThreadAttribute>中`Main`副程式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3331">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="1106c-3332">否則，使用其他執行緒傳送交易式訊息時，會擲回 <xref:System.Messaging.MessageQueueException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1106c-3332">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="1106c-3333">您套用<xref:System.MTAThreadAttribute>使用下列的片段。</span><span class="sxs-lookup"><span data-stu-id="1106c-3333">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="1106c-3334">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-3334">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3335">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3335">Workgroup mode</span></span>|<span data-ttu-id="1106c-3336">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3336">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3337">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3337">Local computer</span></span>|<span data-ttu-id="1106c-3338">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3338">Yes</span></span>|  
|<span data-ttu-id="1106c-3339">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3339">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3340">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3340">Yes</span></span>|  
|<span data-ttu-id="1106c-3341">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3341">Remote computer</span></span>|<span data-ttu-id="1106c-3342">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3342">No</span></span>|  
|<span data-ttu-id="1106c-3343">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3343">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3344">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3344">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3345">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.Transactional%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-3345">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.Transactional%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#27](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3346">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3346">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Begin" />
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Commit" />
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Abort" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_WriteHandle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-3347">取得或設定值，指出是否複製接收的訊息至日誌佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3347">Gets or sets a value that indicates whether received messages are copied to the journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-3348">如果將從佇列接收到的訊息複製到日誌佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3348">
              <see langword="true" /> if messages received from the queue are copied to its journal queue; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3349">當訊息佇列應用程式建立新的應用程式佇列時，它會自動建立相關的日誌佇列中的相同位置。</span><span class="sxs-lookup"><span data-stu-id="1106c-3349">When the Message Queuing application creates a new application queue, it automatically creates an associated journal queue in the same location.</span></span> <span data-ttu-id="1106c-3350">日誌佇列用來追蹤從佇列移除的訊息。</span><span class="sxs-lookup"><span data-stu-id="1106c-3350">The journal queue is used to track the messages removed from a queue.</span></span> <span data-ttu-id="1106c-3351">設定這個屬性可以修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3351">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="1106c-3352">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體。</span><span class="sxs-lookup"><span data-stu-id="1106c-3352">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="1106c-3353">日誌佇列不會追蹤訊息從佇列移除，因為其接收時間計時器過期時，也不會追蹤訊息從佇列中清除使用訊息佇列目錄服務 （資訊儲存區或 Active Directory）。</span><span class="sxs-lookup"><span data-stu-id="1106c-3353">The journal queue does not track messages removed from the queue because their time-to-be-received timer expired, nor does it track messages purged from the queue by using a Message Queuing directory service (Information Store or Active Directory).</span></span>  
  
 <span data-ttu-id="1106c-3354">應用程式無法傳送訊息至日誌佇列。它們會限制為這些佇列的唯讀存取權。</span><span class="sxs-lookup"><span data-stu-id="1106c-3354">Applications cannot send messages to journal queues; they are limited to read-only access of these queues.</span></span> <span data-ttu-id="1106c-3355">此外，訊息佇列永遠不會移除訊息日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="1106c-3355">Furthermore, Message Queuing never removes messages from journal queues.</span></span> <span data-ttu-id="1106c-3356">使用佇列的應用程式必須清除這些訊息，以接收或清除佇列的方式。</span><span class="sxs-lookup"><span data-stu-id="1106c-3356">The application using the queue must clear these messages either by receiving them or by purging the queue.</span></span>  
  
 <span data-ttu-id="1106c-3357">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-3357">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3358">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3358">Workgroup mode</span></span>|<span data-ttu-id="1106c-3359">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3359">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3360">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3360">Local computer</span></span>|<span data-ttu-id="1106c-3361">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3361">Yes</span></span>|  
|<span data-ttu-id="1106c-3362">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3362">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3363">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3363">Yes</span></span>|  
|<span data-ttu-id="1106c-3364">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3364">Remote computer</span></span>|<span data-ttu-id="1106c-3365">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3365">No</span></span>|  
|<span data-ttu-id="1106c-3366">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3366">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3367">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3367">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1106c-3368">下列程式碼範例會取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1106c-3368">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#28](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3369">存取訊息佇列方法時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3369">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      </Docs>
    </Member>
    <Member MemberName="WriteHandle">
      <MemberSignature Language="C#" Value="public IntPtr WriteHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int WriteHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.WriteHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr WriteHandle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_WriteHandle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1106c-3370">取得用來傳送訊息至訊息佇列的原生控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3370">Gets the native handle used to send messages to the message queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1106c-3371">用來傳送訊息至佇列之原生佇列物件的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3371">A handle to the native queue object that you use for sending messages to the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1106c-3372"><xref:System.Messaging.MessageQueue.WriteHandle%2A>提供原生的 Windows 控制代碼用於將訊息傳送至佇列的訊息佇列物件。</span><span class="sxs-lookup"><span data-stu-id="1106c-3372">The <xref:System.Messaging.MessageQueue.WriteHandle%2A> provides a native Windows handle to the message queue object that is used for sending messages to the queue.</span></span> <span data-ttu-id="1106c-3373">如果您變更佇列的路徑，控制代碼關閉並重新開啟新的值。</span><span class="sxs-lookup"><span data-stu-id="1106c-3373">If you change the path of the queue, the handle is closed and reopened with a new value.</span></span>  
  
 <span data-ttu-id="1106c-3374">下表顯示此屬性是否可以使用各種不同的工作群組模式中。</span><span class="sxs-lookup"><span data-stu-id="1106c-3374">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="1106c-3375">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="1106c-3375">Workgroup mode</span></span>|<span data-ttu-id="1106c-3376">可用</span><span class="sxs-lookup"><span data-stu-id="1106c-3376">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="1106c-3377">本機電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3377">Local computer</span></span>|<span data-ttu-id="1106c-3378">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3378">Yes</span></span>|  
|<span data-ttu-id="1106c-3379">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3379">Local computer and direct format name</span></span>|<span data-ttu-id="1106c-3380">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3380">Yes</span></span>|  
|<span data-ttu-id="1106c-3381">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="1106c-3381">Remote computer</span></span>|<span data-ttu-id="1106c-3382">否</span><span class="sxs-lookup"><span data-stu-id="1106c-3382">No</span></span>|  
|<span data-ttu-id="1106c-3383">遠端電腦並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="1106c-3383">Remote computer and direct format name</span></span>|<span data-ttu-id="1106c-3384">[是]</span><span class="sxs-lookup"><span data-stu-id="1106c-3384">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="1106c-3385">訊息佇列無法用來寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1106c-3385">The message queue is not available for writing.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.CanWrite" />
        <altmember cref="P:System.Messaging.MessageQueue.ReadHandle" />
      </Docs>
    </Member>
  </Members>
</Type>