<Type Name="MessageQueue" FullName="System.Messaging.MessageQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="750ce98d3a2cf96c76135a62518a97dbed5ff325" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57929058" /></Metadata><TypeSignature Language="C#" Value="public class MessageQueue : System.ComponentModel.Component, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueue extends System.ComponentModel.Component implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueue&#xA;Inherits Component&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueue : System::ComponentModel::Component, System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type MessageQueue = class&#xA;    inherit Component&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("ReceiveCompleted")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Messaging.MessageQueueInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageQueueConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.MessageQueueInstallableComponentDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Messaging.MessagingDescription("MessageQueueDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dc7c4-101">提供 Message Queuing 伺服器上的佇列存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-101">Provides access to a queue on a Message Queuing server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-102">Message Queuing 技術可讓在不同時間執行的應用程式跨越可能暫時離線的異質的網路和系統進行通訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-102">The Message Queuing technology allows applications running at different times to communicate across heterogeneous networks and systems that might be temporarily offline.</span></span> <span data-ttu-id="dc7c4-103">應用程式傳送、 接收或窺視 （讀取但不移除） 來自佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-103">Applications send, receive, or peek (read without removing) messages from queues.</span></span> <span data-ttu-id="dc7c4-104">訊息佇列是的選用元件[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]和 Windows NT 和必須另外安裝。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-104">Message Queuing is an optional component of [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] and Windows NT, and must be installed separately.</span></span>  
  
 <span data-ttu-id="dc7c4-105"><xref:System.Messaging.MessageQueue>類別是一個包裝函式訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-105">The <xref:System.Messaging.MessageQueue> class is a wrapper around Message Queuing.</span></span> <span data-ttu-id="dc7c4-106">有多個版本的訊息佇列，並使用<xref:System.Messaging.MessageQueue>類別可能會導致稍微不同的行為，而您使用視作業系統而定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-106">There are multiple versions of Message Queuing, and using the <xref:System.Messaging.MessageQueue> class can result in slightly different behavior, depending on the operating system you are using.</span></span> <span data-ttu-id="dc7c4-107">針對每個版本的訊息佇列的特定功能的相關資訊，請參閱 MSDN 中的平台 SDK 中的 」 的訊息佇列中的新 > 主題。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-107">For information about specific features of each version of Message Queuing, see the topic "What's New in Message Queuing" in the Platform SDK in MSDN.</span></span>  
  
 <span data-ttu-id="dc7c4-108"><xref:System.Messaging.MessageQueue>類別會提供訊息佇列 」 佇列的參考。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-108">The <xref:System.Messaging.MessageQueue> class provides a reference to a Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-109">您可以指定路徑，以在<xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式來連線到現有的資源，或者您可以在伺服器上建立新的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-109">You can specify a path in the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor to connect to an existing resource, or you can create a new queue on the server.</span></span> <span data-ttu-id="dc7c4-110">您可以呼叫之前<xref:System.Messaging.MessageQueue.Send%28System.Object%29>， <xref:System.Messaging.MessageQueue.Peek%2A>，或<xref:System.Messaging.MessageQueue.Receive%2A>，您必須建立關聯的新執行個體<xref:System.Messaging.MessageQueue>類別與現有的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-110">Before you can call <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, or <xref:System.Messaging.MessageQueue.Receive%2A>, you must associate the new instance of the <xref:System.Messaging.MessageQueue> class with an existing queue.</span></span> <span data-ttu-id="dc7c4-111">此時，例如操作佇列屬性<xref:System.Messaging.MessageQueue.Category%2A>和<xref:System.Messaging.MessageQueue.Label%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-111">At that point, you can manipulate the queue properties such as <xref:System.Messaging.MessageQueue.Category%2A> and <xref:System.Messaging.MessageQueue.Label%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-112"><xref:System.Messaging.MessageQueue> 支援兩種擷取訊息類型： 同步和非同步。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-112"><xref:System.Messaging.MessageQueue> supports two types of message retrieval: synchronous and asynchronous.</span></span> <span data-ttu-id="dc7c4-113">同步方法中，<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.Receive%2A>，使得處理序執行緒等待新訊息到達佇列中指定的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-113">The synchronous methods, <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.Receive%2A>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-114">非同步方法中，<xref:System.Messaging.MessageQueue.BeginPeek%2A>和<xref:System.Messaging.MessageQueue.BeginReceive%2A>，允許主應用程式工作繼續在個別的執行緒，直到訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-114">The asynchronous methods, <xref:System.Messaging.MessageQueue.BeginPeek%2A> and <xref:System.Messaging.MessageQueue.BeginReceive%2A>, allow the main application tasks to continue in a separate thread until a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-115">這些方法的運作使用回呼物件和狀態物件來傳達執行緒之間的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-115">These methods work by using callback objects and state objects to communicate information between threads.</span></span>  
  
 <span data-ttu-id="dc7c4-116">當您建立的新執行個體<xref:System.Messaging.MessageQueue>類別，您不需要建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-116">When you create a new instance of the <xref:System.Messaging.MessageQueue> class, you are not creating a new Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-117">相反地，您可以使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>， <xref:System.Messaging.MessageQueue.Delete%28System.String%29>，和<xref:System.Messaging.MessageQueue.Purge%2A>方法來管理伺服器上的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-117">Instead, you can use the <xref:System.Messaging.MessageQueue.Create%28System.String%29>, <xref:System.Messaging.MessageQueue.Delete%28System.String%29>, and <xref:System.Messaging.MessageQueue.Purge%2A> methods to manage queues on the server.</span></span>  
  
 <span data-ttu-id="dc7c4-118">不同於<xref:System.Messaging.MessageQueue.Purge%2A>，<xref:System.Messaging.MessageQueue.Create%28System.String%29>並<xref:System.Messaging.MessageQueue.Delete%28System.String%29>會`static`成員，因此您可以呼叫它們，而不需要建立的新執行個體<xref:System.Messaging.MessageQueue>類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-118">Unlike <xref:System.Messaging.MessageQueue.Purge%2A>, <xref:System.Messaging.MessageQueue.Create%28System.String%29> and <xref:System.Messaging.MessageQueue.Delete%28System.String%29> are `static` members, so you can call them without creating a new instance of the <xref:System.Messaging.MessageQueue> class.</span></span>  
  
 <span data-ttu-id="dc7c4-119">您可以設定<xref:System.Messaging.MessageQueue>物件的<xref:System.Messaging.MessageQueue.Path%2A>具有三個名稱的其中一個屬性： 易記的名稱， <xref:System.Messaging.MessageQueue.FormatName%2A>，或<xref:System.Messaging.MessageQueue.Label%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-119">You can set the <xref:System.Messaging.MessageQueue> object's <xref:System.Messaging.MessageQueue.Path%2A> property with one of three names: the friendly name, the <xref:System.Messaging.MessageQueue.FormatName%2A>, or the <xref:System.Messaging.MessageQueue.Label%2A>.</span></span> <span data-ttu-id="dc7c4-120">由佇列所定義的易記名稱<xref:System.Messaging.MessageQueue.MachineName%2A>並<xref:System.Messaging.MessageQueue.QueueName%2A>屬性，是<xref:System.Messaging.MessageQueue.MachineName%2A> \\ <xref:System.Messaging.MessageQueue.QueueName%2A>公用佇列，和<xref:System.Messaging.MessageQueue.MachineName%2A> \\ `Private$` \\ <xref:System.Messaging.MessageQueue.QueueName%2A>私用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-120">The friendly name, which is defined by the queue's <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties, is <xref:System.Messaging.MessageQueue.MachineName%2A>\\<xref:System.Messaging.MessageQueue.QueueName%2A> for a public queue, and <xref:System.Messaging.MessageQueue.MachineName%2A>\\`Private$`\\<xref:System.Messaging.MessageQueue.QueueName%2A> for a private queue.</span></span> <span data-ttu-id="dc7c4-121"><xref:System.Messaging.MessageQueue.FormatName%2A>屬性允許離線存取訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-121">The <xref:System.Messaging.MessageQueue.FormatName%2A> property allows offline access to message queues.</span></span> <span data-ttu-id="dc7c4-122">最後，您可以使用佇列<xref:System.Messaging.MessageQueue.Label%2A>屬性來設定佇列的<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-122">Lastly, you can use the queue's <xref:System.Messaging.MessageQueue.Label%2A> property to set the queue's <xref:System.Messaging.MessageQueue.Path%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-123">如需執行個體的初始屬性值的清單<xref:System.Messaging.MessageQueue>，請參閱<xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-123">For a list of initial property values for an instance of <xref:System.Messaging.MessageQueue>, see the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-124">下列程式碼範例，請建立新<xref:System.Messaging.MessageQueue>物件使用不同的路徑名稱語法類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-124">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="dc7c4-125">在每個案例中，它會傳送訊息至佇列的路徑定義於建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-125">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 <span data-ttu-id="dc7c4-126">下列程式碼範例將訊息傳送至佇列，並接收來自佇列中，使用呼叫的應用程式特定類別的訊息`Order`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-126">The following code example sends a message to a queue, and receives a message from a queue, using an application-specific class called `Order`.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CPP/mqreceive_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Receive_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CS/mqreceive_noparms.cs#1)]
 [!code-vb[MessageQueue.Receive_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_noparms/VB/mqreceive_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="dc7c4-127">只有<see cref="M:System.Messaging.MessageQueue.GetAllMessages" />方法是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-127">Only the <see cref="M:System.Messaging.MessageQueue.GetAllMessages" /> method is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
    <altmember cref="T:System.Messaging.MessageQueueException" />
    <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
    <altmember cref="M:System.Messaging.MessageQueue.Peek" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="P:System.Messaging.MessageQueue.Path" />
    <altmember cref="P:System.Messaging.MessageQueue.Label" />
    <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
    <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
    <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-128">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-128">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-129">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-129">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span> <span data-ttu-id="dc7c4-130">在預設建構函式將新執行個體初始化之後，您必須先設定執行個體的 <see cref="P:System.Messaging.MessageQueue.Path" /> 屬性，才能夠使用執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-130">After the default constructor initializes the new instance, you must set the instance's <see cref="P:System.Messaging.MessageQueue.Path" /> property before you can use the instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-131">若要建立的新執行個體使用此多載<xref:System.Messaging.MessageQueue>未立即繫結至訊息佇列伺服器上佇列的類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-131">Use this overload to create a new instance of the <xref:System.Messaging.MessageQueue> class that is not immediately tied to a queue on the Message Queuing server.</span></span> <span data-ttu-id="dc7c4-132">之前使用此執行個體，您必須連接到現有的 「 訊息佇列 」 佇列設定<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-132">Before using this instance, you must connect it to an existing Message Queuing queue by setting the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span> <span data-ttu-id="dc7c4-133">或者，您可以設定<xref:System.Messaging.MessageQueue>參考<xref:System.Messaging.MessageQueue.Create%28System.String%29>方法的傳回值，藉此建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-133">Alternatively, you can set the <xref:System.Messaging.MessageQueue> reference to the <xref:System.Messaging.MessageQueue.Create%28System.String%29> method's return value, thereby creating a new Message Queuing queue.</span></span>  
  
 <span data-ttu-id="dc7c4-134"><xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式具現化的新執行個體<xref:System.Messaging.MessageQueue>類別; 它不會建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-134">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor instantiates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span>  
  
 <span data-ttu-id="dc7c4-135">下表顯示的執行個體的初始屬性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-135">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span>  
  
|<span data-ttu-id="dc7c4-136">屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-136">Property</span></span>|<span data-ttu-id="dc7c4-137">Initial value</span><span class="sxs-lookup"><span data-stu-id="dc7c4-137">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="dc7c4-138">預設建構函式所設定的值<xref:System.Messaging.DefaultPropertiesToSend>類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-138">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<xref:System.Messaging.XmlMessageFormatter>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="dc7c4-139">預設建構函式所設定的值<xref:System.Messaging.MessagePropertyFilter>類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-139">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span> <span data-ttu-id="dc7c4-140">所有篩選器值都會設為`true`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-140">All the filter values are set to `true`.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-141">下列程式碼範例會建立新<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-141">The following code example creates a new <xref:System.Messaging.MessageQueue>.</span></span>  
  
 [!code-csharp[MessageQueue#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-142">這個 <see cref="T:System.Messaging.MessageQueue" /> 所參考的佇列位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-142">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span></param>
        <summary><span data-ttu-id="dc7c4-143">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體，這個執行個體會參考指定路徑的訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-143">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-144">使用此多載，當您想要將繫結新<xref:System.Messaging.MessageQueue>特定訊息佇列 」 佇列，您知道的路徑，格式名稱或標籤的執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-144">Use this overload when you want to tie the new <xref:System.Messaging.MessageQueue> instance to a particular Message Queuing queue, for which you know the path, format name, or label.</span></span> <span data-ttu-id="dc7c4-145">如果您想要授與獨佔存取權的第一個應用程式參考的佇列，則必須將<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>屬性設`true`或使用傳遞的讀取權限限制參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-145">If you want to grant exclusive access to the first application that references the queue, you must set the <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property to `true` or use the constructor that passes a read-access restriction parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-146"><xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式具現化的新執行個體<xref:System.Messaging.MessageQueue>類別; 它不會建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-146">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor instantiates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-147">若要建立新的佇列中訊息佇列，請使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-147">To create a new queue in Message Queuing, use <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-148">語法`path`參數取決於佇列類型它的參考下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-148">The syntax of the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-149">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-149">Queue type</span></span>|<span data-ttu-id="dc7c4-150">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-150">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-151">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-151">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="dc7c4-152">私用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-152">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="dc7c4-153">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-153">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="dc7c4-154">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-154">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="dc7c4-155">機器無法投遞的信件佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-155">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="dc7c4-156">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-156">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="dc7c4-157">或者，您可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>來描述佇列路徑下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-157">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path, as shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-158">參考資料</span><span class="sxs-lookup"><span data-stu-id="dc7c4-158">Reference</span></span>|<span data-ttu-id="dc7c4-159">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-159">Syntax</span></span>|<span data-ttu-id="dc7c4-160">範例</span><span class="sxs-lookup"><span data-stu-id="dc7c4-160">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="dc7c4-161">格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-161">Format name</span></span>|<span data-ttu-id="dc7c4-162">`FormatName:` [ *format name* ]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-162">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="dc7c4-163">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="dc7c4-163">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span><br /><br /> <span data-ttu-id="dc7c4-164">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="dc7c4-164">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="dc7c4-165">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="dc7c4-165">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="dc7c4-166">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="dc7c4-166">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span></span>|  
|<span data-ttu-id="dc7c4-167">標籤</span><span class="sxs-lookup"><span data-stu-id="dc7c4-167">Label</span></span>|<span data-ttu-id="dc7c4-168">`Label:` [ *label* ]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-168">`Label:` [ *label* ]</span></span>|<span data-ttu-id="dc7c4-169">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="dc7c4-169">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="dc7c4-170">若要離線工作，您必須使用格式名稱語法不建構函式的路徑名稱語法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-170">To work offline, you must use the format name syntax, not the path name syntax for the constructor.</span></span> <span data-ttu-id="dc7c4-171">否則，因為主要網域控制站無法使用路徑解析成的格式名稱，便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-171">Otherwise, an exception is thrown because the primary domain controller is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="dc7c4-172">下表顯示的執行個體的初始屬性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-172">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="dc7c4-173">這些值依 「 訊息佇列 」 佇列的屬性所指定的路徑`path`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-173">These values are based on the properties of the Message Queuing queue with the path specified by the `path` parameter.</span></span>  
  
|<span data-ttu-id="dc7c4-174">屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-174">Property</span></span>|<span data-ttu-id="dc7c4-175">Initial value</span><span class="sxs-lookup"><span data-stu-id="dc7c4-175">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.Authenticate%2A>|`false`|  
|<xref:System.Messaging.MessageQueue.BasePriority%2A>|<span data-ttu-id="dc7c4-176">0</span><span class="sxs-lookup"><span data-stu-id="dc7c4-176">0</span></span>|  
|<xref:System.Messaging.MessageQueue.Category%2A>|<xref:System.Guid.Empty>|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="dc7c4-177">預設建構函式所設定的值<xref:System.Messaging.DefaultPropertiesToSend>類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-177">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>|<span data-ttu-id="dc7c4-178">`true`如果訊息佇列 」 佇列的隱私權等級設定為"Body";否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-178">`true`, if the Message Queuing queue's privacy level setting is "Body"; otherwise, `false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<xref:System.Messaging.XmlMessageFormatter>|  
|<xref:System.Messaging.MessageQueue.Label%2A>|<xref:System.String.Empty>|  
|<xref:System.Messaging.MessageQueue.MachineName%2A>|<span data-ttu-id="dc7c4-179">「 訊息佇列 」 佇列的電腦名稱屬性的值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-179">The value of the Message Queuing queue's computer name property.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>|<xref:System.Messaging.MessageQueue.InfiniteQueueSize>|  
|<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>|<xref:System.Messaging.MessageQueue.InfiniteQueueSize>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="dc7c4-180">預設建構函式所設定的值<xref:System.Messaging.MessagePropertyFilter>類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-180">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Path%2A>|<span data-ttu-id="dc7c4-181"><xref:System.String.Empty>如果未設定建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-181"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.QueueName%2A>|<span data-ttu-id="dc7c4-182"><xref:System.String.Empty>如果未設定建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-182"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|`false`|  
|<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>|<span data-ttu-id="dc7c4-183">`true`如果已啟用訊息佇列物件的日誌設定否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-183">`true`, if the Message Queuing object's journal setting is enabled; otherwise, `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-184">下列程式碼範例，請建立新<xref:System.Messaging.MessageQueue>物件使用不同的路徑名稱語法類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-184">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="dc7c4-185">在每個案例中，它會傳送訊息至佇列的路徑定義於建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-185">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-186"><see cref="P:System.Messaging.MessageQueue.Path" /> 屬性無效，可能是因為尚未對其進行設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-186">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string * bool -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue (path, sharedModeDenyReceive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-187">這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列位置，可能是代表本機電腦的 "."。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-187">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span></span></param>
        <param name="sharedModeDenyReceive"><span data-ttu-id="dc7c4-188"><see langword="true" /> 表示將獨佔讀取的存取權限授與存取佇列的第一個應用程式，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-188"><see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dc7c4-189">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體，這個執行個體會參考指定路徑且具有指定讀取權限制的訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-189">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-190">使用此多載，當您想要將繫結新<xref:System.Messaging.MessageQueue>到特定訊息佇列 」 佇列，您知道的路徑，格式名稱或標籤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-190">Use this overload when you want to tie the new <xref:System.Messaging.MessageQueue> to a particular Message Queuing queue, for which you know the path, format name, or label.</span></span> <span data-ttu-id="dc7c4-191">如果您想要授與獨佔存取權的第一個應用程式參考的佇列，將`sharedModeDenyReceive`參數來`true`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-191">If you want to grant exclusive access to the first application that references the queue, set the `sharedModeDenyReceive` parameter to `true`.</span></span> <span data-ttu-id="dc7c4-192">否則，請設定`sharedModeDenyReceive`要`false`，或使用建構函式只有`path`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-192">Otherwise, set `sharedModeDenyReceive` to `false` or use the constructor that has only a `path` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-193">設定`sharedModeDenyReceive`至`true`影響存取 「 訊息佇列 」 佇列，包括其他應用程式的所有物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-193">Setting `sharedModeDenyReceive` to `true` affects all objects that access the Message Queuing queue, including other applications.</span></span> <span data-ttu-id="dc7c4-194">參數的效果不會限制此應用程式的選項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-194">The effects of the parameter are not restricted to this application.</span></span>  
  
 <span data-ttu-id="dc7c4-195"><xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式建立的新執行個體<xref:System.Messaging.MessageQueue>類別; 它不會建立新的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-195">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor creates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-196">若要建立新的佇列中訊息佇列，請使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-196">To create a new queue in Message Queuing, use <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-197">語法`path`參數取決於佇列的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-197">The syntax of the `path` parameter depends on the type of queue.</span></span>  
  
|<span data-ttu-id="dc7c4-198">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-198">Queue type</span></span>|<span data-ttu-id="dc7c4-199">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-199">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-200">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-200">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="dc7c4-201">私用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-201">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="dc7c4-202">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-202">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="dc7c4-203">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-203">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="dc7c4-204">機器無法投遞的信件佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-204">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="dc7c4-205">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-205">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="dc7c4-206">或者，您可以使用格式名稱或 「 訊息佇列 」 佇列的標籤，來描述為佇列路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-206">Alternatively, you can use the format name or label of a Message Queuing queue to describe the queue path.</span></span>  
  
|<span data-ttu-id="dc7c4-207">參考資料</span><span class="sxs-lookup"><span data-stu-id="dc7c4-207">Reference</span></span>|<span data-ttu-id="dc7c4-208">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-208">Syntax</span></span>|<span data-ttu-id="dc7c4-209">範例</span><span class="sxs-lookup"><span data-stu-id="dc7c4-209">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="dc7c4-210">格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-210">Format name</span></span>|<span data-ttu-id="dc7c4-211">`FormatName:` [ *format name* ]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-211">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="dc7c4-212">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="dc7c4-212">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span><br /><br /> <span data-ttu-id="dc7c4-213">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="dc7c4-213">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="dc7c4-214">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="dc7c4-214">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="dc7c4-215">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="dc7c4-215">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span></span>|  
|<span data-ttu-id="dc7c4-216">標籤</span><span class="sxs-lookup"><span data-stu-id="dc7c4-216">Label</span></span>|<span data-ttu-id="dc7c4-217">`Label:` [ *label* ]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-217">`Label:` [ *label* ]</span></span>|<span data-ttu-id="dc7c4-218">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="dc7c4-218">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="dc7c4-219">若要離線工作，您必須使用格式名稱語法中，而不是好記名稱語法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-219">To work offline, you must use the format name syntax, rather than the friendly name syntax.</span></span> <span data-ttu-id="dc7c4-220">否則，因為網域主控站 （Active Directory 所在） 不適用於將路徑解析成的格式名稱，便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-220">Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="dc7c4-221">如果<xref:System.Messaging.MessageQueue>隨即開啟的佇列`sharedModeDenyReceive`參數設為`true`，任何<xref:System.Messaging.MessageQueue>，接著嘗試從佇列讀取會產生<xref:System.Messaging.MessageQueueException>因為共用違規。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-221">If a <xref:System.Messaging.MessageQueue> opens a queue with the `sharedModeDenyReceive` parameter set to `true`, any <xref:System.Messaging.MessageQueue> that subsequently tries to read from the queue generates a <xref:System.Messaging.MessageQueueException> because of a sharing violation.</span></span> <span data-ttu-id="dc7c4-222">A<xref:System.Messaging.MessageQueueException>如果也會擲回<xref:System.Messaging.MessageQueue>嘗試存取以獨佔模式，而另一個佇列<xref:System.Messaging.MessageQueue>已佇列的非獨佔存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-222">A <xref:System.Messaging.MessageQueueException> is also thrown if a <xref:System.Messaging.MessageQueue> tries to access the queue in exclusive mode while another <xref:System.Messaging.MessageQueue> already has non-exclusive access to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-223">下表顯示的執行個體的初始屬性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-223">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="dc7c4-224">這些值依所指定的路徑上的訊息佇列 」 佇列，屬性`path`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-224">These values are based on the properties of the Message Queuing queue, with the path specified by the `path` parameter.</span></span>  
  
|<span data-ttu-id="dc7c4-225">屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-225">Property</span></span>|<span data-ttu-id="dc7c4-226">Initial value</span><span class="sxs-lookup"><span data-stu-id="dc7c4-226">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.Authenticate%2A>|<span data-ttu-id="dc7c4-227">`false`.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-227">`false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.BasePriority%2A>|<span data-ttu-id="dc7c4-228">0.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-228">0.</span></span>|  
|<xref:System.Messaging.MessageQueue.Category%2A>|<span data-ttu-id="dc7c4-229"><xref:System.Guid.Empty>.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-229"><xref:System.Guid.Empty>.</span></span>|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="dc7c4-230">預設建構函式所設定的值<xref:System.Messaging.DefaultPropertiesToSend>類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-230">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>|<span data-ttu-id="dc7c4-231">`true`如果訊息佇列 」 佇列的隱私權等級設定為"Body";否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-231">`true`, if the Message Queuing queue's privacy level setting is "Body"; otherwise, `false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<span data-ttu-id="dc7c4-232"><xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-232"><xref:System.Messaging.XmlMessageFormatter>.</span></span>|  
|<xref:System.Messaging.MessageQueue.Label%2A>|<span data-ttu-id="dc7c4-233"><xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-233"><xref:System.String.Empty>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MachineName%2A>|<span data-ttu-id="dc7c4-234">「 訊息佇列 」 佇列的電腦名稱屬性的值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-234">The value of the Message Queuing queue's computer name property.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>|<span data-ttu-id="dc7c4-235"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-235"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>|<span data-ttu-id="dc7c4-236"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-236"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="dc7c4-237">預設建構函式所設定的值<xref:System.Messaging.MessagePropertyFilter>類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-237">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Path%2A>|<span data-ttu-id="dc7c4-238"><xref:System.String.Empty>如果未設定建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-238"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.QueueName%2A>|<span data-ttu-id="dc7c4-239"><xref:System.String.Empty>如果未設定建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-239"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|<span data-ttu-id="dc7c4-240">`sharedModeDenyReceive` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-240">The value of the `sharedModeDenyReceive` parameter.</span></span>|  
|<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>|<span data-ttu-id="dc7c4-241">`true`如果已啟用訊息佇列物件的日誌設定否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-241">`true`, if the Message Queuing object's journal setting is enabled; otherwise, `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-242">下列程式碼範例會建立新<xref:System.Messaging.MessageQueue>獨佔存取權，以設定其路徑中，並將訊息傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-242">The following code example creates a new <xref:System.Messaging.MessageQueue> with exclusive access, sets its path, and sends a message to the queue.</span></span>  
  
 [!code-cpp[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/CPP/mqctor_denysharedreceive.cpp#1)]
 [!code-csharp[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/CS/mqctor_denysharedreceive.cs#1)]
 [!code-vb[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/VB/mqctor_denysharedreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-243"><see cref="P:System.Messaging.MessageQueue.Path" /> 屬性無效，可能是因為尚未對其進行設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-243">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, System.Messaging.QueueAccessMode accessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Messaging.QueueAccessMode accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, accessMode As QueueAccessMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, System::Messaging::QueueAccessMode accessMode);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string * System.Messaging.QueueAccessMode -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue (path, accessMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="accessMode" Type="System.Messaging.QueueAccessMode" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-244">這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列位置，可能是代表本機電腦的 "."。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-244">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span></span></param>
        <param name="accessMode"><span data-ttu-id="dc7c4-245">其中一個 <see cref="T:System.Messaging.QueueAccessMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-245">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span></span></param>
        <summary><span data-ttu-id="dc7c4-246">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-246">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive, bool enableCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean, enableCache As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive, bool enableCache);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string * bool * bool -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue (path, sharedModeDenyReceive, enableCache)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enableCache" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-247">這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列位置，可能是代表本機電腦的 "."。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-247">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span></span></param>
        <param name="sharedModeDenyReceive"><span data-ttu-id="dc7c4-248"><see langword="true" /> 表示將獨佔讀取的存取權限授與存取佇列的第一個應用程式，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-248"><see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span></span></param>
        <param name="enableCache"><span data-ttu-id="dc7c4-249"><see langword="true" /> 表示建立並使用連接快取，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-249"><see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dc7c4-250">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-250">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc7c4-251">下列程式碼範例會建立新<xref:System.Messaging.MessageQueue>獨佔讀取存取權與啟用快取的連線。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-251">The following code example creates a new <xref:System.Messaging.MessageQueue> with exclusive read access and with connection caching enabled.</span></span>  
  
 [!code-cpp[MessageQueue4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue4/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueue4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue4/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache, System.Messaging.QueueAccessMode accessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive, bool enableCache, valuetype System.Messaging.QueueAccessMode accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean, enableCache As Boolean, accessMode As QueueAccessMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive, bool enableCache, System::Messaging::QueueAccessMode accessMode);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string * bool * bool * System.Messaging.QueueAccessMode -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue (path, sharedModeDenyReceive, enableCache, accessMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enableCache" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="accessMode" Type="System.Messaging.QueueAccessMode" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-252">這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列位置，可能是代表本機電腦的 "."。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-252">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span></span></param>
        <param name="sharedModeDenyReceive"><span data-ttu-id="dc7c4-253"><see langword="true" /> 表示將獨佔讀取的存取權限授與存取佇列的第一個應用程式，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-253"><see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span></span></param>
        <param name="enableCache"><span data-ttu-id="dc7c4-254"><see langword="true" /> 表示建立並使用連接快取，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-254"><see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span></span></param>
        <param name="accessMode"><span data-ttu-id="dc7c4-255">其中一個 <see cref="T:System.Messaging.QueueAccessMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-255">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span></span></param>
        <summary><span data-ttu-id="dc7c4-256">初始化 <see cref="T:System.Messaging.MessageQueue" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-256">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessMode">
      <MemberSignature Language="C#" Value="public System.Messaging.QueueAccessMode AccessMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.QueueAccessMode AccessMode" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.AccessMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessMode As QueueAccessMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::QueueAccessMode AccessMode { System::Messaging::QueueAccessMode get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessMode : System.Messaging.QueueAccessMode" Usage="System.Messaging.MessageQueue.AccessMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.QueueAccessMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-257">取得值，表示佇列的存取模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-257">Gets a value that indicates the access mode for the queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-258">其中一個 <see cref="T:System.Messaging.QueueAccessMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-258">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-259">佇列的預設存取模式是`QueueAccessMode.SendAndReceive`，除非您另外指定當呼叫建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-259">The default access mode for a queue is `QueueAccessMode.SendAndReceive`, unless you specify otherwise when calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueue.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Authenticate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-260">取得或設定值，指出佇列是否只接受已驗證的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-260">Gets or sets a value that indicates whether the queue accepts only authenticated messages.</span></span></summary>
        <value><span data-ttu-id="dc7c4-261">如果佇列只接受驗證過的訊息則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-261"><see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dc7c4-262">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-262">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-263">訊息驗證提供一種方法來確保訊息完整性，以及確認誰傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-263">Message authentication provides a way to ensure message integrity and to verify who sent the message.</span></span> <span data-ttu-id="dc7c4-264">若要要求驗證，傳送應用程式會設定訊息的驗證層級。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-264">To request authentication, the sending application sets the message's authentication level.</span></span>  
  
 <span data-ttu-id="dc7c4-265">當您設定<xref:System.Messaging.MessageQueue.Authenticate%2A>要`true`，限制在伺服器上，不只對此佇列的存取權<xref:System.Messaging.MessageQueue>執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-265">When you set <xref:System.Messaging.MessageQueue.Authenticate%2A> to `true`, you are restricting access to the queue on the server, not only to this <xref:System.Messaging.MessageQueue> instance.</span></span> <span data-ttu-id="dc7c4-266">使用相同的 「 訊息佇列 」 佇列的所有用戶端會受到影響。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-266">All clients working against the same Message Queuing queue will be affected.</span></span>  
  
 <span data-ttu-id="dc7c4-267">只接受已驗證的訊息佇列將會拒絕未經驗證的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-267">A queue that accepts only authenticated messages will reject a non-authenticated message.</span></span> <span data-ttu-id="dc7c4-268">若要要求拒絕訊息的通知，傳送應用程式可以設定<xref:System.Messaging.Message.AcknowledgeType%2A>訊息屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-268">To request notification of message rejection, a sending application can set the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the message.</span></span> <span data-ttu-id="dc7c4-269">因為沒有其他指示的訊息拒絕存在時，傳送應用程式可能會遺失訊息除非您要求，它會傳送到寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-269">Because no other indication of message rejection exists, the sending application can lose the message unless you request that it be sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="dc7c4-270">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-270">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-271">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-271">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-272">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-272">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-273">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-273">Local computer</span></span>|<span data-ttu-id="dc7c4-274">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-274">Yes</span></span>|  
|<span data-ttu-id="dc7c4-275">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-275">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-276">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-276">Yes</span></span>|  
|<span data-ttu-id="dc7c4-277">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-277">Remote computer</span></span>|<span data-ttu-id="dc7c4-278">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-278">No</span></span>|  
|<span data-ttu-id="dc7c4-279">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-279">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-280">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-280">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-281">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.Authenticate%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-281">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Authenticate%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-282">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-282">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueue.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_BasePriority")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-283">取得或設定訊息佇列用來在網路上傳送公用佇列訊息的基礎優先權 (Base Priority)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-283">Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</span></span></summary>
        <value><span data-ttu-id="dc7c4-284">傳送至 (公用) 佇列的所有訊息的單一基礎優先權。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-284">The single base priority for all messages sent to the (public) queue.</span></span> <span data-ttu-id="dc7c4-285">預設值是零 (0)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-285">The default is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-286">訊息佇列的基本優先順序會指定如何路由訊息的佇列會被視為透過網路傳送。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-286">A message queue's base priority specifies how a message en route to that queue is treated as it travels through the network.</span></span> <span data-ttu-id="dc7c4-287">您可以設定<xref:System.Messaging.MessageQueue.BasePriority%2A>授與較高或較低的優先順序，傳送到傳送至其他佇列所指定的佇列的所有訊息的屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-287">You can set the <xref:System.Messaging.MessageQueue.BasePriority%2A> property to confer a higher or lower priority to all messages sent to the specified queue than those sent to other queues.</span></span> <span data-ttu-id="dc7c4-288">設定這個屬性修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-288">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-289">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-289">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="dc7c4-290">訊息佇列<xref:System.Messaging.MessageQueue.BasePriority%2A>無關<xref:System.Messaging.Message.Priority%2A>屬性的訊息，這會指定在其中傳入的訊息放在佇列中的順序。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-290">A message queue's <xref:System.Messaging.MessageQueue.BasePriority%2A> is not related to the <xref:System.Messaging.Message.Priority%2A> property of a message, which specifies the order in which an incoming message is placed in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-291"><xref:System.Messaging.MessageQueue.BasePriority%2A> 適用於使用格式名稱來指定其路徑為公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-291"><xref:System.Messaging.MessageQueue.BasePriority%2A> applies only to public queues whose paths are specified using the format name.</span></span> <span data-ttu-id="dc7c4-292">私用佇列的基本優先順序永遠是零 (0)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-292">The base priority of a private queue is always zero (0).</span></span>  
  
 <span data-ttu-id="dc7c4-293">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-293">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-294">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-294">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-295">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-295">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-296">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-296">Local computer</span></span>|<span data-ttu-id="dc7c4-297">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-297">Yes</span></span>|  
|<span data-ttu-id="dc7c4-298">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-298">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-299">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-299">Yes</span></span>|  
|<span data-ttu-id="dc7c4-300">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-300">Remote computer</span></span>|<span data-ttu-id="dc7c4-301">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-301">No</span></span>|  
|<span data-ttu-id="dc7c4-302">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-302">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-303">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-303">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-304">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.BasePriority%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-304">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.BasePriority%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-305">基礎優先權設定為無效值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-305">The base priority was set to an invalid value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-306">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-306">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPeek">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe><span data-ttu-id="dc7c4-307">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-307">The method is not thread safe.</span></span></threadsafe>
        <summary><span data-ttu-id="dc7c4-308">啟始非同步窺視作業，方法是告知訊息佇列開始窺視訊息，並在完成時告知事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-308">Initiates an asynchronous peek operation by telling Message Queuing to begin peeking a message and notify the event handler when finished.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek();" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : unit -&gt; IAsyncResult" Usage="messageQueue.BeginPeek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-309">啟始沒有逾時的非同步窺視作業。作業要等到訊息可以在佇列中使用之後才算完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-309">Initiates an asynchronous peek operation that has no time-out. The operation is not complete until a message becomes available in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-310">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-310">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-311">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件佇列中出現一則訊息時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-311">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-312"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-312"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-313">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-313">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="dc7c4-314"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 啟始非同步窺視作業;<xref:System.Messaging.MessageQueue> ，透過的引發會通知<xref:System.Messaging.MessageQueue.PeekCompleted>事件，當訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-314"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-315"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或藉由擷取結果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-315">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="dc7c4-316"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-316">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-317">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步的您可以呼叫它來查看佇列，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-317">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-318">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-318">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-319">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-319">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-320"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginPeek%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-320">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginPeek%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-321">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-321">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-322">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-322">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-323">在此案例中，您會使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-323">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-324">如果<xref:System.Messaging.MessageQueue.CanRead%2A>已`false`，會引發了完成事件，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-324">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-325">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-325">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-326">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-326">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-327">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-327">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-328">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-328">Local computer</span></span>|<span data-ttu-id="dc7c4-329">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-329">Yes</span></span>|  
|<span data-ttu-id="dc7c4-330">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-330">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-331">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-331">Yes</span></span>|  
|<span data-ttu-id="dc7c4-332">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-332">Remote computer</span></span>|<span data-ttu-id="dc7c4-333">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-333">No</span></span>|  
|<span data-ttu-id="dc7c4-334">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-334">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-335">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-335">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-336">下列程式碼範例會建立名為事件處理常式`MyPeekCompleted`，將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式的委派，以及呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>起始位於路徑的佇列上的非同步窺視作業 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-336">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="dc7c4-337">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，範例窺視的訊息，並將其主體寫入螢幕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-337">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="dc7c4-338">此範例接著會呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A> 以起始新的非同步窺視作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-338">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-339">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-339">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-340">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-340">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : TimeSpan -&gt; IAsyncResult" Usage="messageQueue.BeginPeek timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-341"><see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-341">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <summary><span data-ttu-id="dc7c4-342">啟始有指定逾時的非同步窺視作業。在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-342">Initiates an asynchronous peek operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-343">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-343">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-344">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引發<xref:System.Messaging.MessageQueue.PeekCompleted>時可用的訊息佇列中，或指定的時間間隔已過期事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-344">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="dc7c4-345"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-345"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-346">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-346">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="dc7c4-347"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 啟始非同步窺視作業;<xref:System.Messaging.MessageQueue> ，透過的引發會通知<xref:System.Messaging.MessageQueue.PeekCompleted>事件，當訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-347"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-348"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或藉由擷取結果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-348">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="dc7c4-349"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-349">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-350">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步的您可以呼叫它來查看佇列，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-350">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-351">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-351">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-352">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-352">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-353"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginPeek%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-353">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginPeek%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-354">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-354">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-355">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-355">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-356">在此案例中，您會使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-356">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-357">這個多載指定逾時。如果指定的間隔`timeout`參數，此元件會引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-357">This overload specifies a time-out. If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="dc7c4-358">因為不存在，後續呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-358">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-359">如果<xref:System.Messaging.MessageQueue.CanRead%2A>已`false`，會引發了完成事件，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-359">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-360">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-360">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-361">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-361">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-362">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-362">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-363">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-363">Local computer</span></span>|<span data-ttu-id="dc7c4-364">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-364">Yes</span></span>|  
|<span data-ttu-id="dc7c4-365">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-365">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-366">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-366">Yes</span></span>|  
|<span data-ttu-id="dc7c4-367">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-367">Remote computer</span></span>|<span data-ttu-id="dc7c4-368">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-368">No</span></span>|  
|<span data-ttu-id="dc7c4-369">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-369">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-370">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-370">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-371">下列程式碼範例會建立的非同步窺視作業，使用的佇列路徑 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-371">The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</span></span> <span data-ttu-id="dc7c4-372">它會建立事件處理常式`MyPeekCompleted`，並將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-372">It creates an event handler, `MyPeekCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate.</span></span> <span data-ttu-id="dc7c4-373"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 啟始非同步窺視作業，會呼叫逾時值為一分鐘的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-373"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is called with a time-out of one minute, to initiate the asynchronous peek operation.</span></span> <span data-ttu-id="dc7c4-374">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件或逾時到期，如果有的話，而且其主體寫到螢幕擷取訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-374">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised or the time-out expires, the message is retrieved if one exists, and its body is written to the screen.</span></span> <span data-ttu-id="dc7c4-375">然後<xref:System.Messaging.MessageQueue.BeginPeek%2A>再次呼叫以初始化新的非同步窺視作業，以相同的逾時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-375">Then <xref:System.Messaging.MessageQueue.BeginPeek%2A> is called again to initiate a new asynchronous peek operation with the same time-out.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/CPP/mqbeginpeek_timeout.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/CS/mqbeginpeek_timeout.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/VB/mqbeginpeek_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-376">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-376">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-377">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-377">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-378">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-378">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : TimeSpan * obj -&gt; IAsyncResult" Usage="messageQueue.BeginPeek (timeout, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-379"><see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-379">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="stateObject"><span data-ttu-id="dc7c4-380">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-380">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="dc7c4-381">啟始有指定逾時和指定狀態物件的非同步窺視作業，會在作業的整個存留期內提供相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-381">Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span></span> <span data-ttu-id="dc7c4-382">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-382">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-383">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-383">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-384">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引發<xref:System.Messaging.MessageQueue.PeekCompleted>時可用的訊息佇列中，或指定的時間間隔已過期事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-384">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="dc7c4-385"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-385"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-386">您可以使用此多載，將整個作業的存留期會保留作業相關聯的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-386">Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</span></span> <span data-ttu-id="dc7c4-387">事件處理常式可以存取此資訊，請查看<xref:System.IAsyncResult.AsyncState%2A>屬性<xref:System.IAsyncResult>與作業相關聯。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-387">The event handler can access this information by looking at the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> that is associated with the operation.</span></span>  
  
 <span data-ttu-id="dc7c4-388">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-388">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="dc7c4-389"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 啟始非同步窺視作業;<xref:System.Messaging.MessageQueue> ，透過的引發會通知<xref:System.Messaging.MessageQueue.PeekCompleted>事件，當訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-389"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-390"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或藉由擷取結果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-390">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="dc7c4-391"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-391">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-392">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步的您可以呼叫它來查看佇列，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-392">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-393">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-393">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-394">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-394">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-395"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 傳回<xref:System.IAsyncResult>可識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-395"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-396">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-396">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-397">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-397">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-398">在此案例中，您會使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-398">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-399">這個多載指定逾時和狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-399">This overload specifies a time-out and a state object.</span></span> <span data-ttu-id="dc7c4-400">如果指定的間隔`timeout`參數，此元件會引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-400">If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="dc7c4-401">因為不存在，後續呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-401">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-402">與作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-402">The state object associates state information with the operation.</span></span> <span data-ttu-id="dc7c4-403">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次，以便起始多項作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-403">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span> <span data-ttu-id="dc7c4-404">如需此案例的圖例，請參閱 < 範例 > 一節。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-404">For an illustration of this scenario, see the Example section.</span></span>  
  
 <span data-ttu-id="dc7c4-405">您也可以將資訊傳遞到處理序執行緒使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-405">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="dc7c4-406">如果在執行緒啟動，但回呼是在不同的執行緒，在非同步案例中，狀態物件會封送處理，並從事件傳遞的資訊一起傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-406">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="dc7c4-407">如果<xref:System.Messaging.MessageQueue.CanRead%2A>已`false`，會引發了完成事件，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-407">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-408">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-408">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-409">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-409">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-410">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-410">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-411">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-411">Local computer</span></span>|<span data-ttu-id="dc7c4-412">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-412">Yes</span></span>|  
|<span data-ttu-id="dc7c4-413">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-413">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-414">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-414">Yes</span></span>|  
|<span data-ttu-id="dc7c4-415">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-415">Remote computer</span></span>|<span data-ttu-id="dc7c4-416">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-416">No</span></span>|  
|<span data-ttu-id="dc7c4-417">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-417">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-418">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-418">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-419">下列程式碼範例會建立的非同步窺視作業，使用的佇列路徑 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-419">The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</span></span> <span data-ttu-id="dc7c4-420">它會建立事件處理常式`MyPeekCompleted`，並將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-420">It creates an event handler, `MyPeekCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate.</span></span> <span data-ttu-id="dc7c4-421"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 呼叫時，一分鐘的逾時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-421"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is called, with a time-out of one minute.</span></span> <span data-ttu-id="dc7c4-422">每次呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>已識別該特定作業的唯一相關聯的整數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-422">Each call to <xref:System.Messaging.MessageQueue.BeginPeek%2A> has a unique associated integer that identifies that particular operation.</span></span> <span data-ttu-id="dc7c4-423">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，或在逾時到期時，擷取訊息，如果有的話，和其主體和作業特定的整數識別碼會寫到螢幕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-423">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised or the time-out expired, the message, if one exists, is retrieved and its body and the operation-specific integer identifier are written to the screen.</span></span> <span data-ttu-id="dc7c4-424">然後<xref:System.Messaging.MessageQueue.BeginPeek%2A>會再次呼叫以起始新的非同步窺視作業，使用相同的逾時和就已完成之作業的相關聯的整數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-424">Then <xref:System.Messaging.MessageQueue.BeginPeek%2A> is called again to initiate a new asynchronous peek operation with the same time-out and the associated integer of the just completed operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/CPP/mqbeginpeek_timeoutstateobject.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/CS/mqbeginpeek_timeoutstateobject.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/VB/mqbeginpeek_timeoutstateobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-425">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-425">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-426">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-426">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-427">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-427">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, object stateObject, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan, stateObject As Object, callback As AsyncCallback) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Object ^ stateObject, AsyncCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : TimeSpan * obj * AsyncCallback -&gt; IAsyncResult" Usage="messageQueue.BeginPeek (timeout, stateObject, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-428"><see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-428">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="stateObject"><span data-ttu-id="dc7c4-429">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-429">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="dc7c4-430">會接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-430">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</span></span></param>
        <summary><span data-ttu-id="dc7c4-431">啟始有指定逾時和指定狀態物件的非同步窺視作業，會在作業的整個存留期內提供相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-431">Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span></span> <span data-ttu-id="dc7c4-432">這個多載會透過回呼，接收作業的事件處理常式的識別通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-432">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="dc7c4-433">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-433">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-434">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-434">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-435">當您使用這個多載時，回呼參數中指定的回呼時叫用直接訊息成為可用的佇列中，或指定的時間間隔已過期;<xref:System.Messaging.MessageQueue.PeekCompleted>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-435">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.PeekCompleted> event is not raised.</span></span> <span data-ttu-id="dc7c4-436">其他多載<xref:System.Messaging.MessageQueue.BeginPeek%2A>依賴此元件以引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-436">The other overloads of <xref:System.Messaging.MessageQueue.BeginPeek%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span>  
  
 <span data-ttu-id="dc7c4-437"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-437"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-438"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-438">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-439">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步的您可以呼叫它來查看佇列，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-439">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-440">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-440">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-441">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-441">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-442"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 傳回<xref:System.IAsyncResult>可識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-442"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-443">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-443">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-444">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-444">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-445">在此案例中，您會使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-445">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-446">與作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-446">The state object associates state information with the operation.</span></span> <span data-ttu-id="dc7c4-447">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次，以便起始多項作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-447">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="dc7c4-448">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-448">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-449">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-449">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-450">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-450">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-451">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-451">Local computer</span></span>|<span data-ttu-id="dc7c4-452">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-452">Yes</span></span>|  
|<span data-ttu-id="dc7c4-453">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-453">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-454">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-454">Yes</span></span>|  
|<span data-ttu-id="dc7c4-455">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-455">Remote computer</span></span>|<span data-ttu-id="dc7c4-456">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-456">No</span></span>|  
|<span data-ttu-id="dc7c4-457">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-457">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-458">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-458">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-459">下列程式碼範例會建立的非同步窺視作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-459">The following code example creates an asynchronous peek operation.</span></span> <span data-ttu-id="dc7c4-460">程式碼範例中傳送訊息至本機訊息佇列，然後呼叫<xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>，並傳入： 逾時值為 10 秒，識別該特定的訊息; 以及的新執行個體的唯一整數<xref:System.AsyncCallback>可識別事件處理常式`MyPeekCompleted`.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-460">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <xref:System.AsyncCallback> that identifies the event handler, `MyPeekCompleted`.</span></span> <span data-ttu-id="dc7c4-461">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件、 事件處理常式窺視的訊息及螢幕中寫入訊息本文和訊息屬性的整數識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-461">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the event handler peeks at the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginPeek#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginPeek/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginPeek#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginPeek/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-462">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-462">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-463">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-463">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-464">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-464">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action, object state, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.PeekAction action, object state, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::PeekAction action, System::Object ^ state, AsyncCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : TimeSpan * System.Messaging.Cursor * System.Messaging.PeekAction * obj * AsyncCallback -&gt; IAsyncResult" Usage="messageQueue.BeginPeek (timeout, cursor, action, state, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="action" Type="System.Messaging.PeekAction" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-465"><see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-465">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="cursor"><span data-ttu-id="dc7c4-466"><see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-466">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="action"><span data-ttu-id="dc7c4-467">其中一個 <see cref="T:System.Messaging.PeekAction" /> 值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-467">One of the <see cref="T:System.Messaging.PeekAction" /> values.</span></span> <span data-ttu-id="dc7c4-468">指出要窺視佇列中的目前訊息，還是下一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-468">Indicates whether to peek at the current message in the queue, or the next message.</span></span></param>
        <param name="state"><span data-ttu-id="dc7c4-469">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-469">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="dc7c4-470"><see cref="T:System.AsyncCallback" />，接收非同步作業的完成通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-470">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion.</span></span></param>
        <summary><span data-ttu-id="dc7c4-471">啟始非同步窺視作業，該作業具有指定的逾時，並使用指定的游標、指定的窺視動作和指定的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-471">Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object.</span></span> <span data-ttu-id="dc7c4-472">狀態物件提供整個作業存留期的相關聯資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-472">The state object provides associated information throughout the lifetime of the operation.</span></span> <span data-ttu-id="dc7c4-473">這個多載會透過回呼，接收作業的事件處理常式的識別通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-473">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="dc7c4-474">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-474">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-475">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-475">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-476">當您使用這個多載時，回呼參數中指定的回呼時叫用直接訊息成為可用時指定的時間間隔已過期，或在佇列訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-476">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired.</span></span> <span data-ttu-id="dc7c4-477"><xref:System.Messaging.MessageQueue.PeekCompleted>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-477">The <xref:System.Messaging.MessageQueue.PeekCompleted> event is not raised.</span></span> <span data-ttu-id="dc7c4-478">其他多載<xref:System.Messaging.MessageQueue.BeginPeek%2A>依賴此元件以引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-478">The other overloads of <xref:System.Messaging.MessageQueue.BeginPeek%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span>  
  
 <span data-ttu-id="dc7c4-479"><xref:System.Messaging.MessageQueue.PeekCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-479"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-480"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-480">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-481">因為<xref:System.Messaging.MessageQueue.BeginPeek%2A>是非同步的您可以呼叫它來查看佇列，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-481">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-482">若要以同步方式查看佇列，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-482">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-483">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-483">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-484"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 傳回<xref:System.IAsyncResult>識別方法所啟動的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-484"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation started by the method.</span></span> <span data-ttu-id="dc7c4-485">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-485">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-486">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-486">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-487">在此案例中，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-487">In this case, use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-488">與作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-488">The state object associates state information with the operation.</span></span> <span data-ttu-id="dc7c4-489">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次，以便起始多項作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-489">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="dc7c4-490">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-490">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-491">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-491">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-492">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-492">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-493">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-493">Local computer</span></span>|<span data-ttu-id="dc7c4-494">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-494">Yes</span></span>|  
|<span data-ttu-id="dc7c4-495">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-495">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-496">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-496">Yes</span></span>|  
|<span data-ttu-id="dc7c4-497">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-497">Remote computer</span></span>|<span data-ttu-id="dc7c4-498">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-498">No</span></span>|  
|<span data-ttu-id="dc7c4-499">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-499">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-500">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-500">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc7c4-501">為 <paramref name="action" /> 參數指定 <see langword="PeekAction.Current" /> 或 <see langword="PeekAction.Next" /> 以外的值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-501">A value other than <see langword="PeekAction.Current" /> or <see langword="PeekAction.Next" /> was specified for the <paramref name="action" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-502"><paramref name="cursor" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-502">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-503">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-503">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-504">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-504">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-505">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-505">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReceive">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe><span data-ttu-id="dc7c4-506">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-506">The method is not thread safe.</span></span></threadsafe>
        <summary><span data-ttu-id="dc7c4-507">啟始非同步接收作業，方法是告知訊息佇列開始接收訊息，並在完成時告知事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-507">Initiates an asynchronous receive operation by telling Message Queuing to begin receiving a message and notify the event handler when finished.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive();" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : unit -&gt; IAsyncResult" Usage="messageQueue.BeginReceive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-508">啟始沒有逾時的非同步接收作業。作業要等到訊息可以在佇列中使用之後才算完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-508">Initiates an asynchronous receive operation that has no time-out. The operation is not complete until a message becomes available in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-509">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-509">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-510">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>時從佇列中移除訊息的事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-510">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message has been removed from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-511"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-511"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-512">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-512">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="dc7c4-513"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業;<xref:System.Messaging.MessageQueue> ，透過的引發會通知<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，當訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-513"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-514"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-514">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-515"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-515">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-516">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步的您可以呼叫它來從佇列接收訊息，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-516">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-517">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-517">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-518">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-518">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-519"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-519">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-520">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-520">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-521">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-521">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-522">在此案例中，您會使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-522">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-523">如果<xref:System.Messaging.MessageQueue.CanRead%2A>已`false`，會引發了完成事件，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-523">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-524">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-524">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="dc7c4-525">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，並放在交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>窺視作業在您建立的事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-525">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="dc7c4-526">您的事件處理常式可能會包含功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-526">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="dc7c4-527">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-527">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-528">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-528">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-529">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-529">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-530">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-530">Local computer</span></span>|<span data-ttu-id="dc7c4-531">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-531">Yes</span></span>|  
|<span data-ttu-id="dc7c4-532">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-532">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-533">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-533">Yes</span></span>|  
|<span data-ttu-id="dc7c4-534">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-534">Remote computer</span></span>|<span data-ttu-id="dc7c4-535">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-535">No</span></span>|  
|<span data-ttu-id="dc7c4-536">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-536">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-537">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-537">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-538">下列程式碼範例鏈結非同步要求。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-538">The following code example chains asynchronous requests.</span></span> <span data-ttu-id="dc7c4-539">它會假設在稱為 「 myQueue 「 本機電腦上沒有佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-539">It assumes there is a queue on the local computer called "myQueue".</span></span> <span data-ttu-id="dc7c4-540">`Main`函式開始非同步作業所處理的`MyReceiveCompleted`常式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-540">The `Main` function begins the asynchronous operation that is handled by the `MyReceiveCompleted` routine.</span></span> <span data-ttu-id="dc7c4-541">`MyReceiveCompleted` 處理目前的訊息，並開始新的非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-541">`MyReceiveCompleted` processes the current message and begins a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_mre.cpp#1)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_mre.cs#1)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_mre.vb#1)]  
  
 <span data-ttu-id="dc7c4-542">下列程式碼範例會排入佇列的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-542">The following code example queues asynchronous requests.</span></span> <span data-ttu-id="dc7c4-543">若要在呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>中它的傳回值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-543">The call to <xref:System.Messaging.MessageQueue.BeginReceive%2A> uses the <xref:System.IAsyncResult.AsyncWaitHandle%2A> in its return value.</span></span> <span data-ttu-id="dc7c4-544">`Main`常式會等到所有的非同步作業完成之前結束。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-544">The `Main` routine waits for all asynchronous operations to be completed before exiting.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_wh.cpp#2)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_wh.cs#2)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_wh.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-545">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-545">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-546">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-546">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : TimeSpan -&gt; IAsyncResult" Usage="messageQueue.BeginReceive timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-547"><see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-547">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <summary><span data-ttu-id="dc7c4-548">啟始有指定逾時的非同步接收作業。在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-548">Initiates an asynchronous receive operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-549">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-549">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-550">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>時可用的訊息佇列中，或指定的時間間隔已過期事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-550">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="dc7c4-551"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-551"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-552">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-552">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="dc7c4-553"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業;<xref:System.Messaging.MessageQueue> ，透過的引發會通知<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，當訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-553"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-554"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或擷取結果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-554">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="dc7c4-555"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-555">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-556">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步的您可以呼叫它來從佇列接收訊息，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-556">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-557">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-557">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-558">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-558">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-559">如果<xref:System.Messaging.MessageQueue.CanRead%2A>已`false`，會引發了完成事件，但呼叫時，會擲回例外狀況<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-559">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-560"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-560">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-561">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-561">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-562">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-562">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-563">在此案例中，您會使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-563">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-564">這個多載指定逾時。如果指定的間隔`timeout`參數，此元件會引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-564">This overload specifies a time-out. If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="dc7c4-565">因為不存在，後續呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-565">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-566">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-566">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="dc7c4-567">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，並放在交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>窺視作業在您建立的事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-567">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="dc7c4-568">您的事件處理常式可能會包含功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-568">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="dc7c4-569">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-569">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-570">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-570">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-571">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-571">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-572">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-572">Local computer</span></span>|<span data-ttu-id="dc7c4-573">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-573">Yes</span></span>|  
|<span data-ttu-id="dc7c4-574">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-574">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-575">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-575">Yes</span></span>|  
|<span data-ttu-id="dc7c4-576">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-576">Remote computer</span></span>|<span data-ttu-id="dc7c4-577">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-577">No</span></span>|  
|<span data-ttu-id="dc7c4-578">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-578">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-579">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-579">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-580">下列程式碼範例會建立非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-580">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="dc7c4-581">在程式碼範例會建立事件處理常式`MyReceiveCompleted`，並將它附加至<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件處理常式委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-581">The code example creates an event handler, `MyReceiveCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate.</span></span> <span data-ttu-id="dc7c4-582">程式碼範例中傳送訊息至本機訊息佇列，然後呼叫<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29>，並傳入逾時值為 10 秒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-582">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29>, passing in a time-out value of ten seconds.</span></span> <span data-ttu-id="dc7c4-583">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件、 事件處理常式會接收訊息，並將訊息本文寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-583">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive1#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive1/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive1#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive1/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-584"><paramref name="timeout" /> 參數所指定的值無效，可能是因為它表示負數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-584">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly because it represents a negative number.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-585">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-585">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-586">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-586">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : TimeSpan * obj -&gt; IAsyncResult" Usage="messageQueue.BeginReceive (timeout, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-587"><see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-587">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="stateObject"><span data-ttu-id="dc7c4-588">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-588">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="dc7c4-589">啟始有指定逾時和指定狀態物件的非同步接收作業，會在作業的整個存留期內提供相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-589">Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span></span> <span data-ttu-id="dc7c4-590">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-590">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-591">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-591">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-592">在非同步處理，您可以使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>時可用的訊息佇列中，或指定的時間間隔已過期事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-592">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="dc7c4-593"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-593"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-594">您可以使用此多載，將整個作業的存留期會保留作業相關聯的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-594">Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</span></span> <span data-ttu-id="dc7c4-595">事件處理常式可以偵測這項資訊來看看<xref:System.IAsyncResult.AsyncState%2A>屬性<xref:System.IAsyncResult>與作業相關聯。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-595">The event handler can detect this information by looking at the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> that is associated with the operation.</span></span>  
  
 <span data-ttu-id="dc7c4-596">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-596">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="dc7c4-597"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業;<xref:System.Messaging.MessageQueue> ，透過的引發會通知<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，當訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-597"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-598"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或擷取結果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-598">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="dc7c4-599"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-599">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-600">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步的您可以呼叫它來從佇列接收訊息，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-600">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-601">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-601">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-602">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-602">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-603"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-603">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-604">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-604">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-605">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-605">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-606">在此案例中，您會使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-606">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-607">這個多載指定逾時和狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-607">This overload specifies a time-out and a state object.</span></span> <span data-ttu-id="dc7c4-608">如果指定的間隔`timeout`參數，此元件會引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-608">If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="dc7c4-609">因為不存在，後續呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-609">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-610">與作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-610">The state object associates state information with the operation.</span></span> <span data-ttu-id="dc7c4-611">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次，以便起始多項作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-611">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="dc7c4-612">您也可以將資訊傳遞到處理序執行緒使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-612">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="dc7c4-613">如果在執行緒啟動，但回呼是在不同的執行緒，在非同步案例中，狀態物件會封送處理，並從事件傳遞的資訊一起傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-613">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="dc7c4-614">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-614">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="dc7c4-615">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，並放在交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>窺視作業在您建立的事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-615">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="dc7c4-616">您的事件處理常式可能會包含功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-616">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="dc7c4-617">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-617">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-618">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-618">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-619">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-619">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-620">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-620">Local computer</span></span>|<span data-ttu-id="dc7c4-621">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-621">Yes</span></span>|  
|<span data-ttu-id="dc7c4-622">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-622">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-623">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-623">Yes</span></span>|  
|<span data-ttu-id="dc7c4-624">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-624">Remote computer</span></span>|<span data-ttu-id="dc7c4-625">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-625">No</span></span>|  
|<span data-ttu-id="dc7c4-626">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-626">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-627">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-627">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-628">下列程式碼範例會建立非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-628">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="dc7c4-629">在程式碼範例會建立事件處理常式`MyReceiveCompleted`，並將它附加至<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件處理常式委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-629">The code example creates an event handler, `MyReceiveCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate.</span></span> <span data-ttu-id="dc7c4-630">程式碼範例中傳送訊息至本機訊息佇列，然後呼叫<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29>，並傳入逾時值為 10 秒，並識別該特定訊息的唯一整數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-630">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29>, passing in a time-out value of ten seconds and a unique integer that identifies that particular message.</span></span> <span data-ttu-id="dc7c4-631">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件、 事件處理常式會接收訊息，並將訊息內文和整數的訊息識別項寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-631">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive2#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive2/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive2#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive2/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-632">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-632">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-633">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-633">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-634">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-634">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, object stateObject, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, stateObject As Object, callback As AsyncCallback) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Object ^ stateObject, AsyncCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : TimeSpan * obj * AsyncCallback -&gt; IAsyncResult" Usage="messageQueue.BeginReceive (timeout, stateObject, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-635"><see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-635">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="stateObject"><span data-ttu-id="dc7c4-636">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-636">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="dc7c4-637">會接收非同步作業完成通知的 <see cref="T:System.AsyncCallback" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-637">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</span></span></param>
        <summary><span data-ttu-id="dc7c4-638">啟始有指定逾時和指定狀態物件的非同步接收作業，會在作業的整個存留期內提供相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-638">Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span></span> <span data-ttu-id="dc7c4-639">這個多載會透過回呼，接收作業的事件處理常式的識別通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-639">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="dc7c4-640">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-640">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-641">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-641">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-642">當您使用這個多載時，回呼參數中指定的回呼時叫用直接訊息成為可用的佇列中，或指定的時間間隔已過期;<xref:System.Messaging.MessageQueue.ReceiveCompleted>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-642">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is not raised.</span></span> <span data-ttu-id="dc7c4-643">其他多載<xref:System.Messaging.MessageQueue.BeginReceive%2A>依賴此元件以引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-643">The other overloads of <xref:System.Messaging.MessageQueue.BeginReceive%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span>  
  
 <span data-ttu-id="dc7c4-644"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-644"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-645">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-645">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="dc7c4-646"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業;<xref:System.Messaging.MessageQueue> ，透過的引發會通知<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，當訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-646"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-647"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或擷取結果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-647">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="dc7c4-648"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-648">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-649">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步的您可以呼叫它來從佇列接收訊息，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-649">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-650">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-650">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-651">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-651">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-652"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-652">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-653">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-653">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-654">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-654">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-655">在此案例中，您會使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-655">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-656">與作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-656">The state object associates state information with the operation.</span></span> <span data-ttu-id="dc7c4-657">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次，以便起始多項作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-657">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="dc7c4-658">您也可以將資訊傳遞到處理序執行緒使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-658">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="dc7c4-659">如果在執行緒啟動，但回呼是在不同的執行緒，在非同步案例中，狀態物件會封送處理，並從事件傳遞的資訊一起傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-659">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="dc7c4-660">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-660">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="dc7c4-661">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，並放在交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>窺視作業在您建立的事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-661">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="dc7c4-662">您的事件處理常式可能會包含功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-662">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="dc7c4-663">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-663">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-664">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-664">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-665">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-665">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-666">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-666">Local computer</span></span>|<span data-ttu-id="dc7c4-667">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-667">Yes</span></span>|  
|<span data-ttu-id="dc7c4-668">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-668">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-669">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-669">Yes</span></span>|  
|<span data-ttu-id="dc7c4-670">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-670">Remote computer</span></span>|<span data-ttu-id="dc7c4-671">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-671">No</span></span>|  
|<span data-ttu-id="dc7c4-672">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-672">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-673">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-673">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-674">下列程式碼範例會建立非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-674">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="dc7c4-675">程式碼範例中傳送訊息至本機訊息佇列，然後呼叫<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>，並傳入： 逾時值為 10 秒，識別該特定的訊息; 以及的新執行個體的唯一整數<xref:System.AsyncCallback>可識別事件處理常式`MyReceiveCompleted`.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-675">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <xref:System.AsyncCallback> that identifies the event handler, `MyReceiveCompleted`.</span></span> <span data-ttu-id="dc7c4-676">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件、 事件處理常式會接收訊息，並將訊息內文和整數的訊息識別項寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-676">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive3#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive3/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive3#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive3/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-677">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-677">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-678">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-678">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-679">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-679">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, System.Messaging.Cursor cursor, object state, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, object state, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Object ^ state, AsyncCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : TimeSpan * System.Messaging.Cursor * obj * AsyncCallback -&gt; IAsyncResult" Usage="messageQueue.BeginReceive (timeout, cursor, state, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-680"><see cref="T:System.TimeSpan" />，指出等待訊息變成可以使用的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-680">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="cursor"><span data-ttu-id="dc7c4-681"><see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-681">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="state"><span data-ttu-id="dc7c4-682">應用程式指定的狀態物件，包含與非同步作業相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-682">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="dc7c4-683"><see cref="T:System.AsyncCallback" />，接收非同步作業的完成通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-683">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion.</span></span></param>
        <summary><span data-ttu-id="dc7c4-684">初始化非同步接收作業，該作業具有指定的逾時，並使用指定的游標和指定的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-684">Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object.</span></span> <span data-ttu-id="dc7c4-685">狀態物件提供整個作業存留期的相關聯資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-685">The state object provides associated information throughout the lifetime of the operation.</span></span> <span data-ttu-id="dc7c4-686">這個多載會透過回呼，接收作業的事件處理常式的識別通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-686">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="dc7c4-687">在訊息可以於佇列中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-687">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-688">識別傳送的非同步要求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-688">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-689">當您使用這個多載時，回呼參數中指定的回呼時叫用直接訊息成為可用的佇列中，或指定的時間間隔已過期;<xref:System.Messaging.MessageQueue.ReceiveCompleted>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-689">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is not raised.</span></span> <span data-ttu-id="dc7c4-690">其他多載<xref:System.Messaging.MessageQueue.BeginReceive%2A>依賴此元件以引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-690">The other overloads of <xref:System.Messaging.MessageQueue.BeginReceive%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span>  
  
 <span data-ttu-id="dc7c4-691"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也會引發如果佇列中已有一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-691"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-692">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 建立事件處理常式處理非同步作業的結果，以及其關聯事件委派。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-692">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="dc7c4-693"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 啟始的非同步接收作業;<xref:System.Messaging.MessageQueue> ，透過的引發會通知<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，當訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-693"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-694"><xref:System.Messaging.MessageQueue>可以存取訊息藉由呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或擷取結果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-694">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="dc7c4-695"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法會立即傳回，但在呼叫事件處理常式之前未完成的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-695">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="dc7c4-696">因為<xref:System.Messaging.MessageQueue.BeginReceive%2A>是非同步的您可以呼叫它來從佇列接收訊息，而不會封鎖目前執行緒的執行。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-696">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="dc7c4-697">若要以同步方式接收訊息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-697">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-698">非同步作業完成後，您可以呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次在事件處理常式，才能持續收到通知。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-698">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="dc7c4-699"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>傳回識別方法開始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-699">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="dc7c4-700">您可以使用此<xref:System.IAsyncResult>存留期的作業，雖然您通常不會使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-700">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="dc7c4-701">不過，如果您啟動數個非同步作業，您可以將其<xref:System.IAsyncResult>陣列中的值，並指定是否要等到所有作業或完成任何作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-701">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="dc7c4-702">在此案例中，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>屬性<xref:System.IAsyncResult>來識別已完成的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-702">In this case, use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="dc7c4-703">與作業的狀態物件產生關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-703">The state object associates state information with the operation.</span></span> <span data-ttu-id="dc7c4-704">例如，如果您呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次，以便起始多項作業，您可以識別每個作業，透過您定義個別的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-704">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="dc7c4-705">您也可以將資訊傳遞到處理序執行緒使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-705">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="dc7c4-706">如果在執行緒啟動，但回呼是在不同的執行緒，在非同步案例中，狀態物件會封送處理，並從事件傳遞的資訊一起傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-706">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="dc7c4-707">請勿使用非同步呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>與交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-707">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="dc7c4-708">如果您想要執行的交易式的非同步作業，呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>，並放在交易和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>窺視作業在您建立的事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-708">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="dc7c4-709">您的事件處理常式可能會包含功能，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-709">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="dc7c4-710">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-710">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-711">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-711">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-712">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-712">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-713">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-713">Local computer</span></span>|<span data-ttu-id="dc7c4-714">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-714">Yes</span></span>|  
|<span data-ttu-id="dc7c4-715">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-715">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-716">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-716">Yes</span></span>|  
|<span data-ttu-id="dc7c4-717">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-717">Remote computer</span></span>|<span data-ttu-id="dc7c4-718">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-718">No</span></span>|  
|<span data-ttu-id="dc7c4-719">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-719">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-720">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-720">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-721"><paramref name="cursor" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-721">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-722">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-722">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-723">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-723">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-724">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-724">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Messaging.MessageQueue.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_CanRead")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-725">取得值，指出是否可讀取 <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-725">Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be read.</span></span></summary>
        <value><span data-ttu-id="dc7c4-726">如果 <see cref="T:System.Messaging.MessageQueue" /> 存在而且應用程式可以從它讀取，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-726"><see langword="true" /> if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can read from it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-727"><xref:System.Messaging.MessageQueue.CanRead%2A> 指出應用程式是否能夠查看，或從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-727"><xref:System.Messaging.MessageQueue.CanRead%2A> indicates whether the application is able to peek or receive messages from the queue.</span></span> <span data-ttu-id="dc7c4-728">如果<xref:System.Messaging.MessageQueue.CanRead%2A>已`true`，則<xref:System.Messaging.MessageQueue>可以接收或窺視佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-728">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `true`, the <xref:System.Messaging.MessageQueue> can receive or peek messages from the queue.</span></span> <span data-ttu-id="dc7c4-729">否則，它不能。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-729">Otherwise, it cannot.</span></span>  
  
 <span data-ttu-id="dc7c4-730"><xref:System.Messaging.MessageQueue.CanRead%2A> 已`false`如果佇列已開啟且獨佔的讀取權限 (或者如果它是以非獨佔存取，而這開啟<xref:System.Messaging.MessageQueue>要求獨佔存取權)，或如果應用程式並沒有足夠的權限來存取它。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-730"><xref:System.Messaging.MessageQueue.CanRead%2A> is `false` if a queue is already open with exclusive read access (or if it's open with non-exclusive access and this <xref:System.Messaging.MessageQueue> requests exclusive access), or if the application does not have sufficient rights to access it.</span></span> <span data-ttu-id="dc7c4-731">如果您的應用程式會嘗試從佇列讀取時<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，存取被拒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-731">If your application tries to read from a queue when <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, access is denied.</span></span>  
  
 <span data-ttu-id="dc7c4-732">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-732">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-733">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-733">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-734">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-734">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-735">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-735">Local computer</span></span>|<span data-ttu-id="dc7c4-736">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-736">Yes</span></span>|  
|<span data-ttu-id="dc7c4-737">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-737">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-738">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-738">Yes</span></span>|  
|<span data-ttu-id="dc7c4-739">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-739">Remote computer</span></span>|<span data-ttu-id="dc7c4-740">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-740">No</span></span>|  
|<span data-ttu-id="dc7c4-741">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-741">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-742">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-742">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-743">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.CanRead%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-743">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CanRead%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.CanWrite" />
        <altmember cref="P:System.Messaging.MessageQueue.ReadHandle" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Messaging.MessageQueue.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_CanWrite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-744">取得值，指出是否可寫入 <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-744">Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be written to.</span></span></summary>
        <value><span data-ttu-id="dc7c4-745">如果 <see cref="T:System.Messaging.MessageQueue" /> 存在，而且應用程式可以寫入它，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-745"><see langword="true" /> if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can write to it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-746"><xref:System.Messaging.MessageQueue.CanWrite%2A> 指出應用程式是否能夠將訊息傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-746"><xref:System.Messaging.MessageQueue.CanWrite%2A> indicates whether the application is able to send messages to the queue.</span></span> <span data-ttu-id="dc7c4-747">如果<xref:System.Messaging.MessageQueue.CanWrite%2A>已`true`，則<xref:System.Messaging.MessageQueue>可以傳送訊息至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-747">If <xref:System.Messaging.MessageQueue.CanWrite%2A> is `true`, the <xref:System.Messaging.MessageQueue> can send messages to the queue.</span></span> <span data-ttu-id="dc7c4-748">否則，它不能。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-748">Otherwise, it cannot.</span></span>  
  
 <span data-ttu-id="dc7c4-749"><xref:System.Messaging.MessageQueue.CanWrite%2A> 已`false`佇列是否已開啟以獨佔寫入存取權 (或者如果它是以非獨佔存取，而這開啟<xref:System.Messaging.MessageQueue>要求獨佔存取權)，或如果應用程式並沒有足夠的權限來存取它。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-749"><xref:System.Messaging.MessageQueue.CanWrite%2A> is `false` if a queue is already open with exclusive write access (or if it's open with non-exclusive access and this <xref:System.Messaging.MessageQueue> requests exclusive access), or if the application does not have sufficient rights to access it.</span></span> <span data-ttu-id="dc7c4-750">如果您的應用程式嘗試寫入至佇列時<xref:System.Messaging.MessageQueue.CanWrite%2A>是`false`，存取被拒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-750">If your application tries to write to a queue when <xref:System.Messaging.MessageQueue.CanWrite%2A> is `false`, access is denied.</span></span>  
  
 <span data-ttu-id="dc7c4-751">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-751">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-752">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-752">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-753">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-753">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-754">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-754">Local computer</span></span>|<span data-ttu-id="dc7c4-755">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-755">Yes</span></span>|  
|<span data-ttu-id="dc7c4-756">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-756">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-757">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-757">Yes</span></span>|  
|<span data-ttu-id="dc7c4-758">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-758">Remote computer</span></span>|<span data-ttu-id="dc7c4-759">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-759">No</span></span>|  
|<span data-ttu-id="dc7c4-760">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-760">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-761">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-761">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-762">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.CanWrite%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-762">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CanWrite%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.WriteHandle" />
        <altmember cref="P:System.Messaging.MessageQueue.CanRead" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueue.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Category")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-763">取得或設定佇列分類。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-763">Gets or sets the queue category.</span></span></summary>
        <value><span data-ttu-id="dc7c4-764">表示佇列分類 (訊息佇列型別識別項) 的 <see cref="T:System.Guid" />，可讓應用程式將它的佇列分類。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-764">A <see cref="T:System.Guid" /> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues.</span></span> <span data-ttu-id="dc7c4-765">預設為 <see langword="Guid.empty" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-765">The default is <see langword="Guid.empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-766">佇列分類可讓應用程式以它的佇列分類。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-766">The queue category allows an application to categorize its queues.</span></span> <span data-ttu-id="dc7c4-767">例如，您也可以在一個類別目錄和所有的訂單佇列，在另一個放置計費的所有佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-767">For example, you can place all Billing queues in one category and all Order queues in another.</span></span>  
  
 <span data-ttu-id="dc7c4-768"><xref:System.Messaging.MessageQueue.Category%2A>屬性可存取訊息佇列類型 ID 屬性 （也就是讀取/寫入），可透過存取**佇列屬性** 對話方塊中 電腦管理 主控台。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-768">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing Type ID property (which is read/write), accessible through the **Queue Properties** dialog box in the Computer Management Console.</span></span> <span data-ttu-id="dc7c4-769">您可以定義新的類別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-769">You can define a new category.</span></span> <span data-ttu-id="dc7c4-770">雖然您可以使用<xref:System.Guid.NewGuid%2A>來建立類別目錄值的所有唯一<xref:System.Guid>值，這類動作是不必要。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-770">Although you can use <xref:System.Guid.NewGuid%2A> to create a category value that is unique across all <xref:System.Guid> values, such an action is unnecessary.</span></span> <span data-ttu-id="dc7c4-771">類別目錄值必須是相異只能從其他類別，不會從所有其他<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-771">The category value needs to be distinct only from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="dc7c4-772">比方說，您可以指派{00000000-0000-0000-0000-000000000001}做為<xref:System.Messaging.MessageQueue.Category%2A>的一組佇列並{00000000-0000-0000-0000-000000000002}做為<xref:System.Messaging.MessageQueue.Category%2A>另一個組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-772">For example, you can assign {00000000-0000-0000-0000-000000000001} as the <xref:System.Messaging.MessageQueue.Category%2A> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <xref:System.Messaging.MessageQueue.Category%2A> for another set.</span></span>  
  
 <span data-ttu-id="dc7c4-773">您不需要設定<xref:System.Messaging.MessageQueue.Category%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-773">It is not necessary to set the <xref:System.Messaging.MessageQueue.Category%2A>.</span></span> <span data-ttu-id="dc7c4-774">這個值可以是 `null`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-774">The value can be `null`.</span></span>  
  
 <span data-ttu-id="dc7c4-775">設定這個屬性修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-775">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-776">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-776">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="dc7c4-777">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-777">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-778">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-778">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-779">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-779">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-780">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-780">Local computer</span></span>|<span data-ttu-id="dc7c4-781">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-781">Yes</span></span>|  
|<span data-ttu-id="dc7c4-782">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-782">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-783">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-783">Yes</span></span>|  
|<span data-ttu-id="dc7c4-784">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-784">Remote computer</span></span>|<span data-ttu-id="dc7c4-785">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-785">No</span></span>|  
|<span data-ttu-id="dc7c4-786">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-786">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-787">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-787">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-788">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.Category%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-788">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Category%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-789">佇列分類被設定為無效值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-789">The queue category was set to an invalid value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-790">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-790">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Id" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      </Docs>
    </Member>
    <Member MemberName="ClearConnectionCache">
      <MemberSignature Language="C#" Value="public static void ClearConnectionCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearConnectionCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ClearConnectionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearConnectionCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearConnectionCache();" />
      <MemberSignature Language="F#" Value="static member ClearConnectionCache : unit -&gt; unit" Usage="System.Messaging.MessageQueue.ClearConnectionCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-791">清除連接快取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-791">Clears the connection cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-792">當您呼叫<xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>、 移除快取中儲存的格式名稱，並關閉控制代碼開啟和儲存在快取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-792">When you call <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, the format names stored in the cache are removed and handles opened and stored in the cache are closed.</span></span>  
  
 <span data-ttu-id="dc7c4-793">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-793">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-794">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-794">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-795">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-795">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-796">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-796">Local computer</span></span>|<span data-ttu-id="dc7c4-797">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-797">Yes</span></span>|  
|<span data-ttu-id="dc7c4-798">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-798">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-799">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-799">Yes</span></span>|  
|<span data-ttu-id="dc7c4-800">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-800">Remote computer</span></span>|<span data-ttu-id="dc7c4-801">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-801">Yes</span></span>|  
|<span data-ttu-id="dc7c4-802">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-802">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-803">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-803">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-804">下列程式碼範例呼叫 <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-804">The following code example calls <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>.</span></span>  
  
 [!code-csharp[MessageQueue#8](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="messageQueue.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-805">釋放 <see cref="T:System.Messaging.MessageQueue" /> 配置的所有資源。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-805">Frees all resources allocated by the <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-806"><xref:System.Messaging.MessageQueue.Close%2A> 釋出相關聯的所有資源<xref:System.Messaging.MessageQueue>，如果適用的話，包含共用資源。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-806"><xref:System.Messaging.MessageQueue.Close%2A> frees all resources associated with a <xref:System.Messaging.MessageQueue>, including shared resources if appropriate.</span></span> <span data-ttu-id="dc7c4-807">系統重新取得這些資源會自動是否仍然可用，例如當您呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>方法，如下列 C# 程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-807">The system re-acquires these resources automatically if they are still available, for example when you call the <xref:System.Messaging.MessageQueue.Send%28System.Object%29> method, as in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.Send("Text 1.");  
myMessageQueue.Close();  
myMessageQueue.Send("Text 2."); //Resources are re-acquired.  
```  
  
 <span data-ttu-id="dc7c4-808">當您呼叫<xref:System.Messaging.MessageQueue.Close%2A>，則所有<xref:System.Messaging.MessageQueue>直接存取 「 訊息佇列 」 佇列的屬性會被清除。<xref:System.Messaging.MessageQueue.Path%2A>， <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>， <xref:System.Messaging.MessageQueue.Formatter%2A>，和<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>所有會維持原狀。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-808">When you call <xref:System.Messaging.MessageQueue.Close%2A>, all <xref:System.Messaging.MessageQueue> properties that directly access the Message Queuing queue are cleared out. The <xref:System.Messaging.MessageQueue.Path%2A>, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, <xref:System.Messaging.MessageQueue.Formatter%2A>, and <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> all remain as they were.</span></span>  
  
 <span data-ttu-id="dc7c4-809"><xref:System.Messaging.MessageQueue.Close%2A> 不會不一定會釋放讀取和寫入至佇列，控制代碼，因為它們可能會共用。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-809"><xref:System.Messaging.MessageQueue.Close%2A> does not always free the read and write handles to a queue, because they might be shared.</span></span> <span data-ttu-id="dc7c4-810">您可以採取下列步驟，以確定的任何<xref:System.Messaging.MessageQueue.Close%2A>釋出至佇列的讀取和寫入控制代碼：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-810">You can take any of the following steps to ensure that <xref:System.Messaging.MessageQueue.Close%2A> frees the read and write handles to a queue:</span></span>  
  
-   <span data-ttu-id="dc7c4-811">建立<xref:System.Messaging.MessageQueue>使用獨佔存取權。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-811">Create the <xref:System.Messaging.MessageQueue> with exclusive access.</span></span> <span data-ttu-id="dc7c4-812">若要這樣做，請呼叫<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29>或是<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29>建構函式，以及組`sharedModeDenyReceive`參數來`true`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-812">To do so, call the <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29> or <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> constructor, and set the `sharedModeDenyReceive` parameter to `true`.</span></span>  
  
-   <span data-ttu-id="dc7c4-813">建立<xref:System.Messaging.MessageQueue>與停用快取的連線。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-813">Create the <xref:System.Messaging.MessageQueue> with connection caching disabled.</span></span> <span data-ttu-id="dc7c4-814">若要這樣做，請呼叫<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29>建構函式和 set`enableConnectionCache`參數來`false`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-814">To do so, call the <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> constructor and set the `enableConnectionCache` parameter to `false`.</span></span>  
  
-   <span data-ttu-id="dc7c4-815">停用連線快取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-815">Disable connection caching.</span></span> <span data-ttu-id="dc7c4-816">若要這樣做，請設定<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>屬性設`false`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-816">To do so, set the <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="dc7c4-817">您應該呼叫<xref:System.Messaging.MessageQueue.Close%2A>佇列之前刪除訊息佇列伺服器上的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-817">You should call <xref:System.Messaging.MessageQueue.Close%2A> for a queue before you delete the queue on the Message Queuing server.</span></span> <span data-ttu-id="dc7c4-818">否則，請傳送至佇列的訊息無法擲回例外狀況，或會出現在寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-818">Otherwise, messages sent to the queue could throw exceptions or appear in the dead-letter queue.</span></span>  
  
 <span data-ttu-id="dc7c4-819">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-819">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-820">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-820">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-821">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-821">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-822">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-822">Local computer</span></span>|<span data-ttu-id="dc7c4-823">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-823">Yes</span></span>|  
|<span data-ttu-id="dc7c4-824">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-824">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-825">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-825">Yes</span></span>|  
|<span data-ttu-id="dc7c4-826">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-826">Remote computer</span></span>|<span data-ttu-id="dc7c4-827">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-827">Yes</span></span>|  
|<span data-ttu-id="dc7c4-828">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-828">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-829">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-829">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-830">下列程式碼範例會關閉訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-830">The following code example closes a Message Queuing queue.</span></span>  
  
 [!code-cpp[MessageQueue.Close#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Close/CPP/mqclose.cpp#1)]
 [!code-csharp[MessageQueue.Close#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Close/CS/mqclose.cs#1)]
 [!code-vb[MessageQueue.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Close/VB/mqclose.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-831">在 Message Queuing 伺服器上的指定路徑建立新的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-831">Creates a new queue at the specified path on a Message Queuing server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue Create (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue Create(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String) As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueue ^ Create(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Messaging.MessageQueue" Usage="System.Messaging.MessageQueue.Create path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-832">要建立佇列的路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-832">The path of the queue to create.</span></span></param>
        <summary><span data-ttu-id="dc7c4-833">在指定的路徑建立非交易的訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-833">Creates a non-transactional Message Queuing queue at the specified path.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-834">表示新佇列的 <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-834">A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-835">您可以使用這個多載來建立非交易式的 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-835">Use this overload to create a non-transactional Message Queuing queue.</span></span>  
  
 <span data-ttu-id="dc7c4-836">若要建立的新執行個體<xref:System.Messaging.MessageQueue>類別在您的應用程式並將它繫結至現有的佇列，請使用<xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-836">To create a new instance of the <xref:System.Messaging.MessageQueue> class in your application and bind it to an existing queue, use the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span> <span data-ttu-id="dc7c4-837">若要建立新的佇列中訊息佇列，請呼叫<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-837">To create a new queue in Message Queuing, call <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-838">語法`path`參數取決於佇列類型它的參考下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-838">The syntax for the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-839">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-839">Queue type</span></span>|<span data-ttu-id="dc7c4-840">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-840">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-841">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-841">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="dc7c4-842">私用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-842">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="dc7c4-843">使用 」。 「 本機電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-843">Use "." for the local computer.</span></span> <span data-ttu-id="dc7c4-844">如需詳細的語法，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-844">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="dc7c4-845">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-845">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-846">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-846">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-847">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-847">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-848">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-848">Local computer</span></span>|<span data-ttu-id="dc7c4-849">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-849">Yes</span></span>|  
|<span data-ttu-id="dc7c4-850">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-850">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-851">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-851">Yes</span></span>|  
|<span data-ttu-id="dc7c4-852">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-852">Remote computer</span></span>|<span data-ttu-id="dc7c4-853">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-853">No</span></span>|  
|<span data-ttu-id="dc7c4-854">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-854">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-855">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-855">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-856">下列程式碼範例會建立公用和私用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-856">The following code example creates public and private queues.</span></span> <span data-ttu-id="dc7c4-857">它會傳送訊息至選取的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-857">It sends a message to selected queues.</span></span>  
  
 [!code-cpp[MessageQueue.Create_path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Create_path/CPP/mqcreate.cpp#1)]
 [!code-csharp[MessageQueue.Create_path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Create_path/CS/mqcreate.cs#1)]
 [!code-vb[MessageQueue.Create_path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Create_path/VB/mqcreate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-858"><paramref name="path" /> 參數為 <see langword="null" /> 或空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-858">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-859">指定的路徑已經有佇列存在。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-859">A queue already exists at the specified path.</span></span>  
  
<span data-ttu-id="dc7c4-860">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-860">-or-</span></span> 
<span data-ttu-id="dc7c4-861">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-861">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue Create (string path, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue Create(string path, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, transactional As Boolean) As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueue ^ Create(System::String ^ path, bool transactional);" />
      <MemberSignature Language="F#" Value="static member Create : string * bool -&gt; System.Messaging.MessageQueue" Usage="System.Messaging.MessageQueue.Create (path, transactional)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-862">要建立佇列的路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-862">The path of the queue to create.</span></span></param>
        <param name="transactional"><span data-ttu-id="dc7c4-863"><see langword="true" /> 表示建立交易式佇列，<see langword="false" /> 表示建立非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-863"><see langword="true" /> to create a transactional queue; <see langword="false" /> to create a non-transactional queue.</span></span></param>
        <summary><span data-ttu-id="dc7c4-864">在指定的路徑建立交易或非交易的訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-864">Creates a transactional or non-transactional Message Queuing queue at the specified path.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-865">表示新佇列的 <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-865">A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-866">您可以使用這個多載來建立異動式佇列中訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-866">You can use this overload to create a transactional queue in Message Queuing.</span></span> <span data-ttu-id="dc7c4-867">您可以建立非異動式佇列，藉由設定`transactional`參數來`false`或藉由呼叫的其他多載<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-867">You can create a non-transactional queue, by setting the `transactional` parameter to `false` or by calling the other overload of <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-868">若要建立的新執行個體<xref:System.Messaging.MessageQueue>類別在您的應用程式並將它繫結至現有的佇列，請使用<xref:System.Messaging.MessageQueue.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-868">To create a new instance of the <xref:System.Messaging.MessageQueue> class in your application and bind it to an existing queue, use the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span> <span data-ttu-id="dc7c4-869">若要建立新的佇列中訊息佇列，請呼叫<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-869">To create a new queue in Message Queuing, call <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-870">語法`path`參數取決於佇列類型它的參考下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-870">The syntax for the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-871">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-871">Queue type</span></span>|<span data-ttu-id="dc7c4-872">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-872">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-873">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-873">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="dc7c4-874">私用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-874">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="dc7c4-875">使用 」。 「 本機電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-875">Use "." for the local computer.</span></span> <span data-ttu-id="dc7c4-876">如需詳細的語法，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-876">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="dc7c4-877">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-877">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-878">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-878">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-879">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-879">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-880">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-880">Local computer</span></span>|<span data-ttu-id="dc7c4-881">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-881">Yes</span></span>|  
|<span data-ttu-id="dc7c4-882">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-882">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-883">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-883">Yes</span></span>|  
|<span data-ttu-id="dc7c4-884">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-884">Remote computer</span></span>|<span data-ttu-id="dc7c4-885">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-885">No</span></span>|  
|<span data-ttu-id="dc7c4-886">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-886">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-887">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-887">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-888">下列程式碼範例會建立公用和私用的交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-888">The following code example creates public and private transactional queues.</span></span> <span data-ttu-id="dc7c4-889">它會傳送訊息至選取的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-889">It sends a message to selected queues.</span></span>  
  
 [!code-cpp[MessageQueue.Create_PathTransactional#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/CPP/mqcreate_transactional.cpp#1)]
 [!code-csharp[MessageQueue.Create_PathTransactional#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/CS/mqcreate_transactional.cs#1)]
 [!code-vb[MessageQueue.Create_PathTransactional#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/VB/mqcreate_transactional.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-890"><paramref name="path" /> 參數為 <see langword="null" /> 或空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-890">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-891">指定的路徑已經有佇列存在。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-891">A queue already exists at the specified path.</span></span>  
  
<span data-ttu-id="dc7c4-892">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-892">-or-</span></span> 
<span data-ttu-id="dc7c4-893">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-893">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="CreateCursor">
      <MemberSignature Language="C#" Value="public System.Messaging.Cursor CreateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Cursor CreateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.CreateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCursor () As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Cursor ^ CreateCursor();" />
      <MemberSignature Language="F#" Value="member this.CreateCursor : unit -&gt; System.Messaging.Cursor" Usage="messageQueue.CreateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Cursor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-894">建立目前訊息佇列的新 <see cref="T:System.Messaging.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-894">Creates a new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-895">目前訊息佇列的新 <see cref="T:System.Messaging.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-895">A new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</span></span> <span data-ttu-id="dc7c4-896">讀取佇列的訊息時，這個資料指標用於保持佇列中的特定位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-896">This cursor is used to maintain a specific location in the queue when reading the queue's messages.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public DateTime CreateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreateTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CreateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateTime : DateTime" Usage="System.Messaging.MessageQueue.CreateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_CreateTime")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-897">取得佇列在訊息佇列中建立的時間和日期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-897">Gets the time and date that the queue was created in Message Queuing.</span></span></summary>
        <value><span data-ttu-id="dc7c4-898"><see cref="T:System.DateTime" />，表示佇列的建立日期和時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-898">A <see cref="T:System.DateTime" /> that represents the date and time at which the queue was created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-899"><xref:System.Messaging.MessageQueue.CreateTime%2A> 不是指在 Message Queuing 伺服器上，佇列<xref:System.Messaging.MessageQueue>執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-899"><xref:System.Messaging.MessageQueue.CreateTime%2A> refers to the queue on the Message Queuing server, not the <xref:System.Messaging.MessageQueue> instance.</span></span>  
  
 <span data-ttu-id="dc7c4-900">如果佇列存在，則這個屬性會代表的建立佇列時，調整為佇列所在伺服器的本機時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-900">If the queue exists, this property represents the time the queue was created, adjusted to the local time of the server on which the queue exists.</span></span>  
  
 <span data-ttu-id="dc7c4-901">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-901">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-902">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-902">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-903">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-903">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-904">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-904">Local computer</span></span>|<span data-ttu-id="dc7c4-905">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-905">Yes</span></span>|  
|<span data-ttu-id="dc7c4-906">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-906">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-907">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-907">Yes</span></span>|  
|<span data-ttu-id="dc7c4-908">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-908">Remote computer</span></span>|<span data-ttu-id="dc7c4-909">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-909">No</span></span>|  
|<span data-ttu-id="dc7c4-910">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-910">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-911">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-911">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-912">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.CreateTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-912">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CreateTime%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#9](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-913">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-913">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPropertiesToSend">
      <MemberSignature Language="C#" Value="public System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPropertiesToSend As DefaultPropertiesToSend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::DefaultPropertiesToSend ^ DefaultPropertiesToSend { System::Messaging::DefaultPropertiesToSend ^ get(); void set(System::Messaging::DefaultPropertiesToSend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPropertiesToSend : System.Messaging.DefaultPropertiesToSend with get, set" Usage="System.Messaging.MessageQueue.DefaultPropertiesToSend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_DefaultPropertiesToSend")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.DefaultPropertiesToSend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-914">取得或設定應用程式傳送訊息至佇列時，會預設採用的訊息屬性值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-914">Gets or sets the message property values to be used by default when the application sends messages to the queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-915"><see cref="T:System.Messaging.DefaultPropertiesToSend" />，包含應用程式向佇列傳送 <see cref="T:System.Messaging.Message" /> 執行個體以外的物件時，使用的預設 Message Queuing 訊息屬性值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-915">A <see cref="T:System.Messaging.DefaultPropertiesToSend" /> that contains the default Message Queuing message property values used when the application sends objects other than <see cref="T:System.Messaging.Message" /> instances to the queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-916">當您將傳送任何物件，不是類型<xref:System.Messaging.Message>至佇列，<xref:System.Messaging.MessageQueue>將物件插入至訊息佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-916">When you send any object that is not of type <xref:System.Messaging.Message> to the queue, the <xref:System.Messaging.MessageQueue> inserts the object into a Message Queuing message.</span></span> <span data-ttu-id="dc7c4-917">屆時<xref:System.Messaging.MessageQueue>套用至訊息中指定的屬性值<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-917">At that time, the <xref:System.Messaging.MessageQueue> applies to the message the property values you specify in the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property.</span></span> <span data-ttu-id="dc7c4-918">相反地，如果您傳送<xref:System.Messaging.Message>至佇列，這些屬性已指定執行個體本身，因此<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>會忽略<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-918">Conversely, if you send a <xref:System.Messaging.Message> to the queue, these properties are already specified for the instance itself, so <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> is ignored for the <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="dc7c4-919">雖然您可以設定屬性，透過<xref:System.Messaging.MessageQueue>物件，<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>參考的訊息會傳送至佇列，不代表佇列本身的屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-919">Although you set the properties through the <xref:System.Messaging.MessageQueue> object, the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> refers to the properties of the messages that are sent to the queue, not the queue itself.</span></span>  
  
 <span data-ttu-id="dc7c4-920">下表顯示屬性的預設值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-920">The default values for the properties are shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-921">屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-921">Property</span></span>|<span data-ttu-id="dc7c4-922">預設值</span><span class="sxs-lookup"><span data-stu-id="dc7c4-922">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|<span data-ttu-id="dc7c4-923">零 (0)</span><span class="sxs-lookup"><span data-stu-id="dc7c4-923">Zero (0)</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|<span data-ttu-id="dc7c4-924">是長度為零的位元組的陣列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-924">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|<span data-ttu-id="dc7c4-925">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="dc7c4-925">Empty string ("")</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 <span data-ttu-id="dc7c4-926">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-926">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-927">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-927">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-928">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-928">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-929">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-929">Local computer</span></span>|<span data-ttu-id="dc7c4-930">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-930">Yes</span></span>|  
|<span data-ttu-id="dc7c4-931">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-931">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-932">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-932">Yes</span></span>|  
|<span data-ttu-id="dc7c4-933">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-933">Remote computer</span></span>|<span data-ttu-id="dc7c4-934">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-934">Yes</span></span>|  
|<span data-ttu-id="dc7c4-935">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-935">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-936">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-936">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-937">下列程式碼範例會使用訊息的優先順序，以判斷傳送訊息的預設屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-937">The following code example uses the priority of a message to determine default properties to send for the message.</span></span>  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-938">無法設定佇列的預設屬性，可能是因為其中一個屬性無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-938">The default properties could not be set for the queue, possibly because one of the properties is not valid.</span></span></exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Messaging.MessageQueue.Delete path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-939">要刪除的佇列位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-939">The location of the queue to be deleted.</span></span></param>
        <summary><span data-ttu-id="dc7c4-940">刪除 Message Queuing 伺服器上的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-940">Deletes a queue on a Message Queuing server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-941">語法`path`參數取決於佇列的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-941">The syntax for the `path` parameter depends on the type of queue.</span></span>  
  
|<span data-ttu-id="dc7c4-942">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-942">Queue type</span></span>|<span data-ttu-id="dc7c4-943">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-943">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-944">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-944">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="dc7c4-945">私用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-945">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="dc7c4-946">如需詳細的語法，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-946">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="dc7c4-947">或者，您可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>來描述為佇列路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-947">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path.</span></span>  
  
|<span data-ttu-id="dc7c4-948">參考資料</span><span class="sxs-lookup"><span data-stu-id="dc7c4-948">Reference</span></span>|<span data-ttu-id="dc7c4-949">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-949">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="dc7c4-950">格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-950">Format name</span></span>|<span data-ttu-id="dc7c4-951">FormatName: [*格式名稱*]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-951">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="dc7c4-952">標籤</span><span class="sxs-lookup"><span data-stu-id="dc7c4-952">Label</span></span>|<span data-ttu-id="dc7c4-953">Label:[ *label* ]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-953">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="dc7c4-954">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-954">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-955">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-955">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-956">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-956">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-957">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-957">Local computer</span></span>|<span data-ttu-id="dc7c4-958">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-958">Yes</span></span>|  
|<span data-ttu-id="dc7c4-959">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-959">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-960">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-960">Yes</span></span>|  
|<span data-ttu-id="dc7c4-961">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-961">Remote computer</span></span>|<span data-ttu-id="dc7c4-962">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-962">No</span></span>|  
|<span data-ttu-id="dc7c4-963">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-963">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-964">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-964">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-965">下列程式碼範例會刪除訊息佇列 」 佇列，若有的話。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-965">The following code example deletes a Message Queuing queue, if it exists.</span></span>  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-966"><paramref name="path" /> 參數為 <see langword="null" /> 或空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-966">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-967"><paramref name="path" /> 參數的語法無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-967">The syntax for the <paramref name="path" /> parameter is not valid.</span></span>  
  
<span data-ttu-id="dc7c4-968">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-968">-or-</span></span> 
<span data-ttu-id="dc7c4-969">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-969">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName="DenySharedReceive">
      <MemberSignature Language="C#" Value="public bool DenySharedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DenySharedReceive" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.DenySharedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property DenySharedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DenySharedReceive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DenySharedReceive : bool with get, set" Usage="System.Messaging.MessageQueue.DenySharedReceive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_DenySharedReceive")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-970">取得或設定值，指出這個 <see cref="T:System.Messaging.MessageQueue" /> 是否具有從訊息佇列接收訊息的獨佔存取權。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-970">Gets or sets a value that indicates whether this <see cref="T:System.Messaging.MessageQueue" /> has exclusive access to receive messages from the Message Queuing queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-971">如果這個 <see cref="T:System.Messaging.MessageQueue" /> 具有從佇列接收訊息的獨佔權限，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-971"><see langword="true" /> if this <see cref="T:System.Messaging.MessageQueue" /> has exclusive rights to receive messages from the queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dc7c4-972">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-972">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-973"><xref:System.Messaging.MessageQueue.DenySharedReceive%2A> 指定佇列所參考的共用的模式<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-973"><xref:System.Messaging.MessageQueue.DenySharedReceive%2A> specifies the shared mode of the queue referenced by this <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="dc7c4-974">設定<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>要`true`表示，只有這<xref:System.Messaging.MessageQueue>應該查看，或從指定的佇列接收訊息的存取<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-974">Set <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> to `true` to indicate that only this <xref:System.Messaging.MessageQueue> should have access to peek or receive messages from the queue with the specified <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="dc7c4-975">如果另一個<xref:System.Messaging.MessageQueue>或另一個應用程式相同的佇列資源，該執行個體相關聯，或是應用程式將無法查看或接收訊息，但是它仍然可以傳送它們。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-975">If another <xref:System.Messaging.MessageQueue> or another application is associated with the same queue resource, that instance or application will not be able to peek or receive messages, but it can still send them.</span></span>  
  
 <span data-ttu-id="dc7c4-976">如果<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>是`false`，佇列可用於傳送、 查看，或接收訊息的多個應用程式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-976">If <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> is `false`, the queue is available to multiple applications for sending, peeking, or receiving messages.</span></span>  
  
 <span data-ttu-id="dc7c4-977">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-977">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-978">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-978">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-979">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-979">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-980">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-980">Local computer</span></span>|<span data-ttu-id="dc7c4-981">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-981">Yes</span></span>|  
|<span data-ttu-id="dc7c4-982">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-982">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-983">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-983">Yes</span></span>|  
|<span data-ttu-id="dc7c4-984">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-984">Remote computer</span></span>|<span data-ttu-id="dc7c4-985">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-985">Yes</span></span>|  
|<span data-ttu-id="dc7c4-986">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-986">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-987">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-987">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-988">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-988">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#10](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="P:System.Messaging.MessageQueue.EnableConnectionCache" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="messageQueue.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="dc7c4-989"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-989"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="dc7c4-990">處置 (Dispose) <see cref="T:System.Messaging.MessageQueue" /> 所使用的資源 (除了記憶體之外)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-990">Disposes of the resources (other than memory) used by the <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-991">
  <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 使用完畢時，請呼叫 <xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-991">Call <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> when you are finished using the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="dc7c4-992">
  <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 方法會將 <xref:System.Messaging.MessageQueue> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-992">The <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> method leaves the <xref:System.Messaging.MessageQueue> in an unusable state.</span></span> <span data-ttu-id="dc7c4-993">之後呼叫<xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>，您必須釋放所有參考<xref:System.Messaging.MessageQueue>讓它所佔用的記憶體可以回收記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-993">After calling <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>, you must release all references to the <xref:System.Messaging.MessageQueue> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="dc7c4-994">您應該呼叫<xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>您釋放最後一個參考之前<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-994">You should call <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> before you release your last reference to the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="dc7c4-995">否則，資源<xref:System.Messaging.MessageQueue>會使用之前，將不會釋放記憶體回收集合呼叫<xref:System.Messaging.MessageQueue>物件的解構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-995">Otherwise, the resources the <xref:System.Messaging.MessageQueue> is using will not be freed until garbage collection calls the <xref:System.Messaging.MessageQueue> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
      </Docs>
    </Member>
    <Member MemberName="EnableConnectionCache">
      <MemberSignature Language="C#" Value="public static bool EnableConnectionCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableConnectionCache" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.EnableConnectionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableConnectionCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableConnectionCache { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableConnectionCache : bool with get, set" Usage="System.Messaging.MessageQueue.EnableConnectionCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-996">取得或設定值，指出應用程式是否會維持連接的快取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-996">Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</span></span></summary>
        <value><span data-ttu-id="dc7c4-997"><see langword="true" /> 表示建立並使用連接快取，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-997"><see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-998">連接快取是一份結構包含讀取或寫入佇列中的控制代碼的參考。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-998">A connection cache is a list of references to structures that contain read or write handles to queues.</span></span> <span data-ttu-id="dc7c4-999">當<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>是`true`，則<xref:System.Messaging.MessageQueue>每次呼叫會藉助從快取的控制代碼<xref:System.Messaging.MessageQueue.Send%28System.Object%29>， <xref:System.Messaging.MessageQueue.Peek%2A>，或<xref:System.Messaging.MessageQueue.Receive%2A>，而不是開啟的新控制代碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-999">When <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> is `true`, the <xref:System.Messaging.MessageQueue> borrows handles from the cache each time you call <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, or <xref:System.Messaging.MessageQueue.Receive%2A>, rather than open new handles.</span></span> <span data-ttu-id="dc7c4-1000">這可以改善效能。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1000">This can improve performance.</span></span> <span data-ttu-id="dc7c4-1001">使用連接快取也會隔離<xref:System.Messaging.MessageQueue>從網路拓撲中的變更。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1001">Using a connection cache also insulates the <xref:System.Messaging.MessageQueue> from changes in the network topology.</span></span>  
  
 <span data-ttu-id="dc7c4-1002">如果您建立新的連接至佇列時的連線快取已滿，<xref:System.Messaging.MessageQueue>以新的連線覆寫至少最近存取的結構。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1002">If you create a new connection to a queue when the connection cache is full, the <xref:System.Messaging.MessageQueue> overwrites the least recently accessed structure with the new connection.</span></span> <span data-ttu-id="dc7c4-1003">您可以清除快取完全是藉由呼叫<xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>，比方說，如果您正在使用的佇列格式名稱已經變更，使先前的讀取和寫入控制代碼不再有效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1003">You can clear the cache entirely by calling <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, for example, if the format names of the queues you are working with have changed so that the previous read and write handles are no longer valid.</span></span>  
  
 <span data-ttu-id="dc7c4-1004">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1004">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1005">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1005">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1006">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1006">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1007">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1007">Local computer</span></span>|<span data-ttu-id="dc7c4-1008">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1008">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1009">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1009">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1010">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1010">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1011">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1011">Remote computer</span></span>|<span data-ttu-id="dc7c4-1012">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1012">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1013">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1013">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1014">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1014">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1015">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1015">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#11](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.ClearConnectionCache" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueue.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_EncryptionRequired")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1016">取得或設定值，指出佇列是否只接受非私用 (不加密的) 訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1016">Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1017">其中一個 <see cref="T:System.Messaging.EncryptionRequired" /> 值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1017">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values.</span></span> <span data-ttu-id="dc7c4-1018">預設為 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1018">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1019">當您指定需要傳送至佇列的訊息加密時，則會加密訊息內文。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1019">When you specify that encryption is required for the messages sent to a queue, only the message bodies are encrypted.</span></span> <span data-ttu-id="dc7c4-1020">其他成員 (例如<xref:System.Messaging.Message.Label%2A>和<xref:System.Messaging.Message.SenderId%2A>屬性) 無法加密。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1020">The other members (for example, the <xref:System.Messaging.Message.Label%2A> and <xref:System.Messaging.Message.SenderId%2A> properties) cannot be encrypted.</span></span>  
  
 <span data-ttu-id="dc7c4-1021">設定這個屬性修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1021">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-1022">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1022">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="dc7c4-1023">加密的訊息讓訊息私用。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1023">Encrypting a message makes the message private.</span></span> <span data-ttu-id="dc7c4-1024">您可以指定佇列的加密需求`None`， `Body`，或`Optional`藉由設定<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>屬性適當地。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1024">You can specify the queue's encryption requirement to be `None`, `Body`, or `Optional` by setting the <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> property appropriately.</span></span> <span data-ttu-id="dc7c4-1025"><xref:System.Messaging.Message.UseEncryption%2A>訊息的設定必須對應至佇列的加密需求。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1025">The <xref:System.Messaging.Message.UseEncryption%2A> setting of the message must correspond to the encryption requirement of the queue.</span></span> <span data-ttu-id="dc7c4-1026">如果訊息並未加密，但佇列指定`Body`，或如果訊息已加密，但佇列指定`None`，佇列將會拒絕訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1026">If the message is not encrypted but the queue specifies `Body`, or if the message is encrypted but the queue specifies `None`, the message is rejected by the queue.</span></span> <span data-ttu-id="dc7c4-1027">如果傳送應用程式要求負值通知訊息，在此情況下，訊息佇列會指出傳送應用程式的訊息被拒絕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1027">If the sending application requests a negative acknowledgment message in this event, Message Queuing indicates the message's rejection to the sending application.</span></span> <span data-ttu-id="dc7c4-1028">如果<xref:System.Messaging.Message.UseDeadLetterQueue%2A>屬性是`true`，失敗加密的訊息，傳送至無法投遞的信件佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1028">If the <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, a message that fails encryption is sent to the dead-letter queue.</span></span> <span data-ttu-id="dc7c4-1029">否則，訊息就會遺失。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1029">Otherwise, the message is lost.</span></span>  
  
 <span data-ttu-id="dc7c4-1030">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1030">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1031">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1031">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1032">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1032">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1033">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1033">Local computer</span></span>|<span data-ttu-id="dc7c4-1034">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1034">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1035">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1035">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1036">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1036">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1037">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1037">Remote computer</span></span>|<span data-ttu-id="dc7c4-1038">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1038">No</span></span>|  
|<span data-ttu-id="dc7c4-1039">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1039">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1040">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1040">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1041">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1041">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#12](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1042">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1042">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="EndPeek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message EndPeek (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message EndPeek(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndPeek (asyncResult As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ EndPeek(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndPeek : IAsyncResult -&gt; System.Messaging.Message" Usage="messageQueue.EndPeek asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="dc7c4-1043"><see cref="T:System.IAsyncResult" />，識別要完成的非同步窺視作業，並要從其中擷取最終結果。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1043">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous peek operation to finish and from which to retrieve an end result.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1044">完成指定的非同步窺視作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1044">Completes the specified asynchronous peek operation.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1045">與完成的非同步作業相關的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1045">The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1046">當<xref:System.Messaging.MessageQueue.PeekCompleted>引發事件時，<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>完成作業所起始的<xref:System.Messaging.MessageQueue.BeginPeek%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1046">When the <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> completes the operation that was initiated by the <xref:System.Messaging.MessageQueue.BeginPeek%2A> call.</span></span> <span data-ttu-id="dc7c4-1047">若要這樣做，<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>窺視的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1047">To do so, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> peeks the message.</span></span>  
  
 <span data-ttu-id="dc7c4-1048"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 可以指定逾時，這會導致<xref:System.Messaging.MessageQueue.PeekCompleted>逾時發生之前出現在佇列中的訊息時產生的事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1048"><xref:System.Messaging.MessageQueue.BeginPeek%2A> can specify a time-out, which causes the <xref:System.Messaging.MessageQueue.PeekCompleted> event to be raised if the time-out occurs before a message appears in the queue.</span></span> <span data-ttu-id="dc7c4-1049">當沒有訊息到達佇列的後續呼叫中發生逾時<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1049">When a time-out occurs without a message arriving in the queue, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> throws an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-1050"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 用來讀取訊息造成<xref:System.Messaging.MessageQueue.PeekCompleted>會引發事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1050"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is used to read the message that caused the <xref:System.Messaging.MessageQueue.PeekCompleted> event to be raised.</span></span>  
  
 <span data-ttu-id="dc7c4-1051">如果您想要繼續以非同步方式查看訊息，您就可以再次呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>之後呼叫<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1051">If you want to continue to asynchronously peek messages, you can again call <xref:System.Messaging.MessageQueue.BeginPeek%2A> after calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-1052">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1052">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1053">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1053">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1054">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1054">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1055">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1055">Local computer</span></span>|<span data-ttu-id="dc7c4-1056">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1056">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1057">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1057">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1058">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1058">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1059">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1059">Remote computer</span></span>|<span data-ttu-id="dc7c4-1060">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1060">No</span></span>|  
|<span data-ttu-id="dc7c4-1061">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1061">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1062">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1062">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1063">下列程式碼範例會建立名為事件處理常式`MyPeekCompleted`，將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式的委派，以及呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>起始位於路徑的佇列上的非同步窺視作業 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1063">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="dc7c4-1064">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，範例窺視的訊息，並將其主體寫入螢幕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1064">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="dc7c4-1065">此範例接著會呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A> 以起始新的非同步窺視作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1065">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-1066"><paramref name="asyncResult" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1066">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1067"><paramref name="asyncResult" /> 參數的語法無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1067">The syntax of the <paramref name="asyncResult" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1068">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1068">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message EndReceive (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message EndReceive(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ EndReceive(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult -&gt; System.Messaging.Message" Usage="messageQueue.EndReceive asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="dc7c4-1069"><see cref="T:System.IAsyncResult" />，識別要完成的非同步接收作業，並要從其中擷取最終結果。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1069">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous receive operation to finish and from which to retrieve an end result.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1070">完成指定的非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1070">Completes the specified asynchronous receive operation.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1071">與完成的非同步作業相關的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1071">The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1072">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>引發事件時，<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>完成作業所起始的<xref:System.Messaging.MessageQueue.BeginReceive%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1072">When the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> completes the operation that was initiated by the <xref:System.Messaging.MessageQueue.BeginReceive%2A> call.</span></span> <span data-ttu-id="dc7c4-1073">若要這樣做，<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1073">To do so, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> receives the message.</span></span>  
  
 <span data-ttu-id="dc7c4-1074"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 可以指定逾時，這會導致<xref:System.Messaging.MessageQueue.ReceiveCompleted>逾時發生之前出現在佇列中的訊息時產生的事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1074"><xref:System.Messaging.MessageQueue.BeginReceive%2A> can specify a time-out, which causes the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event to be raised if the time-out occurs before a message appears in the queue.</span></span> <span data-ttu-id="dc7c4-1075">當沒有訊息到達佇列的後續呼叫中發生逾時<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1075">When a time-out occurs without a message arriving in the queue, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> throws an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-1076"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 用來讀取 （從佇列移除） 所造成的訊息<xref:System.Messaging.MessageQueue.ReceiveCompleted>會引發事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1076"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is used to read (removing from the queue) the message that caused the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event to be raised.</span></span>  
  
 <span data-ttu-id="dc7c4-1077">如果您想要繼續以非同步方式接收訊息時，您就可以再次呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>之後呼叫<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1077">If you want to continue to asynchronously receive messages, you can again call <xref:System.Messaging.MessageQueue.BeginReceive%2A> after calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="dc7c4-1078">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1078">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1079">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1079">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1080">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1080">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1081">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1081">Local computer</span></span>|<span data-ttu-id="dc7c4-1082">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1082">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1083">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1083">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1084">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1084">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1085">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1085">Remote computer</span></span>|<span data-ttu-id="dc7c4-1086">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1086">No</span></span>|  
|<span data-ttu-id="dc7c4-1087">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1087">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1088">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1088">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1089">下列程式碼範例鏈結非同步要求。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1089">The following code example chains asynchronous requests.</span></span> <span data-ttu-id="dc7c4-1090">它會假設在稱為 「 myQueue 「 本機電腦上沒有佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1090">It assumes there is a queue on the local computer called "myQueue".</span></span> <span data-ttu-id="dc7c4-1091">`Main`函式開始非同步作業所處理的`MyReceiveCompleted`常式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1091">The `Main` function begins the asynchronous operation that is handled by the `MyReceiveCompleted` routine.</span></span> <span data-ttu-id="dc7c4-1092">`MyReceiveCompleted` 處理目前的訊息，並開始新的非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1092">`MyReceiveCompleted` processes the current message and begins a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_mre.cpp#1)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_mre.cs#1)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_mre.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-1093"><paramref name="asyncResult" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1093">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1094"><paramref name="asyncResult" /> 參數的語法無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1094">The syntax of the <paramref name="asyncResult" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1095">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1095">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Messaging.MessageQueue.Exists path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="dc7c4-1096">要尋找的佇列位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1096">The location of the queue to find.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1097">判斷指定路徑上是否存在訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1097">Determines whether a Message Queuing queue exists at the specified path.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1098">如果指定路徑上的佇列存在則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1098"><see langword="true" /> if a queue with the specified path exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1099"><xref:System.Messaging.MessageQueue.Exists%28System.String%29>方法會判斷訊息佇列 」 佇列是否存在指定的路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1099">The <xref:System.Messaging.MessageQueue.Exists%28System.String%29> method determines whether a Message Queuing queue exists at a specified path.</span></span> <span data-ttu-id="dc7c4-1100">方法不存在，以判斷是否有指定的格式名稱的佇列存在。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1100">No method exists to determine whether a queue with a specified format name exists.</span></span> <span data-ttu-id="dc7c4-1101">如需有關格式名稱語法和其他路徑的語法形式的詳細資訊，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。)</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1101">For more information about the format name syntax and other path syntax forms, see the <xref:System.Messaging.MessageQueue.Path%2A> property.)</span></span>  
  
 <span data-ttu-id="dc7c4-1102"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 是成本高昂的作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1102"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> is an expensive operation.</span></span> <span data-ttu-id="dc7c4-1103">只需要在應用程式中時，才使用它。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1103">Use it only when it is necessary within the application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc7c4-1104"><xref:System.Messaging.MessageQueue.Exists%28System.String%29>方法不支援<xref:System.Messaging.MessageQueue.FormatName%2A>前置詞。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1104">The <xref:System.Messaging.MessageQueue.Exists%28System.String%29> method does not support the <xref:System.Messaging.MessageQueue.FormatName%2A> prefix.</span></span>  
  
 <span data-ttu-id="dc7c4-1105">語法`path`參數類型而定的佇列下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1105">The syntax for the `path` parameter depends on the type of queue, as shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-1106">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1106">Queue type</span></span>|<span data-ttu-id="dc7c4-1107">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1107">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-1108">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1108">Public queue</span></span>|`MachineName`\\`QueueName`|  
  
 <span data-ttu-id="dc7c4-1109"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 無法呼叫來確認遠端私用佇列存在。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1109"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> cannot be called to verify the existence of a remote private queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1110">如需詳細的語法，請參閱<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1110">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="dc7c4-1111">或者，您可以使用<xref:System.Messaging.MessageQueue.Label%2A>來描述為佇列路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1111">Alternatively, you can use the <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path.</span></span>  
  
|<span data-ttu-id="dc7c4-1112">參考資料</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1112">Reference</span></span>|<span data-ttu-id="dc7c4-1113">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1113">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="dc7c4-1114">標籤</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1114">Label</span></span>|<span data-ttu-id="dc7c4-1115">Label:[ `label` ]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1115">Label:[ `label` ]</span></span>|  
  
 <span data-ttu-id="dc7c4-1116">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1116">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1117">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1117">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1118">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1118">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1119">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1119">Local computer</span></span>|<span data-ttu-id="dc7c4-1120">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1120">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1121">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1121">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1122">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1122">No</span></span>|  
|<span data-ttu-id="dc7c4-1123">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1123">Remote computer</span></span>|<span data-ttu-id="dc7c4-1124">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1124">No</span></span>|  
|<span data-ttu-id="dc7c4-1125">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1125">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1126">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1126">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1127">下列程式碼範例會確認是否 「 訊息佇列 」 佇列存在，然後將它刪除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1127">The following code example verifies whether a Message Queuing queue exists, and then deletes it.</span></span>  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1128"><paramref name="path" /> 語法無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1128">The <paramref name="path" /> syntax is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1129">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1129">An error occurred when accessing a Message Queuing method.</span></span>  
  
<span data-ttu-id="dc7c4-1130">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1130">-or-</span></span> 
<span data-ttu-id="dc7c4-1131"><see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> 方法會在遠端私用佇列上呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1131">The <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> method is being called on a remote private queue</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-1132">確認佇列是否存在時，應用程式會使用格式名稱語法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1132">The application used format name syntax when verifying queue existence.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName="FormatName">
      <MemberSignature Language="C#" Value="public string FormatName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.FormatName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormatName : string" Usage="System.Messaging.MessageQueue.FormatName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_FormatName")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1133">取得訊息佇列在佇列建立時產生的唯一佇列名稱。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1133">Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1134">在網路上唯一的佇列名稱。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1134">The name for the queue, which is unique on the network.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1135"><xref:System.Messaging.MessageQueue.FormatName%2A>屬性包含佇列的格式名稱。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1135">The <xref:System.Messaging.MessageQueue.FormatName%2A> property contains the format name of the queue.</span></span> <span data-ttu-id="dc7c4-1136">訊息佇列會使用格式名稱來識別開啟的佇列，以及如何存取它。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1136">Message Queuing uses the format name to identify which queue to open and how to access it.</span></span> <span data-ttu-id="dc7c4-1137">不同於大部分的佇列的特性，格式名稱不是訊息佇列應用程式佇列屬性，因此您無法存取它透過 「 訊息佇列的管理工具。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1137">Unlike most of a queue's characteristics, the format name is not a Message Queuing application queue property, so you cannot access it through the Message Queuing management tool.</span></span> <span data-ttu-id="dc7c4-1138">格式名稱是只要佇列中的唯一名稱由訊息佇列的佇列或應用程式產生稍後會在建立時產生。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1138">The format name is simply a unique name for the queue, which Message Queuing generates when it creates the queue or which the application generates later.</span></span>  
  
 <span data-ttu-id="dc7c4-1139">如果您指定使用的路徑名稱語法的路徑 (例如`myComputer\myQueue`) 而不是您讀取或寫入至佇列時，請使用格式名稱語法，主要網域控制站 （這會使用 Active Directory） 會轉譯<xref:System.Messaging.MessageQueue.Path%2A>到相關聯<xref:System.Messaging.MessageQueue.FormatName%2A>才能存取佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1139">If you specify a path using the path name syntax (such as `myComputer\myQueue`) rather than using the format name syntax when you read or write to the queue, the primary domain controller (which uses Active Directory) translates the <xref:System.Messaging.MessageQueue.Path%2A> into the associated <xref:System.Messaging.MessageQueue.FormatName%2A> before accessing the queue.</span></span> <span data-ttu-id="dc7c4-1140">如果您的應用程式離線工作時，您必須使用格式名稱語法;否則，主要網域控制站將無法執行路徑轉譯。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1140">If your application is working offline, you must use the format name syntax; otherwise, the primary domain controller will not be available to perform the path translation.</span></span>  
  
 <span data-ttu-id="dc7c4-1141">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1141">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1142">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1142">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1143">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1143">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1144">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1144">Local computer</span></span>|<span data-ttu-id="dc7c4-1145">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1145">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1146">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1146">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1147">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1147">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1148">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1148">Remote computer</span></span>|<span data-ttu-id="dc7c4-1149">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1149">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1150">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1150">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1151">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1151">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1152">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.FormatName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1152">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.FormatName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#13](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1153"><see cref="P:System.Messaging.MessageQueue.Path" /> 未設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1153">The <see cref="P:System.Messaging.MessageQueue.Path" /> is not set.</span></span>  
  
<span data-ttu-id="dc7c4-1154">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1154">-or-</span></span> 
<span data-ttu-id="dc7c4-1155">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1155">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public System.Messaging.IMessageFormatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.IMessageFormatter Formatter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatter As IMessageFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::IMessageFormatter ^ Formatter { System::Messaging::IMessageFormatter ^ get(); void set(System::Messaging::IMessageFormatter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Formatter : System.Messaging.IMessageFormatter with get, set" Usage="System.Messaging.MessageQueue.Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageFormatterConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Formatter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.IMessageFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1156">取得或設定對佇列寫入或讀取訊息時，用來將物件序列化成訊息主體，或者從訊息主體將物件還原序列化的格式子。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1156">Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1157">產生要對訊息主體寫入或讀取的資料流的 <see cref="T:System.Messaging.IMessageFormatter" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1157">The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.</span></span> <span data-ttu-id="dc7c4-1158">預設為 <see cref="T:System.Messaging.XmlMessageFormatter" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1158">The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1159"><xref:System.Messaging.MessageQueue.Formatter%2A>屬性包含您的應用程式讀取或寫入至佇列時，轉換訊息的格式子物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1159">The <xref:System.Messaging.MessageQueue.Formatter%2A> property contains an instance of a formatter object, which transforms messages when your application reads or writes to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1160">當應用程式傳送訊息至佇列時，格式器會將物件序列化成資料流，並將它插入訊息內文。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1160">When the application sends message to the queue, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="dc7c4-1161">格式器從佇列讀取時，會將訊息資料還原序列化<xref:System.Messaging.Message.Body%2A>屬性<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1161">When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="dc7c4-1162"><xref:System.Messaging.XmlMessageFormatter>鬆散偶合的因此不需要有相同的物件時使用此格式輸入上的寄件者和接收者。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1162">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="dc7c4-1163"><xref:System.Messaging.ActiveXMessageFormatter>和<xref:System.Messaging.BinaryMessageFormatter>將資料序列化成二進位表示法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1163">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="dc7c4-1164"><xref:System.Messaging.ActiveXMessageFormatter>傳送或接收的 COM 元件時使用。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1164">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="dc7c4-1165"><xref:System.Messaging.BinaryMessageFormatter> 並<xref:System.Messaging.ActiveXMessageFormatter>提供更快速的輸送量比<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1165"><xref:System.Messaging.BinaryMessageFormatter> and <xref:System.Messaging.ActiveXMessageFormatter> provide faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="dc7c4-1166"><xref:System.Messaging.ActiveXMessageFormatter>允許與 Visual Basic 6.0 中訊息佇列應用程式的互通性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1166">The <xref:System.Messaging.ActiveXMessageFormatter> allows interoperability with Visual Basic 6.0 Message Queuing applications.</span></span>  
  
 <span data-ttu-id="dc7c4-1167">當您的應用程式將訊息傳送至佇列<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>只適用於使用預設的訊息屬性，這些訊息<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1167">When your application sends messages to the queue, the <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> applies only to those messages that use the default message properties, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span></span> <span data-ttu-id="dc7c4-1168">如果您傳送<xref:System.Messaging.Message>至佇列，訊息佇列會使用中定義的格式器<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>改為序列化主體的屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1168">If you send a <xref:System.Messaging.Message> to the queue, Message Queuing uses the formatter defined in the <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property to serialize the body instead.</span></span>  
  
 <span data-ttu-id="dc7c4-1169"><xref:System.Messaging.MessageQueue>一律會使用類別<xref:System.Messaging.Message>接收或窺視佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1169">The <xref:System.Messaging.MessageQueue> class will always use a <xref:System.Messaging.Message> to receive or peek a message from the queue.</span></span> <span data-ttu-id="dc7c4-1170">使用還原序列化訊息<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1170">The message is deserialized using the <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="dc7c4-1171">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1171">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1172">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1172">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1173">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1173">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1174">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1174">Local computer</span></span>|<span data-ttu-id="dc7c4-1175">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1175">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1176">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1176">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1177">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1177">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1178">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1178">Remote computer</span></span>|<span data-ttu-id="dc7c4-1179">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1179">No</span></span>|  
|<span data-ttu-id="dc7c4-1180">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1180">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1181">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1181">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1182">下列程式碼範例示範設定格式化的訊息內文使用<xref:System.Messaging.BinaryMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1182">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="dc7c4-1183">下列程式碼範例示範設定格式化的訊息內文使用<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1183">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
      </Docs>
    </Member>
    <Member MemberName="GetAllMessages">
      <MemberSignature Language="C#" Value="public System.Messaging.Message[] GetAllMessages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message[] GetAllMessages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetAllMessages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMessages () As Message()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Messaging::Message ^&gt; ^ GetAllMessages();" />
      <MemberSignature Language="F#" Value="member this.GetAllMessages : unit -&gt; System.Messaging.Message[]" Usage="messageQueue.GetAllMessages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1184">傳回佇列中的所有訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1184">Returns all the messages that are in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1185"><see cref="T:System.Messaging.Message" /> 型別的陣列，表示佇列中的所有訊息，順序與出現在訊息佇列中的順序一樣。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1185">An array of type <see cref="T:System.Messaging.Message" /> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1186"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> 這些訊息會回到佇列中的訊息，非動態連結的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1186"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> returns a static snapshot of the messages in the queue, not dynamic links to those messages.</span></span> <span data-ttu-id="dc7c4-1187">因此，您無法使用陣列來修改佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1187">Therefore, you cannot use the array to modify the messages in the queue.</span></span> <span data-ttu-id="dc7c4-1188">如果您想要即時、 動態互動 （例如，若要刪除訊息的能力） 的佇列，呼叫<xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A>方法，這個方法會傳回佇列中訊息的動態清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1188">If you want real-time, dynamic interaction with the queue (such as the ability to delete messages), call the <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> method, which returns a dynamic list of the messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1189">因為<xref:System.Messaging.MessageQueue.GetAllMessages%2A>方法呼叫傳回佇列中訊息的副本時，陣列不會反映新的訊息到達佇列或從佇列中移除的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1189">Because <xref:System.Messaging.MessageQueue.GetAllMessages%2A> returns a copy of the messages in the queue at the time the method was called, the array does not reflect new messages that arrive in the queue or messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1190"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> 只有在未由篩選掉的屬性會擷取<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1190"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> retrieves only those properties not filtered out by the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property.</span></span>  
  
 <span data-ttu-id="dc7c4-1191">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1191">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1192">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1192">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1193">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1193">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1194">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1194">Local computer</span></span>|<span data-ttu-id="dc7c4-1195">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1195">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1196">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1196">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1197">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1197">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1198">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1198">Remote computer</span></span>|<span data-ttu-id="dc7c4-1199">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1199">No</span></span>|  
|<span data-ttu-id="dc7c4-1200">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1200">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1201">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1201">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1202">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.GetAllMessages%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1202">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#21](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#21)]
 [!code-csharp[MessageQueue2#21](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1203">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1203">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="messageQueue.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method returns a MessageEnumerator that implements RemoveCurrent family of methods incorrectly. Please use GetMessageEnumerator2 instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1204">列舉佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1204">Enumerates the messages in a queue.</span></span> <span data-ttu-id="dc7c4-1205"><see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> 已被取代。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1205"><see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> is deprecated.</span></span> <span data-ttu-id="dc7c4-1206">應改用 <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1206"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1207"><see cref="T:System.Collections.IEnumerator" />，提供佇列中訊息的動態連接。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1207">A <see cref="T:System.Collections.IEnumerator" /> that provides a dynamic connection to the messages in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1208">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1208">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1209">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1209">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1210">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1210">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1211">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1211">Local computer</span></span>|<span data-ttu-id="dc7c4-1212">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1212">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1213">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1213">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1214">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1214">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1215">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1215">Remote computer</span></span>|<span data-ttu-id="dc7c4-1216">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1216">No</span></span>|  
|<span data-ttu-id="dc7c4-1217">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1217">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1218">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1218">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1219">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.GetEnumerator%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1219">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.GetEnumerator%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#22](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#22)]
 [!code-csharp[MessageQueue2#22](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetMachineId">
      <MemberSignature Language="C#" Value="public static Guid GetMachineId (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetMachineId(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMachineId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMachineId (machineName As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetMachineId(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetMachineId : string -&gt; Guid" Usage="System.Messaging.MessageQueue.GetMachineId machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="dc7c4-1220">包含佇列的電腦名稱，前端沒有兩條反斜線 (\\\\)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1220">The name of the computer that contains the queue, without the two preceding backslashes (\\\\).</span></span></param>
        <summary><span data-ttu-id="dc7c4-1221">取得這個 <see cref="T:System.Messaging.MessageQueue" /> 參考之佇列所在位置的電腦識別項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1221">Gets the identifier of the computer on which the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> is located.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1222"><see cref="T:System.Guid" />，表示佇列所在之電腦的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1222">A <see cref="T:System.Guid" /> that represents a unique identifier for the computer on which the queue is located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1223">您可以在兩個用途，以及其他使用電腦的識別碼： 讀取電腦日誌，並設定安全性憑證。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1223">You can use a computer's identifier for two purposes, among others: to read the computer journal and to set security certificates.</span></span> <span data-ttu-id="dc7c4-1224">不過，您不能呼叫<xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>遠端電腦，當您離線工作因為應用程式必須有網域控制站上的目錄服務的存取權。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1224">However, you cannot call <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29> for a remote computer when you are working offline because the application must have access to the directory service on the domain controller.</span></span>  
  
 <span data-ttu-id="dc7c4-1225">電腦識別碼 （或電腦的識別項） 是<xref:System.Guid>訊息佇列在將電腦新增至企業時所建立。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1225">The computer identifier (or machine identifier) is a <xref:System.Guid> that Message Queuing creates when a computer is added to the enterprise.</span></span> <span data-ttu-id="dc7c4-1226">訊息佇列會結合使用的電腦識別碼`Machine`並`Journal`關鍵字來建立電腦日誌的格式名稱，其語法`Machine=<computeridentifier>;Journal`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1226">Message Queuing combines the computer identifier with the `Machine` and `Journal` keywords to create the machine journal's format name, which has the syntax `Machine=<computeridentifier>;Journal`.</span></span> <span data-ttu-id="dc7c4-1227">機器筆記本中，也就是做為日誌佇列，是系統佇列會儲存副本的應用程式產生訊息的時機<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1227">The machine journal, which is also known as the journal queue, is a system queue that stores copies of application-generated messages when the <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="dc7c4-1228">建構佇列格式名稱時，日誌的這個語法才有效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1228">This syntax for the journal is only valid when constructing the format name for the queue.</span></span> <span data-ttu-id="dc7c4-1229">路徑名稱語法是`MachineName` \\ `Journal$`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1229">The path name syntax is `MachineName`\\`Journal$`.</span></span>  
  
 <span data-ttu-id="dc7c4-1230">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1230">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1231">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1231">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1232">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1232">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1233">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1233">Local computer</span></span>|<span data-ttu-id="dc7c4-1234">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1234">No</span></span>|  
|<span data-ttu-id="dc7c4-1235">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1235">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1236">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1236">No</span></span>|  
|<span data-ttu-id="dc7c4-1237">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1237">Remote computer</span></span>|<span data-ttu-id="dc7c4-1238">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1238">No</span></span>|  
|<span data-ttu-id="dc7c4-1239">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1239">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1240">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1240">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1241">下列程式碼範例呼叫 <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1241">The following code example calls <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>.</span></span>  
  
 [!code-csharp[MessageQueue#14](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1242">無法擷取電腦識別項，可能是因為目錄服務無法使用；例如，如果您是離線工作。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1242">The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.</span></span>  
  
<span data-ttu-id="dc7c4-1243">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1243">-or-</span></span> 
<span data-ttu-id="dc7c4-1244">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1244">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageEnumerator">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageEnumerator GetMessageEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.MessageEnumerator GetMessageEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageEnumerator () As MessageEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::MessageEnumerator ^ GetMessageEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetMessageEnumerator : unit -&gt; System.Messaging.MessageEnumerator" Usage="messageQueue.GetMessageEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method returns a MessageEnumerator that implements RemoveCurrent family of methods incorrectly. Please use GetMessageEnumerator2 instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1245">為佇列中的所有訊息建立列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1245">Creates an enumerator object for all the messages in the queue.</span></span> <span data-ttu-id="dc7c4-1246"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> 已被取代。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1246"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> is deprecated.</span></span> <span data-ttu-id="dc7c4-1247">應改用 <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1247"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1248"><see cref="T:System.Messaging.MessageEnumerator" />，保有在佇列中所包含的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1248">The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1249"><xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> 在佇列中建立的所有訊息的動態清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1249"><xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> creates a dynamic list of all the messages in a queue.</span></span> <span data-ttu-id="dc7c4-1250">您可以從佇列中移除的列舉值目前位置的訊息藉由呼叫<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>for<xref:System.Messaging.MessageEnumerator>的<xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1250">You can remove from the queue the message at the enumerator's current position by calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> for the <xref:System.Messaging.MessageEnumerator> that <xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> returns.</span></span>  
  
 <span data-ttu-id="dc7c4-1251">因為資料指標相關聯的佇列中的訊息動態清單，如果訊息超出目前游標位置列舉型別會反映您對佇列中訊息所做的任何修改。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1251">Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</span></span> <span data-ttu-id="dc7c4-1252">比方說，放置游標的目前位置，之後的低優先順序訊息，而不是較高優先順序訊息，插入該位置之前，可以自動存取列舉值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1252">For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</span></span> <span data-ttu-id="dc7c4-1253">不過，您可以重設列舉型別，藉此將游標移回至清單中，開頭藉由呼叫<xref:System.Messaging.MessageEnumerator.Reset%2A>針對<xref:System.Messaging.MessageEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1253">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageEnumerator.Reset%2A> for the <xref:System.Messaging.MessageEnumerator>.</span></span>  
  
 <span data-ttu-id="dc7c4-1254">列舉訊息的順序會反映在佇列中的順序，所以較高優先順序訊息會出現在較低優先順序的項目。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1254">The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</span></span>  
  
 <span data-ttu-id="dc7c4-1255">如果您想要它們的訊息佇列，而不是動態連接的靜態快照時，呼叫<xref:System.Messaging.MessageQueue.GetAllMessages%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1255">If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span> <span data-ttu-id="dc7c4-1256">這個方法傳回的陣列<xref:System.Messaging.Message>代表訊息的時呼叫該方法的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1256">This method returns an array of <xref:System.Messaging.Message> objects, which represent the messages at the time the method was called.</span></span>  
  
 <span data-ttu-id="dc7c4-1257">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1257">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1258">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1258">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1259">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1259">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1260">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1260">Local computer</span></span>|<span data-ttu-id="dc7c4-1261">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1261">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1262">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1262">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1263">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1263">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1264">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1264">Remote computer</span></span>|<span data-ttu-id="dc7c4-1265">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1265">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1266">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1266">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1267">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1267">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1268">下列程式碼範例在佇列中取得訊息的動態清單和計數的所有訊息<xref:System.Messaging.Message.Priority%2A>屬性設定為<xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1268">The following code example gets a dynamic list of messages in a queue and counts all messages with the <xref:System.Messaging.Message.Priority%2A> property set to <xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CPP/mqgetmessageenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CS/mqgetmessageenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/VB/mqgetmessageenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetAllMessages" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageEnumerator2">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageEnumerator GetMessageEnumerator2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.MessageEnumerator GetMessageEnumerator2() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageEnumerator2 () As MessageEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::MessageEnumerator ^ GetMessageEnumerator2();" />
      <MemberSignature Language="F#" Value="member this.GetMessageEnumerator2 : unit -&gt; System.Messaging.MessageEnumerator" Usage="messageQueue.GetMessageEnumerator2 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1269">為佇列中的所有訊息建立列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1269">Creates an enumerator object for all the messages in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1270"><see cref="T:System.Messaging.MessageEnumerator" />，保有在佇列中所包含的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1270">The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1271"><xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> 在佇列中建立的所有訊息的動態清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1271"><xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> creates a dynamic list of all the messages in a queue.</span></span> <span data-ttu-id="dc7c4-1272">您可以從佇列中移除的列舉值目前位置的訊息藉由呼叫<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>for<xref:System.Messaging.MessageEnumerator>的<xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1272">You can remove from the queue the message at the enumerator's current position by calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> for the <xref:System.Messaging.MessageEnumerator> that <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> returns.</span></span>  
  
 <span data-ttu-id="dc7c4-1273">因為資料指標相關聯的佇列中的訊息動態清單，如果訊息超出目前游標位置列舉型別會反映您對佇列中訊息所做的任何修改。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1273">Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</span></span> <span data-ttu-id="dc7c4-1274">比方說，放置游標的目前位置，之後的低優先順序訊息，而不是較高優先順序訊息，插入該位置之前，可以自動存取列舉值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1274">For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</span></span> <span data-ttu-id="dc7c4-1275">不過，您可以重設列舉型別，藉此將游標移回至清單中，開頭藉由呼叫<xref:System.Messaging.MessageEnumerator.Reset%2A>針對<xref:System.Messaging.MessageEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1275">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageEnumerator.Reset%2A> for the <xref:System.Messaging.MessageEnumerator>.</span></span>  
  
 <span data-ttu-id="dc7c4-1276">列舉訊息的順序會反映在佇列中的順序，所以較高優先順序訊息會出現在較低優先順序的項目。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1276">The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</span></span>  
  
 <span data-ttu-id="dc7c4-1277">如果您想要它們的訊息佇列，而不是動態連接的靜態快照時，呼叫<xref:System.Messaging.MessageQueue.GetAllMessages%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1277">If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span> <span data-ttu-id="dc7c4-1278">這個方法傳回的陣列<xref:System.Messaging.Message>代表訊息的時呼叫該方法的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1278">This method returns an array of <xref:System.Messaging.Message> objects, which represent the messages at the time the method was called.</span></span>  
  
 <span data-ttu-id="dc7c4-1279">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1279">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1280">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1280">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1281">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1281">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1282">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1282">Local computer</span></span>|<span data-ttu-id="dc7c4-1283">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1283">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1284">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1284">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1285">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1285">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1286">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1286">Remote computer</span></span>|<span data-ttu-id="dc7c4-1287">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1287">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1288">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1288">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1289">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1289">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetAllMessages" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMessageQueueEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1290">為網路上公用佇列的動態清單建立列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1290">Creates an enumerator object for a dynamic listing of the public queues on the network.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMessageQueueEnumerator">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMessageQueueEnumerator () As MessageQueueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueueEnumerator ^ GetMessageQueueEnumerator();" />
      <MemberSignature Language="F#" Value="static member GetMessageQueueEnumerator : unit -&gt; System.Messaging.MessageQueueEnumerator" Usage="System.Messaging.MessageQueue.GetMessageQueueEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1291">提供順向資料指標語意，以列舉網路上的所有公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1291">Provides forward-only cursor semantics to enumerate through all public queues on the network.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1292">提供網路上所有公用訊息佇列動態清單的 <see cref="T:System.Messaging.MessageQueueEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1292">A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of all the public message queues on the network.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1293">這個多載<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>傳回網路上的所有公用佇列的列舉。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1293">This overload of <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> returns an enumeration of all the public queues that are on the network.</span></span>  
  
 <span data-ttu-id="dc7c4-1294">因為資料指標相關聯的動態清單，列舉會反映您對佇列刪除或加入到資料指標的目前位置之外的佇列清單所做的任何修改。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1294">Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue list for queues deleted or added beyond the cursor's current position.</span></span> <span data-ttu-id="dc7c4-1295">新增或刪除的資料指標的目前位置前面的佇列不會反映。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1295">Additions or deletion of queues located before the cursor's current position are not reflected.</span></span> <span data-ttu-id="dc7c4-1296">比方說，附加超過資料指標位置的佇列，但不是其中插入該位置之前，可以自動存取列舉值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1296">For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</span></span> <span data-ttu-id="dc7c4-1297">不過，您可以重設列舉型別，藉此將游標移回至清單中，開頭藉由呼叫<xref:System.Messaging.MessageQueueEnumerator.Reset%2A>針對<xref:System.Messaging.MessageQueueEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1297">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> for the <xref:System.Messaging.MessageQueueEnumerator>.</span></span>  
  
 <span data-ttu-id="dc7c4-1298">沒有佇列的網路中未定義順序。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1298">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="dc7c4-1299">列舉值不會排序，例如電腦、 標籤、 公用或私用狀態，或任何其他可存取的準則。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1299">An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</span></span>  
  
 <span data-ttu-id="dc7c4-1300">如果您想於網路，而不是動態的連線，佇列的靜態快照集時，呼叫<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>或<xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1300">If you want a static snapshot of the queues on the network rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> or <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-1301">這兩種方法的每個傳回的陣列<xref:System.Messaging.MessageQueue>代表佇列的時呼叫該方法的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1301">Each of these two methods returns an array of <xref:System.Messaging.MessageQueue> objects, which represent the queues at the time the method was called.</span></span>  
  
 <span data-ttu-id="dc7c4-1302">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1302">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1303">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1303">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1304">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1304">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1305">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1305">Local computer</span></span>|<span data-ttu-id="dc7c4-1306">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1306">No</span></span>|  
|<span data-ttu-id="dc7c4-1307">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1307">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1308">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1308">No</span></span>|  
|<span data-ttu-id="dc7c4-1309">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1309">Remote computer</span></span>|<span data-ttu-id="dc7c4-1310">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1310">No</span></span>|  
|<span data-ttu-id="dc7c4-1311">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1311">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1312">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1312">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1313">下列程式碼範例會逐一查看網路中的所有訊息佇列，並檢查每個佇列的路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1313">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="dc7c4-1314">最後，它會在網路上顯示公用佇列的數目。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1314">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageQueueEnumerator">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator (System.Messaging.MessageQueueCriteria criteria);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator(class System.Messaging.MessageQueueCriteria criteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMessageQueueEnumerator (criteria As MessageQueueCriteria) As MessageQueueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueueEnumerator ^ GetMessageQueueEnumerator(System::Messaging::MessageQueueCriteria ^ criteria);" />
      <MemberSignature Language="F#" Value="static member GetMessageQueueEnumerator : System.Messaging.MessageQueueCriteria -&gt; System.Messaging.MessageQueueEnumerator" Usage="System.Messaging.MessageQueue.GetMessageQueueEnumerator criteria" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.Messaging.MessageQueueCriteria" />
      </Parameters>
      <Docs>
        <param name="criteria"><span data-ttu-id="dc7c4-1315"><see cref="T:System.Messaging.MessageQueueCriteria" />，包含用來篩選可用訊息佇列的準則。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1315">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the available message queues.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1316">提供順向資料指標語意，以列舉網路上所有符合指定準則的公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1316">Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1317">提供網路上所有公用訊息佇列動態清單的 <see cref="T:System.Messaging.MessageQueueEnumerator" />，其符合 <paramref name="criteria" /> 參數指定的限制。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1317">A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <paramref name="criteria" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1318">這個多載<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>傳回符合準則的應用程式準則中所定義的網路上的所有公用佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1318">This overload of <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> returns a listing of all the public queues on the network that satisfy criteria defined in the application criteria.</span></span> <span data-ttu-id="dc7c4-1319">您可以指定建立或修改的時間、 電腦名稱、 標籤、 類別或上述任何組合，例如，排入佇列要包括的準則。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1319">You can specify the criteria to include, for example, queue creation or modification time, computer name, label, category, or any combination of these.</span></span>  
  
 <span data-ttu-id="dc7c4-1320">因為資料指標相關聯的動態清單，列舉會反映您對資料指標的目前位置之後，就會發生的佇列進行任何修改。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1320">Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue that occurs beyond the cursor's current position.</span></span> <span data-ttu-id="dc7c4-1321">佇列資料指標的目前位置前面的變更不會反映。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1321">Changes to queues located before the cursor's current position are not reflected.</span></span> <span data-ttu-id="dc7c4-1322">比方說，附加超過資料指標位置的佇列，但不是其中插入該位置之前，可以自動存取列舉值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1322">For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</span></span> <span data-ttu-id="dc7c4-1323">不過，您可以重設列舉型別，藉此將游標移回至清單中，開頭藉由呼叫<xref:System.Messaging.MessageQueueEnumerator.Reset%2A>針對<xref:System.Messaging.MessageQueueEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1323">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> for the <xref:System.Messaging.MessageQueueEnumerator>.</span></span>  
  
 <span data-ttu-id="dc7c4-1324">沒有佇列的網路中未定義順序。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1324">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="dc7c4-1325">列舉值不會排序，例如電腦、 標籤、 公用或私用狀態，或任何其他可存取的準則。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1325">An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</span></span>  
  
 <span data-ttu-id="dc7c4-1326">如果您想於網路，而不是動態的連線，佇列的靜態快照集時，指定的準則<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>或致電<xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1326">If you want a static snapshot of the queues on the network rather than a dynamic connection to them, specify criteria for <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> or call <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-1327">這兩種方法的每個傳回的陣列<xref:System.Messaging.MessageQueue>代表佇列的時呼叫該方法的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1327">Each of these two methods returns an array of <xref:System.Messaging.MessageQueue> objects, which represent the queues at the time the method was called.</span></span> <span data-ttu-id="dc7c4-1328">呼叫<xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>，或<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>提供相同的結果，與呼叫<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>使用的篩選準則<xref:System.Messaging.MessageQueue.Category%2A>， <xref:System.Messaging.MessageQueue.Label%2A>，和<xref:System.Messaging.MessageQueue.MachineName%2A>分別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1328">Calling <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, or <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> provides the same results as calling <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> with the filtering criteria of <xref:System.Messaging.MessageQueue.Category%2A>, <xref:System.Messaging.MessageQueue.Label%2A>, and <xref:System.Messaging.MessageQueue.MachineName%2A>, respectively.</span></span>  
  
 <span data-ttu-id="dc7c4-1329">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1329">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1330">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1330">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1331">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1331">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1332">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1332">Local computer</span></span>|<span data-ttu-id="dc7c4-1333">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1333">No</span></span>|  
|<span data-ttu-id="dc7c4-1334">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1334">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1335">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1335">No</span></span>|  
|<span data-ttu-id="dc7c4-1336">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1336">Remote computer</span></span>|<span data-ttu-id="dc7c4-1337">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1337">No</span></span>|  
|<span data-ttu-id="dc7c4-1338">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1338">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1339">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1339">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1340">下列程式碼範例會逐一查看訊息佇列，並顯示"MyComputer"的電腦上的最後一天中建立且存在於每個佇列的路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1340">The following code example iterates through message queues and displays the path of each queue that was created in the last day and that exists on the computer "MyComputer".</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CPP/mqgetmessagequeueenumerator_criteria.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CS/mqgetmessagequeueenumerator_criteria.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/VB/mqgetmessagequeueenumerator_criteria.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetPrivateQueuesByMachine">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPrivateQueuesByMachine (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPrivateQueuesByMachine(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPrivateQueuesByMachine (machineName As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPrivateQueuesByMachine(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetPrivateQueuesByMachine : string -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPrivateQueuesByMachine machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="dc7c4-1341">要從其中擷取私用佇列的電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1341">The computer from which to retrieve the private queues.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1342">擷取所指定電腦上的所有私用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1342">Retrieves all the private queues on the specified computer.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1343"><see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的私用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1343">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved private queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1344"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> 擷取指定的電腦上的佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1344"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> retrieves a static snapshot of the queues on a specified computer.</span></span>  
  
 <span data-ttu-id="dc7c4-1345">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1345">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1346">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1346">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1347">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1347">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1348">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1348">Local computer</span></span>|<span data-ttu-id="dc7c4-1349">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1349">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1350">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1350">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1351">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1351">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1352">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1352">Remote computer</span></span>|<span data-ttu-id="dc7c4-1353">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1353">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1354">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1354">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1355">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1355">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1356">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1356">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1357"><paramref name="machineName" /> 參數為 <see langword="null" /> 或空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1357">The <paramref name="machineName" /> parameter is <see langword="null" /> or an empty string ("").</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1358">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1358">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPublicQueues">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1359">擷取網路上所有的公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1359">Retrieves all the public queues on the network.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPublicQueues">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueues ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueues" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueues () As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueues();" />
      <MemberSignature Language="F#" Value="static member GetPublicQueues : unit -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1360">擷取網路上所有的公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1360">Retrieves all the public queues on the network.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1361"><see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1361">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1362">如果您想在網路上的所有公用佇列的完整清單，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1362">Use this overload if you want a complete list of all the public queues on the network.</span></span> <span data-ttu-id="dc7c4-1363">如果您想要限制特定準則，例如<xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Category%2A>，或上次修改的時間使用這個方法的另一個多載。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1363">If you want to restrict the list by certain criteria, such as <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, or last modified time use another overload of this method.</span></span> <span data-ttu-id="dc7c4-1364">(或者，您可以使用<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>，或<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>。)</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1364">(Alternatively, you can use <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, or <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>.)</span></span>  
  
 <span data-ttu-id="dc7c4-1365"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1365"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="dc7c4-1366">若要互動的佇列動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1366">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-1367">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1367">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1368">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1368">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1369">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1369">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1370">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1370">Local computer</span></span>|<span data-ttu-id="dc7c4-1371">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1371">No</span></span>|  
|<span data-ttu-id="dc7c4-1372">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1372">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1373">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1373">No</span></span>|  
|<span data-ttu-id="dc7c4-1374">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1374">Remote computer</span></span>|<span data-ttu-id="dc7c4-1375">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1375">No</span></span>|  
|<span data-ttu-id="dc7c4-1376">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1376">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1377">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1377">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1378">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1378">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1379">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1379">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueues">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueues (System.Messaging.MessageQueueCriteria criteria);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueues(class System.Messaging.MessageQueueCriteria criteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueues (criteria As MessageQueueCriteria) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueues(System::Messaging::MessageQueueCriteria ^ criteria);" />
      <MemberSignature Language="F#" Value="static member GetPublicQueues : System.Messaging.MessageQueueCriteria -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueues criteria" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.Messaging.MessageQueueCriteria" />
      </Parameters>
      <Docs>
        <param name="criteria"><span data-ttu-id="dc7c4-1380"><see cref="T:System.Messaging.MessageQueueCriteria" />，包含用來篩選佇列的準則。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1380">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the queues.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1381">擷取網路上符合指定準則的所有公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1381">Retrieves all the public queues on the network that meet the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1382"><see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1382">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1383">如果您要據以篩選標籤、 類別或電腦名稱，在網路上的所有公用佇列<xref:System.Messaging.MessageQueue>類別包含提供該功能的特定方法 (<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>，和<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>分別)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1383">If you want to filter all the public queues on the network by label, category, or computer name, the <xref:System.Messaging.MessageQueue> class contains specific methods that provide that functionality (<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, and <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>, respectively).</span></span> <span data-ttu-id="dc7c4-1384">您可以使用此多載，取得一份所有公用佇列在網路上符合一個以上的這些準則 （例如，如果您想要指定標籤和分類）。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1384">Use this overload to get a list of all the public queues on the network that meet more than one of these criteria (for example, if you want to specify both a label and a category).</span></span> <span data-ttu-id="dc7c4-1385">您也可以篩選以外的訊息準則<xref:System.Messaging.MessageQueue.Label%2A>， <xref:System.Messaging.MessageQueue.Category%2A>，和<xref:System.Messaging.MessageQueue.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1385">You can also filter by message criteria other than <xref:System.Messaging.MessageQueue.Label%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, and <xref:System.Messaging.MessageQueue.MachineName%2A>.</span></span> <span data-ttu-id="dc7c4-1386">例如，您可以使用這個多載來篩選佇列的上次修改時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1386">For example, you use this overload to filter by a queue's last-modified time.</span></span> <span data-ttu-id="dc7c4-1387">只要建立的新執行個體<xref:System.Messaging.MessageQueueCriteria>類別，請設定適當的內容中執行個體，以及傳遞做為執行個體`criteria`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1387">Simply create a new instance of the <xref:System.Messaging.MessageQueueCriteria> class, set the appropriate properties in the instance, and pass the instance as the `criteria` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-1388"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1388"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="dc7c4-1389">若要互動的佇列動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1389">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-1390">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1390">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1391">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1391">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1392">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1392">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1393">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1393">Local computer</span></span>|<span data-ttu-id="dc7c4-1394">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1394">No</span></span>|  
|<span data-ttu-id="dc7c4-1395">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1395">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1396">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1396">No</span></span>|  
|<span data-ttu-id="dc7c4-1397">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1397">Remote computer</span></span>|<span data-ttu-id="dc7c4-1398">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1398">No</span></span>|  
|<span data-ttu-id="dc7c4-1399">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1399">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1400">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1400">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1401">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1401">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1402">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1402">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueCriteria" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByCategory">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByCategory (Guid category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByCategory(valuetype System.Guid category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByCategory (category As Guid) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByCategory(Guid category);" />
      <MemberSignature Language="F#" Value="static member GetPublicQueuesByCategory : Guid -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueuesByCategory category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="dc7c4-1403"><see cref="T:System.Guid" />，會將要擷取的佇列集設為群組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1403">A <see cref="T:System.Guid" /> that groups the set of queues to be retrieved.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1404">擷取網路上屬於指定分類的所有公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1404">Retrieves all the public queues on the network that belong to the specified category.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1405"><see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1405">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1406">使用此方法來依類別篩選公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1406">Use this method to filter the public queues by category.</span></span> <span data-ttu-id="dc7c4-1407"><xref:System.Messaging.MessageQueue.Category%2A>屬性會提供對訊息佇列類型 ID 屬性 （也就是讀取/寫入） 的特定佇列的存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1407">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type ID property (which is read/write) of a particular queue.</span></span> <span data-ttu-id="dc7c4-1408">雖然您可以使用<xref:System.Guid.NewGuid%2A>來建立類別目錄值的所有唯一<xref:System.Guid>值，不需要。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1408">Although you can use <xref:System.Guid.NewGuid%2A> to create a category value that is unique across all <xref:System.Guid> values, it is not necessary.</span></span> <span data-ttu-id="dc7c4-1409">類別目錄值必須是相異只能從其他類別，不會從所有其他<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1409">The category value needs to be distinct only from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="dc7c4-1410">比方說，您可以指派{00000000-0000-0000-0000-000000000001}做為<xref:System.Messaging.MessageQueue.Category%2A>的一組佇列並{00000000-0000-0000-0000-000000000002}做為<xref:System.Messaging.MessageQueue.Category%2A>另一個組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1410">For example, you can assign {00000000-0000-0000-0000-000000000001} as the <xref:System.Messaging.MessageQueue.Category%2A> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <xref:System.Messaging.MessageQueue.Category%2A> for another set.</span></span>  
  
 <span data-ttu-id="dc7c4-1411"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1411"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="dc7c4-1412">若要互動的佇列動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1412">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="dc7c4-1413">您可以將類別指定為一部分<xref:System.Messaging.MessageQueueCriteria>您傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1413">You can specify the category as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="dc7c4-1414">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1414">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1415">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1415">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1416">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1416">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1417">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1417">Local computer</span></span>|<span data-ttu-id="dc7c4-1418">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1418">No</span></span>|  
|<span data-ttu-id="dc7c4-1419">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1419">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1420">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1420">No</span></span>|  
|<span data-ttu-id="dc7c4-1421">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1421">Remote computer</span></span>|<span data-ttu-id="dc7c4-1422">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1422">No</span></span>|  
|<span data-ttu-id="dc7c4-1423">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1423">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1424">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1424">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1425">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1425">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1426">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1426">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByLabel">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByLabel (string label);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByLabel(string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByLabel (label As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByLabel(System::String ^ label);" />
      <MemberSignature Language="F#" Value="static member GetPublicQueuesByLabel : string -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueuesByLabel label" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label"><span data-ttu-id="dc7c4-1427">標記，該標記會將要擷取的佇列集設為群組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1427">A label that groups the set of queues to be retrieved.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1428">擷取網路上具有指定標籤的所有公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1428">Retrieves all the public queues on the network that carry the specified label.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1429"><see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考擷取的公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1429">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1430">使用此方法來依標籤篩選公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1430">Use this method to filter the public queues by label.</span></span>  
  
 <span data-ttu-id="dc7c4-1431"><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1431"><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="dc7c4-1432">若要互動的佇列動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1432">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="dc7c4-1433">您可以指定標籤的一部分<xref:System.Messaging.MessageQueueCriteria>您傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1433">You can specify the label as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="dc7c4-1434">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1434">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1435">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1435">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1436">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1436">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1437">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1437">Local computer</span></span>|<span data-ttu-id="dc7c4-1438">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1438">No</span></span>|  
|<span data-ttu-id="dc7c4-1439">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1439">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1440">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1440">No</span></span>|  
|<span data-ttu-id="dc7c4-1441">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1441">Remote computer</span></span>|<span data-ttu-id="dc7c4-1442">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1442">No</span></span>|  
|<span data-ttu-id="dc7c4-1443">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1443">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1444">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1444">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1445">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1445">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1446">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1446">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-1447"><paramref name="label" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1447">The <paramref name="label" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByMachine">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByMachine (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByMachine(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByMachine (machineName As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByMachine(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetPublicQueuesByMachine : string -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueuesByMachine machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="dc7c4-1448">電腦的名稱，包含要擷取的公用佇列集。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1448">The name of the computer that contains the set of public queues to be retrieved.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1449">擷取位於指定電腦上的所有公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1449">Retrieves all the public queues that reside on the specified computer.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1450"><see cref="T:System.Messaging.MessageQueue" /> 物件的陣列，會參考電腦上的公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1450">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the public queues on the computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1451">使用這個方法，以篩選電腦公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1451">Use this method to filter the public queues by computer.</span></span>  
  
 <span data-ttu-id="dc7c4-1452"><xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> 擷取佇列的靜態快照集。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1452"><xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="dc7c4-1453">若要互動的佇列動態清單，請使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1453">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="dc7c4-1454">您可以指定電腦名稱的一部分<xref:System.Messaging.MessageQueueCriteria>您傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1454">You can specify the computer name as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="dc7c4-1455">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1455">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1456">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1456">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1457">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1457">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1458">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1458">Local computer</span></span>|<span data-ttu-id="dc7c4-1459">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1459">No</span></span>|  
|<span data-ttu-id="dc7c4-1460">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1460">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1461">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1461">No</span></span>|  
|<span data-ttu-id="dc7c4-1462">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1462">Remote computer</span></span>|<span data-ttu-id="dc7c4-1463">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1463">No</span></span>|  
|<span data-ttu-id="dc7c4-1464">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1464">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1465">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1465">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1466">下列程式碼範例會擷取佇列的清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1466">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1467"><paramref name="machineName" /> 參數的語法不正確。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1467">The <paramref name="machineName" /> parameter has incorrect syntax.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1468">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1468">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityContext">
      <MemberSignature Language="C#" Value="public static System.Messaging.SecurityContext GetSecurityContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.SecurityContext GetSecurityContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSecurityContext () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::SecurityContext ^ GetSecurityContext();" />
      <MemberSignature Language="F#" Value="static member GetSecurityContext : unit -&gt; System.Messaging.SecurityContext" Usage="System.Messaging.MessageQueue.GetSecurityContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1469">擷取 MSMQ 在這次呼叫時與目前使用者 (執行緒識別) 產生關聯的安全性內容。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1469">Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1470">包含安全性內容的 <see cref="T:System.Messaging.SecurityContext" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1470">A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Messaging.Message.SecurityContext" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Messaging.MessageQueue.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_GuidId")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1471">取得佇列的唯一訊息佇列識別項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1471">Gets the unique Message Queuing identifier of the queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1472"><see cref="P:System.Messaging.MessageQueue.Id" />，表示 Message Queuing 應用程式所產生的訊息識別項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1472">A <see cref="P:System.Messaging.MessageQueue.Id" /> that represents the message identifier generated by the Message Queuing application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1473">訊息佇列設定<xref:System.Messaging.MessageQueue.Id%2A>屬性時它會建立佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1473">Message Queuing sets the <xref:System.Messaging.MessageQueue.Id%2A> property when it creates the queue.</span></span> <span data-ttu-id="dc7c4-1474">這個屬性只適用於公用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1474">This property is only available for public queues.</span></span>  
  
 <span data-ttu-id="dc7c4-1475">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1475">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1476">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1476">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1477">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1477">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1478">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1478">Local computer</span></span>|<span data-ttu-id="dc7c4-1479">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1479">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1480">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1480">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1481">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1481">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1482">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1482">Remote computer</span></span>|<span data-ttu-id="dc7c4-1483">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1483">No</span></span>|  
|<span data-ttu-id="dc7c4-1484">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1484">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1485">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1485">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1486">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.Id%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1486">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.Id%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#15](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1487">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1487">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteQueueSize">
      <MemberSignature Language="C#" Value="public static readonly long InfiniteQueueSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 InfiniteQueueSize" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteQueueSize As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long InfiniteQueueSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteQueueSize : int64" Usage="System.Messaging.MessageQueue.InfiniteQueueSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1488">指定佇列沒有大小限制。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1488">Specifies that no size restriction exists for a queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1489">設定時，經常會使用這個成員<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>或<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1489">This member is frequently used when setting <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> or <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1490">下列程式碼範例示範使用<xref:System.Messaging.MessageQueue.InfiniteQueueSize>成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1490">The following code example demonstrates the use of the <xref:System.Messaging.MessageQueue.InfiniteQueueSize> member.</span></span>  
  
 [!code-csharp[MessageQueue#16](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueue.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteTimeout : TimeSpan" Usage="System.Messaging.MessageQueue.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1491">指定窺視 (Peek) 或接收訊息的方法沒有逾時限制。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1491">Specifies that no time-out exists for methods that peek or receive messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1492"><xref:System.Messaging.MessageQueue> 支援兩種擷取訊息類型： 同步和非同步。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1492"><xref:System.Messaging.MessageQueue> supports two types of message retrieval: synchronous and asynchronous.</span></span> <span data-ttu-id="dc7c4-1493">同步方法中，<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.Receive%2A>，使得處理序執行緒等待新訊息到達佇列中指定的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1493">The synchronous methods, <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.Receive%2A>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-1494">如果指定的時間間隔是<xref:System.Messaging.MessageQueue.InfiniteTimeout>，處理序執行緒會保持封鎖，直到新的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1494">If the specified time interval is <xref:System.Messaging.MessageQueue.InfiniteTimeout>, the process thread remains blocked until a new message is available.</span></span> <span data-ttu-id="dc7c4-1495">相反地，<xref:System.Messaging.MessageQueue.BeginPeek%2A>和<xref:System.Messaging.MessageQueue.BeginReceive%2A>（非同步的方法），允許主應用程式工作繼續在個別的執行緒，直到訊息抵達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1495">On the other hand, <xref:System.Messaging.MessageQueue.BeginPeek%2A> and <xref:System.Messaging.MessageQueue.BeginReceive%2A> (the asynchronous methods), allow the main application tasks to continue in a separate thread until a message arrives in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1496">下列程式碼範例示範使用<xref:System.Messaging.MessageQueue.InfiniteTimeout>成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1496">The following code example demonstrates the use of the <xref:System.Messaging.MessageQueue.InfiniteTimeout> member.</span></span>  
  
 [!code-csharp[MessageQueue#17](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueue.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Label")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1497">取得或設定佇列描述。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1497">Gets or sets the queue description.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1498">訊息佇列的標記。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1498">The label for the message queue.</span></span> <span data-ttu-id="dc7c4-1499">預設為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1499">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1500">訊息佇列標籤的最大長度為 124 個字元。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1500">The maximum length of a message queue label is 124 characters.</span></span>  
  
 <span data-ttu-id="dc7c4-1501"><xref:System.Messaging.MessageQueue.Label%2A>屬性不需要是唯一的所有佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1501">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across all queues.</span></span> <span data-ttu-id="dc7c4-1502">不過，如果多個佇列都共用相同<xref:System.Messaging.MessageQueue.Label%2A>，您無法使用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>廣播到所有訊息的方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1502">However, if multiple queues share the same <xref:System.Messaging.MessageQueue.Label%2A>, you cannot use the <xref:System.Messaging.MessageQueue.Send%28System.Object%29> method to broadcast a message to all of them.</span></span> <span data-ttu-id="dc7c4-1503">如果您使用的標籤語法<xref:System.Messaging.MessageQueue.Path%2A>當您傳送訊息的屬性，將會擲回例外狀況<xref:System.Messaging.MessageQueue.Label%2A>不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1503">If you use the label syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property when you send the message, an exception will be thrown if the <xref:System.Messaging.MessageQueue.Label%2A> is not unique.</span></span>  
  
 <span data-ttu-id="dc7c4-1504">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1504">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1505">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1505">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1506">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1506">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1507">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1507">Local computer</span></span>|<span data-ttu-id="dc7c4-1508">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1508">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1509">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1509">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1510">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1510">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1511">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1511">Remote computer</span></span>|<span data-ttu-id="dc7c4-1512">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1512">No</span></span>|  
|<span data-ttu-id="dc7c4-1513">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1513">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1514">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1514">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1515">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.Label%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1515">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Label%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#18](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1516">標籤設為無效值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1516">The label was set to an invalid value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1517">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1517">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LastModifyTime">
      <MemberSignature Language="C#" Value="public DateTime LastModifyTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastModifyTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.LastModifyTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastModifyTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastModifyTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModifyTime : DateTime" Usage="System.Messaging.MessageQueue.LastModifyTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_LastModifyTime")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1518">取得上次修改佇列屬性的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1518">Gets the last time the properties of a queue were modified.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1519"><see cref="T:System.DateTime" />，指出佇列屬性上次修改的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1519">A <see cref="T:System.DateTime" /> that indicates when the queue properties were last modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1520">建立佇列時，包含上次修改時間和任何<xref:System.Messaging.MessageQueue>屬性，例如修改訊息佇列 」 佇列， <xref:System.Messaging.MessageQueue.BasePriority%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1520">The last modification time includes when the queue was created and any <xref:System.Messaging.MessageQueue> property that modifies the Message Queuing queue, such as <xref:System.Messaging.MessageQueue.BasePriority%2A>.</span></span> <span data-ttu-id="dc7c4-1521">值<xref:System.Messaging.MessageQueue.LastModifyTime%2A>屬性代表本機電腦的系統時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1521">The value of the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property represents the system time of the local computer.</span></span>  
  
 <span data-ttu-id="dc7c4-1522">您必須呼叫<xref:System.Messaging.MessageQueue.Refresh%2A>才能<xref:System.Messaging.MessageQueue.LastModifyTime%2A>屬性; 否則修改相關聯的時間與這個<xref:System.Messaging.MessageQueue>可能不是最新資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1522">You must call <xref:System.Messaging.MessageQueue.Refresh%2A> before getting the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property; otherwise, the modification time associated with this <xref:System.Messaging.MessageQueue> might not be current.</span></span>  
  
 <span data-ttu-id="dc7c4-1523">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1523">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1524">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1524">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1525">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1525">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1526">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1526">Local computer</span></span>|<span data-ttu-id="dc7c4-1527">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1527">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1528">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1528">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1529">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1529">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1530">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1530">Remote computer</span></span>|<span data-ttu-id="dc7c4-1531">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1531">No</span></span>|  
|<span data-ttu-id="dc7c4-1532">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1532">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1533">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1533">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1534">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.LastModifyTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1534">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#19](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1535">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1535">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
        <altmember cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Messaging.MessageQueue.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MachineName")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1536">取得或設定訊息佇列位置的電腦名稱。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1536">Gets or sets the name of the computer where the Message Queuing queue is located.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1537">佇列位置的電腦名稱。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1537">The name of the computer where the queue is located.</span></span> <span data-ttu-id="dc7c4-1538">訊息佇列預設是 "."，也就是本機電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1538">The Message Queuing default is ".", the local computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1539"><xref:System.Messaging.MessageQueue.MachineName%2A>是不可或缺的元件之佇列的易記名稱語法<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1539">The <xref:System.Messaging.MessageQueue.MachineName%2A> is an integral component of the friendly name syntax of the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="dc7c4-1540">下表顯示當您想要找出使用其易記名稱的佇列路徑時，您應該使用佇列指定之型別的語法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1540">The following table shows the syntax you should use for a queue of a specified type when you want to identify the queue path using its friendly name.</span></span>  
  
|<span data-ttu-id="dc7c4-1541">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1541">Queue type</span></span>|<span data-ttu-id="dc7c4-1542">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1542">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-1543">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1543">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="dc7c4-1544">私用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1544">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="dc7c4-1545">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1545">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="dc7c4-1546">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1546">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="dc7c4-1547">機器無法投遞的信件佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1547">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="dc7c4-1548">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1548">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="dc7c4-1549">使用 」。 「 本機電腦時指定<xref:System.Messaging.MessageQueue.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1549">Use "." for the local computer when specifying the <xref:System.Messaging.MessageQueue.MachineName%2A>.</span></span> <span data-ttu-id="dc7c4-1550">比方說，辨識這個屬性中，只有電腦名稱`Server0`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1550">Only the computer name is recognized for this property, for example, `Server0`.</span></span> <span data-ttu-id="dc7c4-1551"><xref:System.Messaging.MessageQueue.MachineName%2A>屬性不支援 IP 位址的格式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1551">The <xref:System.Messaging.MessageQueue.MachineName%2A> property does not support the IP address format.</span></span>  
  
 <span data-ttu-id="dc7c4-1552">如果您定義<xref:System.Messaging.MessageQueue.Path%2A>的形式<xref:System.Messaging.MessageQueue.MachineName%2A>，應用程式在離線工作，因為網域控制站是所需路徑轉譯時，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1552">If you define the <xref:System.Messaging.MessageQueue.Path%2A> in terms of the <xref:System.Messaging.MessageQueue.MachineName%2A>, the application throws an exception when working offline because the domain controller is required for path translation.</span></span> <span data-ttu-id="dc7c4-1553">因此，您必須使用<xref:System.Messaging.MessageQueue.FormatName%2A>針對<xref:System.Messaging.MessageQueue.Path%2A>離線工作時的語法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1553">Therefore, you must use the <xref:System.Messaging.MessageQueue.FormatName%2A> for the <xref:System.Messaging.MessageQueue.Path%2A> syntax when working offline.</span></span>  
  
 <span data-ttu-id="dc7c4-1554"><xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Path%2A>，和<xref:System.Messaging.MessageQueue.QueueName%2A>相關屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1554">The <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, and <xref:System.Messaging.MessageQueue.QueueName%2A> properties are related.</span></span> <span data-ttu-id="dc7c4-1555">變更<xref:System.Messaging.MessageQueue.MachineName%2A>屬性會導致<xref:System.Messaging.MessageQueue.Path%2A>来變更屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1555">Changing the <xref:System.Messaging.MessageQueue.MachineName%2A> property causes the <xref:System.Messaging.MessageQueue.Path%2A> property to change.</span></span> <span data-ttu-id="dc7c4-1556">它會從新的內建<xref:System.Messaging.MessageQueue.MachineName%2A>而<xref:System.Messaging.MessageQueue.QueueName%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1556">It is built from the new <xref:System.Messaging.MessageQueue.MachineName%2A> and the <xref:System.Messaging.MessageQueue.QueueName%2A>.</span></span> <span data-ttu-id="dc7c4-1557">變更<xref:System.Messaging.MessageQueue.Path%2A>（例如，若要使用的格式名稱語法） 會重設<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>屬性，以參考新的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1557">Changing the <xref:System.Messaging.MessageQueue.Path%2A> (for example, to use the format name syntax) resets the <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties to refer to the new queue.</span></span> <span data-ttu-id="dc7c4-1558">如果<xref:System.Messaging.MessageQueue.QueueName%2A>屬性是空的<xref:System.Messaging.MessageQueue.Path%2A>設為您指定之電腦的日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1558">If the <xref:System.Messaging.MessageQueue.QueueName%2A> property is empty, the <xref:System.Messaging.MessageQueue.Path%2A> is set to the Journal queue of the computer you specify.</span></span>  
  
 <span data-ttu-id="dc7c4-1559">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1559">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1560">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1560">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1561">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1561">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1562">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1562">Local computer</span></span>|<span data-ttu-id="dc7c4-1563">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1563">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1564">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1564">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1565">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1565">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1566">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1566">Remote computer</span></span>|<span data-ttu-id="dc7c4-1567">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1567">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1568">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1568">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1569">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1569">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1570">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.MachineName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1570">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MachineName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#20](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1571"><see cref="P:System.Messaging.MessageQueue.MachineName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1571">The <see cref="P:System.Messaging.MessageQueue.MachineName" /> is <see langword="null" />.</span></span>        
<span data-ttu-id="dc7c4-1572">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1572">-or-</span></span>

<span data-ttu-id="dc7c4-1573">電腦的名稱無效，可能是因為語法不正確。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1573">The name of the computer is not valid, possibly because the syntax is incorrect.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1574">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1574">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueue.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MaximumJournalSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1575">取得或設定日誌佇列的最大大小。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1575">Gets or sets the maximum size of the journal queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1576">日誌佇列大小的最大值 (以 KB 為單位)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1576">The maximum size, in kilobytes, of the journal queue.</span></span> <span data-ttu-id="dc7c4-1577">訊息佇列預設不指定上限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1577">The Message Queuing default specifies that no limit exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1578"><xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> 提供訊息佇列的日誌存放區限制的存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1578"><xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> provides access to the Message Queuing journal storage limit.</span></span> <span data-ttu-id="dc7c4-1579">它是相關時，才<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1579">It is relevant only when <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> is `true`.</span></span> <span data-ttu-id="dc7c4-1580">設定這個屬性修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1580">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-1581">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1581">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change</span></span>  
  
 <span data-ttu-id="dc7c4-1582">如果您將訊息儲存在日誌或寄不出信件佇列中時，您應該定期清除佇列，以便移除不再需要的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1582">If you store messages in a journal or dead-letter queue, you should periodically clear the queue to remove messages that are no longer needed.</span></span> <span data-ttu-id="dc7c4-1583">這類佇列中的訊息都會計入佇列所在的電腦的訊息配額。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1583">Messages in such a queue count toward the message quota for the computer where the queue resides.</span></span> <span data-ttu-id="dc7c4-1584">（系統管理員將電腦配額）。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1584">(The administrator sets the computer quota.)</span></span>  
  
 <span data-ttu-id="dc7c4-1585">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1585">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1586">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1586">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1587">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1587">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1588">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1588">Local computer</span></span>|<span data-ttu-id="dc7c4-1589">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1589">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1590">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1590">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1591">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1591">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1592">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1592">Remote computer</span></span>|<span data-ttu-id="dc7c4-1593">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1593">No</span></span>|  
|<span data-ttu-id="dc7c4-1594">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1594">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1595">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1595">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1596">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1596">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#21](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1597">日誌佇列的最大值設定為無效值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1597">The maximum journal queue size was set to an invalid value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1598">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1598">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumQueueSize" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueue.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MaximumQueueSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1599">取得或設定佇列的最大值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1599">Gets or sets the maximum size of the queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1600">佇列的最大值 (以 KB 計)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1600">The maximum size, in kilobytes, of the queue.</span></span> <span data-ttu-id="dc7c4-1601">訊息佇列預設不指定上限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1601">The Message Queuing default specifies that no limit exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1602"><xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>提供訊息佇列訊息存放區限制，也就是電腦的系統管理員定義的訊息配額不同的存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1602">The <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> provides access to the Message Queuing message storage limit, which is separate from the computer's message quota that the administrator defines.</span></span> <span data-ttu-id="dc7c4-1603">如需詳細的訊息配額的詳細資訊，請參閱<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1603">For more information about the message quota, see <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-1604">設定這個屬性修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1604">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-1605">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1605">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change</span></span>  
  
 <span data-ttu-id="dc7c4-1606">如果嘗試超過佇列大小上限或電腦的訊息配額時，訊息可能會遺失。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1606">If an attempt is made to exceed either the maximum queue size or the computer message quota, messages might be lost.</span></span> <span data-ttu-id="dc7c4-1607">當到達佇列配額時，訊息佇列通知，表示佇列已滿，藉由傳回負值通知訊息傳送的應用程式的管理佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1607">When the queue quota is reached, Message Queuing notifies the administration queue of the sending application to indicate that the queue is full, by returning a negative acknowledgment message.</span></span> <span data-ttu-id="dc7c4-1608">訊息佇列會繼續傳送負值通知，直到佇列中訊息的總大小低於限制。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1608">Message Queuing continues to send negative acknowledgments until the total size of the messages in the queue drops below the limit.</span></span>  
  
 <span data-ttu-id="dc7c4-1609">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1609">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1610">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1610">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1611">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1611">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1612">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1612">Local computer</span></span>|<span data-ttu-id="dc7c4-1613">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1613">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1614">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1614">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1615">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1615">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1616">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1616">Remote computer</span></span>|<span data-ttu-id="dc7c4-1617">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1617">No</span></span>|  
|<span data-ttu-id="dc7c4-1618">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1618">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1619">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1619">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1620">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1620">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#22](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1621">佇列大小的最大值包含負值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1621">The maximum queue size contains a negative value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1622">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1622">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="MessageReadPropertyFilter">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePropertyFilter MessageReadPropertyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessagePropertyFilter MessageReadPropertyFilter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MessageReadPropertyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageReadPropertyFilter As MessagePropertyFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePropertyFilter ^ MessageReadPropertyFilter { System::Messaging::MessagePropertyFilter ^ get(); void set(System::Messaging::MessagePropertyFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageReadPropertyFilter : System.Messaging.MessagePropertyFilter with get, set" Usage="System.Messaging.MessageQueue.MessageReadPropertyFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MessageReadPropertyFilter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePropertyFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1623">取得或設定接收或窺視訊息的屬性篩選條件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1623">Gets or sets the property filter for receiving or peeking messages.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1624">佇列用來為每個訊息篩選它所接收或窺視的屬性集的 <see cref="T:System.Messaging.MessagePropertyFilter" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1624">The <see cref="T:System.Messaging.MessagePropertyFilter" /> used by the queue to filter the set of properties it receives or peeks for each message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1625">此篩選器是一組限制的訊息屬性的布林值，<xref:System.Messaging.MessageQueue>接收或窺視。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1625">This filter is a set of Boolean values restricting the message properties that the <xref:System.Messaging.MessageQueue> receives or peeks.</span></span> <span data-ttu-id="dc7c4-1626">當<xref:System.Messaging.MessageQueue>接收或窺視訊息從伺服器佇列中，它會擷取只有屬性為其<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>值是`true`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1626">When the <xref:System.Messaging.MessageQueue> receives or peeks a message from the server queue, it retrieves only those properties for which the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> value is `true`.</span></span>  
  
 <span data-ttu-id="dc7c4-1627">下圖顯示的初始屬性值的<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1627">The following shows initial property values for the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property.</span></span> <span data-ttu-id="dc7c4-1628">這些設定是相同於呼叫<xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A>上<xref:System.Messaging.MessagePropertyFilter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1628">These settings are identical to calling <xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A> on a <xref:System.Messaging.MessagePropertyFilter>.</span></span>  
  
|<span data-ttu-id="dc7c4-1629">屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1629">Property</span></span>|<span data-ttu-id="dc7c4-1630">預設值</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1630">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.AppSpecific%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.ArrivedTime%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.AttachSenderId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Authenticated%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AuthenticationProviderName%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AuthenticationProviderType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Body%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.ConnectorType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.CorrelationId%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|<span data-ttu-id="dc7c4-1631">1024 個位元組</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1631">1024 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|<span data-ttu-id="dc7c4-1632">255 個位元組</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1632">255 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|<span data-ttu-id="dc7c4-1633">255 個位元組</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1633">255 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DestinationQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.DigitalSignature%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Extension%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.HashAlgorithm%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Id%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.IsFirstInTransaction%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.IsLastInTransaction%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Label%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.MessageType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Priority%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Recoverable%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderCertificate%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderVersion%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SentTime%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.SourceMachine%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TimeToBeReceived%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TimeToReachQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TransactionId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TransactionStatusQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseTracing%2A>|`false`|  
  
 <span data-ttu-id="dc7c4-1634">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1634">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1635">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1635">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1636">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1636">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1637">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1637">Local computer</span></span>|<span data-ttu-id="dc7c4-1638">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1638">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1639">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1639">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1640">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1640">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1641">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1641">Remote computer</span></span>|<span data-ttu-id="dc7c4-1642">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1642">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1643">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1643">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1644">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1644">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1645">下列程式碼範例使用<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>限制接收的訊息內容。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1645">The following code example uses the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> to restrict the message properties received.</span></span>  
  
 [!code-cpp[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/CPP/mqmessagereadpropertyfilter.cpp#1)]
 [!code-csharp[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/CS/mqmessagereadpropertyfilter.cs#1)]
 [!code-vb[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/VB/mqmessagereadpropertyfilter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1646">篩選條件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1646">The filter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueue.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MulticastAddress")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1647">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1647">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="dc7c4-1648">取得或設定與佇列相關聯的多點傳送位址。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1648">Gets or sets the multicast address associated with the queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1649"><see cref="T:System.String" />，包含有效的多點傳送位址 (在下面所示的表單中)，否則為 <see langword="null" />，表示佇列未與多點傳送位址相關聯。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1649">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span></span>  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1650"><xref:System.Messaging.MessageQueue.MulticastAddress%2A>屬性用來傳送訊息時可以使用多點傳送位址相關聯的非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1650">The <xref:System.Messaging.MessageQueue.MulticastAddress%2A> property is used to associate a non-transactional queue with a multicast address that can be used when sending messages.</span></span> <span data-ttu-id="dc7c4-1651">您無法關聯多點傳送位址的異動式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1651">You cannot associate a transactional queue with a multicast address.</span></span> <span data-ttu-id="dc7c4-1652">傳送應用程式會將訊息傳送至多點傳送位址，當訊息佇列將訊息的複本傳送至該位址相關聯的每個佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1652">When the sending application sends messages to a multicast address, Message Queuing sends a copy of the message to every queue associated with that address.</span></span>  
  
 <span data-ttu-id="dc7c4-1653">IP 多點傳送位址必須在類別 D 範圍從 224.0.0.0 至 239.255.255.255，其對應於設定的前四個高序位位元等於 1110年。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1653">IP multicast addresses must be in the class D range from 224.0.0.0 to 239.255.255.255, which corresponds to setting the first four high-order bits equal to 1110.</span></span> <span data-ttu-id="dc7c4-1654">不過，只有某些特定的這個範圍內的位址範圍會保留供傳送多點傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1654">However, only certain ranges of addresses in this range are unreserved and available for sending multicast messages.</span></span> <span data-ttu-id="dc7c4-1655">如需保留的多點傳送位址的最新清單，請參閱[Internet Assigned 數目 Authority (IANA) 網際網路多點傳送位址](https://go.microsoft.com/fwlink/?linkid=3859)網頁。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1655">For the latest list of reserved multicast addresses, see the [Internet Assigned Number Authority (IANA) Internet Multicast Addresses](https://go.microsoft.com/fwlink/?linkid=3859) Web page.</span></span> <span data-ttu-id="dc7c4-1656">沒有任何限制在連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1656">There are no restrictions on the port number.</span></span>  
  
 <span data-ttu-id="dc7c4-1657">如果幾部來源電腦傳送多點傳送的訊息，而且您想要特定的佇列，接收來自只有一台來源電腦的訊息，每台來源電腦必須傳送訊息至不同的 IP 位址和連接埠號碼組合。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1657">If several source computers are sending multicast messages and you want a specific queue to receive messages from only one source computer, each source computer must send messages to a different combination of IP address and port number.</span></span>  
  
 <span data-ttu-id="dc7c4-1658">若要中斷關聯來自多點傳送位址的佇列，將<xref:System.Messaging.MessageQueue.MulticastAddress%2A>屬性設為零長度字串。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1658">To dissociate a queue from a multicast address, set the <xref:System.Messaging.MessageQueue.MulticastAddress%2A> property to a zero-length string.</span></span> <span data-ttu-id="dc7c4-1659">請勿將它設為`null`，因為這會導致<xref:System.ArgumentNullException>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1659">Do not set it to `null`, as this will result in a <xref:System.ArgumentNullException>.</span></span>  
  
 <span data-ttu-id="dc7c4-1660">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1660">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1661">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1661">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1662">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1662">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1663">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1663">Local computer</span></span>|<span data-ttu-id="dc7c4-1664">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1664">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1665">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1665">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1666">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1666">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1667">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1667">Remote computer</span></span>|<span data-ttu-id="dc7c4-1668">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1668">No</span></span>|  
|<span data-ttu-id="dc7c4-1669">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1669">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1670">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1670">No</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="dc7c4-1671">未安裝 MSMQ 3.0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1671">MSMQ 3.0 is not installed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueue.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Path")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1672">取得或設定佇列路徑。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1672">Gets or sets the queue's path.</span></span> <span data-ttu-id="dc7c4-1673">設定 <see cref="P:System.Messaging.MessageQueue.Path" /> 會使 <see cref="T:System.Messaging.MessageQueue" /> 指向新佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1673">Setting the <see cref="P:System.Messaging.MessageQueue.Path" /> causes the <see cref="T:System.Messaging.MessageQueue" /> to point to a new queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-1674"><see cref="T:System.Messaging.MessageQueue" /> 參考的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1674">The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="dc7c4-1675">預設值取決於您使用的 <see cref="M:System.Messaging.MessageQueue.#ctor" /> 建構函式，可以是 <see langword="null" />，或者是由建構函式的 <paramref name="path" /> 參數指定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1675">The default depends on which <see cref="M:System.Messaging.MessageQueue.#ctor" /> constructor you use; it is either <see langword="null" /> or is specified by the constructor's <paramref name="path" /> parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1676">語法<xref:System.Messaging.MessageQueue.Path%2A>屬性取決於佇列類型它點到下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1676">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it points to, as shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-1677">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1677">Queue type</span></span>|<span data-ttu-id="dc7c4-1678">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1678">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-1679">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1679">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="dc7c4-1680">私用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1680">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="dc7c4-1681">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1681">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="dc7c4-1682">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1682">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="dc7c4-1683">機器無法投遞的信件佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1683">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="dc7c4-1684">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1684">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="dc7c4-1685">使用"。"代表本機電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1685">Use "." to represent the local computer.</span></span>  
  
 <span data-ttu-id="dc7c4-1686"><xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Path%2A>，和<xref:System.Messaging.MessageQueue.QueueName%2A>相關屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1686">The <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, and <xref:System.Messaging.MessageQueue.QueueName%2A> properties are related.</span></span> <span data-ttu-id="dc7c4-1687">變更<xref:System.Messaging.MessageQueue.MachineName%2A>屬性會導致<xref:System.Messaging.MessageQueue.Path%2A>来變更屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1687">Changing the <xref:System.Messaging.MessageQueue.MachineName%2A> property causes the <xref:System.Messaging.MessageQueue.Path%2A> property to change.</span></span> <span data-ttu-id="dc7c4-1688">它會從新的內建<xref:System.Messaging.MessageQueue.MachineName%2A>而<xref:System.Messaging.MessageQueue.QueueName%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1688">It is built from the new <xref:System.Messaging.MessageQueue.MachineName%2A> and the <xref:System.Messaging.MessageQueue.QueueName%2A>.</span></span> <span data-ttu-id="dc7c4-1689">變更<xref:System.Messaging.MessageQueue.Path%2A>（例如，若要使用的格式名稱語法） 會重設<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>屬性，以參考新的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1689">Changing the <xref:System.Messaging.MessageQueue.Path%2A> (for example, to use the format name syntax) resets the <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties to refer to the new queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1690">或者，您可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>來描述佇列路徑下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1690">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path, as shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-1691">參考資料</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1691">Reference</span></span>|<span data-ttu-id="dc7c4-1692">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1692">Syntax</span></span>|<span data-ttu-id="dc7c4-1693">範例</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1693">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="dc7c4-1694">格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1694">Format name</span></span>|<span data-ttu-id="dc7c4-1695">`FormatName:` [ *format name* ]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1695">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="dc7c4-1696">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1696">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span>|  
|<span data-ttu-id="dc7c4-1697">標籤</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1697">Label</span></span>|<span data-ttu-id="dc7c4-1698">`Label:` [ *label* ]</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1698">`Label:` [ *label* ]</span></span>|<span data-ttu-id="dc7c4-1699">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1699">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="dc7c4-1700">如果您使用的標籤語法<xref:System.Messaging.MessageQueue.Path%2A>當您傳送訊息的屬性，將會擲回例外狀況<xref:System.Messaging.MessageQueue.Label%2A>不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1700">If you use the label syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property when you send the message, an exception will be thrown if the <xref:System.Messaging.MessageQueue.Label%2A> is not unique.</span></span>  
  
 <span data-ttu-id="dc7c4-1701">離線工作，您必須使用格式名稱語法中，而不是好記名稱語法中的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1701">To work offline, you must use the format name syntax, rather than the friendly name syntax in the first table.</span></span> <span data-ttu-id="dc7c4-1702">否則，因為網域主控站 （Active Directory 所在） 不適用於將路徑解析成的格式名稱，便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1702">Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="dc7c4-1703">設定新的路徑時，關閉訊息佇列，並釋放所有控制代碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1703">Setting a new path closes the message queue and releases all handles.</span></span>  
  
 <span data-ttu-id="dc7c4-1704">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1704">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1705">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1705">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1706">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1706">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1707">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1707">Local computer</span></span>|<span data-ttu-id="dc7c4-1708">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1708">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1709">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1709">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1710">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1710">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1711">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1711">Remote computer</span></span>|<span data-ttu-id="dc7c4-1712">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1712">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1713">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1713">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1714">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1714">Yes</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="dc7c4-1715">工作群組模式中，您可以只使用私用佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1715">In workgroup mode you can only use private queues.</span></span> <span data-ttu-id="dc7c4-1716">您指定的路徑使用私用佇列語法`MachineName` \\ `Private$` \\ `QueueName`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1716">You specify the path using the private queue syntax `MachineName`\\`Private$`\\`QueueName`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1717">下列程式碼範例，請建立新<xref:System.Messaging.MessageQueue>物件使用不同的路徑名稱語法類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1717">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="dc7c4-1718">在每個案例中，它會傳送訊息至佇列的路徑定義於建構函式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1718">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1719">路徑無效，可能是因為語法無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1719">The path is not valid, possibly because the syntax is not valid.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Peek">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe><span data-ttu-id="dc7c4-1720">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1720">The method is not thread safe.</span></span></threadsafe>
        <summary><span data-ttu-id="dc7c4-1721">傳回佇列中第一個訊息的複本，但不從佇列中移除訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1721">Returns a copy of the first message in the queue without removing the message from the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; System.Messaging.Message" Usage="messageQueue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1722">傳回而不移除 (窺視) 這個 <see cref="T:System.Messaging.MessageQueue" /> 所參考佇列中的第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1722">Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="dc7c4-1723"><see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，因此會封鎖目前的執行緒，直到訊息可以使用為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1723">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1724">表示佇列中第一個訊息的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1724">The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1725">窺視佇列，或等候直到佇列中有一則訊息，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1725">Use this overload to peek a queue, or to wait until a message exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1726"><xref:System.Messaging.MessageQueue.Peek%2A>方法讀取，但不會移除，第一個訊息從佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1726">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, the first message from the queue.</span></span> <span data-ttu-id="dc7c4-1727">因此，重複呼叫<xref:System.Messaging.MessageQueue.Peek%2A>傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1727">Therefore, repeated calls to <xref:System.Messaging.MessageQueue.Peek%2A> return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-1728"><xref:System.Messaging.MessageQueue.Receive%2A>方法，相反地，讀取和移除佇列中的第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1728">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes the first message from the queue.</span></span> <span data-ttu-id="dc7c4-1729">重複呼叫<xref:System.Messaging.MessageQueue.Receive%2A>，因此，會傳回不同的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1729">Repeated calls to <xref:System.Messaging.MessageQueue.Receive%2A>, therefore, return different messages.</span></span>  
  
 <span data-ttu-id="dc7c4-1730">訊息佇列中優先權和抵達時間根據佇列的訂單訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1730">Message Queuing orders messages in the queue according to priority and arrival time.</span></span> <span data-ttu-id="dc7c4-1731">較新的訊息會放之前舊，優先順序較高的才。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1731">A newer message is placed before an older one only if it is of a higher priority.</span></span>  
  
 <span data-ttu-id="dc7c4-1732">當目前的執行緒可接受進行封鎖並同時等候訊息到達佇列時，請使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1732">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-1733">因為這個多載未指定逾時，應用程式可能會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1733">Because this overload does not specify a time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="dc7c4-1734">當您需要應用程式繼續執行而不要等候，請使用非同步的 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1734">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span> <span data-ttu-id="dc7c4-1735">或者，您可以在其中指定的逾時訊息到達佇列中所使用的多載<xref:System.Messaging.MessageQueue.Peek%2A>，指定逾時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1735">Alternatively, you can specify a time-out for a message to arrive in the queue by using the overload of <xref:System.Messaging.MessageQueue.Peek%2A> that specifies a time-out.</span></span>  
  
 <span data-ttu-id="dc7c4-1736">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1736">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1737">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1737">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1738">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1738">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1739">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1739">Local computer</span></span>|<span data-ttu-id="dc7c4-1740">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1740">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1741">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1741">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1742">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1742">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1743">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1743">Remote computer</span></span>|<span data-ttu-id="dc7c4-1744">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1744">No</span></span>|  
|<span data-ttu-id="dc7c4-1745">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1745">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1746">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1746">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1747">下列範例會使用<xref:System.Messaging.MessageQueue.Peek%2A>佇列上的方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1747">The following examples use the <xref:System.Messaging.MessageQueue.Peek%2A> method on a queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1748">在第一個範例中，應用程式會等候直到佇列中訊息可用為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1748">In the first example, the application waits until a message becomes available in the queue.</span></span> <span data-ttu-id="dc7c4-1749">請注意第一個範例不會存取訊息抵達;此外，它只會暫停處理，直到訊息抵達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1749">Note that the first example does not access the message that arrives; it merely pauses processing until a message arrives.</span></span> <span data-ttu-id="dc7c4-1750">如果佇列中已有一則訊息，它會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1750">If a message already exists in the queue, it will return immediately.</span></span>  
  
 <span data-ttu-id="dc7c4-1751">在第二個範例中，包含應用程式定義的訊息`Order`類別會傳送至佇列，並接著會從佇列查看。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1751">In the second example, a message that contains an application-defined `Order` class is sent to the queue, and then peeked from the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Peek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Peek_noparms/CPP/mqpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Peek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Peek_noparms/CS/mqpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.Peek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Peek_noparms/VB/mqpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1752">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1752">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-1753">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1753">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Peek : TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.Peek timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-1754"><see cref="T:System.TimeSpan" />，指出等待含有訊息之佇列的最長時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1754">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1755">傳回而不移除 (窺視) 這個 <see cref="T:System.Messaging.MessageQueue" /> 所參考佇列中的第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1755">Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="dc7c4-1756"><see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，因此會封鎖目前的執行緒，直到訊息可以使用或發生指定的逾時為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1756">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1757">表示佇列中第一個訊息的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1757">The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1758">若要查看佇列中，或等候一段指定的時間，直到有訊息在佇列中，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1758">Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</span></span> <span data-ttu-id="dc7c4-1759">如果佇列中已有一則訊息的方法會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1759">The method returns immediately if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1760"><xref:System.Messaging.MessageQueue.Peek%2A>方法讀取，但不會移除，第一個訊息從佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1760">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, the first message from the queue.</span></span> <span data-ttu-id="dc7c4-1761">因此，重複呼叫<xref:System.Messaging.MessageQueue.Peek%2A>傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1761">Therefore, repeated calls to <xref:System.Messaging.MessageQueue.Peek%2A> return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-1762"><xref:System.Messaging.MessageQueue.Receive%2A>方法，相反地，讀取和移除佇列中的第一個訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1762">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes the first message from the queue.</span></span> <span data-ttu-id="dc7c4-1763">重複呼叫<xref:System.Messaging.MessageQueue.Receive%2A>，因此，會傳回不同的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1763">Repeated calls to <xref:System.Messaging.MessageQueue.Receive%2A>, therefore, return different messages.</span></span>  
  
 <span data-ttu-id="dc7c4-1764">訊息佇列中優先權和抵達時間根據佇列的訂單訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1764">Message Queuing orders messages in the queue according to priority and arrival time.</span></span> <span data-ttu-id="dc7c4-1765">較新的訊息會放之前舊，優先順序較高的才。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1765">A newer message is placed before an older one only if it is of a higher priority.</span></span>  
  
 <span data-ttu-id="dc7c4-1766">當目前的執行緒可接受進行封鎖並同時等候訊息到達佇列時，請使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1766">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-1767">執行緒將會遭到封鎖，最多一段指定的時間，或無限期地如果指出<xref:System.Messaging.MessageQueue.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1767">The thread will be blocked up to the specified period of time, or indefinitely if you indicated <xref:System.Messaging.MessageQueue.InfiniteTimeout>.</span></span> <span data-ttu-id="dc7c4-1768">當您需要應用程式繼續執行而不要等候，請使用非同步的 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1768">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-1769">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1769">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1770">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1770">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1771">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1771">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1772">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1772">Local computer</span></span>|<span data-ttu-id="dc7c4-1773">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1773">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1774">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1774">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1775">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1775">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1776">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1776">Remote computer</span></span>|<span data-ttu-id="dc7c4-1777">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1777">No</span></span>|  
|<span data-ttu-id="dc7c4-1778">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1778">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1779">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1779">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1780">下列程式碼範例使用<xref:System.Messaging.MessageQueue.Peek%2A>方法來檢查佇列是否是空的零的逾時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1780">The following code example uses the <xref:System.Messaging.MessageQueue.Peek%2A> method with a time-out of zero to check whether the queue is empty.</span></span>  
  
 [!code-cpp[MessageQueue.Peek_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Peek_timeout/CPP/mqpeek_timeout.cpp#1)]
 [!code-csharp[MessageQueue.Peek_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Peek_timeout/CS/mqpeek_timeout.cs#1)]
 [!code-vb[MessageQueue.Peek_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Peek_timeout/VB/mqpeek_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1781">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1781">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1782">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1782">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-1783">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1783">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.PeekAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::PeekAction action);" />
      <MemberSignature Language="F#" Value="member this.Peek : TimeSpan * System.Messaging.Cursor * System.Messaging.PeekAction -&gt; System.Messaging.Message" Usage="messageQueue.Peek (timeout, cursor, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="action" Type="System.Messaging.PeekAction" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-1784"><see cref="T:System.TimeSpan" />，指出等待含有訊息之佇列的最長時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1784">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</span></span></param>
        <param name="cursor"><span data-ttu-id="dc7c4-1785"><see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1785">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="action"><span data-ttu-id="dc7c4-1786">其中一個 <see cref="T:System.Messaging.PeekAction" /> 值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1786">One of the <see cref="T:System.Messaging.PeekAction" /> values.</span></span> <span data-ttu-id="dc7c4-1787">指出要窺視佇列中的目前訊息，還是下一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1787">Indicates whether to peek at the current message in the queue, or the next message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1788">使用指定的游標傳回而不移除 (窺視) 佇列中的目前或下一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1788">Returns without removing (peeks) the current or next message in the queue, using the specified cursor.</span></span> <span data-ttu-id="dc7c4-1789"><see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，因此會封鎖目前的執行緒，直到訊息可以使用或發生指定的逾時為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1789">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1790"><see cref="T:System.Messaging.Message" />，表示佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1790">A <see cref="T:System.Messaging.Message" /> that represents a message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1791">若要查看佇列中，或等候一段指定的時間，直到有訊息在佇列中，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1791">Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</span></span> <span data-ttu-id="dc7c4-1792">如果佇列中已有一則訊息的方法會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1792">The method returns immediately if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1793"><xref:System.Messaging.MessageQueue.Peek%2A>方法讀取，但不會移除，將訊息從佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1793">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, a message from the queue.</span></span> <span data-ttu-id="dc7c4-1794"><xref:System.Messaging.MessageQueue.Receive%2A>方法，相反地，同時讀取，並從佇列移除訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1794">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes a message from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1795">當目前的執行緒可接受進行封鎖並同時等候訊息到達佇列時，請使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1795">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-1796">最多一段指定的時間，或無限期封鎖執行緒如果指出<xref:System.Messaging.MessageQueue.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1796">The thread is blocked up to the specified period of time, or indefinitely if you indicated <xref:System.Messaging.MessageQueue.InfiniteTimeout>.</span></span> <span data-ttu-id="dc7c4-1797">當您需要應用程式繼續執行而不要等候，請使用非同步的 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1797">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-1798">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1798">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1799">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1799">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1800">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1800">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1801">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1801">Local computer</span></span>|<span data-ttu-id="dc7c4-1802">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1802">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1803">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1803">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1804">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1804">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1805">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1805">Remote computer</span></span>|<span data-ttu-id="dc7c4-1806">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1806">No</span></span>|  
|<span data-ttu-id="dc7c4-1807">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1807">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1808">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1808">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc7c4-1809">為 <paramref name="action" /> 參數指定 <see langword="PeekAction.Current" /> 或 <see langword="PeekAction.Next" /> 以外的值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1809">A value other than <see langword="PeekAction.Current" /> or <see langword="PeekAction.Next" /> was specified for the <paramref name="action" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-1810"><paramref name="cursor" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1810">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1811">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1811">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span> <span data-ttu-id="dc7c4-1812">可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1812">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1813">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1813">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-1814">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1814">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.PeekAction" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekByCorrelationId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1815">窺視符合指定關聯識別項的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1815">Peeks a message that matches a given correlation identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByCorrelationId (string correlationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByCorrelationId(string correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByCorrelationId (correlationId As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByCorrelationId(System::String ^ correlationId);" />
      <MemberSignature Language="F#" Value="member this.PeekByCorrelationId : string -&gt; System.Messaging.Message" Usage="messageQueue.PeekByCorrelationId correlationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="dc7c4-1816">要窺視訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1816">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1817">窺視符合指定關聯識別項的訊息，而且在佇列中目前沒有指定關聯識別項的訊息時，立即引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1817">Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1818">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1818">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1819">這個方法會查詢中參考的佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1819">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-1820">如果不找到任何訊息符合`correlationID`參數，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1820">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span>  
  
 <span data-ttu-id="dc7c4-1821"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來繫結至相關聯的回應、 報表或通知訊息佇列傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1821">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="dc7c4-1822">另外兩個方法可讓您查看佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1822">Two other methods allow you to peek messages in a queue.</span></span> <span data-ttu-id="dc7c4-1823"><xref:System.Messaging.MessageQueue.Peek%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法用來擷取訊息，藉由指定的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1823">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="dc7c4-1824">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1824">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1825">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1825">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1826">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1826">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1827">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1827">Local computer</span></span>|<span data-ttu-id="dc7c4-1828">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1828">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1829">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1829">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1830">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1830">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1831">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1831">Remote computer</span></span>|<span data-ttu-id="dc7c4-1832">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1832">No</span></span>|  
|<span data-ttu-id="dc7c4-1833">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1833">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1834">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1834">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1835">下列程式碼範例會傳送，並收到包含訂單與佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1835">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="dc7c4-1836">它特別要求正面確認通知，當原始訊息抵達或已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1836">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-1837"><paramref name="correlationId" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1837">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-1838">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1838">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1839">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1839">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="PeekByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByCorrelationId (string correlationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByCorrelationId(string correlationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByCorrelationId (correlationId As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByCorrelationId(System::String ^ correlationId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.PeekByCorrelationId : string * TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.PeekByCorrelationId (correlationId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="dc7c4-1840">要窺視訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1840">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</span></span></param>
        <param name="timeout"><span data-ttu-id="dc7c4-1841"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1841">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1842">窺視符合指定的關聯識別項的訊息，並且等候佇列中出現具有指定關聯識別項的訊息，或者等候直到逾時到期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1842">Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1843">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1843">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1844">這個方法會查詢中參考的佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1844">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-1845">如果不找到任何訊息符合`correlationID`參數，以及任何新訊息到達佇列中所指定的期間內`timeout`參數，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1845">If no message is found that matches the `correlationID` parameter, and no new message arrives in the queue within the period specified by the `timeout` parameter, an exception is thrown.</span></span>  
  
 <span data-ttu-id="dc7c4-1846">`timeout`參數未指定這個方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1846">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="dc7c4-1847">相反地，它會指定等待新訊息到達佇列中的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1847">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-1848">每當新訊息送達時，此方法會檢查<xref:System.Messaging.Message.CorrelationId%2A>的新的訊息，以查看它是否符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1848">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-1849">否則，這個方法會開始逾時期限，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1849">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="dc7c4-1850">因此，如果新的訊息會繼續逾時期間內抵達時，可能會此方法才能繼續無限期執行的逾時期限到期且沒有任何新的訊息抵達之前或直到訊息抵達其<xref:System.Messaging.Message.CorrelationId%2A>符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1850">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-1851"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來繫結至相關聯的回應、 報表或通知訊息佇列傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1851">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="dc7c4-1852">另外兩個方法可讓您查看佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1852">Two other methods allow you to peek messages in a queue.</span></span> <span data-ttu-id="dc7c4-1853"><xref:System.Messaging.MessageQueue.Peek%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法用來擷取訊息，藉由指定的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1853">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="dc7c4-1854">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1854">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1855">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1855">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1856">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1856">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1857">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1857">Local computer</span></span>|<span data-ttu-id="dc7c4-1858">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1858">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1859">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1859">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1860">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1860">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1861">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1861">Remote computer</span></span>|<span data-ttu-id="dc7c4-1862">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1862">No</span></span>|  
|<span data-ttu-id="dc7c4-1863">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1863">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1864">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1864">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1865">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1865">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#5](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#5)]
 [!code-csharp[MessageQueue2#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-1866"><paramref name="correlationId" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1866">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1867">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1867">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-1868">佇列中沒有具有指定 <paramref name="correlationId" /> 的訊息，且該訊息未在逾時到期前到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1868">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1869">訊息沒有在逾時到期前到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1869">A message did not arrive before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-1870">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1870">-or-</span></span> 
<span data-ttu-id="dc7c4-1871">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1871">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekById">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1872">傳回具有指定訊息識別項的訊息複本，但不從佇列中移除訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1872">Returns a copy of the message that has the specified message identifier without removing the message from the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekById (id As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.PeekById : string -&gt; System.Messaging.Message" Usage="messageQueue.PeekById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="dc7c4-1873">要窺視訊息的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1873">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1874">窺視訊息識別項符合 <paramref name="id" /> 參數的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1874">Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1875"><see cref="T:System.Messaging.Message" /> 屬性符合 <paramref name="id" /> 參數的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1875">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1876">使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>讀取，但不從佇列中移除具有已知的訊息識別項的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1876">Use <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> to read, without removing from the queue, a message that has a known message identifier.</span></span> <span data-ttu-id="dc7c4-1877">訊息的識別碼是唯一的訊息佇列企業，，因此會有最多一個訊息在佇列中符合指定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1877">The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="dc7c4-1878">如果佇列目前也不會包含訊息，則這個多載會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1878">This overload throws an exception if the queue does not currently contain the message.</span></span>  
  
 <span data-ttu-id="dc7c4-1879">兩個額外的方法可讓您查看佇列中的訊息：<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1879">Two additional methods allow you to peek messages in a queue: <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-1880"><xref:System.Messaging.MessageQueue.Peek%2A>方法會傳回第一個訊息在佇列中;<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>傳回通知、 報表或已傳送至佇列的訊息而建立的應用程式所產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1880">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue; <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1881">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1881">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1882">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1882">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1883">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1883">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1884">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1884">Local computer</span></span>|<span data-ttu-id="dc7c4-1885">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1885">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1886">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1886">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1887">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1887">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1888">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1888">Remote computer</span></span>|<span data-ttu-id="dc7c4-1889">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1889">No</span></span>|  
|<span data-ttu-id="dc7c4-1890">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1890">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1891">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1891">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1892">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1892">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#6](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#6)]
 [!code-csharp[MessageQueue2#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-1893"><paramref name="id" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1893">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-1894">具有指定 <paramref name="id" /> 的訊息不存在。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1894">No message with the specified <paramref name="id" /> exists.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1895">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1895">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="PeekById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekById (string id, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekById(string id, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekById (id As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekById(System::String ^ id, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.PeekById : string * TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.PeekById (id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="dc7c4-1896">要窺視訊息的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1896">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</span></span></param>
        <param name="timeout"><span data-ttu-id="dc7c4-1897"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1897">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1898">窺視訊息識別項符合 <paramref name="id" /> 參數的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1898">Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</span></span> <span data-ttu-id="dc7c4-1899">等待直到訊息出現在佇列中，或等到發生逾時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1899">Waits until the message appears in the queue or a time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1900"><see cref="T:System.Messaging.Message" /> 屬性符合 <paramref name="id" /> 參數的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1900">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1901">使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>讀取，但不從佇列中移除具有已知的訊息識別項的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1901">Use <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> to read, without removing from the queue, a message that has a known message identifier.</span></span> <span data-ttu-id="dc7c4-1902">訊息的識別碼是唯一的訊息佇列企業，，因此會有最多一個訊息在佇列中符合指定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1902">The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="dc7c4-1903">如果佇列目前也不會包含訊息，而且發生逾時前未到達的新訊息，則這個多載會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1903">This overload throws an exception if the queue does not currently contain the message and a new message does not arrive before the time-out occurs.</span></span>  
  
 <span data-ttu-id="dc7c4-1904">`timeout`參數未指定這個方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1904">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="dc7c4-1905">相反地，它會指定等待新訊息到達佇列中的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1905">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-1906">每當新訊息送達時，此方法會檢查<xref:System.Messaging.Message.Id%2A>的新的訊息，以查看它是否符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1906">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="dc7c4-1907">否則，這個方法會開始逾時期限，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1907">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="dc7c4-1908">因此，如果新的訊息會繼續逾時期間內抵達時，可能會此方法才能繼續無限期執行的逾時期限到期且沒有任何新的訊息抵達之前或直到訊息抵達其<xref:System.Messaging.Message.Id%2A>符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1908">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-1909">兩個額外的方法可讓您查看佇列中的訊息：<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1909">Two additional methods allow you to peek messages in a queue: <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-1910"><xref:System.Messaging.MessageQueue.Peek%2A>方法會傳回第一個訊息在佇列中;<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>傳回通知、 報表或已傳送至佇列的訊息而建立的應用程式所產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1910">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue; <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1911">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1911">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1912">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1912">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1913">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1913">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1914">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1914">Local computer</span></span>|<span data-ttu-id="dc7c4-1915">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1915">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1916">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1916">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1917">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1917">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1918">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1918">Remote computer</span></span>|<span data-ttu-id="dc7c4-1919">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1919">No</span></span>|  
|<span data-ttu-id="dc7c4-1920">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1920">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1921">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1921">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1922">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1922">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#7](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#7)]
 [!code-csharp[MessageQueue2#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-1923"><paramref name="id" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1923">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-1924">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1924">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-1925">佇列中沒有具有指定 <paramref name="id" /> 的訊息，且該訊息未在 <paramref name="timeout" /> 參數指定的逾時到期前到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1925">The message with the specified <paramref name="id" /> does not exist in the queue and did not arrive before the period specified by the <paramref name="timeout" /> parameter expired.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1926">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1926">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekByLookupId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1927">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1927">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="dc7c4-1928">窺視佇列中的特定訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1928">Peeks at a specific message from the queue.</span></span> <span data-ttu-id="dc7c4-1929">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1929">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByLookupId (long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByLookupId(int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByLookupId (lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByLookupId(long lookupId);" />
      <MemberSignature Language="F#" Value="member this.PeekByLookupId : int64 -&gt; System.Messaging.Message" Usage="messageQueue.PeekByLookupId lookupId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lookupId" Type="System.Int64" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="lookupId"><span data-ttu-id="dc7c4-1930">要窺視之訊息的 <see cref="P:System.Messaging.Message.LookupId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1930">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1931">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1931">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="dc7c4-1932">窺視符合非交易佇列之指定查詢識別項的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1932">Peeks at the message that matches the given lookup identifier from a non-transactional queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1933">傳入符合 <paramref name="lookupId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.LookupId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1933">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1934">使用這個方法來讀取已知的查詢識別項的訊息而不從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1934">Use this method to read a message with a known lookup identifier without removing it from the queue.</span></span> <span data-ttu-id="dc7c4-1935">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1935">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1936"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，因此會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1936">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-1937">讀取具有指定的查詢識別碼的訊息，並且從佇列中移除，請使用<xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1937">To read a message with a specified lookup identifier and remove it from the queue, use the <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-1938">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1938">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1939">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1939">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1940">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1940">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1941">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1941">Local computer</span></span>|<span data-ttu-id="dc7c4-1942">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1942">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1943">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1943">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1944">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1944">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1945">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1945">Remote computer</span></span>|<span data-ttu-id="dc7c4-1946">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1946">No</span></span>|  
|<span data-ttu-id="dc7c4-1947">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1947">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1948">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1948">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="dc7c4-1949">未安裝 MSMQ 3.0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1949">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-1950">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1950">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1951">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1951">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="PeekByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByLookupId (System.Messaging.MessageLookupAction action, long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByLookupId (action As MessageLookupAction, lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByLookupId(System::Messaging::MessageLookupAction action, long lookupId);" />
      <MemberSignature Language="F#" Value="member this.PeekByLookupId : System.Messaging.MessageLookupAction * int64 -&gt; System.Messaging.Message" Usage="messageQueue.PeekByLookupId (action, lookupId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lookupId" Type="System.Int64" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="dc7c4-1952">其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定如何在佇列中讀取訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1952">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span></span> <span data-ttu-id="dc7c4-1953">請指定下列其中一個選項：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1953">Specify one of the following:</span></span> 
 <span data-ttu-id="dc7c4-1954"><see langword="MessageLookupAction.Current" />：查看 <paramref name="lookupId" /> 所指定的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1954"><see langword="MessageLookupAction.Current" />: Peeks at the message specified by <paramref name="lookupId" />.</span></span>  
  
 <span data-ttu-id="dc7c4-1955"><see langword="MessageLookupAction.Next" />：查看 <paramref name="lookupId" /> 所指定訊息之後的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1955"><see langword="MessageLookupAction.Next" />: Peeks at the message following the message specified by <paramref name="lookupId" />.</span></span>  
  
 <span data-ttu-id="dc7c4-1956"><see langword="MessageLookupAction.Previous" />：查看 <paramref name="lookupId" /> 所指定訊息之前的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1956"><see langword="MessageLookupAction.Previous" />: Peeks at the message preceding the message specified by <paramref name="lookupId" />.</span></span>  
  
 <span data-ttu-id="dc7c4-1957"><see langword="MessageLookupAction.First" />：查看佇列中的第一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1957"><see langword="MessageLookupAction.First" />: Peeks at the first message in the queue.</span></span> <span data-ttu-id="dc7c4-1958"><paramref name="lookupId" /> 參數必須設定為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1958">The <paramref name="lookupId" /> parameter must be set to 0.</span></span>  
  
 <span data-ttu-id="dc7c4-1959"><see langword="MessageLookupAction.Last" />：查看佇列中的最後一則訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1959"><see langword="MessageLookupAction.Last" />: Peeks at the last message in the queue.</span></span> <span data-ttu-id="dc7c4-1960"><paramref name="lookupId" /> 參數必須設定為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1960">The <paramref name="lookupId" /> parameter must be set to 0.</span></span></param>
        <param name="lookupId"><span data-ttu-id="dc7c4-1961">要窺視之訊息的 <see cref="P:System.Messaging.Message.LookupId" />，或者為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1961">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at, or 0.</span></span> <span data-ttu-id="dc7c4-1962">存取佇列中第一則或最後一則訊息時會使用 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1962">0 is used when accessing the first or last message in the queue.</span></span></param>
        <summary><span data-ttu-id="dc7c4-1963">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1963">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="dc7c4-1964">窺視佇列中的特定訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1964">Peeks at a specific message from the queue.</span></span> <span data-ttu-id="dc7c4-1965">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1965">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-1966">傳入之 <paramref name="action" /> 和 <paramref name="lookupId" /> 參數所指定的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1966">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1967">使用這個方法來讀取已知的查詢識別項的訊息而不從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1967">Use this method to read a message with a known lookup identifier without removing it from the queue.</span></span> <span data-ttu-id="dc7c4-1968">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1968">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1969"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，因此會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1969">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-1970">讀取具有指定識別碼的訊息，並且從佇列中移除，請使用<xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1970">To read a message with a specified identifier and remove it from the queue, use the <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-1971">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1971">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-1972">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1972">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-1973">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1973">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-1974">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1974">Local computer</span></span>|<span data-ttu-id="dc7c4-1975">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1975">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1976">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1976">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1977">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1977">Yes</span></span>|  
|<span data-ttu-id="dc7c4-1978">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1978">Remote computer</span></span>|<span data-ttu-id="dc7c4-1979">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1979">No</span></span>|  
|<span data-ttu-id="dc7c4-1980">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1980">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-1981">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1981">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="dc7c4-1982">未安裝 MSMQ 3.0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1982">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-1983">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1983">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-1984">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1984">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-1985"><paramref name="action" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1985">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="PeekCompleted">
      <MemberSignature Language="C#" Value="public event System.Messaging.PeekCompletedEventHandler PeekCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Messaging.PeekCompletedEventHandler PeekCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Messaging.MessageQueue.PeekCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PeekCompleted As PeekCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Messaging::PeekCompletedEventHandler ^ PeekCompleted;" />
      <MemberSignature Language="F#" Value="member this.PeekCompleted : System.Messaging.PeekCompletedEventHandler " Usage="member this.PeekCompleted : System.Messaging.PeekCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_PeekCompleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.PeekCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-1986">發生於訊息已讀取但未從佇列中移除時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1986">Occurs when a message is read without being removed from the queue.</span></span> <span data-ttu-id="dc7c4-1987">這是非同步作業 <see cref="M:System.Messaging.MessageQueue.BeginPeek" /> 的結果。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1987">This is a result of the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginPeek" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1988"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 在非同步處理用來引發<xref:System.Messaging.MessageQueue.PeekCompleted>事件佇列中出現一則訊息時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1988"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is used in asynchronous processing to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message is available in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-1989"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 用來完成的呼叫所起始的作業<xref:System.Messaging.MessageQueue.BeginPeek%2A>和窺視訊息時<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1989"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is used to complete the operation initiated by a call to <xref:System.Messaging.MessageQueue.BeginPeek%2A> and peek the message when the <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised.</span></span>  
  
 <span data-ttu-id="dc7c4-1990">建立 <xref:System.Messaging.PeekCompletedEventHandler> 委派時，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1990">When you create a <xref:System.Messaging.PeekCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="dc7c4-1991">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1991">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="dc7c4-1992">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1992">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="dc7c4-1993">如需有關事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1993">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-1994">下列程式碼範例會建立名為事件處理常式`MyPeekCompleted`，將它附加至<xref:System.Messaging.MessageQueue.PeekCompleted>事件處理常式的委派，以及呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A>起始位於路徑的佇列上的非同步窺視作業 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1994">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="dc7c4-1995">當<xref:System.Messaging.MessageQueue.PeekCompleted>就會引發事件，範例窺視的訊息，並將其主體寫入螢幕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1995">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="dc7c4-1996">此範例接著會呼叫<xref:System.Messaging.MessageQueue.BeginPeek%2A> 以起始新的非同步窺視作業</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1996">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Sub Purge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Purge();" />
      <MemberSignature Language="F#" Value="member this.Purge : unit -&gt; unit" Usage="messageQueue.Purge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-1997">刪除佇列中所包含的所有訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1997">Deletes all the messages contained in the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-1998">清除佇列會導致訊息佇列設定的佇列修改旗標，會影響<xref:System.Messaging.MessageQueue.LastModifyTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1998">Purging the queue causes Message Queuing to set the queue modification flag, which affects the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property.</span></span> <span data-ttu-id="dc7c4-1999">從佇列中清除的訊息都會遺失。它們不會傳送到寄不出信件佇列或日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-1999">Messages that are purged from the queue are lost; they are not sent to the dead-letter queue or the journal queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2000">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2000">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2001">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2001">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2002">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2002">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2003">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2003">Local computer</span></span>|<span data-ttu-id="dc7c4-2004">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2004">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2005">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2005">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2006">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2006">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2007">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2007">Remote computer</span></span>|<span data-ttu-id="dc7c4-2008">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2008">No</span></span>|  
|<span data-ttu-id="dc7c4-2009">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2009">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2010">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2010">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2011">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Purge%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2011">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Purge%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#29](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#29)]
 [!code-csharp[MessageQueue2#29](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2012">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2012">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
        <altmember cref="M:System.Messaging.MessageQueue.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public string QueueName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QueueName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueueName : string with get, set" Usage="System.Messaging.MessageQueue.QueueName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_QueueName")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-2013">取得或設定識別佇列的易記名稱。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2013">Gets or sets the friendly name that identifies the queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-2014">名稱，識別這個 <see cref="T:System.Messaging.MessageQueue" /> 所參考的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2014">The name that identifies the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="dc7c4-2015">這個值不能為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2015">The value cannot be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2016">您可以結合<xref:System.Messaging.MessageQueue.QueueName%2A>具有<xref:System.Messaging.MessageQueue.MachineName%2A>建立易記<xref:System.Messaging.MessageQueue.Path%2A>佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2016">You can combine the <xref:System.Messaging.MessageQueue.QueueName%2A> with the <xref:System.Messaging.MessageQueue.MachineName%2A> to create a friendly <xref:System.Messaging.MessageQueue.Path%2A> name for the queue.</span></span> <span data-ttu-id="dc7c4-2017">易記名稱變化的語法<xref:System.Messaging.MessageQueue.Path%2A>屬性相依於佇列的類型下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2017">The syntax for the friendly name variation of the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue, as shown in the following table.</span></span>  
  
|<span data-ttu-id="dc7c4-2018">佇列類型</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2018">Queue type</span></span>|<span data-ttu-id="dc7c4-2019">語法</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2019">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dc7c4-2020">公用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2020">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="dc7c4-2021">私用佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2021">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="dc7c4-2022">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2022">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
  
 <span data-ttu-id="dc7c4-2023">使用"。"代表本機電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2023">Use "." to represent the local computer.</span></span>  
  
 <span data-ttu-id="dc7c4-2024">變更<xref:System.Messaging.MessageQueue.QueueName%2A>屬性會影響<xref:System.Messaging.MessageQueue.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2024">Changing the <xref:System.Messaging.MessageQueue.QueueName%2A> property affects the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span> <span data-ttu-id="dc7c4-2025">如果您設定<xref:System.Messaging.MessageQueue.QueueName%2A>未設定<xref:System.Messaging.MessageQueue.MachineName%2A>屬性，<xref:System.Messaging.MessageQueue.Path%2A>屬性會變成\\`QueueName`.</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2025">If you set the <xref:System.Messaging.MessageQueue.QueueName%2A> without setting the <xref:System.Messaging.MessageQueue.MachineName%2A> property, the <xref:System.Messaging.MessageQueue.Path%2A> property becomes .\\`QueueName`.</span></span> <span data-ttu-id="dc7c4-2026">否則，請<xref:System.Messaging.MessageQueue.Path%2A>會變成`MachineName` \\ `QueueName`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2026">Otherwise, the <xref:System.Messaging.MessageQueue.Path%2A> becomes `MachineName`\\`QueueName`.</span></span>  
  
 <span data-ttu-id="dc7c4-2027">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2027">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2028">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2028">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2029">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2029">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2030">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2030">Local computer</span></span>|<span data-ttu-id="dc7c4-2031">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2031">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2032">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2032">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2033">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2033">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2034">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2034">Remote computer</span></span>|<span data-ttu-id="dc7c4-2035">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2035">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2036">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2036">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2037">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2037">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2038">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.QueueName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2038">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.QueueName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#24](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2039">佇列名稱是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2039">The queue name is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="ReadHandle">
      <MemberSignature Language="C#" Value="public IntPtr ReadHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ReadHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.ReadHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ReadHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadHandle : nativeint" Usage="System.Messaging.MessageQueue.ReadHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_ReadHandle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-2040">取得用來從訊息佇列讀取訊息的原生控制代碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2040">Gets the native handle used to read messages from the message queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-2041">用來從佇列窺視或接收訊息之原生佇列物件的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2041">A handle to the native queue object that you use for peeking and receiving messages from the queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2042"><xref:System.Messaging.MessageQueue.ReadHandle%2A>提供原生的 Windows 控制代碼，用於窺視或從佇列接收訊息的訊息佇列物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2042">The <xref:System.Messaging.MessageQueue.ReadHandle%2A> provides a native Windows handle to the message queue object that is used for peeking and receiving messages from the queue.</span></span> <span data-ttu-id="dc7c4-2043">如果您變更佇列的路徑，控制代碼就會關閉，並重新開啟新的值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2043">If you change the path of the queue, the handle is closed and reopened with a new value.</span></span>  
  
 <span data-ttu-id="dc7c4-2044">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2044">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2045">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2045">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2046">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2046">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2047">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2047">Local computer</span></span>|<span data-ttu-id="dc7c4-2048">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2048">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2049">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2049">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2050">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2050">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2051">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2051">Remote computer</span></span>|<span data-ttu-id="dc7c4-2052">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2052">No</span></span>|  
|<span data-ttu-id="dc7c4-2053">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2053">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2054">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2054">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2055">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2055">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.CanRead" />
        <altmember cref="P:System.Messaging.MessageQueue.WriteHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Receive">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe><span data-ttu-id="dc7c4-2056">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2056">The method is not thread safe.</span></span></threadsafe>
        <summary><span data-ttu-id="dc7c4-2057">接收佇列中的第一個訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2057">Receives the first message in the queue, removing it from the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive();" />
      <MemberSignature Language="F#" Value="member this.Receive : unit -&gt; System.Messaging.Message" Usage="messageQueue.Receive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-2058">接收由 <see cref="T:System.Messaging.MessageQueue" /> 參考的第一個在佇列中可用的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2058">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="dc7c4-2059">這個呼叫是同步的，而且會阻礙目前執行的執行緒，直到訊息可以使用。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2059">This call is synchronous, and blocks the current thread of execution until a message is available.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2060"><see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2060">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2061">使用此多載，從佇列接收訊息，或等候直到佇列中有訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2061">Use this overload to receive a message from a queue, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2062"><xref:System.Messaging.MessageQueue.Receive%2A>方法是用來同步讀取一個訊息，藉此從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2062">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="dc7c4-2063">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回依照在佇列中，或新的、 較高優先順序訊息的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2063">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue, or new, higher priority messages.</span></span>  
  
 <span data-ttu-id="dc7c4-2064">若要讀取佇列中的第一個訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2064">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="dc7c4-2065"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2065">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2066">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2066">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2067">因為這個多載<xref:System.Messaging.MessageQueue.Receive%2A>方法指定無限逾時，應用程式可能會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2067">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="dc7c4-2068">如果應用程式處理應該繼續進行，而不需等待訊息，請考慮使用非同步方法中， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2068">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2069">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2069">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2070">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2070">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2071">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2071">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2072">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2072">Local computer</span></span>|<span data-ttu-id="dc7c4-2073">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2073">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2074">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2074">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2075">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2075">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2076">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2076">Remote computer</span></span>|<span data-ttu-id="dc7c4-2077">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2077">No</span></span>|  
|<span data-ttu-id="dc7c4-2078">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2078">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2079">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2079">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2080">下列程式碼中，從佇列接收訊息，並輸出該訊息至螢幕的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2080">The following code example receives a message from a queue and outputs information about that message to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CPP/mqreceive_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Receive_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CS/mqreceive_noparms.cs#1)]
 [!code-vb[MessageQueue.Receive_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_noparms/VB/mqreceive_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2081">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2081">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.Receive transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="dc7c4-2082"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2082">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2083">接收由 <see cref="T:System.Messaging.MessageQueue" /> 參考的第一個在交易佇列中可用的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2083">Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="dc7c4-2084">這個呼叫是同步的，而且會阻礙目前執行的執行緒，直到訊息可以使用。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2084">This call is synchronous, and blocks the current thread of execution until a message is available.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2085"><see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2085">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2086">接收訊息的異動式佇列，使用所定義的內部交易內容中使用此多載`transaction`參數或等候直到佇列中有訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2086">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2087"><xref:System.Messaging.MessageQueue.Receive%2A>方法是用來同步讀取一個訊息，藉此從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2087">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="dc7c4-2088">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回依照訊息在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2088">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2089">因為異動式佇列上呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2089">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2090">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2090">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2091">若要讀取佇列中的第一個訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2091">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="dc7c4-2092"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2092">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2093">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2093">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="dc7c4-2094">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會的移除任何訊息在佇列中，就是不會回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2094">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2095">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2095">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2096">因為這個多載<xref:System.Messaging.MessageQueue.Receive%2A>方法指定無限逾時，應用程式可能會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2096">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="dc7c4-2097">如果應用程式處理應該繼續進行，而不需等待訊息，請考慮使用非同步方法中， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2097">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2098">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2098">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2099">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2099">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2100">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2100">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2101">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2101">Local computer</span></span>|<span data-ttu-id="dc7c4-2102">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2102">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2103">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2103">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2104">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2104">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2105">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2105">Remote computer</span></span>|<span data-ttu-id="dc7c4-2106">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2106">No</span></span>|  
|<span data-ttu-id="dc7c4-2107">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2107">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2108">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2108">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2109">下列程式碼範例會連接到本機電腦上的異動式佇列，並將訊息傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2109">The following code example connects to a transactional queue on the local computer and sends a message to the queue.</span></span> <span data-ttu-id="dc7c4-2110">然後，它會接收包含訂單的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2110">It then receives the message that contains an order.</span></span> <span data-ttu-id="dc7c4-2111">如果發生非異動式佇列，則會擲回例外狀況並回復交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2111">If it encounters a non-transactional queue, it will throw and exception and rollback the transaction.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_transaction/CPP/mqreceive_transaction.cpp#1)]
 [!code-csharp[MessageQueue.Receive_transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_transaction/CS/mqreceive_transaction.cs#1)]
 [!code-vb[MessageQueue.Receive_transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_transaction/VB/mqreceive_transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2112">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2112">An error occurred when accessing a Message Queuing method.</span></span>  
  
<span data-ttu-id="dc7c4-2113">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2113">-or-</span></span> 
<span data-ttu-id="dc7c4-2114">該佇列是非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2114">The queue is non-transactional.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-2115">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2115">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.Receive transactionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="transactionType"><span data-ttu-id="dc7c4-2116">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2116">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2117">接收由 <see cref="T:System.Messaging.MessageQueue" /> 參考的第一個在佇列中可用的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2117">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="dc7c4-2118">這個呼叫是同步的，而且會阻礙目前執行的執行緒，直到訊息可以使用。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2118">This call is synchronous, and blocks the current thread of execution until a message is available.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2119"><see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2119">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2120">若要使用交易內容所定義的佇列中接收的訊息中使用此多載`transactionType`參數或等候直到佇列中有訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2120">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2121">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2121">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="dc7c4-2122">指定`Single`如果您想要接收的訊息視為單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2122">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-2123">您可以指定`None`如果您想要從交易內容外的異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2123">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="dc7c4-2124"><xref:System.Messaging.MessageQueue.Receive%2A>方法是用來同步讀取一個訊息，藉此從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2124">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="dc7c4-2125">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回依照訊息在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2125">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2126">如果這個方法呼叫從異動式佇列接收訊息時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2126">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2127">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2127">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2128">若要讀取佇列中的第一個訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2128">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="dc7c4-2129"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2129">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2130">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2130">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="dc7c4-2131">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會的移除任何訊息在佇列中，就是不會回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2131">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2132">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2132">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2133">因為這個多載<xref:System.Messaging.MessageQueue.Receive%2A>方法指定無限逾時，應用程式可能會無限期等候。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2133">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="dc7c4-2134">如果應用程式處理應該繼續進行，而不需等待訊息，請考慮使用非同步方法中， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2134">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2135">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2135">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2136">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2136">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2137">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2137">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2138">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2138">Local computer</span></span>|<span data-ttu-id="dc7c4-2139">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2139">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2140">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2140">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2141">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2141">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2142">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2142">Remote computer</span></span>|<span data-ttu-id="dc7c4-2143">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2143">No</span></span>|  
|<span data-ttu-id="dc7c4-2144">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2144">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2145">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2145">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2146">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2146">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#9](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#9)]
 [!code-csharp[MessageQueue2#9](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2147">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2147">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2148"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2148">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-2149">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2149">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.Receive timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-2150"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2150">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2151">接收 <see cref="T:System.Messaging.MessageQueue" /> 所參考之佇列中的第一個可用訊息，並等候直到佇列中有可用訊息，或者逾時到期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2151">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2152"><see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2152">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2153">使用這個多載來接收訊息，如果佇列中沒有訊息，則在指定時間期限傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2153">Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2154"><xref:System.Messaging.MessageQueue.Receive%2A>方法是用來同步讀取一個訊息，它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2154">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, removing it from the queue.</span></span> <span data-ttu-id="dc7c4-2155">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回依照在佇列中，或新的、 較高優先順序訊息的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2155">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue, or new, higher priority messages.</span></span>  
  
 <span data-ttu-id="dc7c4-2156">若要讀取佇列中的第一個訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2156">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="dc7c4-2157"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2157">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2158">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2158">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2159">執行緒會封鎖一段指定的時間，或無限期地如果指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>針對`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2159">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="dc7c4-2160">如果應用程式處理應該繼續進行，而不需等待訊息，請考慮使用非同步方法中， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2160">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2161">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2161">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2162">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2162">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2163">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2163">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2164">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2164">Local computer</span></span>|<span data-ttu-id="dc7c4-2165">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2165">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2166">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2166">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2167">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2167">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2168">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2168">Remote computer</span></span>|<span data-ttu-id="dc7c4-2169">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2169">No</span></span>|  
|<span data-ttu-id="dc7c4-2170">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2170">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2171">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2171">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2172">下列程式碼中，從佇列接收訊息，並輸出該訊息至螢幕的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2172">The following code example receives a message from a queue and outputs information about that message to the screen.</span></span> <span data-ttu-id="dc7c4-2173">此範例會暫停執行五秒的時間等候訊息到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2173">The example pauses execution for up to five seconds while waiting for a message to arrive in the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_timeout/CPP/mqreceive_timeout.cpp#1)]
 [!code-csharp[MessageQueue.Receive_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_timeout/CS/mqreceive_timeout.cs#1)]
 [!code-vb[MessageQueue.Receive_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_timeout/VB/mqreceive_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2174">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2174">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2175">訊息沒有在逾時到期前到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2175">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2176">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2176">-or-</span></span> 
<span data-ttu-id="dc7c4-2177">存取訊息佇列方法時發生錯誤</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2177">An error occurred when accessing a Message Queuing method</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-2178">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2178">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.Cursor -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, cursor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-2179"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2179">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="cursor"><span data-ttu-id="dc7c4-2180"><see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2180">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2181">使用指定的游標接收佇列中的目前訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2181">Receives the current message in the queue, using a specified cursor.</span></span> <span data-ttu-id="dc7c4-2182">如果沒有可用的訊息，則這個方法會等到有訊息可用或逾時為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2182">If no message is available, this method waits until either a message is available, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2183"><see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2183">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2184">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2184">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2185">訊息沒有在逾時到期前到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2185">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2186">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2186">-or-</span></span> 
<span data-ttu-id="dc7c4-2187">存取訊息佇列方法時發生錯誤</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2187">An error occurred when accessing a Message Queuing method</span></span> 
<span data-ttu-id="dc7c4-2188">使用這個多載來接收訊息，如果佇列中沒有訊息，則在指定時間期限傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2188">Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-2189">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2189">The method is not thread safe.</span></span></threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-2190"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2190">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-2191"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2191">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2192">接收 <see cref="T:System.Messaging.MessageQueue" /> 所參考之交易佇列中的第一個可用訊息，並且等候直到佇列中出現可用訊息，或逾時過期為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2192">Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2193"><see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2193">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2194">接收訊息的異動式佇列，使用所定義的內部交易內容中使用此多載`transaction`參數，並傳回指定的一段時間，如果佇列中沒有訊息內。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2194">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, and return within a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2195"><xref:System.Messaging.MessageQueue.Receive%2A>方法是用來同步讀取一個訊息，藉此從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2195">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="dc7c4-2196">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回依照訊息在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2196">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2197">因為異動式佇列上呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2197">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2198">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2198">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2199">若要讀取佇列中的第一個訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2199">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="dc7c4-2200"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2200">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2201">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2201">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="dc7c4-2202">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會的移除任何訊息在佇列中，就是不會回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2202">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2203">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2203">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2204">執行緒會封鎖一段指定的時間，或無限期地如果指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>針對`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2204">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="dc7c4-2205">如果應用程式處理應該繼續進行，而不需等待訊息，請考慮使用非同步方法中， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2205">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2206">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2206">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2207">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2207">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2208">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2208">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2209">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2209">Local computer</span></span>|<span data-ttu-id="dc7c4-2210">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2210">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2211">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2211">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2212">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2212">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2213">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2213">Remote computer</span></span>|<span data-ttu-id="dc7c4-2214">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2214">No</span></span>|  
|<span data-ttu-id="dc7c4-2215">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2215">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2216">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2216">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2217">下列程式碼範例示範如何使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2217">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/CPP/mqreceive_timeouttransaction.cpp#1)]
 [!code-csharp[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/CS/mqreceive_timeouttransaction.cs#1)]
 [!code-vb[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/VB/mqreceive_timeouttransaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2218">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2218">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2219">訊息沒有在逾時到期前到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2219">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2220">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2220">-or-</span></span> 
<span data-ttu-id="dc7c4-2221">該佇列是非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2221">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="dc7c4-2222">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2222">-or-</span></span> 
<span data-ttu-id="dc7c4-2223">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2223">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-2224">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2224">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-2225"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2225">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-2226">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2226">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2227">接收由 <see cref="T:System.Messaging.MessageQueue" /> 參考的第一個在佇列中可用的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2227">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="dc7c4-2228">這個呼叫是同步的，並且會等候直到佇列中出現可用訊息，或逾時過期為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2228">This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2229"><see cref="T:System.Messaging.Message" />，參考佇列中的第一個可用訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2229">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2230">若要使用交易內容所定義的佇列中接收的訊息中使用此多載`transactionType`參數，並在一段指定時間，如果佇列中沒有任何訊息中的傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2230">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2231">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2231">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="dc7c4-2232">指定`Single`如果您想要接收的訊息視為單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2232">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-2233">您可以指定`None`如果您想要從交易內容外的異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2233">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="dc7c4-2234"><xref:System.Messaging.MessageQueue.Receive%2A>方法是用來同步讀取一個訊息，藉此從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2234">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="dc7c4-2235">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>會傳回依照訊息在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2235">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2236">如果這個方法呼叫從異動式佇列接收訊息時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2236">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2237">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2237">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2238">若要讀取佇列中的第一個訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2238">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="dc7c4-2239"><xref:System.Messaging.MessageQueue.Peek%2A>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2239">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2240">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2240">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="dc7c4-2241">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會的移除任何訊息在佇列中，就是不會回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2241">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2242">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2242">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2243">執行緒會封鎖一段指定的時間，或無限期地如果指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>針對`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2243">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="dc7c4-2244">如果應用程式處理應該繼續進行，而不需等待訊息，請考慮使用非同步方法中， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2244">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2245">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2245">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2246">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2246">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2247">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2247">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2248">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2248">Local computer</span></span>|<span data-ttu-id="dc7c4-2249">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2249">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2250">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2250">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2251">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2251">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2252">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2252">Remote computer</span></span>|<span data-ttu-id="dc7c4-2253">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2253">No</span></span>|  
|<span data-ttu-id="dc7c4-2254">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2254">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2255">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2255">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2256">下列程式碼範例示範如何使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2256">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[MessageQueue2#8](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#8)]
 [!code-csharp[MessageQueue2#8](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2257">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2257">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2258"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2258">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2259">訊息沒有在逾時到期前到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2259">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2260">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2260">-or-</span></span> 
<span data-ttu-id="dc7c4-2261">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2261">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-2262">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2262">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.Cursor * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, cursor, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-2263"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2263">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="cursor"><span data-ttu-id="dc7c4-2264"><see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2264">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-2265"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2265">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2266">使用指定的游標接收佇列中的目前訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2266">Receives the current message in the queue, using a specified cursor.</span></span> <span data-ttu-id="dc7c4-2267">如果沒有可用的訊息，則這個方法會等到有訊息可用或逾時為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2267">If no message is available, this method waits until either a message is available, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2268"><see cref="T:System.Messaging.Message" />，參考佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2268">A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2269">接收訊息的異動式佇列，使用所定義的內部交易內容中使用此多載`transaction`參數，並傳回指定的一段時間，如果佇列中沒有訊息內。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2269">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, and return within a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2270"><xref:System.Messaging.MessageQueue.Receive%2A>方法是用來同步讀取一個訊息，藉此從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2270">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="dc7c4-2271">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>遵循的訊息傳回佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2271">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2272">因為異動式佇列上呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2272">Because this method is called on a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2273">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2273">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2274">若要讀取佇列中的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2274">To read a message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="dc7c4-2275">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2275">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="dc7c4-2276">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會的移除任何訊息在佇列中，進行任何回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2276">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there is nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2277">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2277">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2278">為給定的期間內的時間，或無限期封鎖執行緒如果指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>針對`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2278">The thread is blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="dc7c4-2279">如果應用程式處理應該繼續進行，而不需等待訊息，請考慮使用非同步方法中， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2279">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2280">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2280">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2281">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2281">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2282">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2282">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2283">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2283">Local computer</span></span>|<span data-ttu-id="dc7c4-2284">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2284">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2285">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2285">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2286">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2286">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2287">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2287">Remote computer</span></span>|<span data-ttu-id="dc7c4-2288">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2288">No</span></span>|  
|<span data-ttu-id="dc7c4-2289">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2289">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2290">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2290">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2291"><paramref name="cursor" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2291">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dc7c4-2292">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2292">-or-</span></span> 
<span data-ttu-id="dc7c4-2293"><paramref name="transaction" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2293">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2294">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2294">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span> <span data-ttu-id="dc7c4-2295">可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2295">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2296">訊息沒有在逾時到期前到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2296">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2297">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2297">-or-</span></span> 
<span data-ttu-id="dc7c4-2298">該佇列是非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2298">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="dc7c4-2299">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2299">-or-</span></span> 
<span data-ttu-id="dc7c4-2300">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2300">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-2301">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2301">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.Cursor * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, cursor, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dc7c4-2302"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2302">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="cursor"><span data-ttu-id="dc7c4-2303"><see cref="T:System.Messaging.Cursor" />，保留訊息佇列中的特定位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2303">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-2304">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息產生關聯的交易內容類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2304">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values that describes the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2305">使用指定的游標接收佇列中的目前訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2305">Receives the current message in the queue, using a specified cursor.</span></span> <span data-ttu-id="dc7c4-2306">如果沒有可用的訊息，則這個方法會等到有訊息可用或逾時為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2306">If no message is available, this method waits until either a message is available, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2307"><see cref="T:System.Messaging.Message" />，參考佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2307">A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2308">若要使用交易內容所定義的佇列中接收的訊息中使用此多載`transactionType`參數，並在一段指定時間，如果佇列中沒有任何訊息中的傳回。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2308">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2309">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2309">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="dc7c4-2310">指定`Single`如果您想要接收的訊息視為單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2310">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-2311">您可以指定`None`如果您想要從交易內容外的異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2311">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="dc7c4-2312"><xref:System.Messaging.MessageQueue.Receive%2A>方法是用來同步讀取一個訊息，藉此從佇列移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2312">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="dc7c4-2313">後續呼叫<xref:System.Messaging.MessageQueue.Receive%2A>遵循的訊息傳回佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2313">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2314">如果從交易佇列中接收的訊息呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2314">If this method is called to receive a message from a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2315">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2315">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2316">若要讀取佇列中的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2316">To read a message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="dc7c4-2317">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2317">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="dc7c4-2318">因為<xref:System.Messaging.MessageQueue.Peek%2A>不會的移除任何訊息在佇列中，進行任何回復呼叫<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2318">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there is nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2319">使用呼叫<xref:System.Messaging.MessageQueue.Receive%2A>時可接受進行封鎖並同時等候訊息到達佇列中目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2319">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2320">為給定的期間內的時間，或無限期封鎖執行緒如果指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>針對`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2320">The thread is blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="dc7c4-2321">如果應用程式處理應該繼續進行，而不需等待訊息，請考慮使用非同步方法中， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2321">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="dc7c4-2322">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2322">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2323">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2323">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2324">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2324">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2325">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2325">Local computer</span></span>|<span data-ttu-id="dc7c4-2326">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2326">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2327">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2327">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2328">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2328">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2329">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2329">Remote computer</span></span>|<span data-ttu-id="dc7c4-2330">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2330">No</span></span>|  
|<span data-ttu-id="dc7c4-2331">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2331">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2332">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2332">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2333"><paramref name="cursor" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2333">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2334">指定給 <paramref name="timeout" /> 參數的值無效。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2334">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span> <span data-ttu-id="dc7c4-2335">可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2335">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2336"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2336">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2337">訊息沒有在逾時到期前到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2337">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2338">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2338">-or-</span></span> 
<span data-ttu-id="dc7c4-2339">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2339">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="dc7c4-2340">此方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2340">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveByCorrelationId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-2341">接收符合指定關聯識別項的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2341">Receives a message that matches a given correlation identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId correlationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="dc7c4-2342">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2342">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2343">接收符合指定關聯識別項的訊息 (從非交易佇列中)，如果佇列中目前不存在具有指定關聯識別項的訊息，則立即引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2343">Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2344">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2344">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2345">這個方法會查詢中參考的非交易式佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2345">This method looks in the non-transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2346">如果不找到任何訊息符合`correlationID`參數，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2346">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="dc7c4-2347">否則，訊息是從佇列中移除，並傳回給應用程式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2347">Otherwise, the message is removed from the queue and returned to the application.</span></span>  
  
 <span data-ttu-id="dc7c4-2348"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來繫結至相關聯的回應、 報表或通知訊息佇列傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2348">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="dc7c4-2349">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2349">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2350"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法會擷取一則訊息，藉由指定的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2350">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method retrieves a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="dc7c4-2351">若要讀取具有指定的關聯識別項的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2351">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2352"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2352">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2353">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2353">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2354">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2354">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2355">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2355">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2356">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2356">Local computer</span></span>|<span data-ttu-id="dc7c4-2357">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2357">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2358">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2358">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2359">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2359">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2360">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2360">Remote computer</span></span>|<span data-ttu-id="dc7c4-2361">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2361">No</span></span>|  
|<span data-ttu-id="dc7c4-2362">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2362">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2363">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2363">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2364">下列程式碼範例會傳送，並收到包含訂單與佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2364">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="dc7c4-2365">它特別要求正面確認通知，當原始訊息抵達或已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2365">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2366"><paramref name="correlationId" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2366">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2367">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2367">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2368">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2368">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="dc7c4-2369">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2369">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-2370"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2370">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2371">接收符合指定關聯識別項的訊息 (從交易佇列中)，如果佇列中目前不存在具有指定關聯識別項的訊息，則立即引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2371">Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2372">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2372">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2373">這個方法會查詢中參考的交易式佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2373">This method looks in the transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2374">如果不找到任何訊息符合`correlationID`參數，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2374">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="dc7c4-2375">訊息會從佇列中移除並傳回應用程式使用所定義的內部交易內容，否則為`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2375">Otherwise, the message is removed from the queue and returned to the application using the internal transaction context defined by the `transaction` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2376">因為異動式佇列上呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2376">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2377">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2377">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2378"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來繫結至相關聯的回應、 報表或通知訊息佇列傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2378">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="dc7c4-2379">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2379">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2380"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2380">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="dc7c4-2381">若要讀取具有指定的關聯識別項的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2381">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2382"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2382">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2383">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2383">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-2384">因為<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不會的移除任何訊息在佇列中，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2384">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2385">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2385">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2386">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2386">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2387">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2387">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2388">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2388">Local computer</span></span>|<span data-ttu-id="dc7c4-2389">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2389">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2390">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2390">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2391">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2391">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2392">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2392">Remote computer</span></span>|<span data-ttu-id="dc7c4-2393">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2393">No</span></span>|  
|<span data-ttu-id="dc7c4-2394">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2394">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2395">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2395">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2396">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2396">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#14](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#14)]
 [!code-csharp[MessageQueue2#14](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2397"><paramref name="correlationId" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2397">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dc7c4-2398">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2398">-or-</span></span> 
<span data-ttu-id="dc7c4-2399"><paramref name="transaction" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2399">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2400">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2400">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2401">該佇列是非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2401">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="dc7c4-2402">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2402">-or-</span></span> 
<span data-ttu-id="dc7c4-2403">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2403">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="dc7c4-2404">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2404">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-2405">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2405">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2406">接收符合指定關聯識別項的訊息，如果佇列中目前不存在具有指定關聯識別項的訊息，則立即引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2406">Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2407">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2407">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2408">這個方法會查詢中參考的佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2408">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2409">如果不找到任何訊息符合`correlationID`參數，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2409">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="dc7c4-2410">訊息會從佇列中移除並傳回使用交易內容所定義的應用程式，否則為`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2410">Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2411">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2411">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="dc7c4-2412">指定`Single`如果您想要接收的訊息視為單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2412">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-2413">您可以指定`None`如果您想要從交易內容外的異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2413">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="dc7c4-2414">如果這個方法呼叫從異動式佇列接收訊息時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2414">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2415">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2415">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2416"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來繫結至相關聯的回應、 報表或通知訊息佇列傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2416">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="dc7c4-2417">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2417">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2418"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2418">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="dc7c4-2419">若要讀取具有指定的關聯識別項的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2419">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2420"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2420">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2421">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2421">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-2422">因為<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不會的移除任何訊息在佇列中，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2422">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2423">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2423">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2424">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2424">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2425">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2425">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2426">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2426">Local computer</span></span>|<span data-ttu-id="dc7c4-2427">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2427">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2428">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2428">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2429">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2429">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2430">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2430">Remote computer</span></span>|<span data-ttu-id="dc7c4-2431">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2431">No</span></span>|  
|<span data-ttu-id="dc7c4-2432">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2432">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2433">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2433">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2434">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2434">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#11](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#11)]
 [!code-csharp[MessageQueue2#11](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2435"><paramref name="correlationId" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2435">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2436">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2436">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2437"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2437">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2438">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2438">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="dc7c4-2439">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2439">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="dc7c4-2440"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2440">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2441">接收符合指定關聯識別項的訊息 (從非交易佇列中)，並且等待佇列中出現具有指定關聯識別項的訊息，或者逾時到期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2441">Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2442">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2442">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2443">這個方法會查詢中參考的非交易式佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2443">This method looks in the non-transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2444">這個方法會立即傳回如果所指定的訊息相互關聯識別碼`correlationId`參數是在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2444">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue.</span></span> <span data-ttu-id="dc7c4-2445">否則，方法會在特定的期間的新訊息到達的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2445">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="dc7c4-2446">如果沒有收到一封新郵件，逾時到期之前，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2446">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="dc7c4-2447">`timeout`參數未指定這個方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2447">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="dc7c4-2448">相反地，它會指定等待新訊息到達佇列中的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2448">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2449">每當新訊息送達時，此方法會檢查<xref:System.Messaging.Message.CorrelationId%2A>的新的訊息，以查看它是否符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2449">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2450">否則，這個方法會開始逾時期限，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2450">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="dc7c4-2451">因此，如果新的訊息會繼續逾時期間內抵達時，可能會此方法才能繼續無限期執行的逾時期限到期且沒有任何新的訊息抵達之前或直到訊息抵達其<xref:System.Messaging.Message.CorrelationId%2A>符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2451">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2452"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來繫結至相關聯的回應、 報表或通知訊息佇列傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2452">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="dc7c4-2453">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2453">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2454"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2454">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="dc7c4-2455">若要讀取具有指定的關聯識別項的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2455">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2456"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2456">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2457">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2457">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2458">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2458">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2459">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2459">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2460">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2460">Local computer</span></span>|<span data-ttu-id="dc7c4-2461">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2461">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2462">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2462">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2463">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2463">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2464">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2464">Remote computer</span></span>|<span data-ttu-id="dc7c4-2465">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2465">No</span></span>|  
|<span data-ttu-id="dc7c4-2466">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2466">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2467">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2467">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2468">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2468">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#10](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#10)]
 [!code-csharp[MessageQueue2#10](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2469"><paramref name="correlationId" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2469">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2470">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2470">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2471">佇列中沒有具有指定 <paramref name="correlationId" /> 的訊息，且該訊息未在逾時到期前到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2471">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2472">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2472">-or-</span></span> 
<span data-ttu-id="dc7c4-2473">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2473">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * TimeSpan * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, timeout, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="dc7c4-2474">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2474">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="dc7c4-2475"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2475">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-2476"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2476">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2477">接收符合指定關聯識別項的訊息 (從交易佇列中)，並且等待佇列中出現具有指定關聯識別項的訊息，或者逾時到期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2477">Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2478">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2478">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2479">這個方法會查詢中參考的交易式佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2479">This method looks in the transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2480">這個方法會立即傳回如果所指定的訊息相互關聯識別碼`correlationId`參數是在佇列中，使用所定義的內部交易內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2480">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="dc7c4-2481">否則，方法會在特定的期間的新訊息到達的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2481">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="dc7c4-2482">如果沒有收到一封新郵件，逾時到期之前，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2482">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="dc7c4-2483">`timeout`參數未指定這個方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2483">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="dc7c4-2484">相反地，它會指定等待新訊息到達佇列中的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2484">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2485">每當新訊息送達時，此方法會檢查<xref:System.Messaging.Message.CorrelationId%2A>的新的訊息，以查看它是否符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2485">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2486">否則，這個方法會開始逾時期限，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2486">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="dc7c4-2487">因此，如果新的訊息會繼續逾時期間內抵達時，可能會此方法才能繼續無限期執行的逾時期限到期且沒有任何新的訊息抵達之前或直到訊息抵達其<xref:System.Messaging.Message.CorrelationId%2A>符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2487">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2488">因為異動式佇列上呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2488">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2489">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2489">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2490"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來繫結至相關聯的回應、 報表或通知訊息佇列傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2490">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="dc7c4-2491">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2491">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2492"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2492">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="dc7c4-2493">若要讀取具有指定的關聯識別項的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2493">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2494"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2494">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2495">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2495">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-2496">因為<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不會的移除任何訊息在佇列中，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2496">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2497">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2497">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2498">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2498">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2499">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2499">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2500">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2500">Local computer</span></span>|<span data-ttu-id="dc7c4-2501">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2501">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2502">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2502">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2503">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2503">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2504">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2504">Remote computer</span></span>|<span data-ttu-id="dc7c4-2505">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2505">No</span></span>|  
|<span data-ttu-id="dc7c4-2506">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2506">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2507">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2507">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2508">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2508">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#13)]
 [!code-csharp[MessageQueue2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2509"><paramref name="correlationId" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2509">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dc7c4-2510">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2510">-or-</span></span> 
<span data-ttu-id="dc7c4-2511"><paramref name="transaction" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2511">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2512">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2512">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2513">佇列中沒有具有指定 <paramref name="correlationId" /> 的訊息，且該訊息未在逾時到期前到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2513">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2514">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2514">-or-</span></span> 
<span data-ttu-id="dc7c4-2515">該佇列是非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2515">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="dc7c4-2516">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2516">-or-</span></span> 
<span data-ttu-id="dc7c4-2517">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2517">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * TimeSpan * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, timeout, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="dc7c4-2518">要接收訊息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2518">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="dc7c4-2519"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2519">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-2520">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2520">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2521">接收符合指定關聯識別項的訊息，並且等待佇列中出現具有指定關聯識別項的訊息，或者逾時到期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2521">Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2522">傳入符合 <paramref name="correlationId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2522">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2523">這個方法會查詢中參考的佇列<xref:System.Messaging.MessageQueue>訊息其<xref:System.Messaging.Message.CorrelationId%2A>符合指定`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2523">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2524">這個方法會立即傳回如果所指定的訊息相互關聯識別碼`correlationId`參數是在佇列中，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2524">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="dc7c4-2525">否則，方法會在特定的期間的新訊息到達的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2525">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="dc7c4-2526">如果沒有收到一封新郵件，逾時到期之前，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2526">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="dc7c4-2527">`timeout`參數未指定這個方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2527">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="dc7c4-2528">相反地，它會指定等待新訊息到達佇列中的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2528">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2529">每當新訊息送達時，此方法會檢查<xref:System.Messaging.Message.CorrelationId%2A>的新的訊息，以查看它是否符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2529">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2530">否則，這個方法會開始逾時期限，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2530">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="dc7c4-2531">因此，如果新的訊息會繼續逾時期間內抵達時，可能會此方法才能繼續無限期執行的逾時期限到期且沒有任何新的訊息抵達之前或直到訊息抵達其<xref:System.Messaging.Message.CorrelationId%2A>符合`correlationId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2531">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span> <span data-ttu-id="dc7c4-2532">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2532">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="dc7c4-2533">指定`Single`如果您想要接收的訊息視為單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2533">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-2534">您可以指定`None`如果您想要從交易內容外的異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2534">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="dc7c4-2535">如果這個方法呼叫從異動式佇列接收訊息時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2535">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2536">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2536">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2537"><xref:System.Messaging.Message.CorrelationId%2A>屬性用來繫結至相關聯的回應、 報表或通知訊息佇列傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2537">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="dc7c4-2538">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2538">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2539"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用來擷取訊息，藉由指定的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2539">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="dc7c4-2540">若要讀取具有指定的關聯識別項的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2540">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2541"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2541">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2542">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2542">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-2543">因為<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不會的移除任何訊息在佇列中，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2543">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2544">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2544">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2545">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2545">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2546">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2546">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2547">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2547">Local computer</span></span>|<span data-ttu-id="dc7c4-2548">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2548">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2549">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2549">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2550">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2550">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2551">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2551">Remote computer</span></span>|<span data-ttu-id="dc7c4-2552">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2552">No</span></span>|  
|<span data-ttu-id="dc7c4-2553">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2553">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2554">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2554">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2555">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2555">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#12](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#12)]
 [!code-csharp[MessageQueue2#12](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2556"><paramref name="correlationId" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2556">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2557">找不到具有指定 <paramref name="correlationId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2557">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2558">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2558">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2559"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2559">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2560">佇列中沒有具有指定 <paramref name="correlationId" /> 的訊息，且該訊息未在逾時到期前到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2560">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2561">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2561">-or-</span></span> 
<span data-ttu-id="dc7c4-2562">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2562">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveById">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-2563">接收符合指定識別項的訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2563">Receives the message that matches the given identifier, removing it from the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="dc7c4-2564">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2564">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2565">從非交易佇列中接收符合指定識別項的訊息，如果佇列中目前不存在具有指定識別項的訊息，則立即引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2565">Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2566">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2566">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2567">讀取具有已知識別碼的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2567">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="dc7c4-2568">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2568">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2569"><xref:System.Messaging.Message.Id%2A>訊息屬性是訊息佇列企業中，唯一的應該會有最多一個訊息在佇列中符合指定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2569">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2570">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2570">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2571"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息而建立的應用程式所產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2571">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2572">若要讀取具有指定識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2572">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2573"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2573">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2574">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2574">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2575">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2575">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2576">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2576">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2577">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2577">Local computer</span></span>|<span data-ttu-id="dc7c4-2578">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2578">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2579">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2579">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2580">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2580">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2581">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2581">Remote computer</span></span>|<span data-ttu-id="dc7c4-2582">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2582">No</span></span>|  
|<span data-ttu-id="dc7c4-2583">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2583">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2584">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2584">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2585">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2585">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#16](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#16)]
 [!code-csharp[MessageQueue2#16](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2586"><paramref name="id" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2586">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2587">找不到具有指定 <paramref name="id" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2587">The message with the specified <paramref name="id" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2588">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2588">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="dc7c4-2589">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2589">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-2590"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2590">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2591">接收符合指定識別項的訊息 (從交易佇列中)，如果佇列中目前不存在具有指定識別項的訊息，則立即引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2591">Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2592">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2592">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2593">使用這個方法來讀取具有已知識別碼的訊息，並將它從佇列中，使用所定義的內部交易內容中移除`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2593">Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="dc7c4-2594">此方法擲回例外狀況的立即訊息是否不在佇列中</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2594">This method throws an exception immediately if the message is not in the queue</span></span>  
  
 <span data-ttu-id="dc7c4-2595"><xref:System.Messaging.Message.Id%2A>訊息屬性是訊息佇列企業中，唯一的應該會有最多一個訊息在佇列中符合指定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2595">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2596">因為異動式佇列上呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2596">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2597">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2597">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2598">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2598">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2599"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息而建立的應用程式所產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2599">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2600">若要讀取具有指定識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2600">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2601"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2601">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2602">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2602">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-2603">因為<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不會的移除任何訊息在佇列中，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2603">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2604">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2604">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2605">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2605">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2606">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2606">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2607">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2607">Local computer</span></span>|<span data-ttu-id="dc7c4-2608">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2608">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2609">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2609">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2610">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2610">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2611">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2611">Remote computer</span></span>|<span data-ttu-id="dc7c4-2612">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2612">No</span></span>|  
|<span data-ttu-id="dc7c4-2613">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2613">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2614">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2614">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2615">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2615">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#17](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#17)]
 [!code-csharp[MessageQueue2#17](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2616"><paramref name="id" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2616">The <paramref name="id" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dc7c4-2617">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2617">-or-</span></span> 
<span data-ttu-id="dc7c4-2618"><paramref name="transaction" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2618">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2619">找不到具有指定 <paramref name="id" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2619">The message with the specified <paramref name="id" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2620">該佇列是非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2620">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="dc7c4-2621">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2621">-or-</span></span> 
<span data-ttu-id="dc7c4-2622">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2622">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="dc7c4-2623">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2623">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-2624">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2624">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2625">接收符合指定識別項的訊息，如果佇列中目前不存在具有指定識別項的訊息，則立即引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2625">Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2626">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2626">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2627">讀取具有已知識別碼的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2627">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="dc7c4-2628">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2628">This method throws an exception immediately if the message is not in the queue.</span></span> <span data-ttu-id="dc7c4-2629">訊息會從佇列中移除並傳回使用交易內容所定義的應用程式，否則為`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2629">Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2630">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2630">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="dc7c4-2631">指定`Single`如果您想要接收的訊息視為單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2631">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-2632">您可以指定`None`如果您想要從交易內容外的異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2632">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="dc7c4-2633"><xref:System.Messaging.Message.Id%2A>訊息屬性是訊息佇列企業中，唯一的應該會有最多一個訊息在佇列中符合指定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2633">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="dc7c4-2634">如果具有指定識別碼的訊息是不同於與此相關聯的佇列中<xref:System.Messaging.MessageQueue>執行個體，將無法找到訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2634">If the message with the specified identifier is in a queue other than the one associated with this <xref:System.Messaging.MessageQueue> instance, the message will not be found.</span></span>  
  
 <span data-ttu-id="dc7c4-2635">如果這個方法呼叫從異動式佇列接收訊息時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2635">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2636">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2636">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2637">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2637">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2638"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息而建立的應用程式所產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2638">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2639">若要讀取具有指定識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2639">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2640"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2640">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2641">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2641">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-2642">因為<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不會的移除任何訊息在佇列中，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2642">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2643">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2643">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2644">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2644">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2645">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2645">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2646">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2646">Local computer</span></span>|<span data-ttu-id="dc7c4-2647">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2647">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2648">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2648">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2649">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2649">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2650">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2650">Remote computer</span></span>|<span data-ttu-id="dc7c4-2651">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2651">No</span></span>|  
|<span data-ttu-id="dc7c4-2652">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2652">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2653">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2653">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2654">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2654">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#15)]
 [!code-csharp[MessageQueue2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2655"><paramref name="id" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2655">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2656">找不到具有指定 <paramref name="id" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2656">The message with the specified <paramref name="id" /> could not be found.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2657"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2657">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2658">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2658">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="dc7c4-2659">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2659">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="dc7c4-2660"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2660">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2661">接收符合指定識別項的訊息 (從非交易佇列中)，並且等待佇列中出現具有指定識別項的訊息，或者逾時到期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2661">Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2662">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2662">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2663">讀取具有已知識別碼的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2663">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="dc7c4-2664">這個方法會立即傳回如果所指定的識別項的訊息`id`參數是在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2664">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue.</span></span> <span data-ttu-id="dc7c4-2665">否則，方法會在特定的期間的新訊息到達的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2665">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="dc7c4-2666">如果沒有收到一封新郵件，逾時到期之前，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2666">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="dc7c4-2667">`timeout`參數未指定這個方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2667">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="dc7c4-2668">相反地，它會指定等待新訊息到達佇列中的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2668">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2669">每當新訊息送達時，此方法會檢查<xref:System.Messaging.Message.Id%2A>的新的訊息，以查看它是否符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2669">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="dc7c4-2670">否則，這個方法會開始逾時期限，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2670">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="dc7c4-2671">因此，如果新的訊息會繼續逾時期間內抵達時，可能會此方法才能繼續無限期執行的逾時期限到期且沒有任何新的訊息抵達之前或直到訊息抵達其<xref:System.Messaging.Message.Id%2A>符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2671">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2672"><xref:System.Messaging.Message.Id%2A>訊息屬性是訊息佇列企業中，唯一的應該會有最多一個訊息在佇列中符合指定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2672">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2673">使用此多載<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>時，只要新訊息到達佇列所指定的逾時期限內會繼續封鎖目前的執行緒可接受`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2673">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="dc7c4-2674">執行緒會封鎖至少在特定期間的時間，或無限期地如果指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>for`timeout`參數，則新訊息到達佇列所指定的逾時期限內會繼續`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2674">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2675">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2675">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2676"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息而建立的應用程式所產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2676">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2677">若要讀取具有指定識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2677">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2678"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2678">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2679">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2679">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2680">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2680">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2681">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2681">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2682">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2682">Local computer</span></span>|<span data-ttu-id="dc7c4-2683">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2683">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2684">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2684">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2685">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2685">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2686">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2686">Remote computer</span></span>|<span data-ttu-id="dc7c4-2687">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2687">No</span></span>|  
|<span data-ttu-id="dc7c4-2688">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2688">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2689">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2689">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2690">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2690">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#20](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#20)]
 [!code-csharp[MessageQueue2#20](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2691"><paramref name="id" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2691">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2692">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2692">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2693">具有指定 <paramref name="id" /> 的訊息未在逾時到期前到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2693">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2694">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2694">-or-</span></span> 
<span data-ttu-id="dc7c4-2695">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2695">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * TimeSpan * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, timeout, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="dc7c4-2696">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2696">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="dc7c4-2697"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2697">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-2698"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2698">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2699">接收符合指定識別項的訊息 (從交易佇列中)，並且等待佇列中出現具有指定識別項的訊息，或者逾時到期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2699">Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2700">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2700">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2701">使用這個方法來讀取具有已知識別碼的訊息，並將它從佇列中，使用所定義的內部交易內容中移除`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2701">Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="dc7c4-2702">這個方法會立即傳回如果所指定的識別項的訊息`id`參數是在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2702">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue.</span></span> <span data-ttu-id="dc7c4-2703">否則，方法會在特定的期間的新訊息到達的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2703">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="dc7c4-2704">如果沒有收到一封新郵件，逾時到期之前，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2704">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="dc7c4-2705">`timeout`參數未指定這個方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2705">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="dc7c4-2706">相反地，它會指定等待新訊息到達佇列中的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2706">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2707">每當新訊息送達時，此方法會檢查<xref:System.Messaging.Message.Id%2A>的新的訊息，以查看它是否符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2707">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="dc7c4-2708">否則，這個方法會開始逾時期限，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2708">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="dc7c4-2709">因此，如果新的訊息會繼續逾時期間內抵達時，可能會此方法才能繼續無限期執行的逾時期限到期且沒有任何新的訊息抵達之前或直到訊息抵達其<xref:System.Messaging.Message.Id%2A>符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2709">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2710"><xref:System.Messaging.Message.Id%2A>訊息屬性是訊息佇列企業中，唯一的應該會有最多一個訊息在佇列中符合指定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2710">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2711">使用此多載<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>時，只要新訊息到達佇列所指定的逾時期限內會繼續封鎖目前的執行緒可接受`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2711">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="dc7c4-2712">執行緒會封鎖至少在特定期間的時間，或無限期地如果指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>for`timeout`參數，則新訊息到達佇列所指定的逾時期限內會繼續`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2712">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the timeout period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2713">因為異動式佇列上呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2713">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2714">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2714">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2715">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2715">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2716"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息而建立的應用程式所產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2716">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2717">若要讀取具有指定識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2717">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2718"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2718">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2719">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2719">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-2720">因為<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不會的移除任何訊息在佇列中，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2720">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2721">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2721">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2722">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2722">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2723">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2723">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2724">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2724">Local computer</span></span>|<span data-ttu-id="dc7c4-2725">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2725">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2726">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2726">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2727">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2727">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2728">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2728">Remote computer</span></span>|<span data-ttu-id="dc7c4-2729">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2729">No</span></span>|  
|<span data-ttu-id="dc7c4-2730">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2730">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2731">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2731">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2732">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2732">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#18)]
 [!code-csharp[MessageQueue2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2733"><paramref name="id" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2733">The <paramref name="id" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dc7c4-2734">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2734">-or-</span></span> 
<span data-ttu-id="dc7c4-2735"><paramref name="transaction" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2735">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2736">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2736">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2737">具有指定 <paramref name="id" /> 的訊息未在逾時到期前到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2737">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2738">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2738">-or-</span></span> 
<span data-ttu-id="dc7c4-2739">該佇列是非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2739">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="dc7c4-2740">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2740">-or-</span></span> 
<span data-ttu-id="dc7c4-2741">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2741">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * TimeSpan * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, timeout, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="dc7c4-2742">要接收訊息的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2742">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="dc7c4-2743"><see cref="T:System.TimeSpan" />，指出等待新訊息可以進行檢查的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2743">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-2744">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2744">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2745">接收符合指定識別項的訊息，並且等待佇列中出現具有指定識別項的訊息，或者逾時到期。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2745">Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2746">傳入符合 <paramref name="id" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.Id" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2746">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2747">讀取具有已知識別碼的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2747">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="dc7c4-2748">這個方法會立即傳回如果所指定的識別項的訊息`id`參數是在佇列中，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2748">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="dc7c4-2749">否則，方法會在特定的期間的新訊息到達的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2749">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="dc7c4-2750">如果沒有收到一封新郵件，逾時到期之前，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2750">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="dc7c4-2751">`timeout`參數未指定這個方法的執行時間總計。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2751">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="dc7c4-2752">相反地，它會指定等待新訊息到達佇列中的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2752">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="dc7c4-2753">每當新訊息送達時，此方法會檢查<xref:System.Messaging.Message.Id%2A>的新的訊息，以查看它是否符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2753">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="dc7c4-2754">否則，這個方法會開始逾時期限，並等候另一個新訊息到達。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2754">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="dc7c4-2755">因此，如果新的訊息會繼續逾時期間內抵達時，可能會此方法才能繼續無限期執行的逾時期限到期且沒有任何新的訊息抵達之前或直到訊息抵達其<xref:System.Messaging.Message.Id%2A>符合`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2755">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2756">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2756">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="dc7c4-2757">指定`Single`如果您想要接收的訊息視為單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2757">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-2758">您可以指定`None`如果您想要從交易內容外的異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2758">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="dc7c4-2759"><xref:System.Messaging.Message.Id%2A>訊息屬性是訊息佇列企業中，唯一的應該會有最多一個訊息在佇列中符合指定`id`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2759">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="dc7c4-2760">如果具有指定識別碼的訊息是不同於與此相關聯的佇列中<xref:System.Messaging.MessageQueue>執行個體，將無法找到訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2760">If the message with the specified identifier is in a queue other than the one associated with this <xref:System.Messaging.MessageQueue> instance, the message will not be found.</span></span>  
  
 <span data-ttu-id="dc7c4-2761">使用此多載<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>時，只要新訊息到達佇列所指定的逾時期限內會繼續封鎖目前的執行緒可接受`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2761">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="dc7c4-2762">執行緒會封鎖至少在特定期間的時間，或無限期地如果指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>for`timeout`參數，則新訊息到達佇列所指定的逾時期限內會繼續`timeout`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2762">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2763">如果這個方法呼叫從異動式佇列接收訊息時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2763">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2764">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2764">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2765">另外兩個方法可讓您從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2765">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="dc7c4-2766"><xref:System.Messaging.MessageQueue.Receive%2A>方法會傳回第一個訊息在佇列中，而<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用來擷取通知、 報表或已傳送至佇列的訊息而建立的應用程式所產生的回應訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2766">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2767">若要讀取具有指定識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2767">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="dc7c4-2768"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法一律會傳回第一個訊息在佇列中，因此方法的後續呼叫會傳回相同的訊息，除非較高優先權的訊息到達佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2768">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="dc7c4-2769">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2769">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="dc7c4-2770">因為<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不會的移除任何訊息在佇列中，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2770">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2771">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2771">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2772">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2772">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2773">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2773">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2774">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2774">Local computer</span></span>|<span data-ttu-id="dc7c4-2775">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2775">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2776">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2776">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2777">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2777">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2778">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2778">Remote computer</span></span>|<span data-ttu-id="dc7c4-2779">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2779">No</span></span>|  
|<span data-ttu-id="dc7c4-2780">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2780">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2781">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2781">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2782">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2782">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#19](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#19)]
 [!code-csharp[MessageQueue2#19](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-2783"><paramref name="id" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2783">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-2784">為 <paramref name="timeout" /> 參數指定的值無效，可能是 <paramref name="timeout" /> 小於 <see cref="F:System.TimeSpan.Zero" /> 或大於 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2784">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2785">具有指定 <paramref name="id" /> 的訊息未在逾時到期前到達佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2785">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="dc7c4-2786">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2786">-or-</span></span> 
<span data-ttu-id="dc7c4-2787">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2787">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2788"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2788">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveByLookupId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-2789">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2789">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="dc7c4-2790">接收佇列中的特定訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2790">Receives a specific message from the queue.</span></span> <span data-ttu-id="dc7c4-2791">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2791">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(long lookupId);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByLookupId : int64 -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByLookupId lookupId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lookupId" Type="System.Int64" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="lookupId"><span data-ttu-id="dc7c4-2792">要接收訊息的 <see cref="P:System.Messaging.Message.LookupId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2792">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2793">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2793">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="dc7c4-2794">接收符合非交易佇列之指定查詢識別項的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2794">Receives the message that matches the given lookup identifier from a non-transactional queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2795">傳入符合 <paramref name="lookupId" /> 參數的 <see cref="T:System.Messaging.Message" /> 的 <see cref="P:System.Messaging.Message.LookupId" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2795">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2796">讀取具有已知的查詢識別項的訊息，並將它從佇列移除使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2796">Use this method to read a message with a known lookup identifier and remove it from the queue.</span></span> <span data-ttu-id="dc7c4-2797">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2797">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2798"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，因此會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2798">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2799">若要讀取具有指定的查詢識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2799">To read a message with a specified lookup identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="dc7c4-2800">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2800">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2801">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2801">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2802">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2802">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2803">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2803">Local computer</span></span>|<span data-ttu-id="dc7c4-2804">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2804">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2805">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2805">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2806">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2806">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2807">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2807">Remote computer</span></span>|<span data-ttu-id="dc7c4-2808">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2808">No</span></span>|  
|<span data-ttu-id="dc7c4-2809">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2809">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2810">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2810">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="dc7c4-2811">未安裝 MSMQ 3.0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2811">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2812">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2812">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2813">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2813">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (action As MessageLookupAction, lookupId As Long, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(System::Messaging::MessageLookupAction action, long lookupId, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByLookupId : System.Messaging.MessageLookupAction * int64 * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByLookupId (action, lookupId, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lookupId" Type="System.Int64" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="dc7c4-2814">其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定如何在佇列中讀取訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2814">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span></span> <span data-ttu-id="dc7c4-2815">請指定下列其中一個選項：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2815">Specify one of the following:</span></span> 
 <span data-ttu-id="dc7c4-2816"><see langword="MessageLookupAction.Current" />：接收 <paramref name="lookupId" /> 所指定的訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2816"><see langword="MessageLookupAction.Current" />: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2817"><see langword="MessageLookupAction.Next" />：接收 <paramref name="lookupId" /> 所指定訊息之後的訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2817"><see langword="MessageLookupAction.Next" />: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2818"><see langword="MessageLookupAction.Previous" />：接收 <paramref name="lookupId" /> 所指定訊息之前的訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2818"><see langword="MessageLookupAction.Previous" />: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2819"><see langword="MessageLookupAction.First" />：接收佇列中的第一則訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2819"><see langword="MessageLookupAction.First" />: Receives the first message in the queue and removes it from the queue.</span></span> <span data-ttu-id="dc7c4-2820"><paramref name="lookupId" /> 參數必須設定為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2820">The <paramref name="lookupId" /> parameter must be set to 0.</span></span>  
  
 <span data-ttu-id="dc7c4-2821"><see langword="MessageLookupAction.Last" />：接收佇列中的最後一則訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2821"><see langword="MessageLookupAction.Last" />: Receives the last message in the queue and removes it from the queue.</span></span> <span data-ttu-id="dc7c4-2822"><paramref name="lookupId" /> 參數必須設定為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2822">The <paramref name="lookupId" /> parameter must be set to 0.</span></span></param>
        <param name="lookupId"><span data-ttu-id="dc7c4-2823">要接收之訊息的 <see cref="P:System.Messaging.Message.LookupId" />，或者為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2823">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.</span></span> <span data-ttu-id="dc7c4-2824">存取佇列中第一則或最後一則訊息時會使用 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2824">0 is used when accessing the first or last message in the queue.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-2825"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2825">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2826">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2826">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="dc7c4-2827">接收交易佇列中的特定訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2827">Receives a specific message from a transactional queue.</span></span> <span data-ttu-id="dc7c4-2828">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2828">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2829">傳入之 <paramref name="lookupId" /> 和 <paramref name="action" /> 參數所指定的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2829">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="lookupId" /> and <paramref name="action" /> parameters passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2830">使用這個方法來讀取已知的查詢識別項的訊息，並將它移除從佇列中，使用所定義的交易內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2830">Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="dc7c4-2831">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2831">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2832"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，因此會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2832">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2833">因為異動式佇列上呼叫此方法時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2833">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2834">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2834">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2835">若要讀取具有指定識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2835">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span> <span data-ttu-id="dc7c4-2836">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2836">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>.</span></span> <span data-ttu-id="dc7c4-2837">因為<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>不會的移除任何訊息從佇列，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2837">Because <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2838">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2838">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2839">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2839">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2840">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2840">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2841">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2841">Local computer</span></span>|<span data-ttu-id="dc7c4-2842">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2842">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2843">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2843">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2844">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2844">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2845">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2845">Remote computer</span></span>|<span data-ttu-id="dc7c4-2846">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2846">No</span></span>|  
|<span data-ttu-id="dc7c4-2847">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2847">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2848">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2848">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="dc7c4-2849">未安裝 MSMQ 3.0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2849">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2850">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2850">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2851">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2851">An error occurred when accessing a Message Queuing method.</span></span>  
  
<span data-ttu-id="dc7c4-2852">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2852">-or-</span></span> 
<span data-ttu-id="dc7c4-2853">該佇列是非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2853">The queue is non-transactional.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2854"><paramref name="action" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2854">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (action As MessageLookupAction, lookupId As Long, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(System::Messaging::MessageLookupAction action, long lookupId, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByLookupId : System.Messaging.MessageLookupAction * int64 * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByLookupId (action, lookupId, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lookupId" Type="System.Int64" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="dc7c4-2855">其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定如何在佇列中讀取訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2855">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span></span> <span data-ttu-id="dc7c4-2856">請指定下列其中一個選項：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2856">Specify one of the following:</span></span> 
 <span data-ttu-id="dc7c4-2857"><see langword="MessageLookupAction.Current" />：接收 <paramref name="lookupId" /> 所指定的訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2857"><see langword="MessageLookupAction.Current" />: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2858"><see langword="MessageLookupAction.Next" />：接收 <paramref name="lookupId" /> 所指定訊息之後的訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2858"><see langword="MessageLookupAction.Next" />: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2859"><see langword="MessageLookupAction.Previous" />：接收 <paramref name="lookupId" /> 所指定訊息之前的訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2859"><see langword="MessageLookupAction.Previous" />: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2860"><see langword="MessageLookupAction.First" />：接收佇列中的第一則訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2860"><see langword="MessageLookupAction.First" />: Receives the first message in the queue and removes it from the queue.</span></span> <span data-ttu-id="dc7c4-2861"><paramref name="lookupId" /> 參數必須設定為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2861">The <paramref name="lookupId" /> parameter must be set to 0.</span></span>  
  
 <span data-ttu-id="dc7c4-2862"><see langword="MessageLookupAction.Last" />：接收佇列中的最後一則訊息，並將它從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2862"><see langword="MessageLookupAction.Last" />: Receives the last message in the queue and removes it from the queue.</span></span> <span data-ttu-id="dc7c4-2863"><paramref name="lookupId" /> 參數必須設定為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2863">The <paramref name="lookupId" /> parameter must be set to 0.</span></span></param>
        <param name="lookupId"><span data-ttu-id="dc7c4-2864">要接收之訊息的 <see cref="P:System.Messaging.Message.LookupId" />，或者為 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2864">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.</span></span> <span data-ttu-id="dc7c4-2865">存取佇列中第一則或最後一則訊息時會使用 0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2865">0 is used when accessing the first or last message in the queue.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-2866">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2866">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2867">在 MSMQ 3.0 中介紹。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2867">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="dc7c4-2868">使用指定的交易內容接收佇列中的特定訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2868">Receives a specific message from the queue, using the specified transaction context.</span></span> <span data-ttu-id="dc7c4-2869">訊息可以由查閱識別項指定，或由訊息在佇列前面或結尾的位置來指定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2869">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
        <returns><span data-ttu-id="dc7c4-2870">傳入之 <paramref name="action" /> 和 <paramref name="lookupId" /> 參數所指定的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2870">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2871">使用這個方法來讀取已知的查詢識別項的訊息，並將它移除從佇列中，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2871">Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="dc7c4-2872">這個方法會擲回例外狀況立即訊息是否不在佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2872">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2873"><xref:System.Messaging.Message.LookupId%2A>訊息屬性是唯一的佇列訊息所在的位置，因此會有最多一個訊息在佇列中符合指定`lookupId`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2873">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2874">若要讀取具有指定識別碼的訊息，而不從佇列中移除，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2874">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span> <span data-ttu-id="dc7c4-2875">相關聯的呼叫所傳回的訊息沒有交易內容<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2875">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>.</span></span> <span data-ttu-id="dc7c4-2876">因為<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>不會的移除任何訊息從佇列，就是不會回復交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2876">Because <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="dc7c4-2877">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來接收訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2877">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="dc7c4-2878">指定`Single`如果您想要接收的訊息視為單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2878">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-2879">您可以指定`None`如果您想要從交易內容外的異動式佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2879">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="dc7c4-2880">如果這個方法呼叫從異動式佇列接收訊息時，所收到的訊息會傳回至佇列，如果交易已中止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2880">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="dc7c4-2881">訊息不會永久移除從佇列上，直到交易認可為止。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2881">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="dc7c4-2882">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2882">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2883">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2883">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2884">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2884">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2885">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2885">Local computer</span></span>|<span data-ttu-id="dc7c4-2886">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2886">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2887">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2887">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2888">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2888">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2889">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2889">Remote computer</span></span>|<span data-ttu-id="dc7c4-2890">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2890">No</span></span>|  
|<span data-ttu-id="dc7c4-2891">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2891">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2892">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2892">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="dc7c4-2893">未安裝 MSMQ 3.0。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2893">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc7c4-2894">找不到具有指定 <paramref name="lookupId" /> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2894">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2895">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2895">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-2896"><paramref name="action" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageLookupAction" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2896">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span></span>  
  
<span data-ttu-id="dc7c4-2897">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2897">-or-</span></span> 
<span data-ttu-id="dc7c4-2898"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2898">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveCompleted">
      <MemberSignature Language="C#" Value="public event System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReceiveCompleted As ReceiveCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Messaging::ReceiveCompletedEventHandler ^ ReceiveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ReceiveCompleted : System.Messaging.ReceiveCompletedEventHandler " Usage="member this.ReceiveCompleted : System.Messaging.ReceiveCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_ReceiveCompleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.ReceiveCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-2899">發生於從佇列移除訊息時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2899">Occurs when a message has been removed from the queue.</span></span> <span data-ttu-id="dc7c4-2900">這個事件是由非同步作業 <see cref="M:System.Messaging.MessageQueue.BeginReceive" /> 所引發。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2900">This event is raised by the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginReceive" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2901"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 在非同步處理用來引發<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件佇列中出現一則訊息時。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2901"><xref:System.Messaging.MessageQueue.BeginReceive%2A> is used in asynchronous processing to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message is available in the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2902"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 用來完成的呼叫所起始的作業<xref:System.Messaging.MessageQueue.BeginReceive%2A>和窺視訊息時<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2902"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is used to complete the operation initiated by a call to <xref:System.Messaging.MessageQueue.BeginReceive%2A> and peek the message when the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised.</span></span>  
  
 <span data-ttu-id="dc7c4-2903">建立 <xref:System.Messaging.ReceiveCompletedEventHandler> 委派時，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2903">When you create a <xref:System.Messaging.ReceiveCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="dc7c4-2904">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2904">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="dc7c4-2905">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2905">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="dc7c4-2906">如需有關事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2906">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2907">下列程式碼範例會建立名為事件處理常式`MyReceiveCompleted`，將它附加至<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件處理常式的委派，以及呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A>來起始非同步接收作業是在路徑上找到的佇列上 」。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2907">The following code example creates an event handler named `MyReceiveCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginReceive%2A> to initiate an asynchronous receive operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="dc7c4-2908">當<xref:System.Messaging.MessageQueue.ReceiveCompleted>就會引發事件，此範例接收訊息，並將其主體寫入螢幕。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2908">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the example receives the message and writes its body to the screen.</span></span> <span data-ttu-id="dc7c4-2909">此範例接著會呼叫<xref:System.Messaging.MessageQueue.BeginReceive%2A> 以起始新的非同步接收作業。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2909">The example then calls <xref:System.Messaging.MessageQueue.BeginReceive%2A> again to initiate a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="messageQueue.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-2910">重新整理由 <see cref="T:System.Messaging.MessageQueue" /> 所表示的屬性，以反映資源的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2910">Refreshes the properties presented by the <see cref="T:System.Messaging.MessageQueue" /> to reflect the current state of the resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2911"><xref:System.Messaging.MessageQueue.Refresh%2A> 同步處理的屬性<xref:System.Messaging.MessageQueue>與其相關聯的訊息佇列伺服器資源。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2911"><xref:System.Messaging.MessageQueue.Refresh%2A> synchronizes the properties of a <xref:System.Messaging.MessageQueue> with its associated Message Queuing server resource.</span></span> <span data-ttu-id="dc7c4-2912">如果任何屬性，例如<xref:System.Messaging.MessageQueue.Label%2A>或<xref:System.Messaging.MessageQueue.Category%2A>，以來已變更伺服器上<xref:System.Messaging.MessageQueue>建立<xref:System.Messaging.MessageQueue.Refresh%2A>更新<xref:System.Messaging.MessageQueue>以新的資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2912">If any property, such as <xref:System.Messaging.MessageQueue.Label%2A> or <xref:System.Messaging.MessageQueue.Category%2A>, has changed on the server since the time the <xref:System.Messaging.MessageQueue> was created, <xref:System.Messaging.MessageQueue.Refresh%2A> updates the <xref:System.Messaging.MessageQueue> with the new information.</span></span>  
  
 <span data-ttu-id="dc7c4-2913">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2913">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2914">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2914">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2915">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2915">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2916">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2916">Local computer</span></span>|<span data-ttu-id="dc7c4-2917">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2917">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2918">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2918">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2919">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2919">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2920">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2920">Remote computer</span></span>|<span data-ttu-id="dc7c4-2921">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2921">No</span></span>|  
|<span data-ttu-id="dc7c4-2922">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2922">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2923">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2923">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2924">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Refresh%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2924">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Refresh%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#28](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#28)]
 [!code-csharp[MessageQueue2#28](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      </Docs>
    </Member>
    <Member MemberName="ResetPermissions">
      <MemberSignature Language="C#" Value="public void ResetPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ResetPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPermissions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPermissions();" />
      <MemberSignature Language="F#" Value="member this.ResetPermissions : unit -&gt; unit" Usage="messageQueue.ResetPermissions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc7c4-2925">將使用權限清單重設為作業系統的預設值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2925">Resets the permission list to the operating system's default values.</span></span> <span data-ttu-id="dc7c4-2926">移除任何附加至預設清單的佇列使用權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2926">Removes any queue permissions you have appended to the default list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2927">當您呼叫<xref:System.Messaging.MessageQueue.ResetPermissions%2A>，您為其預設值傳回的權限清單。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2927">When you call <xref:System.Messaging.MessageQueue.ResetPermissions%2A>, you return the permission list to its default values.</span></span> <span data-ttu-id="dc7c4-2928">一般而言，這所有的權限，授與佇列建立者，並提供每個使用者的群組的下列權限：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2928">Generally, this grants the queue creator all permissions, and gives the group Everyone the following rights:</span></span>  
  
-   <span data-ttu-id="dc7c4-2929">取得佇列的屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2929">Get the properties of the queue.</span></span>  
  
-   <span data-ttu-id="dc7c4-2930">取得佇列的權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2930">Get queue permissions.</span></span>  
  
-   <span data-ttu-id="dc7c4-2931">寫入至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2931">Write to the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-2932">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2932">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2933">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2933">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2934">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2934">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2935">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2935">Local computer</span></span>|<span data-ttu-id="dc7c4-2936">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2936">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2937">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2937">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2938">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2938">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2939">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2939">Remote computer</span></span>|<span data-ttu-id="dc7c4-2940">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2940">No</span></span>|  
|<span data-ttu-id="dc7c4-2941">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2941">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2942">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2942">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2943">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.ResetPermissions%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2943">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ResetPermissions%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#27](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#27)]
 [!code-csharp[MessageQueue2#27](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2944">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2944">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-2945">將物件傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2945">Sends an object to a queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Send : obj -&gt; unit" Usage="messageQueue.Send obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="dc7c4-2946">要傳送至佇列的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2946">The object to send to the queue.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2947">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的非交易佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2947">Sends an object to non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2948">若要傳送訊息，其中包含使用此多載`obj`參數所參考的佇列<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2948">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="dc7c4-2949">傳送至佇列的物件可以是<xref:System.Messaging.Message>或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2949">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="dc7c4-2950">如果您傳送任何物件，而非<xref:System.Messaging.Message>，物件會序列化，並插入訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2950">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="dc7c4-2951">如果您使用這個多載，來將訊息傳送至異動式佇列，訊息會傳送至無法投遞的信件佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2951">If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</span></span> <span data-ttu-id="dc7c4-2952">如果您想要包含其他訊息交易的一部分的訊息時，使用多載會採用<xref:System.Messaging.MessageQueueTransaction>或<xref:System.Messaging.MessageQueueTransactionType>做為參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2952">If you want the message to be part of a transaction that contains other messages, use an overload that takes a <xref:System.Messaging.MessageQueueTransaction> or <xref:System.Messaging.MessageQueueTransactionType> as a parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-2953">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2953">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="dc7c4-2954"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外的其他<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2954">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="dc7c4-2955">如果您指定，例如，標籤或優先順序，使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2955">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="dc7c4-2956">傳送時<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和 「 訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2956">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="dc7c4-2957">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2957">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2958">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2958">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2959">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2959">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2960">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2960">Local computer</span></span>|<span data-ttu-id="dc7c4-2961">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2961">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2962">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2962">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2963">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2963">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2964">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2964">Remote computer</span></span>|<span data-ttu-id="dc7c4-2965">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2965">No</span></span>|  
|<span data-ttu-id="dc7c4-2966">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2966">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2967">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2967">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2968">下列程式碼範例會連線到訊息佇列，並將訊息傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2968">The following code example connects to a message queue and sends a message to the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Send_obj#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Send_obj/CPP/mqsend_generic.cpp#1)]
 [!code-csharp[MessageQueue.Send_obj#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Send_obj/CS/mqsend_generic.cs#1)]
 [!code-vb[MessageQueue.Send_obj#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Send_obj/VB/mqsend_generic.vb#1)]  
  
 <span data-ttu-id="dc7c4-2969">下列程式碼範例會將傳送應用程式定義`Order`類別至佇列，並接著從佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2969">The following code example sends an application-defined `Order` class to a queue and then receives a message from that queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-2970"><see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2970">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="dc7c4-2971">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2971">-or-</span></span> 
<span data-ttu-id="dc7c4-2972">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2972">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, transaction As MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * System.Messaging.MessageQueueTransaction -&gt; unit" Usage="messageQueue.Send (obj, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="dc7c4-2973">要傳送至佇列的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2973">The object to send to the queue.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-2974"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2974">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-2975">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的交易佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2975">Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-2976">若要傳送訊息，其中包含使用此多載`obj`異動式佇列所參考的參數<xref:System.Messaging.MessageQueue>，使用所定義的內部交易內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2976">Use this overload to send a message that contains the `obj` parameter to the transactional queue referenced by the <xref:System.Messaging.MessageQueue>, using an internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="dc7c4-2977">傳送至佇列的物件可以是<xref:System.Messaging.Message>或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2977">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="dc7c4-2978">如果您傳送任何物件，而非<xref:System.Messaging.Message>，物件會序列化，並插入訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2978">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="dc7c4-2979">如果您使用這個多載來傳送訊息至非異動式佇列時，可能到寄不出信件佇列傳送訊息，而不擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2979">If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-2980">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2980">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="dc7c4-2981"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外的其他<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2981">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="dc7c4-2982">如果您指定，例如，標籤或優先順序，使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2982">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="dc7c4-2983">傳送時<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和 「 訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2983">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="dc7c4-2984"><xref:System.Messaging.MessageQueueTransaction> 為執行緒的 apartment 感知，因此，如果您的 apartment 狀態`STA`，您無法使用多個執行緒中的交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2984"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="dc7c4-2985">Visual Basic 會將主執行緒的狀態`STA`，因此您必須套用<xref:System.MTAThreadAttribute>在`Main`副程式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2985">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="dc7c4-2986">否則，使用其他執行緒傳送交易式訊息時，會擲回 <xref:System.Messaging.MessageQueueException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2986">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="dc7c4-2987">您套用<xref:System.MTAThreadAttribute>使用下列的片段。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2987">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="dc7c4-2988">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2988">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-2989">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2989">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-2990">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2990">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-2991">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2991">Local computer</span></span>|<span data-ttu-id="dc7c4-2992">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2992">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2993">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2993">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2994">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2994">Yes</span></span>|  
|<span data-ttu-id="dc7c4-2995">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2995">Remote computer</span></span>|<span data-ttu-id="dc7c4-2996">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2996">No</span></span>|  
|<span data-ttu-id="dc7c4-2997">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2997">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-2998">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2998">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-2999">下列程式碼範例將字串傳送至異動式佇列，然後從該佇列接收訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-2999">The following code example sends a string to a transactional queue and then receives a message from that queue.</span></span>  
  
 [!code-cpp[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/CPP/mqsend_objtransaction.cpp#1)]
 [!code-csharp[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/CS/mqsend_objtransaction.cs#1)]
 [!code-vb[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/VB/mqsend_objtransaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-3000"><paramref name="transaction" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3000">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3001"><see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3001">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="dc7c4-3002">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3002">-or-</span></span> 
<span data-ttu-id="dc7c4-3003">訊息佇列應用程式指出不正確的交易用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3003">The Message Queuing application indicated an incorrect transaction use.</span></span>  
  
<span data-ttu-id="dc7c4-3004">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3004">-or-</span></span> 
<span data-ttu-id="dc7c4-3005">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3005">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, transactionType As MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * System.Messaging.MessageQueueTransactionType -&gt; unit" Usage="messageQueue.Send (obj, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="dc7c4-3006">要傳送至佇列的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3006">The object to send to the queue.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-3007">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3007">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-3008">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3008">Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3009">若要傳送訊息，其中包含使用此多載`obj`參數所參考的佇列<xref:System.Messaging.MessageQueue>，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3009">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="dc7c4-3010">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來傳送訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3010">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</span></span> <span data-ttu-id="dc7c4-3011">指定`Single`如果您想要將訊息傳送單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3011">Specify `Single` if you want to send the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-3012">您可以指定`None`如果您想要傳送交易訊息到非交易式的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3012">You can specify `None` if you want to send a transactional message to a non-transactional thread.</span></span>  
  
 <span data-ttu-id="dc7c4-3013">傳送至佇列的物件可以是<xref:System.Messaging.Message>或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3013">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="dc7c4-3014">如果您傳送任何物件，而非<xref:System.Messaging.Message>，物件會序列化，並插入訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3014">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="dc7c4-3015">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3015">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="dc7c4-3016"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外的其他<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3016">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="dc7c4-3017">如果您指定，例如，標籤或優先順序，使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3017">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="dc7c4-3018">傳送時<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和 「 訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3018">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="dc7c4-3019">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3019">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3020">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3020">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3021">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3021">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3022">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3022">Local computer</span></span>|<span data-ttu-id="dc7c4-3023">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3023">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3024">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3024">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3025">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3025">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3026">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3026">Remote computer</span></span>|<span data-ttu-id="dc7c4-3027">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3027">No</span></span>|  
|<span data-ttu-id="dc7c4-3028">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3028">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3029">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3029">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3030">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3030">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#2)]
 [!code-csharp[MessageQueue2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-3031"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3031">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3032"><see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3032">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="dc7c4-3033">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3033">-or-</span></span> 
<span data-ttu-id="dc7c4-3034">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3034">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * string -&gt; unit" Usage="messageQueue.Send (obj, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="dc7c4-3035">要傳送至佇列的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3035">The object to send to the queue.</span></span></param>
        <param name="label"><span data-ttu-id="dc7c4-3036">訊息的標記。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3036">The label of the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-3037">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的非交易佇列，並指定訊息的標籤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3037">Sends an object to the non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3038">若要傳送訊息，其中包含使用此多載`obj`參數所參考的佇列<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3038">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="dc7c4-3039">您可以使用這個多載中，指定識別訊息的字串標記。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3039">With this overload, you can specify the string label that identifies the message.</span></span> <span data-ttu-id="dc7c4-3040">傳送至佇列的物件可以是<xref:System.Messaging.Message>、 結構、 資料物件或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3040">The object you send to the queue can be a <xref:System.Messaging.Message>, a structure, a data object, or any managed object.</span></span> <span data-ttu-id="dc7c4-3041">如果您傳送任何物件，而非<xref:System.Messaging.Message>，物件會序列化，並插入訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3041">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="dc7c4-3042">訊息標籤是不同於訊息佇列的標籤，但兩者都是應用程式相依，而且不會繼承到訊息佇列的意義。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3042">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="dc7c4-3043">如果您使用這個多載，來將訊息傳送至異動式佇列，訊息會傳送至無法投遞的信件佇列中。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3043">If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</span></span> <span data-ttu-id="dc7c4-3044">如果您想要包含其他訊息交易的一部分的訊息時，使用多載會採用<xref:System.Messaging.MessageQueueTransaction>或<xref:System.Messaging.MessageQueueTransactionType>做為參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3044">If you want the message to be part of a transaction that contains other messages, use an overload that takes a <xref:System.Messaging.MessageQueueTransaction> or <xref:System.Messaging.MessageQueueTransactionType> as a parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-3045"><xref:System.Messaging.MessageQueue.Path%2A>屬性，這個<xref:System.Messaging.MessageQueue>必須指定執行個體，然後再傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3045">The <xref:System.Messaging.MessageQueue.Path%2A> property for this <xref:System.Messaging.MessageQueue> instance must be specified before you send the message.</span></span> <span data-ttu-id="dc7c4-3046">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3046">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="dc7c4-3047"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外的其他<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3047">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="dc7c4-3048">如果您指定，例如，標籤或優先順序，使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3048">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="dc7c4-3049">傳送時<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和 「 訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3049">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="dc7c4-3050">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3050">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3051">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3051">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3052">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3052">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3053">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3053">Local computer</span></span>|<span data-ttu-id="dc7c4-3054">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3054">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3055">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3055">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3056">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3056">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3057">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3057">Remote computer</span></span>|<span data-ttu-id="dc7c4-3058">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3058">No</span></span>|  
|<span data-ttu-id="dc7c4-3059">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3059">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3060">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3060">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3061">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3061">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueue2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-3062"><paramref name="label" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3062">The <paramref name="label" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3063"><see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3063">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="dc7c4-3064">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3064">-or-</span></span> 
<span data-ttu-id="dc7c4-3065">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3065">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String, transaction As MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * string * System.Messaging.MessageQueueTransaction -&gt; unit" Usage="messageQueue.Send (obj, label, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="dc7c4-3066">要傳送至佇列的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3066">The object to send to the queue.</span></span></param>
        <param name="label"><span data-ttu-id="dc7c4-3067">訊息的標記。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3067">The label of the message.</span></span></param>
        <param name="transaction"><span data-ttu-id="dc7c4-3068"><see cref="T:System.Messaging.MessageQueueTransaction" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3068">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="dc7c4-3069">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的交易佇列，並指定訊息的標籤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3069">Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3070">若要傳送訊息，其中包含使用此多載`obj`異動式佇列所參考的參數<xref:System.Messaging.MessageQueue>，使用所定義的內部交易內容`transaction`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3070">Use this overload to send a message that contains the `obj` parameter to the transactional queue referenced by the <xref:System.Messaging.MessageQueue>, using an internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="dc7c4-3071">您可以使用這個多載中，指定識別訊息的字串標記。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3071">With this overload, you can specify the string label that identifies the message.</span></span> <span data-ttu-id="dc7c4-3072">傳送至佇列的物件可以是<xref:System.Messaging.Message>、 結構、 資料物件或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3072">The object you send to the queue can be a <xref:System.Messaging.Message>, a structure, a data object, or any managed object.</span></span> <span data-ttu-id="dc7c4-3073">如果您傳送任何物件，而非<xref:System.Messaging.Message>，物件會序列化，並插入訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3073">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="dc7c4-3074">訊息標籤是不同於訊息佇列的標籤，但兩者都是應用程式相依，而且不會繼承到訊息佇列的意義。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3074">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="dc7c4-3075">如果您使用這個多載來傳送訊息至非異動式佇列時，可能到寄不出信件佇列傳送訊息，而不擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3075">If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-3076">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3076">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="dc7c4-3077"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外的其他<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3077">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="dc7c4-3078">如果您指定，例如，標籤或優先順序，使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3078">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="dc7c4-3079">傳送時<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和 「 訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3079">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property</span></span>  
  
 <span data-ttu-id="dc7c4-3080"><xref:System.Messaging.MessageQueueTransaction> 為執行緒的 apartment 感知，因此，如果您的 apartment 狀態`STA`，您無法使用多個執行緒中的交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3080"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="dc7c4-3081">Visual Basic 會將主執行緒的狀態`STA`，因此您必須套用<xref:System.MTAThreadAttribute>在`Main`副程式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3081">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="dc7c4-3082">否則，使用其他執行緒傳送交易式訊息時，會擲回 <xref:System.Messaging.MessageQueueException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3082">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="dc7c4-3083">您套用<xref:System.MTAThreadAttribute>使用下列的片段。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3083">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="dc7c4-3084">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3084">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3085">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3085">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3086">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3086">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3087">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3087">Local computer</span></span>|<span data-ttu-id="dc7c4-3088">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3088">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3089">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3089">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3090">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3090">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3091">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3091">Remote computer</span></span>|<span data-ttu-id="dc7c4-3092">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3092">No</span></span>|  
|<span data-ttu-id="dc7c4-3093">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3093">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3094">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3094">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3095">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3095">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#4](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#4)]
 [!code-csharp[MessageQueue2#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-3096"><paramref name="label" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3096">The <paramref name="label" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dc7c4-3097">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3097">-or-</span></span> 
<span data-ttu-id="dc7c4-3098"><paramref name="transaction" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3098">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3099"><see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3099">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="dc7c4-3100">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3100">-or-</span></span> 
<span data-ttu-id="dc7c4-3101">訊息佇列應用程式指出不正確的交易使用方式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3101">The Message Queuing application indicated an incorrect transaction usage.</span></span>  
  
<span data-ttu-id="dc7c4-3102">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3102">-or-</span></span> 
<span data-ttu-id="dc7c4-3103">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3103">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String, transactionType As MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * string * System.Messaging.MessageQueueTransactionType -&gt; unit" Usage="messageQueue.Send (obj, label, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="dc7c4-3104">要傳送至佇列的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3104">The object to send to the queue.</span></span></param>
        <param name="label"><span data-ttu-id="dc7c4-3105">訊息的標記。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3105">The label of the message.</span></span></param>
        <param name="transactionType"><span data-ttu-id="dc7c4-3106">其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值，描述要與訊息相關聯的異動內容的類型。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3106">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="dc7c4-3107">將物件傳送至這個 <see cref="T:System.Messaging.MessageQueue" /> 參考的佇列，並指定訊息的標籤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3107">Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3108">若要傳送訊息，其中包含使用此多載`obj`參數所參考的佇列<xref:System.Messaging.MessageQueue>，使用所定義的交易內容`transactionType`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3108">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="dc7c4-3109">指定`Automatic`針對`transactionType`參數，如果已經有外部交易的內容附加至您想要用來傳送訊息的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3109">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</span></span> <span data-ttu-id="dc7c4-3110">指定`Single`如果您想要將訊息傳送單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3110">Specify `Single` if you want to send the message as a single internal transaction.</span></span> <span data-ttu-id="dc7c4-3111">您可以指定`None`如果您想要傳送交易訊息到非交易式的執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3111">You can specify `None` if you want to send a transactional message to a non-transactional thread.</span></span>  
  
 <span data-ttu-id="dc7c4-3112">傳送至佇列的物件可以是<xref:System.Messaging.Message>或任何 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3112">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="dc7c4-3113">如果您傳送任何物件，而非<xref:System.Messaging.Message>，物件會序列化，並插入訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3113">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span> <span data-ttu-id="dc7c4-3114">您可以使用這個多載中，指定識別訊息的字串標記。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3114">With this overload, you can specify the string label that identifies the message.</span></span>  
  
 <span data-ttu-id="dc7c4-3115">訊息標籤是不同於訊息佇列的標籤，但兩者都是應用程式相依，而且不會繼承到訊息佇列的意義。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3115">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="dc7c4-3116">如果您未設定<xref:System.Messaging.MessageQueue.Formatter%2A>屬性，然後再呼叫<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式器預設為<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3116">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="dc7c4-3117"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>屬性會套用至任何物件以外的其他<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3117">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="dc7c4-3118">如果您指定，例如，標籤或優先順序，使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成員，這些值套用到包含的類型不是物件的任何訊息<xref:System.Messaging.Message>當您的應用程式將它傳送至佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3118">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="dc7c4-3119">傳送時<xref:System.Messaging.Message>，屬性值設定為<xref:System.Messaging.Message>優先於<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>，以及的訊息<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>屬性會優先於佇列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3119">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="dc7c4-3120">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3120">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3121">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3121">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3122">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3122">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3123">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3123">Local computer</span></span>|<span data-ttu-id="dc7c4-3124">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3124">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3125">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3125">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3126">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3126">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3127">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3127">Remote computer</span></span>|<span data-ttu-id="dc7c4-3128">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3128">No</span></span>|  
|<span data-ttu-id="dc7c4-3129">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3129">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3130">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3130">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3131">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3131">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#3](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#3)]
 [!code-csharp[MessageQueue2#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc7c4-3132"><paramref name="label" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3132">The <paramref name="label" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueTransaction"><span data-ttu-id="dc7c4-3133">訊息佇列應用程式指出不正確的交易使用方式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3133">The Message Queuing application indicated an incorrect transaction usage.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="dc7c4-3134"><paramref name="transactionType" /> 參數不是其中一個 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3134">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3135"><see cref="P:System.Messaging.MessageQueue.Path" /> 屬性尚未設定。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3135">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="dc7c4-3136">-或-</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3136">-or-</span></span> 
<span data-ttu-id="dc7c4-3137">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3137">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetPermissions">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc7c4-3138">將使用權限加入至目前集合。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3138">Adds permissions to the current set.</span></span> <span data-ttu-id="dc7c4-3139">這控制誰有權限可存取佇列屬性和佇列中的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3139">This controls who has access rights to queue properties and messages in the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Messaging.AccessControlList dacl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(class System.Messaging.AccessControlList dacl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (dacl As AccessControlList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Messaging::AccessControlList ^ dacl);" />
      <MemberSignature Language="F#" Value="member this.SetPermissions : System.Messaging.AccessControlList -&gt; unit" Usage="messageQueue.SetPermissions dacl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dacl" Type="System.Messaging.AccessControlList" />
      </Parameters>
      <Docs>
        <param name="dacl"><span data-ttu-id="dc7c4-3140"><see cref="T:System.Messaging.AccessControlList" />，包含指定信任項和要授與之使用權限的一個或多個存取控制項目。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3140">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and the permissions to grant.</span></span></param>
        <summary><span data-ttu-id="dc7c4-3141">根據存取控制清單的內容指派佇列的存取權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3141">Assigns access rights to the queue based on the contents of an access control list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3142">使用此多載，來授與、 拒絕或撤銷權限，利用集合的存取控制項目來指定信任項和權限資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3142">Use this overload to grant, deny, or revoke rights by using a collection of access control entries to specify trustee and permissions information.</span></span> <span data-ttu-id="dc7c4-3143">這使用，比方說，至多個使用者授與權限，在相同的時間。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3143">This is used, for example, to grant permissions to multiple users at the same time.</span></span>  
  
 <span data-ttu-id="dc7c4-3144">當您建構指定信任項`ace`參數可以是個別使用者、 使用者、 群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3144">The trustee you specify when you construct the `ace` parameter can be an individual user, a group of users, or a computer.</span></span> <span data-ttu-id="dc7c4-3145">如果信任項是選用的個人，使用格式`DOMAIN` \\ `user`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3145">If the trustee is an individual, use the format `DOMAIN`\\`user`.</span></span> <span data-ttu-id="dc7c4-3146">您可以指定"。"表示本機電腦信任項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3146">You can specify "." for the trustee to indicate the local computer.</span></span>  
  
 <span data-ttu-id="dc7c4-3147">透過您指派的權限<xref:System.Messaging.MessageQueue.SetPermissions%2A>新增到現有清單的權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3147">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="dc7c4-3148">根據預設，公用或私用佇列的建立者擁有完整控制權，而每個人都有取得佇列屬性，取得權限，並寫入至佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3148">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="dc7c4-3149">當您呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>，使用者和權限的資訊會附加到現有清單的底部。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3149">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="dc7c4-3150">系統會檢查每個<xref:System.Messaging.AccessControlEntry>順序，直到發生以下事件之一為止：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3150">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="dc7c4-3151">拒絕存取時<xref:System.Messaging.AccessControlEntry>明確拒絕任何要求的存取權限，其中一個執行緒的存取權杖中所列的信任項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3151">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="dc7c4-3152">一或多個允許存取的<xref:System.Messaging.AccessControlEntry>明確列出的執行緒存取權杖中的信任者授與所有要求的存取權限的項目。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3152">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="dc7c4-3153">所有<xref:System.Messaging.AccessControlEntry>已檢查的項目，而且沒有仍在至少一個要求存取權限，不明確允許，在此情況下，會隱含拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3153">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="dc7c4-3154">當您建構`dacl`新增參數<xref:System.Messaging.AccessControlEntry>執行個體您<xref:System.Messaging.AccessControlList>集合。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3154">When you construct the `dacl` parameter, you add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="dc7c4-3155">當您建構每個存取控制項目時，您可以指定一般或標準存取權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3155">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="dc7c4-3156">佇列的權限可以是下列任何組合：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3156">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="dc7c4-3157">刪除</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3157">Delete</span></span>  
  
-   <span data-ttu-id="dc7c4-3158">讀取安全性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3158">Read Security</span></span>  
  
-   <span data-ttu-id="dc7c4-3159">寫入安全性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3159">Write Security</span></span>  
  
-   <span data-ttu-id="dc7c4-3160">同步處理</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3160">Synchronize</span></span>  
  
-   <span data-ttu-id="dc7c4-3161">修改擁有者</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3161">Modify Owner</span></span>  
  
-   <span data-ttu-id="dc7c4-3162">讀取</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3162">Read</span></span>  
  
-   <span data-ttu-id="dc7c4-3163">Write</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3163">Write</span></span>  
  
-   <span data-ttu-id="dc7c4-3164">執行</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3164">Execute</span></span>  
  
-   <span data-ttu-id="dc7c4-3165">必要</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3165">Required</span></span>  
  
-   <span data-ttu-id="dc7c4-3166">全部</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3166">All</span></span>  
  
-   <span data-ttu-id="dc7c4-3167">無</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3167">None</span></span>  
  
 <span data-ttu-id="dc7c4-3168">這些權限，您可以使用位元 OR 運算子來結合的位元旗標的一組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3168">These rights are a set of bit flags that you can combine using the OR bitwise operator.</span></span>  
  
-   <span data-ttu-id="dc7c4-3169">完全控制</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3169">Full Control</span></span>  
  
-   <span data-ttu-id="dc7c4-3170">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3170">Delete Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3171">接收訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3171">Receive Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3172">查看訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3172">Peek Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3173">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3173">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3174">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3174">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="dc7c4-3175">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3175">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="dc7c4-3176">取得權限</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3176">Get Permissions</span></span>  
  
-   <span data-ttu-id="dc7c4-3177">設定權限</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3177">Set Permissions</span></span>  
  
-   <span data-ttu-id="dc7c4-3178">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3178">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="dc7c4-3179">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3179">Write Message</span></span>  
  
 <span data-ttu-id="dc7c4-3180">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3180">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3181">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3181">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3182">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3182">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3183">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3183">Local computer</span></span>|<span data-ttu-id="dc7c4-3184">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3184">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3185">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3185">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3186">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3186">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3187">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3187">Remote computer</span></span>|<span data-ttu-id="dc7c4-3188">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3188">No</span></span>|  
|<span data-ttu-id="dc7c4-3189">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3189">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3190">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3190">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3191">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3191">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29>.</span></span>      
  
 [!code-cpp[MessageQueue2#26](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#26)]
 [!code-csharp[MessageQueue2#26](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3192">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3192">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.AccessControlList" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Messaging.MessageQueueAccessControlEntry ace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(class System.Messaging.MessageQueueAccessControlEntry ace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (ace As MessageQueueAccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Messaging::MessageQueueAccessControlEntry ^ ace);" />
      <MemberSignature Language="F#" Value="member this.SetPermissions : System.Messaging.MessageQueueAccessControlEntry -&gt; unit" Usage="messageQueue.SetPermissions ace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ace" Type="System.Messaging.MessageQueueAccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="ace"><span data-ttu-id="dc7c4-3193">指定使用者、存取類型和使用權限類型的 <see cref="T:System.Messaging.MessageQueueAccessControlEntry" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3193">A <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> that specifies a user, an access type, and a permission type.</span></span></param>
        <summary><span data-ttu-id="dc7c4-3194">根據存取控制項目的內容指派佇列的存取權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3194">Assigns access rights to the queue based on the contents of an access control entry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3195">您可以使用這個多載來授與、 拒絕或撤銷權限，所使用的存取控制項目來指定信任項和權限資訊。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3195">Use this overload to grant, deny, or revoke rights by using an access control entry to specify trustee and rights information.</span></span>  
  
 <span data-ttu-id="dc7c4-3196">當您建構指定信任項`ace`參數可以是個別使用者、 使用者、 群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3196">The trustee you specify when you construct the `ace` parameter can be an individual user, a group of users, or a computer.</span></span> <span data-ttu-id="dc7c4-3197">如果信任項是選用的個人，使用格式`DOMAIN` \\ `user`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3197">If the trustee is an individual, use the format `DOMAIN`\\`user`.</span></span> <span data-ttu-id="dc7c4-3198">您可以指定"。"表示本機電腦信任項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3198">You can specify "." for the trustee to indicate the local computer.</span></span>  
  
 <span data-ttu-id="dc7c4-3199">透過您指派的權限<xref:System.Messaging.MessageQueue.SetPermissions%2A>新增到現有清單的權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3199">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="dc7c4-3200">根據預設，公用或私用佇列的建立者擁有完整控制權，而每個人都有取得佇列屬性，取得權限，並寫入至佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3200">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="dc7c4-3201">當您呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>，使用者和權限的資訊會附加到現有清單的底部。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3201">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="dc7c4-3202">系統會檢查每個<xref:System.Messaging.AccessControlEntry>順序，直到發生以下事件之一為止：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3202">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="dc7c4-3203">拒絕存取時<xref:System.Messaging.AccessControlEntry>明確拒絕任何要求的存取權限，其中一個執行緒的存取權杖中所列的信任項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3203">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="dc7c4-3204">一或多個允許存取的<xref:System.Messaging.AccessControlEntry>明確列出的執行緒存取權杖中的信任者授與所有要求的存取權限的項目。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3204">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="dc7c4-3205">所有<xref:System.Messaging.AccessControlEntry>已檢查的項目，而且沒有仍在至少一個要求存取權限，不明確允許，在此情況下，會隱含拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3205">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="dc7c4-3206">佇列中，您在中指定的權限`rights`參數，在建構時您<xref:System.Messaging.MessageQueueAccessControlEntry>，可以是下列的任何組合：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3206">The rights to a queue, which you specify in the `rights` parameter when you construct your <xref:System.Messaging.MessageQueueAccessControlEntry>, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="dc7c4-3207">完全控制</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3207">Full Control</span></span>  
  
-   <span data-ttu-id="dc7c4-3208">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3208">Delete Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3209">接收訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3209">Receive Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3210">查看訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3210">Peek Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3211">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3211">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3212">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3212">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="dc7c4-3213">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3213">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="dc7c4-3214">取得權限</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3214">Get Permissions</span></span>  
  
-   <span data-ttu-id="dc7c4-3215">設定權限</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3215">Set Permissions</span></span>  
  
-   <span data-ttu-id="dc7c4-3216">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3216">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="dc7c4-3217">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3217">Write Message</span></span>  
  
 <span data-ttu-id="dc7c4-3218">`rights`您在建構函式中指定的參數`ace`參數是旗標為<xref:System.Messaging.MessageQueueAccessRights>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3218">The `rights` parameter you specify in the constructor for the `ace` parameter is a flag of the <xref:System.Messaging.MessageQueueAccessRights> enumeration.</span></span> <span data-ttu-id="dc7c4-3219">它代表一組您可以結合使用位元運算子的位元旗標或當您建置`rights`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3219">It represents a set of bit flags that you can combine using the bitwise operator OR when you build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-3220">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3220">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3221">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3221">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3222">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3222">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3223">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3223">Local computer</span></span>|<span data-ttu-id="dc7c4-3224">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3224">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3225">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3225">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3226">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3226">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3227">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3227">Remote computer</span></span>|<span data-ttu-id="dc7c4-3228">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3228">No</span></span>|  
|<span data-ttu-id="dc7c4-3229">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3229">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3230">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3230">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3231">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3231">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#24](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#24)]
 [!code-csharp[MessageQueue2#24](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3232">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3232">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
        <altmember cref="T:System.Messaging.MessageQueueAccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(string user, valuetype System.Messaging.MessageQueueAccessRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (user As String, rights As MessageQueueAccessRights)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::String ^ user, System::Messaging::MessageQueueAccessRights rights);" />
      <MemberSignature Language="F#" Value="member this.SetPermissions : string * System.Messaging.MessageQueueAccessRights -&gt; unit" Usage="messageQueue.SetPermissions (user, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="rights" Type="System.Messaging.MessageQueueAccessRights" />
      </Parameters>
      <Docs>
        <param name="user"><span data-ttu-id="dc7c4-3233">取得其他佇列權限的個人、群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3233">The individual, group, or computer that gets additional rights to the queue.</span></span></param>
        <param name="rights"><span data-ttu-id="dc7c4-3234"><see cref="T:System.Messaging.MessageQueueAccessRights" />，指出訊息佇列指派給 <paramref name="user" /> 傳入之佇列的一組權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3234">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in.</span></span></param>
        <summary><span data-ttu-id="dc7c4-3235">為電腦、群組或使用者提供指定的存取權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3235">Gives a computer, group, or user the specified access rights.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3236">若要授與指定的權限給個別使用者使用此多載。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3236">Use this overload to grant specified rights to an individual user.</span></span> <span data-ttu-id="dc7c4-3237">使用者可以是任何有效的信任者，包括個別使用者、 使用者、 群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3237">The user can be any valid trustee, which includes individual users, groups of users, or a computer.</span></span> <span data-ttu-id="dc7c4-3238">如果使用者是選用的個人，使用格式`DOMAIN` \\ `user`如`user`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3238">If the user is an individual, use the format `DOMAIN`\\`user` for the `user` parameter.</span></span> <span data-ttu-id="dc7c4-3239">您可以指定"。"的`user`參數來指出在本機電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3239">You can specify "." for the `user` parameter to indicate the local computer.</span></span>  
  
 <span data-ttu-id="dc7c4-3240">透過您指派的權限<xref:System.Messaging.MessageQueue.SetPermissions%2A>新增到現有清單的權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3240">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="dc7c4-3241">根據預設，公用或私用佇列的建立者擁有完整控制權，而每個人都有取得佇列屬性，取得權限，並寫入至佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3241">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="dc7c4-3242">當您呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>，使用者和權限的資訊會附加到現有清單的底部。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3242">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="dc7c4-3243">系統會檢查每個<xref:System.Messaging.AccessControlEntry>順序，直到發生以下事件之一為止：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3243">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="dc7c4-3244">拒絕存取時<xref:System.Messaging.AccessControlEntry>明確拒絕任何要求的存取權限，其中一個執行緒的存取權杖中所列的信任項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3244">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="dc7c4-3245">一或多個允許存取的<xref:System.Messaging.AccessControlEntry>明確列出的執行緒存取權杖中的信任者授與所有要求的存取權限的項目。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3245">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="dc7c4-3246">所有<xref:System.Messaging.AccessControlEntry>已檢查的項目，而且沒有仍在至少一個要求存取權限，不明確允許，在此情況下，會隱含拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3246">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="dc7c4-3247">中指定佇列的權限`rights`參數，可以是下列任何組合：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3247">The rights to a queue, specified in the `rights` parameter, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="dc7c4-3248">完全控制</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3248">Full Control</span></span>  
  
-   <span data-ttu-id="dc7c4-3249">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3249">Delete Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3250">接收訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3250">Receive Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3251">查看訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3251">Peek Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3252">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3252">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3253">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3253">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="dc7c4-3254">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3254">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="dc7c4-3255">取得權限</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3255">Get Permissions</span></span>  
  
-   <span data-ttu-id="dc7c4-3256">設定權限</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3256">Set Permissions</span></span>  
  
-   <span data-ttu-id="dc7c4-3257">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3257">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="dc7c4-3258">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3258">Write Message</span></span>  
  
 <span data-ttu-id="dc7c4-3259"><xref:System.Messaging.MessageQueueAccessRights>列舉型別代表一組您可以使用位元運算子來結合的位元旗標，或建置`rights`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3259">The <xref:System.Messaging.MessageQueueAccessRights> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-3260">使用這個多載中，您可以只授與權限;您無法撤銷或拒絕它們。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3260">With this overload, you can only grant permissions; you cannot revoke or deny them.</span></span> <span data-ttu-id="dc7c4-3261">您必須明確授與任何使用不同的多載<xref:System.Messaging.AccessControlEntryType>以外的其他`Allow`。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3261">You must use a different overload to explicitly grant any <xref:System.Messaging.AccessControlEntryType> other than `Allow`.</span></span>  
  
 <span data-ttu-id="dc7c4-3262">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3262">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3263">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3263">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3264">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3264">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3265">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3265">Local computer</span></span>|<span data-ttu-id="dc7c4-3266">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3266">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3267">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3267">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3268">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3268">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3269">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3269">Remote computer</span></span>|<span data-ttu-id="dc7c4-3270">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3270">No</span></span>|  
|<span data-ttu-id="dc7c4-3271">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3271">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3272">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3272">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3273">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3273">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#23](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#23)]
 [!code-csharp[MessageQueue2#23](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc7c4-3274"><paramref name="user" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3274">The <paramref name="user" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3275">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3275">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(string user, valuetype System.Messaging.MessageQueueAccessRights rights, valuetype System.Messaging.AccessControlEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (user As String, rights As MessageQueueAccessRights, entryType As AccessControlEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::String ^ user, System::Messaging::MessageQueueAccessRights rights, System::Messaging::AccessControlEntryType entryType);" />
      <MemberSignature Language="F#" Value="member this.SetPermissions : string * System.Messaging.MessageQueueAccessRights * System.Messaging.AccessControlEntryType -&gt; unit" Usage="messageQueue.SetPermissions (user, rights, entryType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="rights" Type="System.Messaging.MessageQueueAccessRights" />
        <Parameter Name="entryType" Type="System.Messaging.AccessControlEntryType" />
      </Parameters>
      <Docs>
        <param name="user"><span data-ttu-id="dc7c4-3276">取得其他佇列權限的個人、群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3276">The individual, group, or computer that gets additional rights to the queue.</span></span></param>
        <param name="rights"><span data-ttu-id="dc7c4-3277"><see cref="T:System.Messaging.MessageQueueAccessRights" />，指出訊息佇列指派給 <paramref name="user" /> 傳入之佇列的一組權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3277">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in.</span></span></param>
        <param name="entryType"><span data-ttu-id="dc7c4-3278"><see cref="T:System.Messaging.AccessControlEntryType" />，指定要授與、拒絕或是撤銷 <paramref name="rights" /> 參數所指定的使用權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3278">A <see cref="T:System.Messaging.AccessControlEntryType" /> that specifies whether to grant, deny, or revoke the permissions specified by the <paramref name="rights" /> parameter.</span></span></param>
        <summary><span data-ttu-id="dc7c4-3279">以指定的存取控制類型 (允許、拒絕、撤銷或設定)，為電腦、群組或使用者提供指定的存取權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3279">Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3280">您可以使用這個多載來授與、 拒絕或撤銷指定的權限，為個別使用者。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3280">Use this overload to grant, deny, or revoke specified rights for an individual user.</span></span> <span data-ttu-id="dc7c4-3281">使用者可以是任何有效的信任者，包括個別使用者、 使用者、 群組或電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3281">The user can be any valid trustee, which includes individual users, groups of users, or a computer.</span></span> <span data-ttu-id="dc7c4-3282">如果使用者是選用的個人，使用格式`DOMAIN` \\ `user`如`user`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3282">If the user is an individual, use the format `DOMAIN`\\`user` for the `user` parameter.</span></span> <span data-ttu-id="dc7c4-3283">您可以指定"。"的`user`參數來指出在本機電腦。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3283">You can specify "." for the `user` parameter to indicate the local computer.</span></span>  
  
 <span data-ttu-id="dc7c4-3284">透過您指派的權限<xref:System.Messaging.MessageQueue.SetPermissions%2A>新增到現有清單的權限。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3284">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="dc7c4-3285">根據預設，公用或私用佇列的建立者擁有完整控制權，而每個人都有取得佇列屬性，取得權限，並寫入至佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3285">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="dc7c4-3286">當您呼叫<xref:System.Messaging.MessageQueue.SetPermissions%2A>，使用者和權限的資訊會附加到現有清單的底部。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3286">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="dc7c4-3287">系統會檢查每個<xref:System.Messaging.AccessControlEntry>順序，直到發生以下事件之一為止：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3287">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="dc7c4-3288">拒絕存取時<xref:System.Messaging.AccessControlEntry>明確拒絕任何要求的存取權限，其中一個執行緒的存取權杖中所列的信任項。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3288">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="dc7c4-3289">一或多個允許存取的<xref:System.Messaging.AccessControlEntry>明確列出的執行緒存取權杖中的信任者授與所有要求的存取權限的項目。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3289">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="dc7c4-3290">所有<xref:System.Messaging.AccessControlEntry>已檢查的項目，而且沒有仍在至少一個要求存取權限，不明確允許，在此情況下，會隱含拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3290">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="dc7c4-3291">中指定佇列的權限`rights`參數，可以是下列任何組合：</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3291">The rights to a queue, specified in the `rights` parameter, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="dc7c4-3292">完全控制</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3292">Full Control</span></span>  
  
-   <span data-ttu-id="dc7c4-3293">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3293">Delete Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3294">接收訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3294">Receive Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3295">查看訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3295">Peek Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3296">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3296">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="dc7c4-3297">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3297">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="dc7c4-3298">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3298">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="dc7c4-3299">取得權限</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3299">Get Permissions</span></span>  
  
-   <span data-ttu-id="dc7c4-3300">設定權限</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3300">Set Permissions</span></span>  
  
-   <span data-ttu-id="dc7c4-3301">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3301">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="dc7c4-3302">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3302">Write Message</span></span>  
  
 <span data-ttu-id="dc7c4-3303"><xref:System.Messaging.MessageQueueAccessRights>列舉型別代表一組您可以使用位元運算子來結合的位元旗標，或建置`rights`參數。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3303">The <xref:System.Messaging.MessageQueueAccessRights> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="dc7c4-3304">下表顯示這個方法是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3304">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3305">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3305">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3306">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3306">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3307">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3307">Local computer</span></span>|<span data-ttu-id="dc7c4-3308">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3308">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3309">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3309">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3310">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3310">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3311">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3311">Remote computer</span></span>|<span data-ttu-id="dc7c4-3312">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3312">No</span></span>|  
|<span data-ttu-id="dc7c4-3313">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3313">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3314">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3314">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3315">下列程式碼範例示範 <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3315">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#25](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#25)]
 [!code-csharp[MessageQueue2#25](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3316">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3316">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
        <altmember cref="T:System.Messaging.AccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Messaging.MessageQueue.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-3317">取得或設定封送處理從 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 或 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件產生之事件處理常式呼叫的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3317">Gets or sets the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span></span></summary>
        <value><span data-ttu-id="dc7c4-3318"><see cref="T:System.ComponentModel.ISynchronizeInvoke" />，表示封送處理 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 或 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件產生之事件處理常式呼叫的物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3318">A <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, which represents the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span></span> <span data-ttu-id="dc7c4-3319">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3319">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3320">A<xref:System.Messaging.MessageQueue.ReceiveCompleted>或是<xref:System.Messaging.MessageQueue.PeekCompleted>事件產生<xref:System.Messaging.MessageQueue.BeginReceive%2A>或<xref:System.Messaging.MessageQueue.BeginPeek%2A>要求，分別在特定執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3320">A <xref:System.Messaging.MessageQueue.ReceiveCompleted> or <xref:System.Messaging.MessageQueue.PeekCompleted> event results from a <xref:System.Messaging.MessageQueue.BeginReceive%2A> or <xref:System.Messaging.MessageQueue.BeginPeek%2A> request, respectively, to a specific thread.</span></span> <span data-ttu-id="dc7c4-3321">一般而言，<xref:System.Messaging.MessageQueue.SynchronizingObject%2A>設定時其相關的元件放置在控制項或表單，因為這些元件會繫結至特定執行緒。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3321">Typically, the <xref:System.Messaging.MessageQueue.SynchronizingObject%2A> is set when its related component is placed inside a control or a form, because those components are bound to a specific thread.</span></span>  
  
 <span data-ttu-id="dc7c4-3322">通常，同步處理物件封送處理成單一執行緒的方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3322">Typically, the synchronizing object marshals a method call into a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool" Usage="System.Messaging.MessageQueue.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Transactional")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-3323">取得值，指出佇列是否只接受交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3323">Gets a value that indicates whether the queue accepts only transactions.</span></span></summary>
        <value><span data-ttu-id="dc7c4-3324">如果佇列只接收做為交易一部分傳送的訊息則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3324"><see langword="true" /> if the queue accepts only messages sent as part of a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3325">交易式訊息指的是數個相關訊息的結合程度，到單一交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3325">Transactional messaging refers to the coupling of several related messages into a single transaction.</span></span> <span data-ttu-id="dc7c4-3326">傳送訊息，因為交易的一部分可確保訊息傳送以順序，只傳遞一次，並已順利擷取從目的地佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3326">Sending messages as part of a transaction ensures that the messages are delivered in order, delivered only once, and successfully retrieved from their destination queue.</span></span>  
  
 <span data-ttu-id="dc7c4-3327">如果佇列是交易式，它會接受交易的一部分傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3327">If a queue is transactional, it accepts only messages that are sent as part of a transaction.</span></span> <span data-ttu-id="dc7c4-3328">不過，可傳送或接收到從本機交易式佇列，而不使用明確交易式的非交易式訊息<xref:System.Messaging.MessageQueueTransaction.Begin%2A>， <xref:System.Messaging.MessageQueueTransaction.Commit%2A>，和<xref:System.Messaging.MessageQueueTransaction.Abort%2A>語法。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3328">However, a non-transactional message can be sent or received from a local transaction queue without explicitly using transactional <xref:System.Messaging.MessageQueueTransaction.Begin%2A>, <xref:System.Messaging.MessageQueueTransaction.Commit%2A>, and <xref:System.Messaging.MessageQueueTransaction.Abort%2A> syntax.</span></span> <span data-ttu-id="dc7c4-3329">如果非交易式訊息傳送至異動式佇列，此元件建立單一訊息的交易，除非在參考佇列，以在遠端電腦上使用直接格式名稱的情況下。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3329">If a non-transactional message is sent to a transactional queue, this component creates a single-message transaction for it, except in the case of referencing a queue on a remote computer using a direct format name.</span></span> <span data-ttu-id="dc7c4-3330">在此情況下，如果傳送訊息時，您不會指定在交易內容，其中不會為您建立和訊息會傳送到寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3330">In this situation, if you do not specify a transaction context when sending a message, one is not created for you and the message will be sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="dc7c4-3331">如果您將非交易式訊息傳送至異動式佇列時，您將無法回復發生例外狀況訊息。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3331">If you send a non-transactional message to a transactional queue, you will not be able to roll back the message in the event of an exception.</span></span>  
  
 <span data-ttu-id="dc7c4-3332"><xref:System.Messaging.MessageQueueTransaction> 為執行緒的 apartment 感知，因此，如果您的 apartment 狀態`STA`，您無法使用多個執行緒中的交易。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3332"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="dc7c4-3333">Visual Basic 會將主執行緒的狀態`STA`，因此您必須套用<xref:System.MTAThreadAttribute>在`Main`副程式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3333">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="dc7c4-3334">否則，使用其他執行緒傳送交易式訊息時，會擲回 <xref:System.Messaging.MessageQueueException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3334">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="dc7c4-3335">您套用<xref:System.MTAThreadAttribute>使用下列的片段。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3335">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="dc7c4-3336">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3336">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3337">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3337">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3338">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3338">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3339">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3339">Local computer</span></span>|<span data-ttu-id="dc7c4-3340">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3340">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3341">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3341">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3342">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3342">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3343">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3343">Remote computer</span></span>|<span data-ttu-id="dc7c4-3344">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3344">No</span></span>|  
|<span data-ttu-id="dc7c4-3345">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3345">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3346">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3346">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3347">下列程式碼範例顯示的訊息佇列的值<xref:System.Messaging.MessageQueue.Transactional%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3347">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.Transactional%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#27](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3348">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3348">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Begin" />
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Commit" />
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Abort" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueue.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Messaging.MessagingDescription("MQ_WriteHandle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_UseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-3349">取得或設定值，指出是否複製接收的訊息至日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3349">Gets or sets a value that indicates whether received messages are copied to the journal queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-3350">如果將從佇列接收到的訊息複製到日誌佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3350"><see langword="true" /> if messages received from the queue are copied to its journal queue; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3351">當訊息佇列應用程式建立新的應用程式佇列時，它會自動建立相關聯的日誌佇列中的相同位置。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3351">When the Message Queuing application creates a new application queue, it automatically creates an associated journal queue in the same location.</span></span> <span data-ttu-id="dc7c4-3352">日誌佇列用來追蹤訊息從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3352">The journal queue is used to track the messages removed from a queue.</span></span> <span data-ttu-id="dc7c4-3353">設定這個屬性修改 「 訊息佇列 」 佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3353">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="dc7c4-3354">因此，任何其他<xref:System.Messaging.MessageQueue>變更會影響執行個體。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3354">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="dc7c4-3355">日誌佇列不會追蹤訊息從佇列移除，因為其接收時間計時器到期時，也不會追蹤訊息從佇列中清除使用訊息佇列目錄服務 （Information Store 或 Active Directory）。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3355">The journal queue does not track messages removed from the queue because their time-to-be-received timer expired, nor does it track messages purged from the queue by using a Message Queuing directory service (Information Store or Active Directory).</span></span>  
  
 <span data-ttu-id="dc7c4-3356">應用程式無法將訊息傳送至日誌佇列;僅限於這些佇列的唯讀存取權。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3356">Applications cannot send messages to journal queues; they are limited to read-only access of these queues.</span></span> <span data-ttu-id="dc7c4-3357">此外，訊息佇列永遠不會移除訊息日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3357">Furthermore, Message Queuing never removes messages from journal queues.</span></span> <span data-ttu-id="dc7c4-3358">使用佇列的應用程式必須清除這些訊息，接收它們，或清除佇列。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3358">The application using the queue must clear these messages either by receiving them or by purging the queue.</span></span>  
  
 <span data-ttu-id="dc7c4-3359">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3359">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3360">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3360">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3361">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3361">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3362">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3362">Local computer</span></span>|<span data-ttu-id="dc7c4-3363">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3363">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3364">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3364">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3365">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3365">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3366">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3366">Remote computer</span></span>|<span data-ttu-id="dc7c4-3367">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3367">No</span></span>|  
|<span data-ttu-id="dc7c4-3368">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3368">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3369">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3369">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc7c4-3370">下列程式碼範例取得並設定訊息佇列的值<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3370">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#28](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3371">存取訊息佇列方法時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3371">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      </Docs>
    </Member>
    <Member MemberName="WriteHandle">
      <MemberSignature Language="C#" Value="public IntPtr WriteHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int WriteHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.WriteHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr WriteHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteHandle : nativeint" Usage="System.Messaging.MessageQueue.WriteHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_WriteHandle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc7c4-3372">取得用來傳送訊息至訊息佇列的原生控制代碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3372">Gets the native handle used to send messages to the message queue.</span></span></summary>
        <value><span data-ttu-id="dc7c4-3373">用來傳送訊息至佇列之原生佇列物件的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3373">A handle to the native queue object that you use for sending messages to the queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc7c4-3374"><xref:System.Messaging.MessageQueue.WriteHandle%2A>提供原生的 Windows 控制代碼，用於將訊息傳送至佇列的訊息佇列物件。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3374">The <xref:System.Messaging.MessageQueue.WriteHandle%2A> provides a native Windows handle to the message queue object that is used for sending messages to the queue.</span></span> <span data-ttu-id="dc7c4-3375">如果您變更佇列的路徑，控制代碼就會關閉，並重新開啟新的值。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3375">If you change the path of the queue, the handle is closed and reopened with a new value.</span></span>  
  
 <span data-ttu-id="dc7c4-3376">下表顯示此屬性是否可以使用各種不同的工作群組模式。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3376">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="dc7c4-3377">工作群組模式</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3377">Workgroup mode</span></span>|<span data-ttu-id="dc7c4-3378">可用</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3378">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="dc7c4-3379">本機電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3379">Local computer</span></span>|<span data-ttu-id="dc7c4-3380">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3380">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3381">本機電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3381">Local computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3382">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3382">Yes</span></span>|  
|<span data-ttu-id="dc7c4-3383">遠端電腦</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3383">Remote computer</span></span>|<span data-ttu-id="dc7c4-3384">否</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3384">No</span></span>|  
|<span data-ttu-id="dc7c4-3385">遠端電腦，並直接格式名稱</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3385">Remote computer and direct format name</span></span>|<span data-ttu-id="dc7c4-3386">是</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3386">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="dc7c4-3387">訊息佇列無法用來寫入。</span><span class="sxs-lookup"><span data-stu-id="dc7c4-3387">The message queue is not available for writing.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.CanWrite" />
        <altmember cref="P:System.Messaging.MessageQueue.ReadHandle" />
      </Docs>
    </Member>
  </Members>
</Type>