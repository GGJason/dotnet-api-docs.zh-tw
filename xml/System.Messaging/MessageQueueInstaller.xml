<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2eb6aa54811f33e7e5a6bb9e848def1f050d7706" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39726352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type MessageQueueInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0a5fb-101">讓您安裝和設定執行應用程式時需要的佇列 (Queue)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a5fb-101">Allows you to install and configure a queue that your application needs in order to run.</span>
      </span>
      <span data-ttu-id="0a5fb-102">安裝 <see cref="T:System.Messaging.MessageQueue" /> 時，安裝公用程式 (如 InstallUtil.exe) 會呼叫這個類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a5fb-102">This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-103"><xref:System.Messaging.MessageQueueInstaller> ，安裝公用程式用來寫入與佇列相關聯的登錄值。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-103">The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue.</span></span> <span data-ttu-id="0a5fb-104">如需有關安裝公用程式的詳細資訊，請參閱 < [Installutil.exe （安裝程式工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-104">For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span>  
  
 <span data-ttu-id="0a5fb-105">若要安裝的佇列，建立專案的安裝程式類別繼承自<xref:System.Configuration.Install.Installer>，並設定<xref:System.ComponentModel.RunInstallerAttribute>類別`true`。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-105">To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="0a5fb-106">在您的專案內建立<xref:System.Messaging.MessageQueueInstaller>執行個體中安裝的每個佇列，並新增至您專案的安裝程式類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-106">Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="0a5fb-107">建立時<xref:System.Messaging.MessageQueueInstaller>執行個體，您可以選擇性地傳遞的現有<xref:System.Messaging.MessageQueue>（例如，從測試伺服器） 以<xref:System.Messaging.MessageQueueInstaller.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-107">When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor.</span></span> <span data-ttu-id="0a5fb-108">這種方法會自動提供新佇列的組態設定，藉由鏡像傳入之佇列的設定。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-108">This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in.</span></span> <span data-ttu-id="0a5fb-109">或者，您可以手動設定屬性<xref:System.Messaging.MessageQueueInstaller>狀態並呼叫預設建構函式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-109">Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.</span></span>  
  
 <span data-ttu-id="0a5fb-110">當呼叫時，安裝公用程式時，它會尋找<xref:System.ComponentModel.RunInstallerAttribute>。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-110">When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="0a5fb-111">如果它是`true`，此公用程式會安裝中的所有佇列<xref:System.Configuration.Install.Installer.Installers%2A>專案安裝程式相關聯的集合。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-111">If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="0a5fb-112">如果<xref:System.ComponentModel.RunInstallerAttribute>是`false`，此公用程式會忽略專案安裝程式。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-112">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="0a5fb-113">修改的其他屬性<xref:System.Messaging.MessageQueueInstaller>之前或之後加入至執行個體的執行個體<xref:System.Configuration.Install.Installer.Installers%2A>專案安裝程式的集合。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-113">You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="0a5fb-114">例如，佇列的<xref:System.Messaging.MessageQueue.Path%2A>安裝公用程式執行之前，必須設定。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-114">For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.</span></span>  
  
 <span data-ttu-id="0a5fb-115">一般而言，您未呼叫的方法<xref:System.Messaging.MessageQueueInstaller>從您的程式碼; 它們通常稱為只能由 installutil.exe 安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-115">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="0a5fb-116">此公用程式會自動呼叫<xref:System.Messaging.MessageQueueInstaller.Install%2A>期間的安裝程序和呼叫方法<xref:System.Messaging.MessageQueueInstaller.Commit%2A>如果安裝未擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-116">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception.</span></span> <span data-ttu-id="0a5fb-117">它會出失敗，如有必要，藉由呼叫<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>產生例外狀況物件。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-117">It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.</span></span>  
  
 <span data-ttu-id="0a5fb-118">應用程式的安裝常式會使用專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自動維護已安裝之元件的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-118">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="0a5fb-119">此狀態資訊會持續更新，因為每個<xref:System.Messaging.MessageQueueInstaller>公用程式會安裝執行個體。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-119">This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="0a5fb-120">它通常不需要明確修改的狀態資訊的程式碼。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-120">It is not usually necessary for your code to explicitly modify the state information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-121">初始化 <see cref="T:System.Messaging.MessageQueueInstaller" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-121">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-122">初始化 <see cref="T:System.Messaging.MessageQueueInstaller" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-122">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          </span>
          <span data-ttu-id="0a5fb-123">沒有設定任何執行個體屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-123">Does not set any instance properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueueInstaller : System.Messaging.MessageQueue -&gt; System.Messaging.MessageQueueInstaller" Usage="new System.Messaging.MessageQueueInstaller componentToCopy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">
          <span data-ttu-id="0a5fb-124">
            <see cref="T:System.Messaging.MessageQueue" /> 元件，其設定決定安裝的新佇列的屬性設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-124">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5fb-125">初始化 <see cref="T:System.Messaging.MessageQueueInstaller" /> 類別的新執行個體，將安裝設定初始化為現存的 <see cref="T:System.Messaging.MessageQueue" /> 執行個體的安裝設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-125">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-126">取得或設定值，指出要安裝的佇列是否只接受已驗證的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-126">Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-127">如果佇列只接受驗證過的訊息則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-127">
              <see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a5fb-128">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-128">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-129">當未經驗證的訊息傳送至只接受已驗證的訊息佇列時，將會拒絕訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-129">When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected.</span></span> <span data-ttu-id="0a5fb-130">傳送應用程式可以藉由設定要求的訊息拒絕通知<xref:System.Messaging.Message.AcknowledgeType%2A>訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-130">The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message.</span></span> <span data-ttu-id="0a5fb-131">否則，沒有指示，已拒絕訊息，因此除非您將它傳送到寄不出信件佇列，訊息可能會遺失。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-131">Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-132">取得或設定用來在網路上傳送公用 (Public) 佇列訊息的基礎優先權 (Base Priority)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-132">Gets or sets the base priority that is used to route a public queue's messages over the network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-133">傳送至公用佇列的所有訊息的單一基礎優先權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-133">The single base priority for all messages sent to the public queue.</span>
          </span>
          <span data-ttu-id="0a5fb-134">預設為零 (0)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-134">The default is zero (0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-135"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>用於透過網路路由佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-135">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network.</span></span> <span data-ttu-id="0a5fb-136">使用<xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>以便傳送至佇列較高或較低的優先順序高於，訊息傳送至其他佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-136">Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues.</span></span> <span data-ttu-id="0a5fb-137">設定佇列的基本優先順序時，傳送給它的所有訊息會都提供較高的優先順序比傳送至具有較低的基本優先順序佇列的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-137">When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority.</span></span> <span data-ttu-id="0a5fb-138">佇列的基礎優先權無效大約的訊息佇列中或從佇列讀取訊息的方式。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-138">The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.</span></span>  
  
 <span data-ttu-id="0a5fb-139"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>適用於透過網域控制站存取只為公用佇列 （亦即，使用 public 格式名稱）。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-139">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name).</span></span> <span data-ttu-id="0a5fb-140">私用佇列和直接存取的公用佇列的基本優先順序永遠是零。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-140">The base priority of private queues and of directly accessed public queues is always zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueInstaller.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-141">取得或設定實作 (Implementation) 特定的佇列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-141">Gets or sets an implementation-specific queue type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-142">
            <see cref="T:System.Guid" />，表示佇列的分類 (或 Message Queuing 類型識別項)，可讓應用程式根據使用方式將其佇列分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-142">A <see cref="T:System.Guid" /> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used.</span>
          </span>
          <span data-ttu-id="0a5fb-143">預設值為 <see langword="Guid.empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-143">The default is <see langword="Guid.empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-144">佇列分類可讓應用程式相關聯的佇列，根據其使用方式分類。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-144">The queue category enables an application to categorize associated queues according to the way they are used.</span></span> <span data-ttu-id="0a5fb-145"><xref:System.Messaging.MessageQueue.Category%2A>可以是 null 參考。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-145">The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference.</span></span> <span data-ttu-id="0a5fb-146">您也可以定義新的類別。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-146">You can also define a new category.</span></span>  
  
 <span data-ttu-id="0a5fb-147"><xref:System.Messaging.MessageQueue.Category%2A>屬性提供的訊息佇列型別識別項屬性，可與特定的佇列相關聯，讀取/寫入存取。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-147">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write.</span></span> <span data-ttu-id="0a5fb-148">您可以使用<xref:System.Guid.NewGuid%2A>方法用來建立類別目錄值，保證是唯一的所有<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-148">You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values.</span></span> <span data-ttu-id="0a5fb-149">不過，就只需要為不同於其他類別，不會從所有其他類別目錄值<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-149">However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="0a5fb-150">比方說，您可以設定<xref:System.Messaging.MessageQueue.Category%2A>一個群組的佇列{00000000-0000-0000-0000-000000000001}並<xref:System.Messaging.MessageQueue.Category%2A>另一個群組{00000000-0000-0000-0000-000000000002}。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-150">For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="0a5fb-151">
            <see cref="T:System.Collections.IDictionary" />，包含電腦的後續安裝狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-151">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5fb-152">認可 <see cref="T:System.Messaging.MessageQueue" /> 方法寫入登錄的 <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> 安裝資訊，以完成安裝程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-152">Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry.</span>
          </span>
          <span data-ttu-id="0a5fb-153">這個方法是安裝工具所使用的方法，安裝工具會自動呼叫適當的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-153">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-154">一般而言，您未呼叫的方法<xref:System.Messaging.MessageQueueInstaller>從您的程式碼; 它們通常稱為只能由 installutil.exe 安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-154">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="0a5fb-155">此公用程式會自動呼叫<xref:System.Messaging.MessageQueueInstaller.Install%2A>安裝程序期間的方法。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-155">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="0a5fb-156">安裝是交易式的所以如果在安裝期間沒有任何安裝專案元件失敗，所有先前安裝的元件會回復為其預先安裝狀態。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-156">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="0a5fb-157">這可以藉由呼叫每個元件的<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-157">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="0a5fb-158">安裝專案相關聯的所有元件的安裝成功後發生，安裝公用程式的認可安裝。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-158">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="0a5fb-159"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> 完成安裝<xref:System.Messaging.MessageQueue>的佇列設為適當的初始狀態。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-159"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="0a5fb-160">如果所指定的佇列<xref:System.Messaging.MessageQueueInstaller.Path%2A>屬性已存在，且包含訊息，<xref:System.Messaging.MessageQueueInstaller.Commit%2A>清除訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-160">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="0a5fb-161"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>而非<xref:System.Messaging.MessageQueueInstaller.Install%2A>，清除訊息，因為清除訊息的動作無法回復。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-161"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="0a5fb-162">應用程式的安裝常式會使用專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自動維護已安裝之元件的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-162">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="0a5fb-163">此狀態資訊，這會傳遞至<xref:System.Messaging.MessageQueueInstaller.Commit%2A>作為`savedState`參數，會持續更新，當此公用程式會認可每個<xref:System.Messaging.MessageQueueInstaller>執行個體。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-163">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="0a5fb-164">通常，不需要您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-164">Usually, it is not necessary for your code to explicitly modify this state information.</span></span> <span data-ttu-id="0a5fb-165">已清除佇列，當<xref:System.Messaging.MessageQueueInstaller.Commit%2A>張貼至記錄項目`savedState`與安裝相關聯。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-165">When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="messageQueueInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="0a5fb-166">
            <see cref="T:System.ComponentModel.IComponent" />，要用做 <see cref="T:System.Messaging.MessageQueueInstaller" /> 的樣板 (Template)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-166">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5fb-167">為訊息佇列複製安裝時需要的 <see cref="T:System.Messaging.MessageQueue" /> 元件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-167">Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-168">一般而言，您未呼叫的方法<xref:System.Messaging.MessageQueueInstaller>從您的程式碼; 它們通常稱為只能由 installutil.exe 安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-168">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="0a5fb-169"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> 可由安裝公用程式來設定的屬性值<xref:System.Messaging.MessageQueueInstaller>的值，將現有的<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-169"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="0a5fb-170">如果<xref:System.Messaging.MessageQueue.Path%2A>的<xref:System.Messaging.MessageQueue>也就是傳入為空字串 ("")，您必須設定<xref:System.Messaging.MessageQueue.Path%2A>屬性設為非空白值，安裝程式執行之前。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-170">If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (""), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a5fb-171">與這個 <see cref="T:System.Messaging.MessageQueueInstaller" /> 相關的元件不是 <see cref="T:System.Messaging.MessageQueue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-171">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-172">取得或設定值，指出佇列是否只接受私用或加密的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-172">Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-173">其中一個 <see cref="T:System.Messaging.EncryptionRequired" /> 值，指出傳送至佇列的訊息所需的加密 (Encryption) 層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-173">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values that indicates the encryption level required on messages sent to the queue.</span>
          </span>
          <span data-ttu-id="0a5fb-174">預設值為 <see langword="Optional" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-174">The default is <see langword="Optional" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-175">加密指定時，只有<xref:System.Messaging.Message.Body%2A>加密的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-175">When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted.</span></span> <span data-ttu-id="0a5fb-176">其他屬性，例如<xref:System.Messaging.Message.Label%2A>，不會加密。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-176">Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="0a5fb-177">
            <see cref="T:System.Collections.IDictionary" />，用於儲存執行認可、復原或解除安裝作業所需的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-177">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5fb-178">執行安裝，並將訊息佇列資訊寫入至登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-178">Performs the installation and writes message queue information to the registry.</span>
          </span>
          <span data-ttu-id="0a5fb-179">這個方法是安裝工具所使用的方法，安裝工具會自動呼叫適當的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-179">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-180"><xref:System.Messaging.MessageQueueInstaller.Install%2A>方法將訊息佇列資訊寫入至登錄，並將相關聯<xref:System.Messaging.MessageQueue>執行個體的佇列，位於所指定的路徑與<xref:System.Messaging.MessageQueueInstaller.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-180">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property.</span></span> <span data-ttu-id="0a5fb-181">如果佇列不存在，<xref:System.Messaging.MessageQueueInstaller.Install%2A>建立異動式佇列。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-181">If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue.</span></span> <span data-ttu-id="0a5fb-182"><xref:System.Messaging.MessageQueueInstaller.Install%2A> 設定新的或現有的佇列屬性中所指定的<xref:System.Messaging.MessageQueueInstaller>。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-182"><xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="0a5fb-183">如果佇列已經存在，其屬性會重設的<xref:System.Messaging.MessageQueueInstaller>。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-183">If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="0a5fb-184">如果現有的佇列不是交易式，您必須刪除並再重新建立為異動式佇列。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-184">If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a5fb-185">如果需要重新建立佇列，佇列中的訊息將會遺失。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-185">If it is necessary to recreate the queue, messages in the queue will be lost.</span></span>  
  
 <span data-ttu-id="0a5fb-186">一般而言，您未呼叫的方法<xref:System.Messaging.MessageQueueInstaller>從您的程式碼; 它們通常稱為只能由 installutil.exe 安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-186">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="0a5fb-187">此公用程式會自動呼叫<xref:System.Messaging.MessageQueueInstaller.Install%2A>方法，在安裝過程中撰寫與安裝訊息佇列相關聯之登錄資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-187">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed.</span></span> <span data-ttu-id="0a5fb-188">安裝是交易式的所以如果在安裝期間沒有任何安裝專案元件失敗，所有先前安裝的元件會回復為其預先安裝狀態。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-188">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="0a5fb-189">這可以藉由呼叫每個元件的<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-189">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="0a5fb-190">安裝專案相關聯的所有元件的安裝成功後發生，安裝公用程式的認可安裝。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-190">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="0a5fb-191"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> 完成安裝<xref:System.Messaging.MessageQueue>的佇列設為適當的初始狀態。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-191"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="0a5fb-192">如果所指定的佇列<xref:System.Messaging.MessageQueueInstaller.Path%2A>屬性已存在，且包含訊息，<xref:System.Messaging.MessageQueueInstaller.Commit%2A>清除訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-192">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="0a5fb-193"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>而非<xref:System.Messaging.MessageQueueInstaller.Install%2A>，清除訊息，因為清除訊息的動作無法回復。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-193"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="0a5fb-194">應用程式的安裝常式會使用專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自動維護已安裝之元件的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-194">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="0a5fb-195">此狀態資訊，這會傳遞至<xref:System.Messaging.MessageQueueInstaller.Install%2A>作為`stateSaver`參數，會持續更新，因為此公用程式會安裝每個<xref:System.Messaging.MessageQueueInstaller>執行個體。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-195">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="0a5fb-196">通常，不需要您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-196">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="messageQueueInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">
          <span data-ttu-id="0a5fb-197">要比較的安裝程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-197">The installer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5fb-198">決定指定的安裝程式是否能夠處理與這個安裝程式相同的安裝。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-198">Determines whether the specified installer can handle the same kind of installation as this installer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5fb-199">如果這個安裝程式和 <paramref name="otherInstaller" /> 參數指定的安裝程式能夠處理相同的安裝，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-199">
              <see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-200">通常<xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A>會傳回`true`只有此安裝程式並安裝程式所指定`otherInstaller`參數都相同的類型。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-200">Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-201">取得或設定佇列的描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-201">Gets or sets a description of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-202">標籤，描述訊息佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-202">The label that describes the message queue.</span>
          </span>
          <span data-ttu-id="0a5fb-203">預設為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-203">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-204"><xref:System.Messaging.MessageQueue.Label%2A>屬性不需要是唯一的佇列。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-204">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a5fb-205">
            <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-205">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-206">取得或設定與佇列相關的日誌的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-206">Gets or sets the maximum size of the journal that is associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-207">日誌佇列的最大值 (以 KB 計)，日誌記錄的是從佇列移除的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-207">The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue.</span>
          </span>
          <span data-ttu-id="0a5fb-208">訊息佇列的預設值是沒有限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-208">The Message Queuing default is no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-209">建立佇列時，訊息佇列會自動建立佇列日誌中新的佇列與相同的位置。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-209">When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue.</span></span> <span data-ttu-id="0a5fb-210">佇列日誌來追蹤從佇列中移除的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-210">The queue journal is used to track the messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="0a5fb-211">兩種類型的訊息不會受到追蹤： 因為其接收時間計時器到期時，會從佇列中移除，以及從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-211">Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="0a5fb-212">應用程式無法傳送訊息至日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-212">Applications cannot send messages to the journal queue.</span></span> <span data-ttu-id="0a5fb-213">不過，您必須定期清除佇列，以便移除不再需要的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-213">However, you must periodically clear the queue to remove the messages that are no longer needed.</span></span> <span data-ttu-id="0a5fb-214">計算儲存在日誌佇列至為佇列所在的電腦配額的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-214">Messages stored in journal queues count toward the quota for the computer where the queues reside.</span></span> <span data-ttu-id="0a5fb-215">（由系統管理員會設定電腦配額）。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-215">(The computer quota is set by the administrator.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-216">取得或設定佇列的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-216">Gets or sets the maximum size of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-217">佇列的最大值 (以 KB 計)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-217">The maximum size, in kilobytes, of the queue.</span>
          </span>
          <span data-ttu-id="0a5fb-218">訊息佇列的預設值是沒有限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-218">The Message Queuing default is no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-219">雖然它可以重設之後，佇列大小上限通常會在佇列建立時設定。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-219">The maximum queue size is typically set at the time of queue creation, although it can be reset later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-220">在 MSMQ 3.0 中介紹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-220">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="0a5fb-221">取得或設定與佇列相關聯的多點傳送位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-221">Gets or sets the multicast address associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-222">
            <see cref="T:System.String" />，包含有效的多點傳送位址 (在下面所示的表單中)，否則為 <see langword="null" />，表示佇列未與多點傳送位址相關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-222">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span>
          </span>  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0a5fb-223">未安裝 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-223">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-224">取得或設定這個物件參考的佇列的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-224">Gets or sets the location of the queue that is referenced by this object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-225">路徑，表示佇列在網路中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-225">The path that represents the location of the queue in the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-226">語法<xref:System.Messaging.MessageQueue.Path%2A>屬性取決於佇列類型它的參考。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-226">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references.</span></span> <span data-ttu-id="0a5fb-227">下表顯示的語法，您應該使用的各種類型的佇列。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-227">The following table shows the syntax you should use for queues of various types.</span></span>  
  
|<span data-ttu-id="0a5fb-228">佇列類型</span><span class="sxs-lookup"><span data-stu-id="0a5fb-228">Queue type</span></span>|<span data-ttu-id="0a5fb-229">語法</span><span class="sxs-lookup"><span data-stu-id="0a5fb-229">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="0a5fb-230">公用佇列</span><span class="sxs-lookup"><span data-stu-id="0a5fb-230">Public queue</span></span>|`machineName`\\`queueName`|  
|<span data-ttu-id="0a5fb-231">私用佇列</span><span class="sxs-lookup"><span data-stu-id="0a5fb-231">Private queue</span></span>|`machineName`\\`Private$`\\`queueName`|  
|<span data-ttu-id="0a5fb-232">日誌佇列</span><span class="sxs-lookup"><span data-stu-id="0a5fb-232">Journal queue</span></span>|`machineName`\\`queueName`\\`Journal$`|  
|<span data-ttu-id="0a5fb-233">電腦日誌佇列</span><span class="sxs-lookup"><span data-stu-id="0a5fb-233">Machine journal queue</span></span>|`machineName`\\`Journal$`|  
|<span data-ttu-id="0a5fb-234">機器無法投遞的信件佇列</span><span class="sxs-lookup"><span data-stu-id="0a5fb-234">Machine dead-letter queue</span></span>|`machineName`\\`Deadletter$`|  
|<span data-ttu-id="0a5fb-235">電腦交易式寄不出信件佇列</span><span class="sxs-lookup"><span data-stu-id="0a5fb-235">Machine transactional dead-letter queue</span></span>|`machineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="0a5fb-236">使用 」。 「 本機電腦。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-236">Use "." for the local computer.</span></span>  
  
 <span data-ttu-id="0a5fb-237">您也可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>的訊息佇列應用程式物件來描述為佇列路徑。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-237">You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path.</span></span> <span data-ttu-id="0a5fb-238">下表顯示每種類型的參考正確的語法。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-238">The following table shows the proper syntax for each type of reference.</span></span>  
  
|<span data-ttu-id="0a5fb-239">參考資料</span><span class="sxs-lookup"><span data-stu-id="0a5fb-239">Reference</span></span>|<span data-ttu-id="0a5fb-240">語法</span><span class="sxs-lookup"><span data-stu-id="0a5fb-240">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="0a5fb-241">格式名稱</span><span class="sxs-lookup"><span data-stu-id="0a5fb-241">Format name</span></span>|<span data-ttu-id="0a5fb-242">FormatName: [*格式名稱*]</span><span class="sxs-lookup"><span data-stu-id="0a5fb-242">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="0a5fb-243">ThisAddIn</span><span class="sxs-lookup"><span data-stu-id="0a5fb-243">Label</span></span>|<span data-ttu-id="0a5fb-244">標籤: [*標籤*]</span><span class="sxs-lookup"><span data-stu-id="0a5fb-244">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="0a5fb-245">如果您離線工作，您必須使用格式名稱來定義佇列<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-245">If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="0a5fb-246">如果您不這樣做，應用程式會擲回例外狀況，因為主要網域控制站，所以無法解析<xref:System.Messaging.MessageQueue.Path%2A>成<xref:System.Messaging.MessageQueue.FormatName%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-246">If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a5fb-247">
            <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> 設為無效值，可能因為語法無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-247">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.</span>
          </span>
          <span data-ttu-id="0a5fb-248">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-248">-or-</span>
          </span>
          <span data-ttu-id="0a5fb-249">
            <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-249">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Permissions : System.Messaging.AccessControlList with get, set" Usage="System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-250">取得或設定與佇列相關的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-250">Gets or sets permissions associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-251">
            <see cref="T:System.Messaging.AccessControlList" />，包含一或多個存取控制項目，指定信任項和要授與佇列的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-251">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-252">根據預設，公用或私用佇列的建立者擁有完整控制權，而每個人都有取得佇列屬性，取得權限，並寫入至佇列的權限的網域群組。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-252">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="0a5fb-253">訊息佇列依序存取每個權限的清單項目，直到它找到適用於目前的使用者和目前嘗試的動作。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-253">Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action.</span></span> <span data-ttu-id="0a5fb-254">作業系統權限明確拒絕使用者的權限採用的優先順序高於允許。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-254">As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.</span></span>  
  
 <span data-ttu-id="0a5fb-255">當您建構<xref:System.Messaging.MessageQueueInstaller.Permissions%2A>屬性，加入<xref:System.Messaging.AccessControlEntry>執行個體您<xref:System.Messaging.AccessControlList>集合。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-255">When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="0a5fb-256">當您建構每個存取控制項目時，您可以指定一般或標準存取權限。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-256">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="0a5fb-257">佇列的權限可以是下列任何組合：</span><span class="sxs-lookup"><span data-stu-id="0a5fb-257">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="0a5fb-258">刪除</span><span class="sxs-lookup"><span data-stu-id="0a5fb-258">Delete</span></span>  
  
-   <span data-ttu-id="0a5fb-259">讀取安全性</span><span class="sxs-lookup"><span data-stu-id="0a5fb-259">Read Security</span></span>  
  
-   <span data-ttu-id="0a5fb-260">寫入安全性</span><span class="sxs-lookup"><span data-stu-id="0a5fb-260">Write Security</span></span>  
  
-   <span data-ttu-id="0a5fb-261">同步處理</span><span class="sxs-lookup"><span data-stu-id="0a5fb-261">Synchronize</span></span>  
  
-   <span data-ttu-id="0a5fb-262">修改擁有者</span><span class="sxs-lookup"><span data-stu-id="0a5fb-262">Modify Owner</span></span>  
  
-   <span data-ttu-id="0a5fb-263">讀取</span><span class="sxs-lookup"><span data-stu-id="0a5fb-263">Read</span></span>  
  
-   <span data-ttu-id="0a5fb-264">Write</span><span class="sxs-lookup"><span data-stu-id="0a5fb-264">Write</span></span>  
  
-   <span data-ttu-id="0a5fb-265">執行</span><span class="sxs-lookup"><span data-stu-id="0a5fb-265">Execute</span></span>  
  
-   <span data-ttu-id="0a5fb-266">必要</span><span class="sxs-lookup"><span data-stu-id="0a5fb-266">Required</span></span>  
  
-   <span data-ttu-id="0a5fb-267">全部</span><span class="sxs-lookup"><span data-stu-id="0a5fb-267">All</span></span>  
  
-   <span data-ttu-id="0a5fb-268">無</span><span class="sxs-lookup"><span data-stu-id="0a5fb-268">None</span></span>  
  
 <span data-ttu-id="0a5fb-269">這些權限，您可以結合使用的位元 OR 的位元旗標的一組：</span><span class="sxs-lookup"><span data-stu-id="0a5fb-269">These rights are a set of bit flags that you can combine using the bitwise OR:</span></span>  
  
-   <span data-ttu-id="0a5fb-270">完全控制</span><span class="sxs-lookup"><span data-stu-id="0a5fb-270">Full Control</span></span>  
  
-   <span data-ttu-id="0a5fb-271">刪除訊息</span><span class="sxs-lookup"><span data-stu-id="0a5fb-271">Delete Message</span></span>  
  
-   <span data-ttu-id="0a5fb-272">接收訊息</span><span class="sxs-lookup"><span data-stu-id="0a5fb-272">Receive Message</span></span>  
  
-   <span data-ttu-id="0a5fb-273">查看訊息</span><span class="sxs-lookup"><span data-stu-id="0a5fb-273">Peek Message</span></span>  
  
-   <span data-ttu-id="0a5fb-274">接收日誌訊息</span><span class="sxs-lookup"><span data-stu-id="0a5fb-274">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="0a5fb-275">取得佇列屬性</span><span class="sxs-lookup"><span data-stu-id="0a5fb-275">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="0a5fb-276">設定佇列屬性</span><span class="sxs-lookup"><span data-stu-id="0a5fb-276">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="0a5fb-277">取得權限</span><span class="sxs-lookup"><span data-stu-id="0a5fb-277">Get Permissions</span></span>  
  
-   <span data-ttu-id="0a5fb-278">設定權限</span><span class="sxs-lookup"><span data-stu-id="0a5fb-278">Set Permissions</span></span>  
  
-   <span data-ttu-id="0a5fb-279">取得佇列的擁有權</span><span class="sxs-lookup"><span data-stu-id="0a5fb-279">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="0a5fb-280">寫入訊息</span><span class="sxs-lookup"><span data-stu-id="0a5fb-280">Write Message</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="0a5fb-281">
            <see cref="T:System.Collections.IDictionary" />，包含電腦的預先安裝狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-281">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5fb-282">將電腦還原到安裝之前的狀態，方法是復原安裝程式寫入登錄的佇列資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-282">Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry.</span>
          </span>
          <span data-ttu-id="0a5fb-283">這個方法是安裝工具所使用的方法，安裝工具會自動呼叫適當的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-283">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-284"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A>方法的影響復原的<xref:System.Messaging.MessageQueueInstaller.Install%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-284">The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method.</span></span> <span data-ttu-id="0a5fb-285"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 如果在安裝專案中的任何元件的安裝失敗時，呼叫。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-285"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="0a5fb-286"><xref:System.Messaging.MessageQueueInstaller.Install%2A>方法建立或設定佇列的屬性。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-286">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue.</span></span> <span data-ttu-id="0a5fb-287"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 刪除佇列，或是預先存在的佇列的屬性重設為其預先安裝值。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-287"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.</span></span>  
  
 <span data-ttu-id="0a5fb-288">一般而言，您未呼叫的方法<xref:System.Messaging.MessageQueueInstaller>從您的程式碼; 它們通常稱為只能由 InstallUtil.exe 安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-288">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility.</span></span> <span data-ttu-id="0a5fb-289">此公用程式會自動呼叫<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>方法之後安裝失敗復原任何變更，安裝程序已完成。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-289">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="0a5fb-290">應用程式的安裝常式會使用專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自動維護已安裝之元件的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-290">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="0a5fb-291">此狀態資訊，這會傳遞至<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>作為`savedState`參數，會持續更新，因為此公用程式會彙備份<xref:System.Messaging.MessageQueueInstaller>執行個體。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-291">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="0a5fb-292">通常，不需要您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-292">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-293">取得或設定值，指出佇列是否只接受做為交易的一部分傳送的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-293">Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-294">如果佇列只接受做為交易的一部分傳送的訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-294">
              <see langword="true" /> if the queue can only accept messages sent as part of a transaction; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a5fb-295">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-295">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-296">從本機交易式佇列使用或不使用交易，就可以擷取訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-296">Messages can be retrieved from a local transaction queue with or without using a transaction.</span></span> <span data-ttu-id="0a5fb-297">如果您未指定在交易內容，訊息佇列為您建立單一的內部交易。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-297">If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="0a5fb-298">
            <see cref="T:System.Collections.IDictionary" />，包含電腦的後續安裝狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-298">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5fb-299">藉由從登錄移除佇列資訊來移除安裝。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-299">Removes an installation by removing queue information from the registry.</span>
          </span>
          <span data-ttu-id="0a5fb-300">這個方法是解除安裝工具所使用的方法，解除安裝工具會自動呼叫適當的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-300">This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-301">如果<xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A>已`Remove`，<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>也會刪除相關聯的佇列<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-301">If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="0a5fb-302">一般而言，您未呼叫的方法<xref:System.Messaging.MessageQueueInstaller>從您的程式碼; 它們通常稱為只能由 InstallUtil.exe 安裝公用程式 （如果您在解除安裝模式）。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-302">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode).</span></span> <span data-ttu-id="0a5fb-303">此公用程式會自動呼叫<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>方法來還原系統的組件安裝到預先安裝的狀態所影響。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-303">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="0a5fb-304">這包括刪除已解除安裝 MessageQueue 與建立關聯的登錄資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-304">This includes deleting registry information that is associated with the MessageQueue being uninstalled.</span></span>  
  
 <span data-ttu-id="0a5fb-305">應用程式的解除安裝常式會使用專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自動維護已解除安裝元件的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-305">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="0a5fb-306">此狀態資訊，這會傳遞至<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>作為`savedState`參數，會持續更新，因為此公用程式會解除安裝每個<xref:System.Messaging.MessageQueueInstaller>執行個體。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-306">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="0a5fb-307">通常，不需要您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-307">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-308">取得或設定值，指出安裝程式在解除安裝期間如何處理佇列：移除、還原至預先安裝狀態或維持其目前的安裝狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-308">Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-309">其中一個 <see cref="T:System.Configuration.Install.UninstallAction" /> 值，指出解除安裝 <see cref="T:System.Messaging.MessageQueue" /> 時，要讓佇列保持什麼狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-309">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the queue in when the <see cref="T:System.Messaging.MessageQueue" /> is uninstalled.</span>
          </span>
          <span data-ttu-id="0a5fb-310">預設值為 <see langword="Remove" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-310">The default is <see langword="Remove" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-311">當您安裝佇列時，您可以選擇使用現有的佇列。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-311">When you install a queue, you can optionally use an existing queue.</span></span> <span data-ttu-id="0a5fb-312">如果您這樣做，您必須決定佇列應該還原為預先安裝的狀態，或保留在其目前的後續安裝狀態。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-312">If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="0a5fb-313">如果您選擇還原為預先安裝的狀態佇列，不會還原已從佇列中刪除在安裝期間的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-313">If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored.</span></span> <span data-ttu-id="0a5fb-314">您可以重設只佇列相關聯的屬性<xref:System.Messaging.MessageQueueInstaller>為其預先安裝的值。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-314">You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a5fb-315">取得或設定值，指出是否複製從佇列擷取的訊息至相關聯的日誌佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-315">Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a5fb-316">
            <see langword="true" /> 表示複製從佇列擷取的訊息至日誌佇列，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-316">
              <see langword="true" /> to copy messages that are retrieved from the queue to the journal queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a5fb-317">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5fb-317">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5fb-318">日誌佇列，可讓您持續追蹤的訊息，即使它們已從佇列擷取。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-318">A journal queue lets you keep track of messages even after they have been retrieved from the queue.</span></span> <span data-ttu-id="0a5fb-319">不過，兩種類型的訊息不會受到追蹤： 當其接收時間計時器到期時，會從佇列中移除，以及從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-319">However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="0a5fb-320">日誌佇列應該定期清除，以移除不再需要的訊息。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-320">A journal queue should be cleared periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="0a5fb-321">訊息儲存在日誌佇列都算是日誌所在之電腦的配額。</span><span class="sxs-lookup"><span data-stu-id="0a5fb-321">Messages stored in the journal queue count toward the quota for the computer on which the journal is located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>