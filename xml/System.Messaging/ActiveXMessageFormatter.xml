<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ActiveXMessageFormatter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bcb0d5ed5e9f2af7770e251b62d11f1b941dd6ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcb0d5ed5e9f2af7770e251b62d11f1b941dd6ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</source>
          <target state="translated">使用與 MSMQ ActiveX 元件相容的格式，將訊息佇列訊息主體的基本資料型別和其他物件序列化或還原序列化。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph>相容於使用訊息佇列的 COM 元件，可讓應用程式使用 MSMQ COM 控制項的互通性所傳送訊息。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> can serialize most primitives, as well as objects that implement the <ph id="ph2">`IPersistStream`</ph> OLE interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph>大部分基本類型，以及實作的物件可以序列化<ph id="ph2">`IPersistStream`</ph>OLE 介面。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements <ph id="ph1">`IPersistStream`</ph>.</source>
          <target state="translated">它可以還原序列化基本項目，一組相同，但需要進一步投入時間實作 COM 物件 （例如，使用 Visual Basic 6.0 中建立的物件） 還原序列化時<ph id="ph1">`IPersistStream`</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>The object to deserialize must be in memory by first importing the object into a .NET Framework application.</source>
          <target state="translated">要還原序列化的物件必須是在記憶體中，第一次匯入物件的.NET Framework 應用程式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>When an application sends a message to the queue using an instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class, the formatter serializes the object into a stream and inserts it into the message body.</source>
          <target state="translated">當應用程式傳送訊息至佇列使用的執行個體<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>類別，格式器會將物件序列化成資料流，並將它插入訊息內文。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>When reading from a queue using a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, the formatter deserializes the message data into the <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated">讀取佇列使用時<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>，格式子還原序列化成訊息資料<ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>ActiveX serialization is very compact, which makes using the <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and MSMQ COM control a very fast method of serialization.</source>
          <target state="translated">ActiveX 序列化是非常簡潔，因此使用<ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph>，MSMQ COM 控制序列化的速度非常快的方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> to inspect.</source>
          <target state="translated">要檢查的 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source>Determines whether the formatter can deserialize the contents of the message.</source>
          <target state="translated">決定格式子是否能夠還原序列化訊息的內容。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> can deserialize the message; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> 能夠將訊息還原序列化，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the <ph id="ph3">`IPersistStream`</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A&gt;</ph> 傳回<ph id="ph2">`false`</ph>如果訊息本文不是訊息佇列的 ActiveX 控制項可以還原序列化的基本類型，或未實作<ph id="ph3">`IPersistStream`</ph>介面。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Clone">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> class that is identical to the current <ph id="ph2">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph>.</source>
          <target state="translated">建立一個和目前 <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> 相同的 <ph id="ph2">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> 類別的執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Clone">
          <source>An object whose properties are identical to those of this <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph>.</source>
          <target state="translated">物件的屬性和這個 <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> 的屬性相同。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Clone">
          <source>This method is used by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously).</source>
          <target state="translated">這個方法由<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>以同時接收多個訊息，（比方說，如果應用程式以非同步方式接收） 的類別。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Clone">
          <source>You typically do not need to call this method in your application code.</source>
          <target state="translated">您通常不需要在應用程式程式碼中呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
          <source>An OLE object that implements <ph id="ph1">&lt;see langword="IPersistStreamInit" /&gt;</ph>.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see langword="IPersistStreamInit" /&gt;</ph> 的 OLE 物件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
          <source>Provides a utility to help serialize COM objects that implement <ph id="ph1">&lt;see langword="IPersistStream" /&gt;</ph> and require <ph id="ph2">&lt;see langword="IPersistStreamInit" /&gt;</ph> to be called.</source>
          <target state="translated">提供公用程式，以協助序列化實作 <ph id="ph1">&lt;see langword="IPersistStream" /&gt;</ph> 並要求呼叫 <ph id="ph2">&lt;see langword="IPersistStreamInit" /&gt;</ph> 的 COM 物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, in MSMQ ActiveX control format, to deserialize.</source>
          <target state="translated">要還原序列化的 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>，格式為 MSMQ ActiveX 控制項。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>Reads the contents from the given message and creates an object that contains the deserialized message.</source>
          <target state="translated">讀取指定訊息的內容，並建立包含還原序列化訊息的物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The deserialized message.</source>
          <target state="translated">還原序列化的訊息。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>If the body of the message represents a primitive type, the message's <ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property must be one of the managed types in the following table.</source>
          <target state="translated">如果訊息的本文代表基本類型，訊息的<ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph>屬性必須是下表中的 managed 類型的其中一個。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>BodyType value</source>
          <target state="translated">BodyType 值</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>Managed type</source>
          <target state="translated">Managed 的類型</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_LPSTR</source>
          <target state="translated">VT_LPSTR</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Char&gt;</ph> array (deserialized using ASCII encoding)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char&gt;</ph> 陣列 （還原序列化使用 ASCII 編碼方式）</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_BSTR, VT_LPWSTR</source>
          <target state="translated">VT_BSTR, VT_LPWSTR</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.String&gt;</ph> (deserialized using Unicode encoding)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String&gt;</ph> （還原序列化使用 Unicode 編碼）</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_VECTOR &amp;#124; VT_UI1</source>
          <target state="translated">VT_VECTOR &amp;#124; VT_UI1</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph> array</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 陣列</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_BOOL</source>
          <target state="translated">VT_BOOL</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_CLSID</source>
          <target state="translated">VT_CLSID</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_CY</source>
          <target state="translated">VT_CY</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_DATE</source>
          <target state="translated">VT_DATE</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_I1, VT_UI1</source>
          <target state="translated">VT_I1, VT_UI1</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_I2</source>
          <target state="translated">VT_I2</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_UI2</source>
          <target state="translated">VT_UI2</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_I4</source>
          <target state="translated">VT_I4</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_UI4</source>
          <target state="translated">VT_UI4</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_I8</source>
          <target state="translated">VT_I8</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_UI8</source>
          <target state="translated">VT_UI8</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_R4</source>
          <target state="translated">VT_R4</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_R8</source>
          <target state="translated">VT_R8</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_NULL</source>
          <target state="translated">VT_NULL</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_STREAMED_OBJECT</source>
          <target state="translated">VT_STREAMED_OBJECT</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.BodyType" /&gt;</ph> property of the <ph id="ph2">&lt;paramref name="message" /&gt;</ph> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="message" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.BodyType" /&gt;</ph> 屬性傳遞的參數無法對應至基本型別，它也不表示一個資料流物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The body represents a stored object.</source>
          <target state="translated">主體表示一個預存物件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> does not support deserialization of stored objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> 不支援儲存物件的還原序列化 (Deserialization) 格式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> property will contain the serialized object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>，其 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> 屬性會包含序列化物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The object to be serialized into the message body.</source>
          <target state="translated">要序列化到訊息本文中的物件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Serializes an object into the body of the message.</source>
          <target state="translated">將物件序列化到訊息主體中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The following table shows the relationship between managed types and the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property.</source>
          <target state="translated">下表顯示 managed 型別之間的關聯性和<ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The object that you serialize must be one of these managed types or must implement the OLE <ph id="ph1">`IPersistStream`</ph> interface.</source>
          <target state="translated">您所序列化的物件必須是其中一個這些 managed 類型，或必須實作 OLE<ph id="ph1">`IPersistStream`</ph>介面。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>BodyType value</source>
          <target state="translated">BodyType 值</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Managed type</source>
          <target state="translated">Managed 的類型</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_LPSTR</source>
          <target state="translated">VT_LPSTR</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_BSTR, VT_LPWSTR</source>
          <target state="translated">VT_BSTR, VT_LPWSTR</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_VECTOR &amp;#124; VT_UI1</source>
          <target state="translated">VT_VECTOR &amp;#124; VT_UI1</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_BOOL</source>
          <target state="translated">VT_BOOL</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_CLSID</source>
          <target state="translated">VT_CLSID</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_CY</source>
          <target state="translated">VT_CY</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_DATE</source>
          <target state="translated">VT_DATE</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_I1, VT_UI1</source>
          <target state="translated">VT_I1, VT_UI1</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_I2</source>
          <target state="translated">VT_I2</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_UI2</source>
          <target state="translated">VT_UI2</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_I4</source>
          <target state="translated">VT_I4</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_UI4</source>
          <target state="translated">VT_UI4</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_I8</source>
          <target state="translated">VT_I8</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_UI8</source>
          <target state="translated">VT_UI8</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_R4</source>
          <target state="translated">VT_R4</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_R8</source>
          <target state="translated">VT_R8</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_NULL</source>
          <target state="translated">VT_NULL</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_STREAMED_OBJECT</source>
          <target state="translated">VT_STREAMED_OBJECT</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source><ph id="ph1">`IPersistStream`</ph> (OLE) <ph id="ph2">&lt;xref:System.Object&gt;</ph></source>
          <target state="translated"><ph id="ph1">`IPersistStream`</ph> (OLE) <ph id="ph2">&lt;xref:System.Object&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The object to serialize is neither a primitive nor a streamed object that implements the OLE <ph id="ph1">&lt;see langword="IPersistStream" /&gt;</ph> interface.</source>
          <target state="translated">要序列化的物件既不是基本型別，也不是實作 OLE <ph id="ph1">&lt;see langword="IPersistStream" /&gt;</ph> 介面的資料流物件。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>