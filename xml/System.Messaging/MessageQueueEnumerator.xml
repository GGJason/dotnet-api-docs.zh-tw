<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageQueueEnumerator.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dd645dcfd97fa2036ad0395acbbbf3e86c2865e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dd645dcfd97fa2036ad0395acbbbf3e86c2865e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">提供順向資料指標，進而列舉訊息佇列中的訊息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> for dynamic interaction with queues on the network.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>動態互動與網路上的佇列。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Methods available through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class can return either a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</source>
          <target state="translated">方法可透過<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>類別可以傳回<ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>包含動態清單的佇列或陣列，其中包含快照集當時的佇列集合的指定呼叫此方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">沒有佇列的網路中未定義順序。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</source>
          <target state="translated">它們不是已排序，例如，藉由電腦、 標籤、 公用或私用狀態，或其他使用者可存取的準則。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>是資料指標，初始化為動態清單的開頭。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>You can move the cursor to the first queue of the enumeration by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">您可以將游標移至列舉型別的第一個佇列藉由呼叫<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>After the enumerator has been initialized, you can use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to step forward through the remaining queues.</source>
          <target state="translated">初始化列舉值之後，您可以使用<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>逐步剩餘的佇列。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>It is not possible to step backward with a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
          <target state="translated">不可能藉由向後逐步<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A cursor only allows forward movement through the queue enumeration.</source>
          <target state="translated">資料指標只允許佇列列舉型別中的向前移動。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>However, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to reset the enumeration and put the cursor at the beginning of the list again.</source>
          <target state="translated">不過，您可以呼叫<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph>重設列舉型別，並將游標放在清單的開頭一次。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</source>
          <target state="translated">列舉值是動態的因為附加資料指標的目前位置之後的佇列可以存取的列舉值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</source>
          <target state="translated">沒有先呼叫 Reset，無法存取插入資料指標的目前位置之前的佇列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>The following code example iterates through all the message queues in the network, and examines the path for each queue.</source>
          <target state="translated">下列程式碼範例會逐一查看網路中的所有訊息佇列，並檢查每個佇列的路徑。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Finally, it displays the number of public queues on the network.</source>
          <target state="translated">最後，它會在網路上顯示公用佇列的數目。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">釋放與列舉值相關的資源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>The operating system retains an open handle, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, to the queue enumerator during the lifetime of the cursor.</source>
          <target state="translated">作業系統會保留未開啟的控制代碼， <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>，佇列列舉值的資料指標的存留期間。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>When you finish working with the enumerator, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to release the resources associated with the handle.</source>
          <target state="translated">當您完成使用列舉值時，呼叫<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph>釋放控制代碼相關聯的資源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">取得列舉型別的目前 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">資料指標目前所在的佇列。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>When the enumerator is created, it does not point to anything, so <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">建立列舉值時，它未指向任何項目，因此<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph>不正確，如果它存取將會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You must call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to position the cursor at the first queue in the enumeration.</source>
          <target state="translated">您必須呼叫<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>若要將指標放在列舉中的第一個佇列。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> with no intervening calls to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object.</source>
          <target state="translated">多個呼叫<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph>沒有中介呼叫<ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>傳回相同<ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> before the first call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</source>
          <target state="translated">在第一次呼叫 <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> 之前，請先呼叫 <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The cursor is located before the first queue in the enumeration.</source>
          <target state="translated">資料指標位於列舉型別中第一個佇列的前面。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> after a call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> had returned false (indicating the cursor is located after the last queue in the enumeration).</source>
          <target state="translated">您在呼叫 <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> 之後呼叫 <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>，會傳回 False (表示游標位於列舉型別最後的佇列之後)。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> 使用的資源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>允許所使用的資源<ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>都重新配置用於其他用途。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">覆寫 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 時，請小心不要參考到先前已在對 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 的早期呼叫中被處置 (Dispose) 的物件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>Gets the native Message Queuing handle used to locate queues in a network.</source>
          <target state="translated">取得用來尋找網路中佇列的原生 (Native) 訊息佇列控制代碼。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The native handle to the current queue.</source>
          <target state="translated">目前佇列的原生控制代碼。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>When you no longer need this <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> instance, call <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to free this handle to the resource.</source>
          <target state="translated">當您不再需要此<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>執行個體，請呼叫<ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph>來釋放資源的這個控制代碼。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The handle does not exist.</source>
          <target state="translated">控制代碼不存在。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">呼叫程式碼沒有瀏覽權限。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Advances the enumerator to the next queue of the enumeration, if one is currently available.</source>
          <target state="translated">如果目前有可用的列舉值，讓列舉值前進至列舉型別的下一個佇列。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next queue; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has reached the end of the enumeration.</source>
          <target state="translated">如果列舉值成功地前移至下一個佇列則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果列舉值已經到達列舉型別的結尾，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph> immediately if there are no queues associated with the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> 傳回<ph id="ph2">`false`</ph>立即是否有任何列舉型別相關聯的佇列。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> 會傳回<ph id="ph2">`true`</ph>直到它到達集合結尾。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">然後它會傳回<ph id="ph1">`false`</ph>針對每個後續的呼叫。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>However once <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> property will throw an exception.</source>
          <target state="translated">儘管如此，只要<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>、 存取<ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph>屬性將會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Upon creation, an enumerator is conceptually positioned before the first <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> of the enumeration, and the first call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> brings the first queue of the enumeration into view.</source>
          <target state="translated">在建立列舉值會在概念上位於第一個<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>列舉型別，以及第一次呼叫<ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>使檢視列舉型別的第一個佇列。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">呼叫程式碼沒有瀏覽權限。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Resets the cursor, so it points to the beginning of the enumeration.</source>
          <target state="translated">重設資料指標，讓它指向列舉型別的開頭。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">列舉值會順向的方向移動。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Use this method to return to the beginning of the enumeration of queues.</source>
          <target state="translated">使用此方法傳回的列舉佇列的開頭。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> positions the cursor at the first queue in the list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> 將游標放在清單中第一個佇列的時間。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>You do not need to call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to move the cursor forward to the first queue in the enumeration.</source>
          <target state="translated">您不需要呼叫<ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>之後呼叫<ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph>將游標向前移至列舉中的第一個佇列。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">取得列舉型別的目前 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">資料指標目前所在的佇列。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>