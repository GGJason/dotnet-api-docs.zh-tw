<Type Name="ReceiveCompletedEventHandler" FullName="System.Messaging.ReceiveCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00e53719c588c64ba83e2b909d4a82cac38dc523" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ReceiveCompletedEventHandler(object sender, ReceiveCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ReceiveCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ReceiveCompletedEventHandler(sender As Object, e As ReceiveCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ReceiveCompletedEventHandler(System::Object ^ sender, ReceiveCompletedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Messaging.ReceiveCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="6307b-101">事件的來源：<see cref="T:System.Messaging.MessageQueue" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6307b-101">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="6307b-102">
        <see cref="T:System.Messaging.ReceiveCompletedEventArgs" />，其中包含事件資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6307b-102">A <see cref="T:System.Messaging.ReceiveCompletedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="6307b-103">代表將處理 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 之 <see cref="T:System.Messaging.MessageQueue" /> 事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6307b-103">Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6307b-104">建立 <xref:System.Messaging.ReceiveCompletedEventHandler> 委派時，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="6307b-104">When you create a <xref:System.Messaging.ReceiveCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="6307b-105">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="6307b-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="6307b-106">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="6307b-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="6307b-107">如需事件處理常式委派的詳細資訊，請參閱[NIB： 事件和委派](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)。</span><span class="sxs-lookup"><span data-stu-id="6307b-107">For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6307b-108">下列程式碼範例說明如何建立事件委派 (<xref:System.Messaging.ReceiveCompletedEventHandler>) 事件處理常式 (`MyReceiveCompleted`) 並與<xref:System.Messaging.MessageQueue.ReceiveCompleted?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="6307b-108">The following code example illustrates how to create an event delegate (<xref:System.Messaging.ReceiveCompletedEventHandler>) for the event handler (`MyReceiveCompleted`) and associate it with the <xref:System.Messaging.MessageQueue.ReceiveCompleted?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6307b-109">事件處理常式會接收來自佇列的訊息，並將其標籤寫入螢幕。</span><span class="sxs-lookup"><span data-stu-id="6307b-109">The event handler receives a message from a queue, and writes its label to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventArgs" />
  </Docs>
</Type>