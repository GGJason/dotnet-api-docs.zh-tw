<Type Name="BinaryMessageFormatter" FullName="System.Messaging.BinaryMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9c3b9e98a7efb333220c82d2e1ef284c341cd7c" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48728002" /></Metadata><TypeSignature Language="C#" Value="public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.BinaryMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type BinaryMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8832d-101">使用二進位格式將訊息佇列訊息的主體序列化或還原序列化物件，或連接物件的整個圖解。</span><span class="sxs-lookup"><span data-stu-id="8832d-101">Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8832d-102"><xref:System.Messaging.BinaryMessageFormatter>非常有效率，而且可用來將大部分的物件序列化。</span><span class="sxs-lookup"><span data-stu-id="8832d-102">The <xref:System.Messaging.BinaryMessageFormatter> is very efficient and can be used to serialize most objects.</span></span> <span data-ttu-id="8832d-103">結果是非常精簡且快速剖析，但並不允許鬆散偶合的傳訊即<xref:System.Messaging.XmlMessageFormatter>沒有。</span><span class="sxs-lookup"><span data-stu-id="8832d-103">The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does.</span></span> <span data-ttu-id="8832d-104">用戶端和伺服器可以獨立版本的型別傳送和接收鬆散偶合的方式。</span><span class="sxs-lookup"><span data-stu-id="8832d-104">Loosely coupled means that the client and the server can independently version the type that is sent and received.</span></span>  
  
 <span data-ttu-id="8832d-105">當應用程式會傳送訊息至佇列使用的執行個體<xref:System.Messaging.MessageQueue>類別，格式器會將物件序列化成資料流，並將它插入訊息內文。</span><span class="sxs-lookup"><span data-stu-id="8832d-105">When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="8832d-106">讀取佇列使用時<xref:System.Messaging.MessageQueue>，格式器會將訊息資料還原序列化<xref:System.Messaging.Message.Body%2A>屬性<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="8832d-106">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="8832d-107"><xref:System.Messaging.BinaryMessageFormatter> 提供更快速的輸送量比<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="8832d-107"><xref:System.Messaging.BinaryMessageFormatter> provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="8832d-108">使用<xref:System.Messaging.BinaryMessageFormatter>當純的速度而不是鬆散偶合的傳訊想要使用。</span><span class="sxs-lookup"><span data-stu-id="8832d-108">Use the <xref:System.Messaging.BinaryMessageFormatter> when pure speed rather than loosely coupled messaging is desired.</span></span>  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.XmlMessageFormatter" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="P:System.Messaging.Message.Formatter" />
    <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8832d-109">初始化 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8832d-109">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8832d-110">初始化 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 類別的新執行個體，而不指定型別樣式或最上層物件組件樣式。</span><span class="sxs-lookup"><span data-stu-id="8832d-110">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class without specifying a type style or top object assembly style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8832d-111">您必須指定值<xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>屬性 （會定義如何在圖形中的根物件配置） 和<xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>屬性 （會定義物件型別描述的配置方式） 使用的執行個體之前<xref:System.Messaging.BinaryMessageFormatter>類別序列化並傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="8832d-111">You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topObjectFormat As FormatterAssemblyStyle, typeFormat As FormatterTypeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle topObjectFormat, System::Runtime::Serialization::Formatters::FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="F#" Value="new System.Messaging.BinaryMessageFormatter : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.Formatters.FormatterTypeStyle -&gt; System.Messaging.BinaryMessageFormatter" Usage="new System.Messaging.BinaryMessageFormatter (topObjectFormat, typeFormat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topObjectFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="typeFormat" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Parameters>
      <Docs>
        <param name="topObjectFormat"><span data-ttu-id="8832d-112">決定如何在序列資料流中配置圖形的上層 (根) 物件。</span><span class="sxs-lookup"><span data-stu-id="8832d-112">Determines how the top (root) object of a graph is laid out in the serialized stream.</span></span></param>
        <param name="typeFormat"><span data-ttu-id="8832d-113">決定如何在序列資料流中配置型別描述。</span><span class="sxs-lookup"><span data-stu-id="8832d-113">Determines how type descriptions are laid out in the serialized stream.</span></span></param>
        <summary><span data-ttu-id="8832d-114">初始化 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 類別的新執行個體，指定根物件和型別描述的格式。</span><span class="sxs-lookup"><span data-stu-id="8832d-114">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root object and the type descriptions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="binaryMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8832d-115">要檢查的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="8832d-115">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="8832d-116">決定格式子是否能夠還原序列化訊息的內容。</span><span class="sxs-lookup"><span data-stu-id="8832d-116">Determines whether the formatter can deserialize the contents of the message.</span></span></summary>
        <returns><span data-ttu-id="8832d-117">如果二進位訊息格式子可以將訊息還原序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8832d-117"><see langword="true" /> if the binary message formatter can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8832d-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> 傳回`false`如果訊息本文不是二進位物件。</span><span class="sxs-lookup"><span data-stu-id="8832d-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `false` if the message body is not a binary object.</span></span>  
  
 <span data-ttu-id="8832d-119">在接收端電腦上，<xref:System.Messaging.BinaryMessageFormatter.CanRead%2A>傳回`true`如果要還原序列化類別的組件存在於本機。</span><span class="sxs-lookup"><span data-stu-id="8832d-119">On the receiving computer, <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `true` if the assembly for the class to be deserialized exists locally.</span></span> <span data-ttu-id="8832d-120">組件必須位於全域組件快取中，或連結至應用程式 （例如，如果該物件所代表的自訂類別）。</span><span class="sxs-lookup"><span data-stu-id="8832d-120">The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8832d-121"><paramref name="message" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8832d-121">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="binaryMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8832d-122">建立 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 類別的執行個體，其讀取/寫入屬性 (根物件和型別描述格式) 和目前的 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="8832d-122">Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="8832d-123">物件，其屬性和這個 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 的屬性相同，但是其中繼資料 (Metadata) 沒有指定它為格式子類別執行個體。</span><span class="sxs-lookup"><span data-stu-id="8832d-123">An object whose properties are identical to those of this <see cref="T:System.Messaging.BinaryMessageFormatter" />, but whose metadata does not specify it to be a formatter class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8832d-124">這個方法會建立一份格式器，並初始化其所有屬性的值，這個<xref:System.Messaging.BinaryMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="8832d-124">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>.</span></span> <span data-ttu-id="8832d-125">它用於延展性，但不保證讀取或寫入安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="8832d-125">It is used for scalability, but does not guarantee read or write thread safety.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="binaryMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8832d-126">要還原序列化的 <see cref="T:System.Messaging.Message" />，格式為二進位格式。</span><span class="sxs-lookup"><span data-stu-id="8832d-126">The <see cref="T:System.Messaging.Message" />, in binary format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="8832d-127">讀取指定訊息的內容，並建立包含還原序列化訊息的物件。</span><span class="sxs-lookup"><span data-stu-id="8832d-127">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="8832d-128">還原序列化的訊息。</span><span class="sxs-lookup"><span data-stu-id="8832d-128">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="8832d-129">訊息的主體必須是以二進位格式，和相同的序列化程式必須用來還原序列化開始序列化它的訊息。</span><span class="sxs-lookup"><span data-stu-id="8832d-129">The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.</span></span> <span data-ttu-id="8832d-130">如果主體代表的自訂類別，該類別的組件必須存在於本機。</span><span class="sxs-lookup"><span data-stu-id="8832d-130">If the body represents a custom class, the assembly for that class must exist locally.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8832d-131">訊息的 <see cref="P:System.Messaging.Message.BodyType" /> 屬性不是一個二進位物件。</span><span class="sxs-lookup"><span data-stu-id="8832d-131">The message's <see cref="P:System.Messaging.Message.BodyType" /> property does not indicate a binary object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8832d-132"><paramref name="message" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8832d-132">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TopObjectFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObjectFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle TopObjectFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TopObjectFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTopObjectFormat")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8832d-133">取得或設定值，定義在尋找和載入圖形之最上層 (根) 物件的組件時還原序列化它的方式。</span><span class="sxs-lookup"><span data-stu-id="8832d-133">Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</span></span></summary>
        <value><span data-ttu-id="8832d-134">其中一個 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 值，定義還原序列化 (Deserialization) 行為。</span><span class="sxs-lookup"><span data-stu-id="8832d-134">One of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values that defines the deserialization behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8832d-135">目前，您應接受預設值， `AssemblyStyle`。</span><span class="sxs-lookup"><span data-stu-id="8832d-135">Currently, you should accept the default value, `AssemblyStyle`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFormat : System.Runtime.Serialization.Formatters.FormatterTypeStyle with get, set" Usage="System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTypeFormat")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8832d-136">取得或設定數值，定義如何在序列資料流中配置型別描述。</span><span class="sxs-lookup"><span data-stu-id="8832d-136">Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</span></span></summary>
        <value><span data-ttu-id="8832d-137"><see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />，定義型別描述的格式。</span><span class="sxs-lookup"><span data-stu-id="8832d-137">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /> that defines the type description format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8832d-138">目前，您應接受預設值， `TypesWhenNeeded`。</span><span class="sxs-lookup"><span data-stu-id="8832d-138">Currently, you should accept the default value, `TypesWhenNeeded`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="binaryMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8832d-139"><see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Body" /> 屬性會包含序列化物件。</span><span class="sxs-lookup"><span data-stu-id="8832d-139">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="8832d-140">要序列化到訊息本文中的物件。</span><span class="sxs-lookup"><span data-stu-id="8832d-140">The object to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="8832d-141">將物件序列化到訊息主體中。</span><span class="sxs-lookup"><span data-stu-id="8832d-141">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8832d-142">最上層物件格式和類型的格式不需要指定將寫入佇列，因為兩者必須讀取時。</span><span class="sxs-lookup"><span data-stu-id="8832d-142">The top object format and type format need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="8832d-143"><xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>和<xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>訊息還原序列化時，才於格式子使用屬性。</span><span class="sxs-lookup"><span data-stu-id="8832d-143">The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="8832d-144"><xref:System.Messaging.BinaryMessageFormatter>可將大部分的物件序列化，但不鬆散偶合的結果。</span><span class="sxs-lookup"><span data-stu-id="8832d-144">The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled.</span></span> <span data-ttu-id="8832d-145">不過，它會精簡，讓格式器可以有效地用於大型物件。</span><span class="sxs-lookup"><span data-stu-id="8832d-145">However, it is compact, so the formatter is efficient for large objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8832d-146"><paramref name="message" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8832d-146">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>