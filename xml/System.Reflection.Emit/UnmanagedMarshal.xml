<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0cc65dc705ad772006fc1ad150ace04e6adfb8e1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36547168" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <TypeSignature Language="F#" Value="type UnmanagedMarshal = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f8c71-101">表示描述如何從 Managed 到 Unmanaged 程式碼封送處理欄位的類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8c71-101">Represents the class that describes how to marshal a field from managed to unmanaged code.</span>
      </span>
      <span data-ttu-id="f8c71-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8c71-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-103">程式碼範例示範此過時的型別的因應措施。</span><span class="sxs-lookup"><span data-stu-id="f8c71-103">The code example shows the workaround for this obsolete type.</span></span>  
  
 <span data-ttu-id="f8c71-104">封送處理是封裝和 unpackaging 參數的程序，因此可能會發生遠端程序呼叫。</span><span class="sxs-lookup"><span data-stu-id="f8c71-104">Marshaling is the process of packaging and unpackaging parameters so remote procedure calls can occur.</span></span> <span data-ttu-id="f8c71-105">在封送處理，當 managed 型別的格式對應的 unmanaged 類型的格式欄位時，可能會經歷格式轉換。</span><span class="sxs-lookup"><span data-stu-id="f8c71-105">During marshaling, a field might undergo a format conversion when the format of the managed type is different from the format of the corresponding unmanaged type.</span></span> <span data-ttu-id="f8c71-106">例如，您可能要封送處理`String`與未受管理的 BSTR 類型。</span><span class="sxs-lookup"><span data-stu-id="f8c71-106">For example, you might want to marshal a `String` type as an unmanaged BSTR.</span></span> <span data-ttu-id="f8c71-107">執行階段會自動處理某些格式轉換。</span><span class="sxs-lookup"><span data-stu-id="f8c71-107">Some format conversions are handled automatically by the runtime.</span></span> <span data-ttu-id="f8c71-108">若要覆寫預設行為，您必須使用`UnmanagedMarshal`類別來定義格式轉換。</span><span class="sxs-lookup"><span data-stu-id="f8c71-108">To override the default behavior, you must use the `UnmanagedMarshal` class to define the format conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8c71-109">下列程式碼範例顯示取代程式碼過時<xref:System.Reflection.Emit.UnmanagedMarshal>型別。</span><span class="sxs-lookup"><span data-stu-id="f8c71-109">The following code example shows replacement code for the obsolete <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span></span> <span data-ttu-id="f8c71-110">這個範例會發出名為單一模組組件`EmitMarshalAs.dll`，其中包含名為型別`Sample`。</span><span class="sxs-lookup"><span data-stu-id="f8c71-110">The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`.</span></span> <span data-ttu-id="f8c71-111">類型具有名為的方法`Test`，具有一個參數的型別<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="f8c71-111">The type has a method named `Test`, with one parameter of type <xref:System.String>.</span></span> <span data-ttu-id="f8c71-112">程式碼範例會在套用<xref:System.Runtime.InteropServices.MarshalAsAttribute>與<xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType>至參數。</span><span class="sxs-lookup"><span data-stu-id="f8c71-112">The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> to the parameter.</span></span>  
  
 <span data-ttu-id="f8c71-113">您可以使用[Ildasm.exe （IL 解譯器）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)檢查發出的組件，並觀察參數標示`marshal(bstr)`。</span><span class="sxs-lookup"><span data-stu-id="f8c71-113">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.</span></span>  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8c71-114">取得 Unmanaged 基底型別 (Base Type)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-114">Gets an unmanaged base type.</span>
          </span>
          <span data-ttu-id="f8c71-115">這個屬性是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-115">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8c71-116">
            <see langword="UnmanagedType" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-116">An <see langword="UnmanagedType" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8c71-117">Unmanaged 型別不是 <see langword="LPArray" /> 或 <see langword="SafeArray" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-117">The unmanaged type is not an <see langword="LPArray" /> or a <see langword="SafeArray" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValArray : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValArray elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">
          <span data-ttu-id="f8c71-118">固定長度陣列中的元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-118">The number of elements in the fixed-length array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8c71-119">指定要封送處理的固定長度陣列 (ByValArray) 至 Unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-119">Specifies a fixed-length array (ByValArray) to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8c71-120">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-120">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-121">`DefineByValArray`方法不是簡單的原生封送處理。</span><span class="sxs-lookup"><span data-stu-id="f8c71-121">The `DefineByValArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="f8c71-122">您可以使用這些靜態建構函式進行只 unmanaged 封送處理結構。</span><span class="sxs-lookup"><span data-stu-id="f8c71-122">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="f8c71-123">封送處理陣列是更複雜的程序比整數參數封送處理。</span><span class="sxs-lookup"><span data-stu-id="f8c71-123">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="f8c71-124">陣列成員會複製特定的順序，以便在另一端可以完全重建陣列。</span><span class="sxs-lookup"><span data-stu-id="f8c71-124">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8c71-125">這個引數不是簡單的原生型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-125">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValTStr : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">
          <span data-ttu-id="f8c71-126">固定陣列緩衝區中的元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-126">The number of elements in the fixed array buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8c71-127">指定要封送處理的固定陣列緩衝區 (ByValTStr) 字串至 Unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-127">Specifies a string in a fixed array buffer (ByValTStr) to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8c71-128">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-128">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-129">`DefineByValStr`方法不是簡單的原生封送處理。</span><span class="sxs-lookup"><span data-stu-id="f8c71-129">The `DefineByValStr` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="f8c71-130">您可以使用這些靜態建構函式進行只 unmanaged 封送處理結構。</span><span class="sxs-lookup"><span data-stu-id="f8c71-130">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="f8c71-131">封送處理陣列是更複雜的程序比整數參數封送處理。</span><span class="sxs-lookup"><span data-stu-id="f8c71-131">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="f8c71-132">陣列成員會複製特定的順序，以便在另一端可以完全重建陣列。</span><span class="sxs-lookup"><span data-stu-id="f8c71-132">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8c71-133">這個引數不是簡單的原生型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-133">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineLPArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineLPArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">
          <span data-ttu-id="f8c71-134">要封送處理陣列的目的 Unmanaged 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-134">The unmanaged type to which to marshal the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8c71-135">指定要封送處理的 <see langword="LPArray" /> 至 Unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-135">Specifies an <see langword="LPArray" /> to marshal to unmanaged code.</span>
          </span>
          <span data-ttu-id="f8c71-136">
            <see langword="LPArray" /> 的長度是由實際封送處理陣列大小在執行階段時決定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-136">The length of an <see langword="LPArray" /> is determined at runtime by the size of the actual marshaled array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8c71-137">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-137">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-138">`DefineLPArray`方法不是簡單的原生封送處理。</span><span class="sxs-lookup"><span data-stu-id="f8c71-138">The `DefineLPArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="f8c71-139">您可以使用這些靜態建構函式進行只 unmanaged 封送處理結構。</span><span class="sxs-lookup"><span data-stu-id="f8c71-139">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="f8c71-140">封送處理陣列是更複雜的程序比整數參數封送處理。</span><span class="sxs-lookup"><span data-stu-id="f8c71-140">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="f8c71-141">陣列成員會複製特定的順序，以便在另一端可以完全重建陣列。</span><span class="sxs-lookup"><span data-stu-id="f8c71-141">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8c71-142">這個引數不是簡單的原生型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-142">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineSafeArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">
          <span data-ttu-id="f8c71-143">每個陣列元素的基底型別或 <see langword="UnmanagedType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-143">The base type or the <see langword="UnmanagedType" /> of each element of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8c71-144">指定要封送處理的 <see langword="SafeArray" /> 至 Unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-144">Specifies a <see langword="SafeArray" /> to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8c71-145">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-145">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-146">`DefineSafeArray`方法不是簡單的原生封送處理。</span><span class="sxs-lookup"><span data-stu-id="f8c71-146">The `DefineSafeArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="f8c71-147">您可以使用這些靜態建構函式進行只 unmanaged 封送處理結構。</span><span class="sxs-lookup"><span data-stu-id="f8c71-147">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="f8c71-148">封送處理陣列是更複雜的程序比整數參數封送處理。</span><span class="sxs-lookup"><span data-stu-id="f8c71-148">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="f8c71-149">陣列成員會複製特定的順序，以便在另一端可以完全重建陣列。</span><span class="sxs-lookup"><span data-stu-id="f8c71-149">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8c71-150">這個引數不是簡單的原生型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-150">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberSignature Language="F#" Value="static member DefineUnmanagedMarshal : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal unmanagedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType">
          <span data-ttu-id="f8c71-151">要封送處理型別的目的 Unmanaged 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-151">The unmanaged type to which the type is to be marshaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8c71-152">指定將封送處理至 Unmanaged 程式碼的所指定型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-152">Specifies a given type that is to be marshaled to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8c71-153">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-153">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-154"><xref:System.Runtime.InteropServices.UnmanagedType>傳遞給這個方法必須是簡單的原生類型。</span><span class="sxs-lookup"><span data-stu-id="f8c71-154">The <xref:System.Runtime.InteropServices.UnmanagedType> passed to this method must be a simple native type.</span></span> <span data-ttu-id="f8c71-155">可能使用任何下列值： <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>， <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>， <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>， <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>，或<xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f8c71-155">None of the following values may be used: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8c71-156">Unmanaged 封送處理建構只可使用此方法。</span><span class="sxs-lookup"><span data-stu-id="f8c71-156">Only unmanaged marshal constructs can be made using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8c71-157">這個引數不是簡單的原生型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-157">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementCount : int" Usage="System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8c71-158">取得數字元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-158">Gets a number element.</span>
          </span>
          <span data-ttu-id="f8c71-159">這個屬性是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-159">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8c71-160">整數，指出元素計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-160">An integer indicating the element count.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-161">沒有`ElementCount`只有當此時`NativeTypeFixedArray`。</span><span class="sxs-lookup"><span data-stu-id="f8c71-161">There is an `ElementCount` only if there is a `NativeTypeFixedArray`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8c71-162">引數不是 Unmanaged 元素計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-162">The argument is not an unmanaged element count.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.GetUnmanagedType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8c71-163">指出 Unmanaged 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-163">Indicates an unmanaged type.</span>
          </span>
          <span data-ttu-id="f8c71-164">這個屬性是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-164">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8c71-165">
            <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-165">An <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-166">`GetUnmanagedType`屬性是原生類型的存取子函式。</span><span class="sxs-lookup"><span data-stu-id="f8c71-166">The `GetUnmanagedType` property is an accessor function for the native type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.IIDGuid : Guid" Usage="System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8c71-167">取得 GUID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-167">Gets a GUID.</span>
          </span>
          <span data-ttu-id="f8c71-168">這個屬性是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-168">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8c71-169">
            <see cref="T:System.Guid" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-169">A <see cref="T:System.Guid" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c71-170">這個屬性永遠會傳回 Guid.Empty。</span><span class="sxs-lookup"><span data-stu-id="f8c71-170">This property always returns Guid.Empty.</span></span> <span data-ttu-id="f8c71-171">這個屬性可能會在未來版本中移除。</span><span class="sxs-lookup"><span data-stu-id="f8c71-171">This property might be removed in a future release.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8c71-172">引數不是自訂封送處理器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8c71-172">The argument is not a custom marshaler.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>