<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExceptionHandler.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac531be605a3b3574a4ee5c98e1a592436afc3340c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31be605a3b3574a4ee5c98e1a592436afc3340c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Emit.ExceptionHandler">
          <source>Represents an exception handler in a byte array of IL to be passed to a method such as <ph id="ph1">&lt;see cref="M:System.Reflection.Emit.MethodBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" /&gt;</ph>.</source>
          <target state="translated">代表 IL 位元組陣列中要傳遞至方法的例外狀況處理常式，例如 <ph id="ph1">&lt;see cref="M:System.Reflection.Emit.MethodBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The byte offset of the first instruction protected by this exception handler.</source>
          <target state="translated">受此例外狀況處理常式保護的第一個指令的位元組位移。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The number of bytes protected by this exception handler.</source>
          <target state="translated">這個例外狀況處理常式所保護的位元組數目。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The byte offset of the beginning of the filter code.</source>
          <target state="translated">篩選代碼開頭的位元組位移。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The filter code ends at the first instruction of the handler block.</source>
          <target state="translated">篩選程式碼結束於處理常式區塊的第一個指令。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>For non-filter exception handlers, specify 0 (zero) for this parameter.</source>
          <target state="translated">對於非篩選例外狀況處理常式，將這個參數指定為 0 (零)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The byte offset of the first instruction of this exception handler.</source>
          <target state="translated">此例外狀況處理常式的第一個指令的位元組位移。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The number of bytes in this exception handler.</source>
          <target state="translated">這個例外狀況處理常式中的位元組數目。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>One of the enumeration values that specifies the kind of exception handler.</source>
          <target state="translated">其中一個列舉值，這個值指定例外狀況處理常式的類型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The token of the exception type handled by this exception handler.</source>
          <target state="translated">這個例外狀況處理常式所處理之例外狀況型別的權杖。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>If not applicable, specify 0 (zero).</source>
          <target state="translated">如果不適用，則指定 0 (零)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> class with the specified parameters.</source>
          <target state="translated">使用指定的參數，初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="tryOffset" /&gt;</ph>, <ph id="ph2">&lt;paramref name="filterOffset" /&gt;</ph>, <ph id="ph3">&lt;paramref name="handlerOffset" /&gt;</ph>, <ph id="ph4">&lt;paramref name="tryLength" /&gt;</ph>, or <ph id="ph5">&lt;paramref name="handlerLength" /&gt;</ph> are negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tryOffset" /&gt;</ph>, 、<ph id="ph2">&lt;paramref name="filterOffset" /&gt;</ph>、 <ph id="ph3">&lt;paramref name="handlerOffset" /&gt;</ph>、<ph id="ph4">&lt;paramref name="tryLength" /&gt;</ph> 或 <ph id="ph5">&lt;paramref name="handlerLength" /&gt;</ph> 為負數。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Reflection.Emit.ExceptionHandler">
          <source>Indicates whether this instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">指出 <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 物件的這個執行個體是否等於指定的物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Object)">
          <source>The object to compare this instance to.</source>
          <target state="translated">要與這個執行個體相比較的物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Object)">
          <source>Indicates whether this instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">指出 <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 物件的這個執行個體是否等於指定的物件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this instance are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 和這個執行個體相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為  <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)">
          <source>The exception handler object to compare this instance to.</source>
          <target state="translated">要與這個執行個體相比較的例外狀況處理常式物件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)">
          <source>Indicates whether this instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> object is equal to another <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> object.</source>
          <target state="translated">指出 <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 物件的這個執行個體是否等於另一個 <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="other" /&gt;</ph> and this instance are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="other" /&gt;</ph> 和這個執行個體相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為  <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken">
          <source>Gets the token of the exception type handled by this handler.</source>
          <target state="translated">取得這個處理常式所處理之例外狀況型別的權杖。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken">
          <source>The token of the exception type handled by this handler, or 0 if none exists.</source>
          <target state="translated">這個處理常式所處理之例外狀況型別的權杖，如果不存在則為 0。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.FilterOffset">
          <source>Gets the byte offset at which the filter code for the exception handler begins.</source>
          <target state="translated">取得位元組位移，例外狀況處理常式保護的篩選程式碼從這裡開始。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.FilterOffset">
          <source>The byte offset at which the filter code begins, or 0 if no filter  is present.</source>
          <target state="translated">位元組位移，篩選條件程式碼從此開始，若沒有篩選條件則為 0。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.GetHashCode">
          <source>Serves as the default hash function.</source>
          <target state="translated">做為預設雜湊函式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.GetHashCode">
          <source>The hash code for the current object.</source>
          <target state="translated">目前物件的雜湊碼。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.HandlerLength">
          <source>Gets the length, in bytes, of the exception handler.</source>
          <target state="translated">取得例外狀況處理常式的長度，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.HandlerLength">
          <source>The length, in bytes, of the exception handler.</source>
          <target state="translated">例外狀況處理常式的長度，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.HandlerOffset">
          <source>Gets the byte offset of the first instruction of the exception handler.</source>
          <target state="translated">取得例外狀況處理常式的第一個指令的位元組位移。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.HandlerOffset">
          <source>The byte offset of the first instruction of the exception handler.</source>
          <target state="translated">例外狀況處理常式的第一個指令的位元組位移。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.Kind">
          <source>Gets a value that represents the kind of exception handler this object represents.</source>
          <target state="translated">取得值，表示這個物件所表示的例外狀況處理常式類型。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.Kind">
          <source>One of the enumeration values that specifies the kind of exception handler.</source>
          <target state="translated">其中一個列舉值，這個值指定例外狀況處理常式的類型。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>The first object to compare.</source>
          <target state="translated">要比較的第一個物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>The second object to compare.</source>
          <target state="translated">要比較的第二個物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> are equal.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 的兩個指定執行個體是否相等。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>The first object to compare.</source>
          <target state="translated">要比較的第一個物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>The second object to compare.</source>
          <target state="translated">要比較的第二個物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> are not equal.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 的兩個指定執行個體是否不相等。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.TryLength">
          <source>Gets the length, in bytes, of the code protected by this exception handler.</source>
          <target state="translated">取得這個例外狀況處理常式所保護的程式碼的長度 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.TryLength">
          <source>The length, in bytes, of the code protected by this exception handler.</source>
          <target state="translated">這個例外狀況處理常式所保護的程式碼的長度 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.TryOffset">
          <source>Gets the byte offset at which the code that is protected by this exception handler begins.</source>
          <target state="translated">取得位元組位移，受到這個例外狀況處理常式保護的程式碼從這裡開始。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.TryOffset">
          <source>The byte offset at which the code that is protected by this exception handler begins.</source>
          <target state="translated">位元組位移，受到這個例外狀況處理常式保護的程式碼從這裡開始。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>