<Type Name="OpCode" FullName="System.Reflection.Emit.OpCode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aacfcf36f607b9dd11e29311d6fa4ad2f3d5d77a" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52248319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct OpCode" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit OpCode extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.OpCode" />
  <TypeSignature Language="VB.NET" Value="Public Structure OpCode" />
  <TypeSignature Language="C++ CLI" Value="public value class OpCode" />
  <TypeSignature Language="F#" Value="type OpCode = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a8a50-101">描述 Intermediate Language (IL) 指令。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8a50-101">Describes an intermediate language (IL) instruction.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-102">指出目前執行個體和指定的物件是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-102">Indicates whether the current instance is equal to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="opCode.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a8a50-103">要與這個物件比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-103">The object to compare to this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a50-104">測試指定物件是否等於這個 <see langword="Opcode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-104">Tests whether the given object is equal to this <see langword="Opcode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a50-105">如果 <see langword="Opcode" /> 是 <paramref name="obj" /> 的執行個體，並且與這個物件相等，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-105">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see langword="Opcode" /> and is equal to this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Reflection.Emit.OpCode obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Reflection.Emit.OpCode obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As OpCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Reflection::Emit::OpCode obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Reflection.Emit.OpCode -&gt; bool" Usage="opCode.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Reflection.Emit.OpCode" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a8a50-106">要與目前執行個體相比較的 <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-106">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a50-107">指出目前的執行個體和指定的 <see cref="T:System.Reflection.Emit.OpCode" /> 是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-107">Indicates whether the current instance is equal to the specified <see cref="T:System.Reflection.Emit.OpCode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a50-108">如果 <paramref name="obj" /> 的值和目前執行個體的值相等則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-108">
              <see langword="true" /> if the value of <paramref name="obj" /> is equal to the value of the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowControl">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FlowControl FlowControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.FlowControl FlowControl" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.FlowControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FlowControl As FlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::FlowControl FlowControl { System::Reflection::Emit::FlowControl get(); };" />
      <MemberSignature Language="F#" Value="member this.FlowControl : System.Reflection.Emit.FlowControl" Usage="System.Reflection.Emit.OpCode.FlowControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FlowControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-109">Intermediate Language (IL) 指令的流量控制 (Flow Control) 特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-109">The flow control characteristics of the intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a50-110">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-110">Read-only.</span>
          </span>
          <span data-ttu-id="a8a50-111">流程控制的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-111">The type of flow control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="opCode.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-112">傳回這個 <see langword="Opcode" /> 的已產生雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-112">Returns the generated hash code for this <see langword="Opcode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a50-113">傳回這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-113">Returns the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.OpCode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-114">Intermediate Language (IL) 指令的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-114">The name of the intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a50-115">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-115">Read-only.</span>
          </span>
          <span data-ttu-id="a8a50-116">IL 指令的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-116">The name of the IL instruction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a50-117"><xref:System.Reflection.Emit.OpCode.Value%2A>屬性會傳回 IL 指令的數值。</span><span class="sxs-lookup"><span data-stu-id="a8a50-117">The <xref:System.Reflection.Emit.OpCode.Value%2A> property returns the numeric value of the IL instruction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.Emit.OpCode a, valuetype System.Reflection.Emit.OpCode b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As OpCode, b As OpCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Emit::OpCode a, System::Reflection::Emit::OpCode b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.Emit.OpCode * System.Reflection.Emit.OpCode -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="b" Type="System.Reflection.Emit.OpCode" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a8a50-118">要和 <paramref name="b" /> 比較的 <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-118">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to <paramref name="b" />.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="a8a50-119">要和 <paramref name="a" /> 比較的 <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-119">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to <paramref name="a" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a50-120">指出兩個 <see cref="T:System.Reflection.Emit.OpCode" /> 結構是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-120">Indicates whether two <see cref="T:System.Reflection.Emit.OpCode" /> structures are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a50-121">如果 <see langword="true" /> 等於 <paramref name="a" />，則為 <paramref name="b" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-121">
              <see langword="true" /> if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="a8a50-122">這個運算子的對等方法是<xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a8a50-122">The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.Emit.OpCode a, valuetype System.Reflection.Emit.OpCode b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As OpCode, b As OpCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Emit::OpCode a, System::Reflection::Emit::OpCode b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.Emit.OpCode * System.Reflection.Emit.OpCode -&gt; bool" Usage="System.Reflection.Emit.OpCode.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="b" Type="System.Reflection.Emit.OpCode" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a8a50-123">要和 <paramref name="b" /> 比較的 <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-123">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to <paramref name="b" />.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="a8a50-124">要和 <paramref name="a" /> 比較的 <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-124">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to <paramref name="a" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a50-125">指出兩個 <see cref="T:System.Reflection.Emit.OpCode" /> 結構是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-125">Indicates whether two <see cref="T:System.Reflection.Emit.OpCode" /> structures are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a50-126">如果 <see langword="true" /> 不等於 <paramref name="a" />，則為 <paramref name="b" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-126">
              <see langword="true" /> if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="a8a50-127">這個運算子的對等方法是<xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a8a50-127">The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpCodeType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.OpCodeType OpCodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.OpCodeType OpCodeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.OpCodeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpCodeType As OpCodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::OpCodeType OpCodeType { System::Reflection::Emit::OpCodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.OpCodeType : System.Reflection.Emit.OpCodeType" Usage="System.Reflection.Emit.OpCode.OpCodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.OpCodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-128">Intermediate Language (IL) 指令的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-128">The type of intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a50-129">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-129">Read-only.</span>
          </span>
          <span data-ttu-id="a8a50-130">Intermediate Language (IL) 指令的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-130">The type of intermediate language (IL) instruction.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperandType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.OperandType OperandType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.OperandType OperandType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.OperandType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperandType As OperandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::OperandType OperandType { System::Reflection::Emit::OperandType get(); };" />
      <MemberSignature Language="F#" Value="member this.OperandType : System.Reflection.Emit.OperandType" Usage="System.Reflection.Emit.OpCode.OperandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.OperandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-131">Intermediate Language (IL) 指令的運算元類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-131">The operand type of an intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a50-132">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-132">Read-only.</span>
          </span>
          <span data-ttu-id="a8a50-133">IL 指令的運算元類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-133">The operand type of an IL instruction.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : int" Usage="System.Reflection.Emit.OpCode.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-134">Intermediate Language (IL) 指令的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-134">The size of the intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a50-135">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-135">Read-only.</span>
          </span>
          <span data-ttu-id="a8a50-136">IL 指令的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-136">The size of the IL instruction.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StackBehaviourPop">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.StackBehaviour StackBehaviourPop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.StackBehaviour StackBehaviourPop" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.StackBehaviourPop" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackBehaviourPop As StackBehaviour" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::StackBehaviour StackBehaviourPop { System::Reflection::Emit::StackBehaviour get(); };" />
      <MemberSignature Language="F#" Value="member this.StackBehaviourPop : System.Reflection.Emit.StackBehaviour" Usage="System.Reflection.Emit.OpCode.StackBehaviourPop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-137">Intermediate Language (IL) 指令如何從堆疊中取出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-137">How the intermediate language (IL) instruction pops the stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a50-138">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-138">Read-only.</span>
          </span>
          <span data-ttu-id="a8a50-139">IL 指令從堆疊中取出的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-139">The way the IL instruction pops the stack.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StackBehaviourPush">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.StackBehaviour StackBehaviourPush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.StackBehaviour StackBehaviourPush" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.StackBehaviourPush" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackBehaviourPush As StackBehaviour" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::StackBehaviour StackBehaviourPush { System::Reflection::Emit::StackBehaviour get(); };" />
      <MemberSignature Language="F#" Value="member this.StackBehaviourPush : System.Reflection.Emit.StackBehaviour" Usage="System.Reflection.Emit.OpCode.StackBehaviourPush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-140">Intermediate Language (IL) 指令如何將運算元推送至堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-140">How the intermediate language (IL) instruction pushes operand onto the stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a50-141">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-141">Read-only.</span>
          </span>
          <span data-ttu-id="a8a50-142">IL 指令將運算元推送至堆疊的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-142">The way the IL instruction pushes operand onto the stack.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="opCode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-143">傳回這個 <see langword="Opcode" /> 做為 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-143">Returns this <see langword="Opcode" /> as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a50-144">傳回 <see cref="T:System.String" />，包含這個 <see langword="Opcode" /> 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-144">Returns a <see cref="T:System.String" /> containing the name of this <see langword="Opcode" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public short Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Value { short get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : int16" Usage="System.Reflection.Emit.OpCode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a50-145">取得中繼語言 (IL) 指令的數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-145">Gets the numeric value of the intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a50-146">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-146">Read-only.</span>
          </span>
          <span data-ttu-id="a8a50-147">IL 指令的數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a50-147">The numeric value of the IL instruction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a50-148"><xref:System.Reflection.Emit.OpCode.Name%2A>屬性會傳回對應的字串名稱指令的數值。</span><span class="sxs-lookup"><span data-stu-id="a8a50-148">The <xref:System.Reflection.Emit.OpCode.Name%2A> property returns the string name that corresponds to the instruction's numeric value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a50-149">下列範例顯示的屬性值<xref:System.Reflection.Emit.OpCodes.Add?displayProperty=nameWithType>指令。</span><span class="sxs-lookup"><span data-stu-id="a8a50-149">The following example displays the property values of the <xref:System.Reflection.Emit.OpCodes.Add?displayProperty=nameWithType> instruction.</span></span>  
  
 [!code-csharp[System.Reflection.Emit.OpCode.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.emit.opcode.value/cs/value1.cs#1)]
 [!code-vb[System.Reflection.Emit.OpCode.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.emit.opcode.value/vb/value1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>