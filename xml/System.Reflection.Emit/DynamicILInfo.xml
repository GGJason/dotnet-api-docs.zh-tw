<Type Name="DynamicILInfo" FullName="System.Reflection.Emit.DynamicILInfo">
  <TypeSignature Language="C#" Value="public class DynamicILInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicILInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.DynamicILInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicILInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicILInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5c2a6-101">提供產生動態方法之 Microsoft Intermediate Language (MSIL) 和中繼資料 (Metadata) 的替代方式支援，包括用以建立語彙基元 (Token) 和插入程式碼的方法、例外狀況處理 (Exception Handling) 以及區域變數簽章 Blob (二進位大型物件)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-101">Provides support for alternative ways to generate the Microsoft intermediate language (MSIL) and metadata for a dynamic method, including methods for creating tokens and for inserting the code, exception handling, and local variable signature blobs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-102"><xref:System.Reflection.Emit.DynamicILInfo>類別可讓開發人員撰寫自己的 MSIL 產生器，而不是使用<xref:System.Reflection.Emit.ILGenerator>。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-102">The <xref:System.Reflection.Emit.DynamicILInfo> class allows developers to write their own MSIL generators instead of using <xref:System.Reflection.Emit.ILGenerator>.</span></span>  
  
 <span data-ttu-id="5c2a6-103">若要建立其他類型的執行個體，呼叫方法，以及其他您產生的 MSIL 必須包含語彙基元的這些實體。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-103">To create instances of other types, call methods, and so on, the MSIL you generate must include tokens for those entities.</span></span> <span data-ttu-id="5c2a6-104"><xref:System.Reflection.Emit.DynamicILInfo>類別提供數個多載的<xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A>方法，這個方法會傳回在目前的範圍內的有效權杖<xref:System.Reflection.Emit.DynamicILInfo>。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-104">The <xref:System.Reflection.Emit.DynamicILInfo> class provides several overloads of the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> method, which return tokens valid in the scope of the current <xref:System.Reflection.Emit.DynamicILInfo>.</span></span> <span data-ttu-id="5c2a6-105">例如，如果您需要呼叫的多載<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法，您可以取得<xref:System.RuntimeMethodHandle>的多載，並將它傳遞給<xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A>方法，以取得要內嵌在您的 MSIL 的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-105">For example, if you need to call an overload of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method, you can obtain a <xref:System.RuntimeMethodHandle> for that overload and pass it to the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> method to obtain a token to embed in your MSIL.</span></span>  
  
 <span data-ttu-id="5c2a6-106">一旦您建立<xref:System.Byte>陣列以進行您的區域變數簽章、 例外狀況，以及程式碼主體，您可以使用<xref:System.Reflection.Emit.DynamicILInfo.SetCode%2A>， <xref:System.Reflection.Emit.DynamicILInfo.SetExceptions%2A>，和<xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A>方法來插入到<xref:System.Reflection.Emit.DynamicMethod>聯您<xref:System.Reflection.Emit.DynamicILInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-106">Once you have created <xref:System.Byte> arrays for your local variable signature, exceptions, and code body, you can use the <xref:System.Reflection.Emit.DynamicILInfo.SetCode%2A>, <xref:System.Reflection.Emit.DynamicILInfo.SetExceptions%2A>, and <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> methods to insert them into the <xref:System.Reflection.Emit.DynamicMethod> associated with your <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span>  
  
 <span data-ttu-id="5c2a6-107">產生您自己的中繼資料和 MSIL 必須熟悉的通用語言基礎結構 (CLI) 文件，尤其是 < 磁碟分割第二部分： 中繼資料定義和語意 > 以及 < 磁碟分割 iii 部分： CIL 指令集 」。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-107">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="5c2a6-108">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-108">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c2a6-109">請勿使用<xref:System.Reflection.Emit.DynamicILInfo>來產生建立另一個動態方法的委派直接呼叫的委派建構函式的程式碼。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-109">Do not use <xref:System.Reflection.Emit.DynamicILInfo> to generate code that creates a delegate to another dynamic method by calling the delegate constructor directly.</span></span> <span data-ttu-id="5c2a6-110">請改用<xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A>方法來建立委派。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-110">Instead, use the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method to create the delegate.</span></span> <span data-ttu-id="5c2a6-111">委派建構函式來建立委派沒有目標動態方法的參考。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-111">A delegate that is created with the delegate constructor does not have a reference to the target dynamic method.</span></span> <span data-ttu-id="5c2a6-112">動態方法可能會回收進行回收，委派仍在使用中時。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-112">The dynamic method might be reclaimed by garbage collection while the delegate is still in use.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DynamicMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.DynamicMethod DynamicMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Emit.DynamicMethod DynamicMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicILInfo.DynamicMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMethod As DynamicMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::DynamicMethod ^ DynamicMethod { System::Reflection::Emit::DynamicMethod ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.DynamicMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c2a6-113">取得動態方法，其主體是由目前的執行個體所產生。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-113">Gets the dynamic method whose body is generated by the current instance.</span></span></summary>
        <value><span data-ttu-id="5c2a6-114"><see cref="T:System.Reflection.Emit.DynamicMethod" /> 物件，表示目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 物件產生程式碼所針對的動態方法。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-114">A <see cref="T:System.Reflection.Emit.DynamicMethod" /> object representing the dynamic method for which the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object is generating code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-115">A<xref:System.Reflection.Emit.DynamicILInfo>物件永遠是動態方法相關聯。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-115">A <xref:System.Reflection.Emit.DynamicILInfo> object is always associated with a dynamic method.</span></span> <span data-ttu-id="5c2a6-116">目的<xref:System.Reflection.Emit.DynamicILInfo>類別是要提供另一種方法的 MSIL 資料流、 例外狀況處理和區域變數簽章插入動態方法，開發人員想要產生 MSIL，而不使用<xref:System.Reflection.Emit.ILGenerator>類別。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-116">The purpose of the <xref:System.Reflection.Emit.DynamicILInfo> class is to provide another way of inserting the MSIL stream, exception handling, and local variable signature into a dynamic method, for developers who want to generate MSIL without using the <xref:System.Reflection.Emit.ILGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTokenFor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c2a6-117">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示關聯動態方法之 MSIL 資料流中的字串、欄位、方法、型別或簽章。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-117">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a string, field, method, type, or signature in the MSIL stream for the associated dynamic method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (signature As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="signature"><span data-ttu-id="5c2a6-118">包含簽章的陣列。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-118">An array that contains the signature.</span></span></param>
        <summary><span data-ttu-id="5c2a6-119">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示關聯動態方法的簽章。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-119">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing the signature for the associated dynamic method.</span></span></summary>
        <returns><span data-ttu-id="5c2a6-120">語彙基元，可嵌入關聯動態方法的中繼資料和 MSIL 資料流中。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-120">A token that can be embedded in the metadata and the MSIL stream for the associated dynamic method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-121">簽章的 blob 上的資訊，請參閱 Common Language Infrastructure (CLI) 文件，尤其是 < 磁碟分割 II： 中繼資料定義和語意 >。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-121">For information on signature blobs, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="5c2a6-122">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-122">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (System.Reflection.Emit.DynamicMethod method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(class System.Reflection.Emit.DynamicMethod method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.Reflection.Emit.DynamicMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As DynamicMethod) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(System::Reflection::Emit::DynamicMethod ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Emit.DynamicMethod" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="5c2a6-123">要呼叫的動態方法。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-123">The dynamic method to call.</span></span></param>
        <summary><span data-ttu-id="5c2a6-124">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示要從關聯的方法呼叫的動態方法。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-124">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a dynamic method to be called from the associated method.</span></span></summary>
        <returns><span data-ttu-id="5c2a6-125">語彙基元，可當做 MSIL 指令的目標，嵌入關聯動態方法的 MSIL 資料流中。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-125">A token that can be embedded in the MSIL stream for the associated dynamic method, as the target of an MSIL instruction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-126">這個方法多載所傳回的權杖可讓您從與目前相關聯的動態方法呼叫的動態方法<xref:System.Reflection.Emit.DynamicILInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-126">The token returned by this method overload allows you to call a dynamic method from the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="5c2a6-127">若要呼叫相關聯的動態方法以遞迴方式，將值傳遞<xref:System.Reflection.Emit.DynamicILInfo.DynamicMethod%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-127">To call the associated dynamic method recursively, pass the value of the <xref:System.Reflection.Emit.DynamicILInfo.DynamicMethod%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeFieldHandle field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeFieldHandle field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeFieldHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (field As RuntimeFieldHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeFieldHandle field);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.RuntimeFieldHandle" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="5c2a6-128">要存取的欄位。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-128">The field to be accessed.</span></span></param>
        <summary><span data-ttu-id="5c2a6-129">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示要從關聯的動態方法存取的欄位。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-129">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a field to be accessed from the associated dynamic method.</span></span></summary>
        <returns><span data-ttu-id="5c2a6-130">語彙基元，可在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 物件的範圍內，當做存取欄位之 MSIL 指令的運算元。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-130">A token that can be used as the operand of an MSIL instruction that accesses fields, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-131">您必須取得的任何欄位，將目前相關聯的動態方法所存取的語彙基元<xref:System.Reflection.Emit.DynamicILInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-131">You must obtain a token for any field that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="5c2a6-132">使用<xref:System.Type.GetField%2A?displayProperty=nameWithType>方法來取得<xref:System.Reflection.FieldInfo>您想要存取的欄位，然後使用<xref:System.Reflection.FieldInfo.FieldHandle%2A>屬性來取得<xref:System.RuntimeFieldHandle>。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-132">Use the <xref:System.Type.GetField%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.FieldInfo> for the field you want to access, then use the <xref:System.Reflection.FieldInfo.FieldHandle%2A> property to get the <xref:System.RuntimeFieldHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeMethodHandle method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeMethodHandle method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeMethodHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As RuntimeMethodHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeMethodHandle method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="5c2a6-133">要存取的方法。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-133">The method to be accessed.</span></span></param>
        <summary><span data-ttu-id="5c2a6-134">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示要從關聯的動態方法存取的方法。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-134">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a method to be accessed from the associated dynamic method.</span></span></summary>
        <returns><span data-ttu-id="5c2a6-135">語彙基元，可在目前 <see cref="F:System.Reflection.Emit.OpCodes.Call" /> 物件的範圍內，當做存取方法 (例如 <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" /> 或 <see cref="T:System.Reflection.Emit.DynamicILInfo" />) 之 MSIL 指令的運算元。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-135">A token that can be used as the operand of an MSIL instruction that accesses methods, such as <see cref="F:System.Reflection.Emit.OpCodes.Call" /> or <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-136">您必須取得的任何方法，將目前相關聯的動態方法所存取的語彙基元<xref:System.Reflection.Emit.DynamicILInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-136">You must obtain a token for any method that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="5c2a6-137">使用<xref:System.Type.GetMethod%2A?displayProperty=nameWithType>方法來取得<xref:System.Reflection.MethodInfo>方法您想要存取，然後使用<xref:System.Reflection.MethodBase.MethodHandle%2A>屬性來取得<xref:System.RuntimeMethodHandle>。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-137">Use the <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.MethodInfo> for the method you want to access, and then use the <xref:System.Reflection.MethodBase.MethodHandle%2A> property to get the <xref:System.RuntimeMethodHandle>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c2a6-138">方法屬於泛型型別，請使用<xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%29>方法多載，並指定<xref:System.RuntimeTypeHandle>泛型型別。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-138">For a method that belongs to a generic type, use the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%29> method overload and specify a <xref:System.RuntimeTypeHandle> for the generic type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeTypeHandle type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeTypeHandle type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (type As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeTypeHandle type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5c2a6-139">要使用的型別。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-139">The type to be used.</span></span></param>
        <summary><span data-ttu-id="5c2a6-140">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示要用於關聯的動態方法中的型別。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-140">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a type to be used in the associated dynamic method.</span></span></summary>
        <returns><span data-ttu-id="5c2a6-141">語彙基元，可在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 物件的範圍內，當做需要型別之 MSIL 指令的運算元。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-141">A token that can be used as the operand of an MSIL instruction that requires a type, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-142">這個方法多載所傳回的權杖可讓您定義本機變數的類型，並發出在目前相關聯的動態方法中建立類型的執行個體的 MSIL<xref:System.Reflection.Emit.DynamicILInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-142">The token returned by this method overload allows you to define a local variable type, and emit MSIL to create an instance of a type in the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span>  
  
 <span data-ttu-id="5c2a6-143">若要取得<xref:System.RuntimeTypeHandle>代表的類型，使用<xref:System.Type.TypeHandle%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-143">To get a <xref:System.RuntimeTypeHandle> representing a type, use the <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (string literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (literal As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(System::String ^ literal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="literal" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="literal"><span data-ttu-id="5c2a6-144">要使用的字串。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-144">The string to be used.</span></span></param>
        <summary><span data-ttu-id="5c2a6-145">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示要用於關聯的動態方法中的字串常值 (String Literal)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-145">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a string literal to be used in the associated dynamic method.</span></span></summary>
        <returns><span data-ttu-id="5c2a6-146">語彙基元，可在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 物件的範圍內，當做需要字串之 MSIL 指令的運算元。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-146">A token that can be used as the operand of an MSIL instruction that requires a string, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeFieldHandle field, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeFieldHandle field, valuetype System.RuntimeTypeHandle contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (field As RuntimeFieldHandle, contextType As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeFieldHandle field, RuntimeTypeHandle contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.RuntimeFieldHandle" />
        <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="5c2a6-147">要存取的欄位。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-147">The field to be accessed.</span></span></param>
        <param name="contextType"><span data-ttu-id="5c2a6-148">欄位所屬的泛型型別。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-148">The generic type the field belongs to.</span></span></param>
        <summary><span data-ttu-id="5c2a6-149">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示要從關聯的動態方法存取的欄位；該欄位是在指定的泛型型別上。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-149">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a field to be accessed from the associated dynamic method; the field is on the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="5c2a6-150">語彙基元，可在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 物件的範圍內，當做存取欄位之 MSIL 指令的運算元。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-150">A token that can be used as the operand of an MSIL instruction that accesses fields in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-151">您必須取得的任何欄位，將目前相關聯的動態方法所存取的語彙基元<xref:System.Reflection.Emit.DynamicILInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-151">You must obtain a token for any field that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="5c2a6-152">使用<xref:System.Type.GetField%2A?displayProperty=nameWithType>方法來取得<xref:System.Reflection.FieldInfo>您想要存取，然後使用欄位<xref:System.Reflection.FieldInfo.FieldHandle%2A>屬性來取得<xref:System.RuntimeFieldHandle>。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-152">Use the <xref:System.Type.GetField%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.FieldInfo> for the field you want to access, and then use the <xref:System.Reflection.FieldInfo.FieldHandle%2A> property to get the <xref:System.RuntimeFieldHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeMethodHandle method, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeMethodHandle method, valuetype System.RuntimeTypeHandle contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As RuntimeMethodHandle, contextType As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeMethodHandle method, RuntimeTypeHandle contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
        <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="5c2a6-153">方法。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-153">The method.</span></span></param>
        <param name="contextType"><span data-ttu-id="5c2a6-154">方法所屬的泛型型別。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-154">The generic type the method belongs to.</span></span></param>
        <summary><span data-ttu-id="5c2a6-155">取得在目前 <see cref="T:System.Reflection.Emit.DynamicILInfo" /> 範圍內有效的語彙基元，表示泛型型別的方法。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-155">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a method on a generic type.</span></span></summary>
        <returns><span data-ttu-id="5c2a6-156">語彙基元，可在目前 <see cref="F:System.Reflection.Emit.OpCodes.Call" /> 物件的範圍內，當做存取方法 (例如 <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" /> 或 <see cref="T:System.Reflection.Emit.DynamicILInfo" />) 之 MSIL 指令的運算元。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-156">A token that can be used as the operand of an MSIL instruction that accesses methods, such as <see cref="F:System.Reflection.Emit.OpCodes.Call" /> or <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-157">您必須取得與目前相關聯的動態方法會呼叫任何方法的語彙基元<xref:System.Reflection.Emit.DynamicILInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-157">You must obtain a token for any method that will be called by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="5c2a6-158">使用<xref:System.Type.GetMethod%2A?displayProperty=nameWithType>方法來取得<xref:System.Reflection.MethodInfo>方法您想要呼叫，然後再使用<xref:System.Reflection.MethodBase.MethodHandle%2A>屬性來取得<xref:System.RuntimeMethodHandle>。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-158">Use the <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.MethodInfo> for the method you want to call, and then use the <xref:System.Reflection.MethodBase.MethodHandle%2A> property to get the <xref:System.RuntimeMethodHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c2a6-159">設定關聯之動態方法的程式碼主體。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-159">Sets the code body of the associated dynamic method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCode">
      <MemberSignature Language="C#" Value="public void SetCode (byte[] code, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCode(unsigned int8[] code, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCode (code As Byte(), maxStackSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCode(cli::array &lt;System::Byte&gt; ^ code, int maxStackSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Byte[]" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code"><span data-ttu-id="5c2a6-160">包含 MSIL 資料流的陣列。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-160">An array that contains the MSIL stream.</span></span></param>
        <param name="maxStackSize"><span data-ttu-id="5c2a6-161">執行此方法時，運算元堆疊上的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-161">The maximum number of items on the operand stack when the method is executing.</span></span></param>
        <summary><span data-ttu-id="5c2a6-162">設定關聯之動態方法的程式碼主體。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-162">Sets the code body of the associated dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-163">MSIL 資料流上，會不執行任何有效性檢查。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-163">No validity checks are performed on the MSIL stream.</span></span>  
  
 <span data-ttu-id="5c2a6-164">第二次呼叫這個方法的第二個取代第一個的 MSIL 資料流。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-164">Calling this method a second time replaces the first MSIL stream with the second.</span></span>  
  
 <span data-ttu-id="5c2a6-165">產生您自己的中繼資料和 MSIL 必須熟悉的通用語言基礎結構 (CLI) 文件，尤其是 < 磁碟分割第二部分： 中繼資料定義和語意 > 以及 < 磁碟分割 iii 部分： CIL 指令集 」。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-165">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="5c2a6-166">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-166">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCode">
      <MemberSignature Language="C#" Value="public void SetCode (byte* code, int codeSize, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCode(unsigned int8* code, int32 codeSize, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte*,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCode(System::Byte* code, int codeSize, int maxStackSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Byte*" />
        <Parameter Name="codeSize" Type="System.Int32" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code"><span data-ttu-id="5c2a6-167">指標，指向包含 MSIL 資料流的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-167">A pointer to a byte array containing the MSIL stream.</span></span></param>
        <param name="codeSize"><span data-ttu-id="5c2a6-168">在 MSIL 資料流中的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-168">The number of bytes in the MSIL stream.</span></span></param>
        <param name="maxStackSize"><span data-ttu-id="5c2a6-169">執行此方法時，運算元堆疊上的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-169">The maximum number of items on the operand stack when the method is executing.</span></span></param>
        <summary><span data-ttu-id="5c2a6-170">設定關聯之動態方法的程式碼主體。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-170">Sets the code body of the associated dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-171">MSIL 資料流上，會不執行任何有效性檢查。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-171">No validity checks are performed on the MSIL stream.</span></span>  
  
 <span data-ttu-id="5c2a6-172">第二次呼叫這個方法的第二個取代第一個的 MSIL 資料流。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-172">Calling this method a second time replaces the first MSIL stream with the second.</span></span>  
  
 <span data-ttu-id="5c2a6-173">產生您自己的中繼資料和 MSIL 必須熟悉的通用語言基礎結構 (CLI) 文件，特別是 < II： 中繼資料定義和語意 」 和 「 第三部分： CIL 指令集。 」</span><span class="sxs-lookup"><span data-stu-id="5c2a6-173">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set."</span></span> <span data-ttu-id="5c2a6-174">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-174">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c2a6-175"><paramref name="code" /> 為 <see langword="null" /> 且 <paramref name="codeSize" /> 大於 0。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-175"><paramref name="code" /> is <see langword="null" /> and <paramref name="codeSize" /> is greater than 0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c2a6-176"><paramref name="codeSize" /> 小於 0。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-176"><paramref name="codeSize" /> is less than 0.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="5c2a6-177">需要完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-177">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="5c2a6-178">這個成員無法供部分信任或安全性透明程式碼。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-178">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExceptions">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c2a6-179">設定關聯之動態方法的例外狀況中繼資料。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-179">Sets the exception metadata for the associated dynamic method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public void SetExceptions (byte[] exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExceptions(unsigned int8[] exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExceptions (exceptions As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExceptions(cli::array &lt;System::Byte&gt; ^ exceptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="5c2a6-180">包含例外狀況中繼資料的陣列。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-180">An array that contains the exception metadata.</span></span></param>
        <summary><span data-ttu-id="5c2a6-181">設定關聯之動態方法的例外狀況中繼資料。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-181">Sets the exception metadata for the associated dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-182">方法的例外狀況中繼資料定義的位置和大小的所有`try`， `catch`， `finally`、 篩選和錯誤區塊。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-182">The exception metadata for a method defines the location and size of all `try`, `catch`, `finally`, filter, and fault blocks.</span></span> <span data-ttu-id="5c2a6-183">此中繼資料的配置資訊，請參閱 Common Language Infrastructure (CLI) 文件，尤其是 < 磁碟分割 II： 中繼資料定義和語意 >。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-183">For information on the layout of this metadata, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="5c2a6-184">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-184">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public void SetExceptions (byte* exceptions, int exceptionsSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExceptions(unsigned int8* exceptions, int32 exceptionsSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExceptions(System::Byte* exceptions, int exceptionsSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Byte*" />
        <Parameter Name="exceptionsSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="5c2a6-185">指標，指向包含例外狀況中繼資料的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-185">A pointer to a byte array containing the exception metadata.</span></span></param>
        <param name="exceptionsSize"><span data-ttu-id="5c2a6-186">例外狀況中繼資料的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-186">The number of bytes of exception metadata.</span></span></param>
        <summary><span data-ttu-id="5c2a6-187">設定關聯之動態方法的例外狀況中繼資料。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-187">Sets the exception metadata for the associated dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-188">方法的例外狀況中繼資料定義的位置和大小的所有`try`， `catch`， `finally`、 篩選和錯誤區塊。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-188">The exception metadata for a method defines the location and size of all `try`, `catch`, `finally`, filter, and fault blocks.</span></span> <span data-ttu-id="5c2a6-189">此中繼資料的配置資訊，請參閱 Common Language Infrastructure (CLI) 文件，尤其是 < 磁碟分割第二部分： 中繼資料定義和語意 > 以及 < 磁碟分割 iii 部分： CIL 指令集 」。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-189">For information on the layout of this metadata, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="5c2a6-190">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-190">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c2a6-191"><paramref name="exceptions" /> 為 <see langword="null" /> 且 <paramref name="exceptionSize" /> 大於 0。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-191"><paramref name="exceptions" /> is <see langword="null" /> and <paramref name="exceptionSize" /> is greater than 0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c2a6-192"><paramref name="exceptionSize" /> 小於 0。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-192"><paramref name="exceptionSize" /> is less than 0.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="5c2a6-193">需要完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-193">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="5c2a6-194">這個成員無法供部分信任或安全性透明程式碼。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-194">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetLocalSignature">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c2a6-195">設定區域變數簽章，描述關聯之動態方法的區域變數配置。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-195">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetLocalSignature">
      <MemberSignature Language="C#" Value="public void SetLocalSignature (byte[] localSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSignature(unsigned int8[] localSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSignature (localSignature As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSignature(cli::array &lt;System::Byte&gt; ^ localSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="localSignature"><span data-ttu-id="5c2a6-196">陣列，其中包含相關 <see cref="T:System.Reflection.Emit.DynamicMethod" /> 之區域變數的配置。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-196">An array that contains the layout of local variables for the associated <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span></span></param>
        <summary><span data-ttu-id="5c2a6-197">設定區域變數簽章，描述關聯之動態方法的區域變數配置。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-197">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-198">區域變數簽章描述方法的本機變數的配置。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-198">The local variable signature describes the layout of a method's local variables.</span></span> <span data-ttu-id="5c2a6-199">若要簡化的區域變數簽章的建構，使用`static`(`Shared`在 Visual Basic 中)<xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType>方法來取得<xref:System.Reflection.Emit.SignatureHelper>簽章。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-199">To simplify construction of the local variable signature, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.Emit.SignatureHelper> for the local signature.</span></span>  
  
 <span data-ttu-id="5c2a6-200">本機變數的簽章的資訊，請參閱 Common Language Infrastructure (CLI) 文件，尤其是 < 磁碟分割 II： 中繼資料定義和語意 >。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-200">For information on local variable signatures, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="5c2a6-201">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-201">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalSignature">
      <MemberSignature Language="C#" Value="public void SetLocalSignature (byte* localSignature, int signatureSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSignature(unsigned int8* localSignature, int32 signatureSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSignature(System::Byte* localSignature, int signatureSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localSignature" Type="System.Byte*" />
        <Parameter Name="signatureSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localSignature"><span data-ttu-id="5c2a6-202">陣列，其中包含相關 <see cref="T:System.Reflection.Emit.DynamicMethod" /> 之區域變數的配置。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-202">An array that contains the layout of local variables for the associated <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span></span></param>
        <param name="signatureSize"><span data-ttu-id="5c2a6-203">簽章中的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-203">The number of bytes in the signature.</span></span></param>
        <summary><span data-ttu-id="5c2a6-204">設定區域變數簽章，描述關聯之動態方法的區域變數配置。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-204">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2a6-205">區域變數簽章描述方法的本機變數的配置。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-205">The local variable signature describes the layout of a method's local variables.</span></span> <span data-ttu-id="5c2a6-206">若要簡化的區域變數簽章的建構，使用`static`(`Shared`在 Visual Basic 中)<xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType>方法來取得<xref:System.Reflection.Emit.SignatureHelper>簽章。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-206">To simplify construction of the local variable signature, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.Emit.SignatureHelper> for the local signature.</span></span>  
  
 <span data-ttu-id="5c2a6-207">本機變數的簽章的資訊，請參閱 Common Language Infrastructure (CLI) 文件，尤其是 < 磁碟分割 II： 中繼資料定義和語意 >。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-207">For information on local variable signatures, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="5c2a6-208">您可以線上取得這份文件；請參閱 MSDN 上的 [ECMA C# 和通用語言基礎結構標準](http://go.microsoft.com/fwlink/?LinkID=99212)，以及 Ecma International 網站上的[標準 ECMA-335 - 通用語言基礎結構 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-208">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c2a6-209"><paramref name="localSignature" /> 為 <see langword="null" /> 且 <paramref name="signatureSize" /> 大於 0。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-209"><paramref name="localSignature" /> is <see langword="null" /> and <paramref name="signatureSize" /> is greater than 0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c2a6-210"><paramref name="signatureSize" /> 小於 0。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-210"><paramref name="signatureSize" /> is less than 0.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="5c2a6-211">需要完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-211">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="5c2a6-212">這個成員無法供部分信任或安全性透明程式碼。</span><span class="sxs-lookup"><span data-stu-id="5c2a6-212">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>