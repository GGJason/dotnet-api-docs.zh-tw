<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PackingSize.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51f311c07aa6d0e14edf8f5085d9e2bd98f3531a1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f311c07aa6d0e14edf8f5085d9e2bd98f3531a1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Emit.PackingSize">
          <source>Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.</source>
          <target state="translated">指定兩個因數其中之一，在將類型封送處理時，該因數決定欄位的記憶體對齊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Packing size affects the alignment of fields in structures and classes whose organization is <ph id="ph1">&lt;xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">封裝大小會影響欄位的結構和其組織的類別中的對齊<ph id="ph1">&lt;xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>The packing size is one of two factors that determine the offset of a field when the structure or class is marshaled; the other factor is the effective size of the field.</source>
          <target state="translated">封裝大小是兩個因數決定欄位的位移時的結構或類別會封送處理。其他因數是欄位的有效大小。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>To determine the offset of a field:</source>
          <target state="translated">若要判斷欄位的位移：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Compute the minimum value for the offset by adding the size of the preceding field to the offset of the preceding field.</source>
          <target state="translated">加入上述欄位的位移上述欄位大小的計算位移的最小值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Compute the natural packing size for the field: If the field is a simple data type, use the size.</source>
          <target state="translated">計算自然封裝欄位的大小： 如果欄位是簡單的資料類型，使用大小。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>If the field is an array, use the size of an array element.</source>
          <target state="translated">如果欄位是陣列，請使用陣列元素的大小。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>If the field is itself a structure, compare the packing size of that structure to the size of the largest field in that structure, and use the smaller of the two values.</source>
          <target state="translated">如果欄位是本身的結構，比較該結構中該結構的最大欄位大小的封裝大小，並使用較小的兩個值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Compute the effective packing size by comparing the packing size to the natural packing size of the field, computed in step 2.</source>
          <target state="translated">藉由比較欄位中，步驟 2 中計算的自然封裝大小的封裝大小來計算有效的封裝大小。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Use the smaller of the two numbers.</source>
          <target state="translated">使用兩個數字中較小。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Compute the offset.</source>
          <target state="translated">計算位移。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>The offset is the first memory location that is equal to or larger than the minimum, and a multiple of the effective packing size computed in step 3.</source>
          <target state="translated">位移是等於或大於最小值，第一個記憶體位置，並在步驟 3 中計算有效的封裝大小的倍數。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Once offsets have been computed for all the fields in the class or structure, padding is added so that the overall size is a multiple of the packing size.</source>
          <target state="translated">一旦位移計算的類別或結構中的所有欄位之後，使的整體大小會封裝大小的倍數，會加入填補。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>For example, in a class containing a <ph id="ph1">`byte`</ph> and a <ph id="ph2">`long`</ph>, using packing size <ph id="ph3">`Size1`</ph>, the offset of the <ph id="ph4">`byte`</ph> field is zero (0) and the offset of the <ph id="ph5">`long`</ph> field is one (1).</source>
          <target state="translated">例如，在一個類別，其中包含<ph id="ph1">`byte`</ph>和<ph id="ph2">`long`</ph>，並使用封裝大小<ph id="ph3">`Size1`</ph>的位移<ph id="ph4">`byte`</ph>欄位是零 (0) 和位移<ph id="ph5">`long`</ph>欄位是一 (1)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>If the packing size is <ph id="ph1">`Size4`</ph>, the <ph id="ph2">`long`</ph> field has offset four (4).</source>
          <target state="translated">如果封裝大小是<ph id="ph1">`Size4`</ph>、<ph id="ph2">`long`</ph>欄位具有位移四 （4)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>In a class containing two <ph id="ph1">`short`</ph> fields, using any packing size, the offset of the second <ph id="ph2">`short`</ph> field is two (2).</source>
          <target state="translated">包含兩個類別中<ph id="ph1">`short`</ph>欄位，使用任何封裝大小，而第二個位移<ph id="ph2">`short`</ph>欄位是二 （2)。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Changing the packing size can affect performance if it causes fields to be aligned on offsets that are not multiples of their size.</source>
          <target state="translated">如果這會讓欄位對齊的位移不是其大小的倍數，則變更封裝大小會影響效能。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size1">
          <source>The packing size is 1 byte.</source>
          <target state="translated">封裝大小為 1 位元組。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size128">
          <source>The packing size is 128 bytes.</source>
          <target state="translated">封裝大小為 128 位元組。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size16">
          <source>The packing size is 16 bytes.</source>
          <target state="translated">封裝大小為 16 位元組。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size2">
          <source>The packing size is 2 bytes.</source>
          <target state="translated">封裝大小為 2 位元組。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size32">
          <source>The packing size is 32 bytes.</source>
          <target state="translated">封裝大小為 32 位元組。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size4">
          <source>The packing size is 4 bytes.</source>
          <target state="translated">封裝大小為 4 位元組。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size64">
          <source>The packing size is 64 bytes.</source>
          <target state="translated">封裝大小為 64 位元組。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size8">
          <source>The packing size is 8 bytes.</source>
          <target state="translated">封裝大小為 8 位元組。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Unspecified">
          <source>The packing size is not specified.</source>
          <target state="translated">封裝大小未指定。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>