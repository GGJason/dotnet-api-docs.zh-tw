<Namespace Name="System.Runtime.Remoting.Contexts">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40aa51c114d4ab3b2669d4d437aa854fb9a8f8c4" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30739322" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="de4ad-101">
        <see cref="N:System.Runtime.Remoting.Contexts" /> 命名空間包含定義所有物件皆存在於其中之內容的物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de4ad-101">The <see cref="N:System.Runtime.Remoting.Contexts" /> namespace contains objects that define the contexts all objects reside within.</span>
      </span>
      <span data-ttu-id="de4ad-102">內容為屬性的已排序序列，定義其內物件的環境。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de4ad-102">A context is an ordered sequence of properties that defines an environment for the objects within it.</span>
      </span>
      <span data-ttu-id="de4ad-103">內容在物件的啟動程序期間建立，這物件被設定來要求特定自動服務，例如，同步處理、交易、Just-In-Time (JIT) 啟動過程 (Activation)、安全性，等等。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de4ad-103">Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time (JIT) activation, security, and so on.</span>
      </span>
      <span data-ttu-id="de4ad-104">同一個內容可包含多個物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de4ad-104">Multiple objects can live inside a context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de4ad-105">每當建立新的物件時，.net Framework 尋找相容的內容或建立新的內容物件。</span><span class="sxs-lookup"><span data-stu-id="de4ad-105">Whenever a new object is created, the.NET Framework finds a compatible context or creates a new context for the object.</span></span> <span data-ttu-id="de4ad-106">物件放入內容之後，它會保持在其存留期間。</span><span class="sxs-lookup"><span data-stu-id="de4ad-106">After an object is placed in a context, it stays in it for life.</span></span> <span data-ttu-id="de4ad-107">可以繫結至內容的類別稱為內容繫結類別。</span><span class="sxs-lookup"><span data-stu-id="de4ad-107">Classes that can be bound to a context are called context-bound classes.</span></span> <span data-ttu-id="de4ad-108">從另一個內容存取時, 使用 proxy 直接參考這些內容繫結類別。</span><span class="sxs-lookup"><span data-stu-id="de4ad-108">When accessed from another context, these context-bound classes are referenced directly using a proxy.</span></span> <span data-ttu-id="de4ad-109">另一個內容中的物件從一個內容中的物件的呼叫會通過內容 proxy，然後會受到合併的內容屬性實作的原則。</span><span class="sxs-lookup"><span data-stu-id="de4ad-109">A call from an object in one context to an object in another context will go through a context proxy and be affected by the policy implemented by the combined context properties.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>