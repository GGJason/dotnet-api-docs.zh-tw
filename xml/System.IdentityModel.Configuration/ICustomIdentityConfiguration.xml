<Type Name="ICustomIdentityConfiguration" FullName="System.IdentityModel.Configuration.ICustomIdentityConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="102729042b471f189cd51fb915483c7ffdb2d0e0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36560100" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ICustomIdentityConfiguration = interface" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義可讓類別載入自訂組態的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 類別可實作<xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration>介面可以從 XML 載入自訂組態。  
  
 數個 Windows Identity Foundation (WIF) 類別實作<xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration>介面，以提供讓您定義的自訂設定的功能在衍生類別，從組態檔。 許多 WIF 類別提供這個方法以提供它們所表示之物件的預設組態的基底實作。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public void LoadCustomConfiguration (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadCustomConfiguration (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="iCustomIdentityConfiguration.LoadCustomConfiguration nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">包含自訂組態的 XML 節點。 清單中的每個節點的型別為 <see cref="T:System.Xml.XmlElement" />。</param>
        <summary>從 XML 載入自訂組態。 覆寫這個方法，以提供組態項目的自訂處理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration%2A>設定基礎結構會呼叫方法。 呼叫這個方法時，`nodelist`參數會包含最上層的子系的項目設定從組態檔的物件類別的父項目。 比方說的類別衍生自<xref:System.IdentityModel.Tokens.IssuerNameRegistry>，會有子項目的[ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)項目傳入`nodelist`參數。 `nodelist`是組成完全<xref:System.Xml.XmlElement>物件。 其中每一項可能是屬性和子項目，視所要設定的類別定義組態結構描述。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>