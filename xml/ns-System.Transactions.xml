<Namespace Name="System.Transactions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0024f659857d33fabfbecb13896ccd2ff3c5535" />
    <Meta Name="ms.sourcegitcommit" Value="e1a67db2e206daee8a9e2370b6cda8b921644a0a" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/19/2018" />
    <Meta Name="ms.locfileid" Value="46321506" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Transactions" /> 命名空間包含可用來自行撰寫交易應用程式和資源管理員的類別。 具體而言，您可以建立並參與擁有一個或多個參與者的交易 (本機或分散式)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  您只能建立使用此命名空間，在 Windows 2000，Windows XP 和 Windows 2003 平台應用程式。 建立在 Windows 98 和 Windows ME 平台會擲回交易<xref:System.PlatformNotSupportedException>。  
  
 <xref:System.Transactions>基礎結構，讓交易程式設計既簡單又有效率整個平台支援啟始的 SQL Server、 ADO.NET、 MSMQ 及 Microsoft Distributed Transaction Coordinator (MSDTC) 交易。 它提供的明確程式設計模型為基礎<xref:System.Transactions.Transaction>類別，以及隱含程式設計模型使用<xref:System.Transactions.TransactionScope>類別，以自動管理交易由基礎結構。 強烈建議您開發使用隱含更簡單的模型。 若要開始，請參閱[實作隱含異動使用異動範圍](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85))主題。 如需有關如何撰寫交易式應用程式的詳細資訊，請參閱[撰寫交易式應用程式](~/docs/framework/data/transactions/writing-a-transactional-application.md)。
  
 <xref:System.Transactions> 也會提供您實作資源管理員的類型。 交易管理員的原生<xref:System.Transactions>變動性資源或認可或回復有效率地為單一永久性資源登記，可讓基礎結構。 如需有關如何實作資源管理員的詳細資訊，請參閱 <<c0> [ 實作 Resource Manager](http://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)。  
  
 交易管理員也可以呈報至分散式交易的本機交易，當其他永久性資源管理員 」 將本身登錄與交易時，透過例如 DTC，磁碟為基礎的交易管理員協調。 <xref:System.Transactions> 基礎結構提供兩個提高效能的重要方法。  
  
-   動態擴大規模，這表示<xref:System.Transactions>基礎結構只使用 msdtc 交易實際需要時。 這個區域會探討[交易管理擴大規模](http://msdn.microsoft.com/library/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)主題。  
  
-   可提升登記，可讓資源 (例如資料庫) 取得異動的擁有權 (如果該資源是參與異動之唯一實體 (Entity) 的話)。 更新的版本，如有需要<xref:System.Transactions>基礎結構仍然可以擴大到 MSDTC 交易的管理。 這會進一步減少 MSDTC 的使用。 這個區域會探討[最佳化使用單一階段交易認可和可提升單一階段告知](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms229980(v=vs.85))主題。  
  
 <xref:System.Transactions> 定義限制的存取類型的資源，它會公開信任的三個層級。 具體而言，<xref:System.Transactions>可由部分信任程式碼呼叫組件，因為它已標示與`AllowPartiallyTrustedCallers`屬性 (APTCA)。 這個屬性基本上會移除 <xref:System.Security.Permissions.SecurityAction.LinkDemand> 使用權限集合的隱含 `FullTrust` (在每個型別的每個公開存取方法上，都會自動放置這個隱含使用權限)。 然而，部分型別和成員仍舊需要更強勢的使用權限。  
  
 以下是一份類型和成員不是可由呼叫部分信任的程式碼，因為它們會使用下列的宣告式安全性屬性裝飾：  
  
 `PermissionSetAttribute(SecurityAction.LinkDemand, Name := "FullTrust")`  
  
 System.Transactions.Transaction.EnlistDurable  
  
 System.Transactions.Transaction.EnlistPromotableSinglePhase  
  
 System.Transactions.TransactionInterop  
  
 System.Transactions.TransactionManager.DistributedTransactionStarted  
  
 System.Transactions.TransactionManager.HostCurrentTransactionCallback  
  
 System.Transactions.TransactionManager.Reenlist  
  
 System.Transactions.TransactionManager.RecoveryComplete  
  
 System.Transactions.TransactionScope.TransactionScope (System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)  
  
 M:System.Transactions.TransactionScope.TransactionScope(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)  
  
 如需各種信任層級，請參閱 <<c0> [ 中存取資源的安全性信任層級](http://msdn.microsoft.com/library/8e45acbc-0d81-4f64-9da7-8f766aebff51)。  
  
 核心開發技術 Access\Transaction Processing\  
  
 如需有關如何使用<xref:System.Transactions>命名空間中，您可以查閱概念文件[交易處理](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/w97s6fw4(v=vs.85))下 「 核心開發技術 Access\Transaction 處理\\"的文件中的章節。 具體來說，您可以在下列主題中找到詳細資訊。  
  
 [System.Transactions 所提供的功能](http://msdn.microsoft.com/library/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)  
  
 [實作資源管理員](http://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>