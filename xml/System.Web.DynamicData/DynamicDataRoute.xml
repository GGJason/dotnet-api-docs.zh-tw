<Type Name="DynamicDataRoute" FullName="System.Web.DynamicData.DynamicDataRoute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a83274408a8c9bd21db082ccc8de2c7b73fba973" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicDataRoute : System.Web.Routing.Route" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicDataRoute extends System.Web.Routing.Route" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicDataRoute" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicDataRoute&#xA;Inherits Route" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicDataRoute : System::Web::Routing::Route" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.Route</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 ASP.NET Dynamic Data 所使用的路徑。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用路由來設定動態資料行為。  
  
 靜態<xref:System.Web.Routing.RouteTable.Routes%2A>屬性<xref:System.Web.Routing.RouteTable>類型保留之路由的集合。 動態資料，一個或多個路由通常註冊 (加入<xref:System.Web.Routing.RouteTable.Routes%2A>屬性) 在`Application_Start`Global.asax 檔案中的事件。 例如，路由會判斷是否應該在同一個資料列的清單頁面上顯示的資料列的詳細資料。 它們也可以決定是否在同一個資料列的一些資料表，而非其他的清單頁面上顯示詳細資料。  
  
 您設定<xref:System.Web.DynamicData.DynamicDataRoute.Action%2A>， <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A>， <xref:System.Web.DynamicData.DynamicDataRoute.Table%2A>，和<xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>屬性提供的模式中的 URL 和<xref:System.Web.Routing.Route.%23ctor%2A>建構函式。  
  
 動態資料會使用您提供比對要求的 URL 模式和建立 Url 的 URL 模式。 如需詳細資訊，請參閱<xref:System.Web.DynamicData.DynamicDataRoute.%23ctor%2A>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicDataRoute (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicDataRoute(System::String ^ url);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">URL 的模式。</param>
        <summary>使用指定的 URL 模式，初始化 <see cref="T:System.Web.DynamicData.DynamicDataRoute" /> 類別 (Class) 的新執行個體 (Instance)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，您可以指定使用替代參數將會建立動態資料的 Url。 比方說，如果您傳遞字串"{table} / {action}"，結果會是 URL"~ / Products/ListDetails.aspx 」 使用 ListDetails 動作檢視 產品 資料表時。  
  
 使用替代參數就不需要。 您可以傳遞字串"資料表/動態"，會產生"~ / Table/DynamicData.aspx"。 您可以傳遞 「 MyPageName"以產生"~ / MyPageName.aspx"。 動態資料不會依賴 URL，以判斷資料表和動作的資訊。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定路徑的動作名稱。</summary>
        <value>路徑的動作名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需可能的動作名稱的清單，請參閱<xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>。 當您建立的執行個體如果您未設定這個屬性<xref:System.Web.DynamicData.DynamicDataRoute>，路由會套用至所有動作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionFromRouteData">
      <MemberSignature Language="C#" Value="public string GetActionFromRouteData (System.Web.Routing.RouteData routeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetActionFromRouteData(class System.Web.Routing.RouteData routeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetActionFromRouteData(System::Web::Routing::RouteData ^ routeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeData" Type="System.Web.Routing.RouteData" />
      </Parameters>
      <Docs>
        <param name="routeData">與目前要求有關的路徑資料。 如需詳細資訊，請參閱<see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />。</param>
        <summary>從目前 Dynamic Data Web 要求的 <see cref="T:System.Web.Routing.RouteData" /> 物件傳回動作。</summary>
        <returns>動作。 如需可能值的清單，請參閱 <see cref="T:System.Web.DynamicData.PageAction" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">在 Web 要求路由資訊中找不到動作。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">包含 Web 要求的相關資訊。</param>
        <summary>傳回特定 Web 要求的路由資訊。</summary>
        <returns>Web 要求的路由資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `httpContext`參數提供，如此就可以識別要求的資料表和動作所需的 Web 要求資訊。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableFromRouteData">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTableFromRouteData (System.Web.Routing.RouteData routeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTableFromRouteData(class System.Web.Routing.RouteData routeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTableFromRouteData(System::Web::Routing::RouteData ^ routeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeData" Type="System.Web.Routing.RouteData" />
      </Parameters>
      <Docs>
        <param name="routeData">與目前要求有關的路徑資料。 如需詳細資訊，請參閱<see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />。</param>
        <summary>識別與 Dynamic Data 網頁要求相關聯的資料表。</summary>
        <returns>描述 Dynamic Data 所顯示之資料表的中繼資料 (Metadata)。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">在 Web 要求路由資訊中找不到資料表。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">包含 Web 要求的相關資訊。</param>
        <param name="values">目前應用程式的路徑物件集合。</param>
        <summary>傳回路徑 (Route) 的虛擬路徑 (Path)。</summary>
        <returns>虛擬路徑。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Model" />
      <MemberSignature Language="VB.NET" Value="Public Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); void set(System::Web::DynamicData::MetaModel ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定路徑套用的資料模型。</summary>
        <value>路徑套用的資料模型中繼資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您建立的執行個體如果您未設定這個屬性<xref:System.Web.DynamicData.DynamicDataRoute>，針對已註冊的預設模型<xref:System.Data.Linq.DataContext>會使用執行個體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.DynamicDataRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As DynamicDataRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataRouteHandler ^ RouteHandler { System::Web::DynamicData::DynamicDataRouteHandler ^ get(); void set(System::Web::DynamicData::DynamicDataRouteHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定處理路由要求的物件。</summary>
        <value>用來處理路徑要求的處理常式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicDataRoute.RouteHandler%2A>屬性等同於<xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=nameWithType>屬性。 提供強類型版本<xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=nameWithType>方便撰寫程式碼的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public string Table { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Table" />
      <MemberSignature Language="VB.NET" Value="Public Property Table As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Table { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定路徑的資料表名稱。</summary>
        <value>與路徑相關聯的資料表名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您建立的執行個體如果您未設定這個屬性<xref:System.Web.DynamicData.DynamicDataRoute>，路由會套用至所表示之資料模型中的所有資料表<xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewName">
      <MemberSignature Language="C#" Value="public string ViewName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.ViewName" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與路徑相關聯的 .aspx 頁面名稱。</summary>
        <value>與路徑相關聯的 .aspx 頁面名稱。 如果未指定路徑的頁面，這個屬性會以頁面後面加上 ".aspx" 的方式傳回 <see cref="P:System.Web.DynamicData.DynamicDataRoute.Action" /> 屬性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動態資料會使用數個標準的.aspx 頁面名稱建立 UI，以讓使用者檢視、 更新和刪除資料，從給定的資料表。 這些頁面名稱包含 List.aspx、 Details.aspx、 Edit.aspx、 Insert.aspx 和 ListDetails.aspx。 <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A>屬性會指定其中一個這些網頁應該使用給定的資料表和動作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>