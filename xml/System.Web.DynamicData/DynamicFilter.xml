<Type Name="DynamicFilter" FullName="System.Web.DynamicData.DynamicFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f41522e7936ecab719707b142c69acb3c0848010" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36601466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicFilter : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilter extends System.Web.UI.Control implements class System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilter&#xA;Inherits Control&#xA;Implements IFilterExpressionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilter : System::Web::UI::Control, System::Web::DynamicData::IFilterExpressionProvider" />
  <TypeSignature Language="F#" Value="type DynamicFilter = class&#xA;    inherit Control&#xA;    interface IFilterExpressionProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFilterExpressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="755ff-101">顯示使用指定資料行篩選資料表資料列的 UI。</span>
      <span class="sxs-lookup">
        <span data-stu-id="755ff-101">Displays the UI for filtering table rows using a specified column.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-102">本主題內容：</span><span class="sxs-lookup"><span data-stu-id="755ff-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="755ff-103">簡介</span><span class="sxs-lookup"><span data-stu-id="755ff-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="755ff-104">ClassContext</span><span class="sxs-lookup"><span data-stu-id="755ff-104">ClassContext</span></span>](#ClassContext)  
  
-   [<span data-ttu-id="755ff-105">宣告式語法</span><span class="sxs-lookup"><span data-stu-id="755ff-105">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="755ff-106">簡介</span><span class="sxs-lookup"><span data-stu-id="755ff-106">Introduction</span></span>  
 <span data-ttu-id="755ff-107"><xref:System.Web.DynamicData.DynamicFilter>控制項在網頁標記中用來產生篩選資料表的資料列的 UI。</span><span class="sxs-lookup"><span data-stu-id="755ff-107">The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows.</span></span> <span data-ttu-id="755ff-108">動態資料使用 ~\DynamicData\Filters 資料夾中的預設篩選器範本，以建立 UI。</span><span class="sxs-lookup"><span data-stu-id="755ff-108">Dynamic Data creates the UI by using the default filter templates that are in the ~\DynamicData\Filters folder.</span></span> <span data-ttu-id="755ff-109">這些範本可支援外部索引鍵、 Boolean 和列舉型別資料行類型。</span><span class="sxs-lookup"><span data-stu-id="755ff-109">These templates support foreign-key, Boolean, and enumeration column types.</span></span>  
  
 <span data-ttu-id="755ff-110">下表顯示一些您可以執行的工作。</span><span class="sxs-lookup"><span data-stu-id="755ff-110">The following table shows some of the tasks you can perform.</span></span>  
  
|<span data-ttu-id="755ff-111">情節</span><span class="sxs-lookup"><span data-stu-id="755ff-111">Scenario</span></span>|<span data-ttu-id="755ff-112">描述</span><span class="sxs-lookup"><span data-stu-id="755ff-112">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="755ff-113">指定要用於資料表資料列篩選的資料行。</span><span class="sxs-lookup"><span data-stu-id="755ff-113">Specify the column to use for table row filtering.</span></span>|<span data-ttu-id="755ff-114">使用屬性<xref:System.Web.DynamicData.DynamicFilter.DataField%2A>指定要用於資料表資料列篩選的資料行。</span><span class="sxs-lookup"><span data-stu-id="755ff-114">Use the property <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> to specify the column to use for table row filtering.</span></span>|  
|<span data-ttu-id="755ff-115">指定要用來建立 UI 的篩選器範本的名稱。</span><span class="sxs-lookup"><span data-stu-id="755ff-115">Specify the name of the filter template to use to create the UI.</span></span>|<span data-ttu-id="755ff-116">使用屬性<xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>來指定要用來建立 UI 的篩選器範本的名稱。</span><span class="sxs-lookup"><span data-stu-id="755ff-116">Use the property <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> to specify the name of the filter template to use to create the UI.</span></span>|  
|<span data-ttu-id="755ff-117">UI 呈現之前，請執行自訂作業。</span><span class="sxs-lookup"><span data-stu-id="755ff-117">Perform custom operations before the UI is rendered.</span></span>|<span data-ttu-id="755ff-118">使用<xref:System.Web.DynamicData.DynamicFilter.FilterChanged>UI 呈現之前執行的自訂作業。</span><span class="sxs-lookup"><span data-stu-id="755ff-118">Use the <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> to perform custom operations before the UI is rendered.</span></span>|  
  
 <span data-ttu-id="755ff-119">您可以指定篩選器範本，以下列方式使用：</span><span class="sxs-lookup"><span data-stu-id="755ff-119">You can specify the filter template to use in the following ways:</span></span>  
  
-   <span data-ttu-id="755ff-120">使用<xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>在網頁標記中的屬性。</span><span class="sxs-lookup"><span data-stu-id="755ff-120">By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup.</span></span> <span data-ttu-id="755ff-121">這個方法是獨立的結構描述 （資料庫），且這會套用到單一頁面的展示層自訂。</span><span class="sxs-lookup"><span data-stu-id="755ff-121">This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.</span></span>  
  
-   <span data-ttu-id="755ff-122">使用<xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute>模型中的屬性。</span><span class="sxs-lookup"><span data-stu-id="755ff-122">By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model.</span></span> <span data-ttu-id="755ff-123">這個方法是資料層級自訂，這取決於特定的結構描述 （資料庫），並套用至整個應用程式。</span><span class="sxs-lookup"><span data-stu-id="755ff-123">This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.</span></span>  
  
 <span data-ttu-id="755ff-124">如果您使用這兩種方法，在標記中指定的篩選器範本優先於指定資料模型中的範本。</span><span class="sxs-lookup"><span data-stu-id="755ff-124">If you use both approaches, the filter template that is specified in the markup takes precedence over the template that is specified in the data model.</span></span>  
  
<a name="ClassContext"></a>   
## <a name="class-context"></a><span data-ttu-id="755ff-125">類別內容</span><span class="sxs-lookup"><span data-stu-id="755ff-125">Class Context</span></span>  
 <span data-ttu-id="755ff-126"><xref:System.Web.DynamicData.DynamicFilter>控制項設計來搭配<xref:System.Web.UI.WebControls.QueryExtender>控制項。</span><span class="sxs-lookup"><span data-stu-id="755ff-126">The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="755ff-127"><xref:System.Web.DynamicData.DynamicFilter>控制項以參照<xref:System.Web.DynamicData.DynamicFilterExpression>內執行個體<xref:System.Web.UI.WebControls.QueryExtender>在網頁標記中的物件。</span><span class="sxs-lookup"><span data-stu-id="755ff-127">The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup.</span></span>  
  
 <span data-ttu-id="755ff-128">下圖顯示動態資料之後，若要實作的外部索引鍵資料行篩選的資料表資料列的步驟。</span><span class="sxs-lookup"><span data-stu-id="755ff-128">The following figure shows the steps that Dynamic Data follows in order to implement table row filtering by a foreign-key column.</span></span>  
  
 <span data-ttu-id="755ff-129">![動態資料查詢項目](~/add/media/dynamic-dataquery.png "動態資料查詢項目")</span><span class="sxs-lookup"><span data-stu-id="755ff-129">![Dynamic Data Query Elements](~/add/media/dynamic-dataquery.png "Dynamic Data Query Elements")</span></span>  
  
1.  <span data-ttu-id="755ff-130"><xref:System.Web.DynamicData.DynamicFilter>控制權會傳遞到選取的值<xref:System.Web.UI.WebControls.QueryExtender>控制項。</span><span class="sxs-lookup"><span data-stu-id="755ff-130">The <xref:System.Web.DynamicData.DynamicFilter> control passes the selected value to the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
2.  <span data-ttu-id="755ff-131"><xref:System.Web.UI.WebControls.QueryExtender>控制項使用的值來建立查詢篩選資訊。</span><span class="sxs-lookup"><span data-stu-id="755ff-131">The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information.</span></span> <span data-ttu-id="755ff-132">然後將此資訊傳遞至資料來源控制項。</span><span class="sxs-lookup"><span data-stu-id="755ff-132">It then passes this information to the data source control.</span></span>  
  
3.  <span data-ttu-id="755ff-133">資料來源控制項將篩選的查詢資訊傳遞至資料來源提供者。</span><span class="sxs-lookup"><span data-stu-id="755ff-133">The data source control passes the filtering query information to the data source provider.</span></span>  
  
4.  <span data-ttu-id="755ff-134">資料來源提供者會將查詢傳遞到資料庫。</span><span class="sxs-lookup"><span data-stu-id="755ff-134">The data source provider passes the query to the database.</span></span>  
  
5.  <span data-ttu-id="755ff-135">資料庫會傳回已篩選的資料表資料列。</span><span class="sxs-lookup"><span data-stu-id="755ff-135">The database returns the filtered table rows.</span></span>  
  
6.  <span data-ttu-id="755ff-136">資料來源提供者會將此資料傳送回資料來源控制項。</span><span class="sxs-lookup"><span data-stu-id="755ff-136">The data source provider sends this data back to the data source control.</span></span>  
  
7.  <span data-ttu-id="755ff-137">資料來源控制項將已篩選的資料表資料列傳遞至顯示的資料繫結控制項中。</span><span class="sxs-lookup"><span data-stu-id="755ff-137">The data source control passes the filtered table rows to the data-bound control for display.</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="755ff-138">宣告式語法</span><span class="sxs-lookup"><span data-stu-id="755ff-138">Declarative Syntax</span></span>  
  
```  
<asp:DynamicFilter  
    ID="Control ID"  
    DataField="Name of the data field to use for filtering"  
    EnableViewState="True|False"   
    FilterUIHint="Name of the filter template to generate the UI"  
    OnFilterChanged="Filter changed event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"   
    Visible="True|False"  
    runat="server"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="755ff-139">在此位置是使用原始程式碼的 Visual Studio 專案：[下載](http://go.microsoft.com/fwlink/?LinkId=168914)。</span><span class="sxs-lookup"><span data-stu-id="755ff-139">A Visual Studio project with source code is available at this location: [Download](http://go.microsoft.com/fwlink/?LinkId=168914).</span></span>  
  
 <span data-ttu-id="755ff-140">下列範例會使用預設 ForeignKey.ascx 篩選器範本，建立產品資料表的資料列篩選 ProductCategory 外部索引鍵資料行的 UI。</span><span class="sxs-lookup"><span data-stu-id="755ff-140">The following examples use the default ForeignKey.ascx filter template to create the UI for filtering the Products table rows by the ProductCategory foreign-key column.</span></span> <span data-ttu-id="755ff-141">當使用者選取 ProductCategory 值時，會顯示包含該值的資料列。</span><span class="sxs-lookup"><span data-stu-id="755ff-141">When the user selects a ProductCategory value, only the rows that contain that value are displayed.</span></span>  
  
 <span data-ttu-id="755ff-142">這個範例需要下列各項：</span><span class="sxs-lookup"><span data-stu-id="755ff-142">The example requires the following:</span></span>  
  
-   <span data-ttu-id="755ff-143">動態資料網站或動態資料的 Web 應用程式。</span><span class="sxs-lookup"><span data-stu-id="755ff-143">A Dynamic Data Web site or a Dynamic Data Web application.</span></span> <span data-ttu-id="755ff-144">這可讓您建立`AdventureWorksLTDataContext`資料內容資料庫，並建立存取資料表的類別。</span><span class="sxs-lookup"><span data-stu-id="755ff-144">This enables you to create the `AdventureWorksLTDataContext` data context for the database and to create the classes for the tables to access.</span></span> <span data-ttu-id="755ff-145">如需詳細資訊，請參閱`Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`。</span><span class="sxs-lookup"><span data-stu-id="755ff-145">For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="755ff-146">初始化 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-146">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-147">通常您不會呼叫<xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A>直接建構函式。</span><span class="sxs-lookup"><span data-stu-id="755ff-147">Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly.</span></span> <span data-ttu-id="755ff-148">相反地，您使用<xref:System.Web.DynamicData.DynamicFilter>在網頁標記中的類別和類別初始化時載入的頁面。</span><span class="sxs-lookup"><span data-stu-id="755ff-148">Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected internal System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.Column" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.DynamicFilter.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="755ff-149">取得或設定要用於篩選的資料表資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-149">Gets or sets the table column to use for filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="755ff-150">要用於篩選的資料表資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-150">The table column to use for filtering.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-151">這個屬性是僅供內部使用。</span><span class="sxs-lookup"><span data-stu-id="755ff-151">This property is for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicFilter.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="755ff-152">取得或設定要用於資料表資料列篩選的資料行名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-152">Gets or sets the name of the column to use for table row filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="755ff-153">用於資料表資料列篩選的資料行名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-153">The name of the column used for table row filtering.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="755ff-154">下列範例會示範如何指定篩選標記中的資料表資料列的資料行。</span><span class="sxs-lookup"><span data-stu-id="755ff-154">The following example shows how to specify the column for table row filtering in markup.</span></span>  
  
```  
<asp:DynamicFilter ID="CategoryFilter" runat="server"   
    DataField="ProductCategory" />  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FilterChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FilterChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.DynamicData.DynamicFilter.FilterChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event FilterChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FilterChanged;" />
      <MemberSignature Language="F#" Value="member this.FilterChanged : EventHandler " Usage="member this.FilterChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="755ff-155">於使用者選取外部索引鍵值時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-155">Occurs when the user select a value for the foreign key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-156"><xref:System.Web.DynamicData.DynamicFilter.FilterChanged>使用者選取的外部索引鍵的值時，以及新的值都會轉譯之前，就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="755ff-156">The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered.</span></span> <span data-ttu-id="755ff-157">這可讓您提供的事件處理方法，可以執行自訂作業，例如自訂分頁。</span><span class="sxs-lookup"><span data-stu-id="755ff-157">This enables you to provide an event-handling method that can perform custom operations, such as custom paging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="755ff-158">下列範例會示範如何處理篩選已變更的事件。</span><span class="sxs-lookup"><span data-stu-id="755ff-158">The following example shows how to handle a filter-changed event.</span></span> <span data-ttu-id="755ff-159">之前已篩選的資料列會顯示此處理常式會重設頁面索引。</span><span class="sxs-lookup"><span data-stu-id="755ff-159">The handler resets the page index before the filtered rows are displayed.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control FilterTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control FilterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.FilterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterTemplate As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ FilterTemplate { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterTemplate : System.Web.UI.Control" Usage="System.Web.DynamicData.DynamicFilter.FilterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="755ff-160">取得與這個控制項目前執行個體相關聯的篩選器範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-160">Gets the filter template that is associated with the current instance of this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="755ff-161">與這個控制項目前執行個體相關聯的篩選器範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-161">The filter template that is associated with the current instance of this control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-162">動態資料會產生篩選資料表資料列支援的資料行類型的 UI。</span><span class="sxs-lookup"><span data-stu-id="755ff-162">Dynamic Data generates the UI for filtering table rows for supported column types.</span></span> <span data-ttu-id="755ff-163">它會使用預設篩選器範本 ~\DynamicData\Filters 資料夾中。</span><span class="sxs-lookup"><span data-stu-id="755ff-163">It uses the default filter templates that are in the ~\DynamicData\Filters folder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterUIHint : string with get, set" Usage="System.Web.DynamicData.DynamicFilter.FilterUIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="755ff-164">取得或設定用於建立 UI 之篩選器範本的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-164">Gets or sets the name of the filter template that is used to create the UI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="755ff-165">篩選器範本的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-165">The name of the filter template.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-166"><xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>屬性可讓您指定的篩選器範本，若要建立資料表資料列篩選的 UI。</span><span class="sxs-lookup"><span data-stu-id="755ff-166">The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering.</span></span> <span data-ttu-id="755ff-167">您可以指定篩選器範本，以下列方式使用：</span><span class="sxs-lookup"><span data-stu-id="755ff-167">You can specify the filter template to use in the following ways:</span></span>  
  
-   <span data-ttu-id="755ff-168">使用<xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>在網頁標記中的屬性。</span><span class="sxs-lookup"><span data-stu-id="755ff-168">By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup.</span></span> <span data-ttu-id="755ff-169">這種方法是對展示層自訂無關的結構描述 （資料庫），這會套用到單一頁面。</span><span class="sxs-lookup"><span data-stu-id="755ff-169">This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.</span></span>  
  
-   <span data-ttu-id="755ff-170">使用<xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute>模型中的屬性。</span><span class="sxs-lookup"><span data-stu-id="755ff-170">By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model.</span></span> <span data-ttu-id="755ff-171">這個方法是資料層級自訂，這取決於特定的結構描述 （資料庫），這會套用到整個應用程式。</span><span class="sxs-lookup"><span data-stu-id="755ff-171">This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.</span></span>  
  
 <span data-ttu-id="755ff-172">如果您使用這兩種方法，在標記中指定的篩選器範本優先於資料模型中指定的範本。</span><span class="sxs-lookup"><span data-stu-id="755ff-172">If you use both approaches, the filter template specified in the markup takes precedence over the template specified in the data model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="755ff-173">下列範例會示範如何在要用於篩選的標記中指定的篩選器範本。</span><span class="sxs-lookup"><span data-stu-id="755ff-173">The following example shows how to specify the filter template in markup to use for filtering.</span></span>  
  
```  
<asp:DynamicFilter ID="CategoryFilter" runat="server"   
    FilterUIHint="ForeignKey" />  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dynamicFilter.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="755ff-174">接收伺服器控制項內容的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-174">The object that receives the server control content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="755ff-175">將伺服器控制項內容傳送至指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-175">Sends server control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-176">寫入器會轉譯頁面的內容。</span><span class="sxs-lookup"><span data-stu-id="755ff-176">The writer renders the content to the page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.GetQueryable">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Function GetQueryable (source As IQueryable) As IQueryable Implements IFilterExpressionProvider.GetQueryable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Linq::IQueryable ^ System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System::Linq::IQueryable ^ source) = System::Web::DynamicData::IFilterExpressionProvider::GetQueryable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System.Linq.IQueryable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="755ff-177">資料來源查詢。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-177">The data source query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="755ff-178">取得使用目前的篩選值所修改的查詢。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-178">Gets the modified query using the current filter value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="755ff-179">篩選器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-179">The filter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-180">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="755ff-180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="755ff-181">只有在 <xref:System.Web.DynamicData.DynamicFilter> 執行個體轉換成 <xref:System.Web.DynamicData.IFilterExpressionProvider> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="755ff-181">It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.Initialize">
      <MemberSignature Language="C#" Value="void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.DynamicData.IFilterExpressionProvider.Initialize(class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (dataSource As IQueryableDataSource) Implements IFilterExpressionProvider.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.DynamicData.IFilterExpressionProvider.Initialize(System::Web::UI::WebControls::IQueryableDataSource ^ dataSource) = System::Web::DynamicData::IFilterExpressionProvider::Initialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.Initialize(System.Web.UI.WebControls.IQueryableDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="755ff-182">資料來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-182">The data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="755ff-183">初始化 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="755ff-183">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="755ff-184">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="755ff-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="755ff-185">只有在 <xref:System.Web.DynamicData.DynamicFilter> 執行個體轉換成 <xref:System.Web.DynamicData.IFilterExpressionProvider> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="755ff-185">It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>