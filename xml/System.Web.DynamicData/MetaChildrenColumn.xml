<Type Name="MetaChildrenColumn" FullName="System.Web.DynamicData.MetaChildrenColumn">
  <TypeSignature Language="C#" Value="public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaChildrenColumn extends System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaChildrenColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaChildrenColumn&#xA;Inherits MetaColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaChildrenColumn : System::Web::DynamicData::MetaColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.DynamicData.MetaColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f78e8-101">表示指示一對多關聯性 (One-To-Many Relationship) 的資料庫欄位。</span><span class="sxs-lookup"><span data-stu-id="f78e8-101">Represents a database field that indicates a one-to-many relationship.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f78e8-102">ASP.NET Dynamic Data 應用程式中，<xref:System.Web.DynamicData.MetaChildrenColumn>類別代表表示一對多關聯性或父子式關聯性的資料庫欄位。</span><span class="sxs-lookup"><span data-stu-id="f78e8-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaChildrenColumn> class represents a database field that indicates a one-to-many relationship or a parent-child relationship.</span></span>  
  
 <span data-ttu-id="f78e8-103"><xref:System.Web.DynamicData.MetaChildrenColumn>類別代表一個對多關聯性的父資料表中的欄位。</span><span class="sxs-lookup"><span data-stu-id="f78e8-103">The <xref:System.Web.DynamicData.MetaChildrenColumn> class represents the field in the parent table of the one-to-many relationship.</span></span> <span data-ttu-id="f78e8-104">不過，您可以使用存取子資料表物件<xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f78e8-104">However, you can access the child table object by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property.</span></span> <span data-ttu-id="f78e8-105">您也可以使用擷取子資料表中的外部索引鍵欄位<xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f78e8-105">You can also retrieve the foreign-key field in the child table by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider entityMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As MetaTable, entityMember As ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaChildrenColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ entityMember);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="entityMember" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f78e8-106">中繼資料表。</span><span class="sxs-lookup"><span data-stu-id="f78e8-106">The meta table.</span></span></param>
        <param name="entityMember"><span data-ttu-id="f78e8-107">資料行提供者。</span><span class="sxs-lookup"><span data-stu-id="f78e8-107">The column provider.</span></span></param>
        <summary><span data-ttu-id="f78e8-108">初始化 <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="f78e8-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildTable As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ ChildTable { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f78e8-109">取得物件，這個物件表示一對多關聯性的子資料表。</span><span class="sxs-lookup"><span data-stu-id="f78e8-109">Gets an object that represents the child table of the one-to-many relationship.</span></span></summary>
        <value><span data-ttu-id="f78e8-110">物件，表示一對多關聯性的子資料表。</span><span class="sxs-lookup"><span data-stu-id="f78e8-110">An object that represents the child table of the one-to-many relationship.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f78e8-111">使用<xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A>屬性來取得物件，表示子資料表的一對多關聯性。</span><span class="sxs-lookup"><span data-stu-id="f78e8-111">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property to get an object that represents the child table of the one-to-many relationship.</span></span> <span data-ttu-id="f78e8-112">您可以使用來存取父資料表<xref:System.Web.DynamicData.MetaColumn.Table%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f78e8-112">You can access the parent table by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="ColumnInOtherTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn ColumnInOtherTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnInOtherTable As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ ColumnInOtherTable { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f78e8-113">取得物件，這個物件表示子資料表中的外部索引鍵欄位。</span><span class="sxs-lookup"><span data-stu-id="f78e8-113">Gets an object that represents the foreign-key field in the child table.</span></span></summary>
        <value><span data-ttu-id="f78e8-114">物件，表示子資料表中的外部索引鍵欄位。</span><span class="sxs-lookup"><span data-stu-id="f78e8-114">An object that represents the foreign-key field in the child table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f78e8-115"><xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A>屬性可讓您取得子資料表中欄位的參考。</span><span class="sxs-lookup"><span data-stu-id="f78e8-115">The <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property enables you to get a reference to the field in the child table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenListPath">
      <MemberSignature Language="C#" Value="public string GetChildrenListPath (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenListPath(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenListPath (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenListPath(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenListPath(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="f78e8-116">包含外部索引鍵欄位的資料列。</span><span class="sxs-lookup"><span data-stu-id="f78e8-116">The row that contains the foreign-key field.</span></span></param>
        <summary><span data-ttu-id="f78e8-117">取得子資料表的清單動作頁面路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-117">Gets the path of the list-action page for the child table.</span></span></summary>
        <returns><span data-ttu-id="f78e8-118">子資料表的清單動作頁面路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-118">The path of the list-action page for the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f78e8-119">使用<xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A>方法，當您想要擷取的子資料表為父代使用指定的資料列清單動作頁面。</span><span class="sxs-lookup"><span data-stu-id="f78e8-119">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method when you want to retrieve the list-action page for the child table using the specified row as a parent.</span></span> <span data-ttu-id="f78e8-120">路徑藉由將查詢字串值附加至包含外部索引鍵欄位值中指定的 URL 取得`row`參數。</span><span class="sxs-lookup"><span data-stu-id="f78e8-120">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="f78e8-121">使用<xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A>方法是叫用相同<xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29>方法並傳遞<xref:System.Web.DynamicData.PageAction.List%2A>的第一個參數的動作。</span><span class="sxs-lookup"><span data-stu-id="f78e8-121">Using the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method is the same as invoking the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method and passing the <xref:System.Web.DynamicData.PageAction.List%2A> action as the first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.PageAction.List" />
        <altmember cref="Overload:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildrenPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f78e8-122">取得子資料表的指定動作頁面路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-122">Gets the path for the specified action page of the child table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="f78e8-123">目標動作。</span><span class="sxs-lookup"><span data-stu-id="f78e8-123">The target action.</span></span></param>
        <param name="row"><span data-ttu-id="f78e8-124">包含外部索引鍵欄位的資料列。</span><span class="sxs-lookup"><span data-stu-id="f78e8-124">The row that contains the foreign-key field.</span></span></param>
        <summary><span data-ttu-id="f78e8-125">取得子資料表的指定動作頁面路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-125">Gets the path of the specified action page of the child table.</span></span></summary>
        <returns><span data-ttu-id="f78e8-126">子資料表的指定動作頁面路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-126">The path of the specified action page of the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f78e8-127"><xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29>方法會傳回指定的動作 頁面上，子資料表的路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-127">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="f78e8-128">傳回的路徑以 ASP.NET Dynamic Data 應用程式所定義的路由為基礎，並已指定為父資料列。</span><span class="sxs-lookup"><span data-stu-id="f78e8-128">The path returned is based on the routes that are defined for the ASP.NET Dynamic Data application and has the specified row as a parent.</span></span> <span data-ttu-id="f78e8-129">路徑藉由將查詢字串值附加至包含外部索引鍵欄位值中指定的 URL 取得`row`參數。</span><span class="sxs-lookup"><span data-stu-id="f78e8-129">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="f78e8-130">如果`row`是`null`，此方法會傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="f78e8-130">If `row` is `null`, his method returns an empty string.</span></span>  
  
 <span data-ttu-id="f78e8-131">您可以使用中定義的值<xref:System.Web.DynamicData.PageAction>類別`action`參數。</span><span class="sxs-lookup"><span data-stu-id="f78e8-131">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="f78e8-132">目標動作。</span><span class="sxs-lookup"><span data-stu-id="f78e8-132">The target action.</span></span></param>
        <param name="row"><span data-ttu-id="f78e8-133">包含外部索引鍵欄位的資料列。</span><span class="sxs-lookup"><span data-stu-id="f78e8-133">The row that contains the foreign-key field.</span></span></param>
        <param name="path"><span data-ttu-id="f78e8-134">目標頁面。</span><span class="sxs-lookup"><span data-stu-id="f78e8-134">The target page.</span></span></param>
        <summary><span data-ttu-id="f78e8-135">取得子資料表的指定動作頁面路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-135">Gets the path for the specified action page of the child table.</span></span></summary>
        <returns><span data-ttu-id="f78e8-136">子資料表的指定動作頁面路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-136">The path of the specified action page of the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f78e8-137"><xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29>方法會傳回指定的動作 頁面上，子資料表的路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-137">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="f78e8-138">路徑依據指定的路徑指定的資料列中，為父代。</span><span class="sxs-lookup"><span data-stu-id="f78e8-138">The path is based on the specified path with the specified row as a parent.</span></span> <span data-ttu-id="f78e8-139">路徑藉由將查詢字串值附加至包含外部索引鍵欄位值中指定的 URL 取得`row`參數。</span><span class="sxs-lookup"><span data-stu-id="f78e8-139">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="f78e8-140">如果`row`是`null`，這個方法會傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="f78e8-140">If `row` is `null`, this method returns an empty string.</span></span> <span data-ttu-id="f78e8-141">如果`path`是`null`、<xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29>方法會傳回根據路由定義 ASP.NET Dynamic Data 應用程式的路徑。</span><span class="sxs-lookup"><span data-stu-id="f78e8-141">If `path` is `null`, the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path based on the routes defined for the ASP.NET Dynamic Data application.</span></span>  
  
 <span data-ttu-id="f78e8-142">您可以使用中定義的值<xref:System.Web.DynamicData.PageAction>類別`action`參數。</span><span class="sxs-lookup"><span data-stu-id="f78e8-142">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f78e8-143">初始化呼叫建構函式時可能無法使用的資料。</span><span class="sxs-lookup"><span data-stu-id="f78e8-143">Initializes data that might not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f78e8-144">無法直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="f78e8-144">This method cannot be called directly.</span></span> <span data-ttu-id="f78e8-145">若要自訂初始化，您可以從這個類別衍生，並覆寫`Initialize`方法。</span><span class="sxs-lookup"><span data-stu-id="f78e8-145">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="f78e8-146">如果您覆寫這個方法，呼叫基底控制項`Initialize`方法。</span><span class="sxs-lookup"><span data-stu-id="f78e8-146">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManyToMany">
      <MemberSignature Language="C#" Value="public bool IsManyToMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManyToMany" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManyToMany As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManyToMany { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaChildrenColumn.IsManyToMany</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f78e8-147">取得值，這個值表示資料行的多對多關聯性狀態。</span><span class="sxs-lookup"><span data-stu-id="f78e8-147">Gets a value that indicates the many-to-many relationship status of the column.</span></span></summary>
        <value>
          <span data-ttu-id="f78e8-148">如果資料行的關聯性為多對多則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f78e8-148"><see langword="true" /> if the column relationship is many-to-many; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>