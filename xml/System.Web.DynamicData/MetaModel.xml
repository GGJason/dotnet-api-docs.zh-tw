<Type Name="MetaModel" FullName="System.Web.DynamicData.MetaModel">
  <TypeSignature Language="C#" Value="public class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c5488-101">表示 ASP.NET Dynamic Data 所使用的一個或多個資料庫。</span><span class="sxs-lookup"><span data-stu-id="c5488-101">Represents one or multiple databases that are used by ASP.NET Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-102"><xref:System.Web.DynamicData.MetaModel>類型可讓您註冊一或多個動態資料的 Web 應用程式的資料內容。</span><span class="sxs-lookup"><span data-stu-id="c5488-102">The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.</span></span>  
  
 <span data-ttu-id="c5488-103">資料內容是物件，表示資料庫連接。</span><span class="sxs-lookup"><span data-stu-id="c5488-103">A data context is an object that represents a database connection.</span></span> <span data-ttu-id="c5488-104">資料內容都有一個資料模型，這代表可透過該連接的資料庫存取。</span><span class="sxs-lookup"><span data-stu-id="c5488-104">A data context has access to one data model which represents a database that is available through that connection.</span></span> <span data-ttu-id="c5488-105">資料模型是物件，表示資料庫的資料實體以 CLR 型別。</span><span class="sxs-lookup"><span data-stu-id="c5488-105">A data model is an object that represents a database's data entities as CLR types.</span></span> <span data-ttu-id="c5488-106">動態資料支援根據 LINQ to SQL 和 ADO.NET Entity Framework 資料模型。</span><span class="sxs-lookup"><span data-stu-id="c5488-106">Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.</span></span>  
  
 <span data-ttu-id="c5488-107">在 Visual Studio 中，您可以產生資料模型類型使用**LINQ to SQL 類別**範本或**ADO.NET 實體資料模型**範本。</span><span class="sxs-lookup"><span data-stu-id="c5488-107">In Visual Studio, you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template.</span></span> <span data-ttu-id="c5488-108">這些範本會使用物件關聯式設計工具 （O/R 設計工具），LINQ to SQL 模型或 ADO.NET Entity Data Model Designer （實體設計工具） 的 Entity Framework 模型。</span><span class="sxs-lookup"><span data-stu-id="c5488-108">These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5488-109">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel>類型才能使用自動 scaffold ASP.NET 網站中執行下列工作：</span><span class="sxs-lookup"><span data-stu-id="c5488-109">The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:</span></span>  
  
-   <span data-ttu-id="c5488-110">取得預設的資料內容中的資料模型。</span><span class="sxs-lookup"><span data-stu-id="c5488-110">Get the data model for the default data context.</span></span>  
  
-   <span data-ttu-id="c5488-111">取得指定的資料內容中的資料模型。</span><span class="sxs-lookup"><span data-stu-id="c5488-111">Get the data model for a specified data context.</span></span>  
  
-   <span data-ttu-id="c5488-112">評估的路徑 （決定的 URL） 指定的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-112">Evaluate the routing path (determine the URL) for a specified table.</span></span>  
  
 <span data-ttu-id="c5488-113">此範例是由頁面和其程式碼後置檔案所組成。</span><span class="sxs-lookup"><span data-stu-id="c5488-113">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]
 [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  
  
 <span data-ttu-id="c5488-114">若要編譯此範例，您需要下列項目：</span><span class="sxs-lookup"><span data-stu-id="c5488-114">To compile the example, you need the following:</span></span>  
  
-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]<span data-ttu-id="c5488-115"> 或 [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c5488-115"> or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span></span>  
  
-   <span data-ttu-id="c5488-116">Dynamic Data 網站。</span><span class="sxs-lookup"><span data-stu-id="c5488-116">A Dynamic Data Web site.</span></span> <span data-ttu-id="c5488-117">如需詳細資訊，請參閱[逐步解說： 建立新動態資料網站上使用 Scaffolding](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a)。</span><span class="sxs-lookup"><span data-stu-id="c5488-117">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
 <span data-ttu-id="c5488-118">請參閱這項功能的執行階段程式碼範例：[執行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel)。</span><span class="sxs-lookup"><span data-stu-id="c5488-118">See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span></span>  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c5488-119">如果已有資料內容註冊錯誤，任何方法都可以擲回這個例外狀況 (Exception)。</span><span class="sxs-lookup"><span data-stu-id="c5488-119">Can be thrown by any method if there has been a data context registration error.</span></span></exception>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c5488-120">執行個體化 <see cref="T:System.Web.DynamicData.MetaModel" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-120">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5488-121">執行個體化 <see cref="T:System.Web.DynamicData.MetaModel" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-121">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-122">您通常會呼叫<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>中的建構函式`Application_Start`Global.asax 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="c5488-122">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5488-123">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>建構函式來執行下列工作：</span><span class="sxs-lookup"><span data-stu-id="c5488-123">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="c5488-124">具現化<xref:System.Web.DynamicData.MetaModel>類別。</span><span class="sxs-lookup"><span data-stu-id="c5488-124">Instantiate the <xref:System.Web.DynamicData.MetaModel> class.</span></span>  
  
-   <span data-ttu-id="c5488-125">初始化並註冊<xref:System.Web.DynamicData.MetaModel>執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-125">Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel (bool registerGlobally);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool registerGlobally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registerGlobally As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel(bool registerGlobally);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registerGlobally" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="registerGlobally">
          <span data-ttu-id="c5488-126"><see langword="true" /> 表示已全域註冊該模型，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-126"><see langword="true" /> to indicate that the model is registered globally; otherwise <see langword="false" />.</span></span> <span data-ttu-id="c5488-127">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-127">The default is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="c5488-128">執行個體化 <see cref="T:System.Web.DynamicData.MetaModel" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-128">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-129">這個建構函式判斷，讓它可以擷取使用資料模型是否全域登錄<xref:System.Web.DynamicData.MetaModel.GetModel%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c5488-129">This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method.</span></span> <span data-ttu-id="c5488-130">它可讓您建立多個模型，並同時避免衝突類型使用相同的實體類型。</span><span class="sxs-lookup"><span data-stu-id="c5488-130">It enables you to create multiple models and use the same entity types while avoiding type conflicts.</span></span>  
  
 <span data-ttu-id="c5488-131">您通常會呼叫<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>中的建構函式`Application_Start`Global.asax 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="c5488-131">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaTable CreateTable(class System.Web.DynamicData.ModelProviders.TableProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable (provider As TableProvider) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaTable ^ CreateTable(System::Web::DynamicData::ModelProviders::TableProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c5488-132">資料表的提供者。</span><span class="sxs-lookup"><span data-stu-id="c5488-132">The provider for the table.</span></span></param>
        <summary><span data-ttu-id="c5488-133">執行個體化 <see cref="T:System.Web.DynamicData.MetaTable" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="c5488-133">Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
        <returns><span data-ttu-id="c5488-134">資料表的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-134">A new instance of the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-135"><xref:System.Web.DynamicData.MetaModel.CreateTable%2A>方法可以覆寫來具現化衍生型別。</span><span class="sxs-lookup"><span data-stu-id="c5488-135">The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.DynamicData.MetaModel Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::DynamicData::MetaModel ^ Default { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5488-136">取得應用程式所建立的第一個資料模型執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-136">Gets the first instance of a data model that is created by the application.</span></span></summary>
        <value><span data-ttu-id="c5488-137">資料模型執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-137">The data-model instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-138">這個屬性會提供簡單的方式來參考的預設資料模型執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-138">This property provides a simple way to reference the default data-model instance.</span></span> <span data-ttu-id="c5488-139">如果應用程式使用多個模型，您必須提供自己的方式來儲存其他資料模型的參考。</span><span class="sxs-lookup"><span data-stu-id="c5488-139">If the application uses multiple models, you must provide your own way to store references to the additional data models.</span></span> <span data-ttu-id="c5488-140">若要尋找特定的資料模型，請呼叫<xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="c5488-140">To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5488-141">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.Default%2A>屬性<xref:System.Web.DynamicData.MetaModel.GetModel%2A>方法來取得預設資料模型。</span><span class="sxs-lookup"><span data-stu-id="c5488-141">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.</span></span>  
  
 <span data-ttu-id="c5488-142">如需完整範例，請參閱<xref:System.Web.DynamicData.MetaModel>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="c5488-142">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDataFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string DynamicDataFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDataFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicDataFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDataFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.DynamicDataFolderVirtualPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5488-143">取得或設定網站中 [DynamicData] 資料夾的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="c5488-143">Gets or sets the virtual path of the DynamicData folder in the Web site.</span></span></summary>
        <value><span data-ttu-id="c5488-144">[DynamicData] 資料夾的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="c5488-144">The virtual path of the DynamicData folder.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-145">這個屬性可讓您變更 [動態] 資料夾的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="c5488-145">This property enables you to change the virtual path of the DynamicData folder.</span></span> <span data-ttu-id="c5488-146">預設值是"~/DynamicData"。</span><span class="sxs-lookup"><span data-stu-id="c5488-146">The default value is "~/DynamicData".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTemplateFactory As EntityTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::EntityTemplateFactory ^ EntityTemplateFactory { System::Web::DynamicData::EntityTemplateFactory ^ get(); void set(System::Web::DynamicData::EntityTemplateFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5488-147">取得或設定與模型相關聯的 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="c5488-147">Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="c5488-148">與模型相關聯之 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-148">An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldTemplateFactory As IFieldTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::IFieldTemplateFactory ^ FieldTemplateFactory { System::Web::DynamicData::IFieldTemplateFactory ^ get(); void set(System::Web::DynamicData::IFieldTemplateFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.FieldTemplateFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5488-149">取得或設定自訂 <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="c5488-149">Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></summary>
        <value><span data-ttu-id="c5488-150"><see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="c5488-150">The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-151"><xref:System.Web.DynamicData.IFieldTemplateFactory>介面可讓您指定哪些欄位範本會建立資料表資料行。</span><span class="sxs-lookup"><span data-stu-id="c5488-151">The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.FilterFactory FilterFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterFactory As FilterFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::FilterFactory ^ FilterFactory { System::Web::DynamicData::FilterFactory ^ get(); void set(System::Web::DynamicData::FilterFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.FilterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5488-152">取得或設定與模型相關聯的 <see cref="T:System.Web.DynamicData.FilterFactory" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="c5488-152">Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="c5488-153">與模型相關聯之 <see cref="T:System.Web.DynamicData.FilterFactory" /> 物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-153">An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string tableName, string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string tableName, string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (tableName As String, action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.GetActionPath(System.String,System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="c5488-154">動作所套用的資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="c5488-154">The name of the table that the action applies to.</span></span></param>
        <param name="action"><span data-ttu-id="c5488-155">要套用至資料表的動作。</span><span class="sxs-lookup"><span data-stu-id="c5488-155">The action to apply to the table.</span></span></param>
        <param name="row"><span data-ttu-id="c5488-156">表示資料表中單一資料列的物件。</span><span class="sxs-lookup"><span data-stu-id="c5488-156">An object that represents a single row of data in a table.</span></span> <span data-ttu-id="c5488-157"><c>row</c> 是用來提供查詢字串參數的值。</span><span class="sxs-lookup"><span data-stu-id="c5488-157"><c>row</c> is used to provide values for query-string parameters.</span></span></param>
        <summary><span data-ttu-id="c5488-158">傳回與特定資料表相關聯的動作路徑。</span><span class="sxs-lookup"><span data-stu-id="c5488-158">Returns the action path that is associated with a specific table.</span></span></summary>
        <returns><span data-ttu-id="c5488-159">與路徑相關聯的 URL。</span><span class="sxs-lookup"><span data-stu-id="c5488-159">The URL that is associated with the route.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-160">路由是由資料表名稱和動作的組合所決定。</span><span class="sxs-lookup"><span data-stu-id="c5488-160">The route is determined by the combination of the table name and action.</span></span>  
  
 <span data-ttu-id="c5488-161">[執行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx)線上這項功能的範例。</span><span class="sxs-lookup"><span data-stu-id="c5488-161">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5488-162">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29>方法，以評估的路徑 （決定的 URL） 指定的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-162">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table.</span></span> <span data-ttu-id="c5488-163">如需完整的範例，請參閱<xref:System.Web.DynamicData.MetaModel>。</span><span class="sxs-lookup"><span data-stu-id="c5488-163">For a complete example, see <xref:System.Web.DynamicData.MetaModel>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]
 [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel GetModel (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaModel GetModel(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModel (contextType As Type) As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaModel ^ GetModel(Type ^ contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="c5488-164">資料內容的型別，如資料模型中所定義。</span><span class="sxs-lookup"><span data-stu-id="c5488-164">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="c5488-165">傳回指定之內容的資料模型執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-165">Returns the data-model instance for the specified context.</span></span></summary>
        <returns><span data-ttu-id="c5488-166">與指定之內容型別相關聯的資料模型。</span><span class="sxs-lookup"><span data-stu-id="c5488-166">The data model that is associated with the specified context type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5488-167">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29>方法來執行下列工作：</span><span class="sxs-lookup"><span data-stu-id="c5488-167">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="c5488-168">取得預設資料模型。</span><span class="sxs-lookup"><span data-stu-id="c5488-168">Getting the default data model.</span></span>  
  
-   <span data-ttu-id="c5488-169">取得傳遞的內容類型所指定的資料模型。</span><span class="sxs-lookup"><span data-stu-id="c5488-169">Getting the data model specified by the passed context type.</span></span>  
  
 <span data-ttu-id="c5488-170">如需完整範例，請參閱<xref:System.Web.DynamicData.MetaModel>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="c5488-170">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c5488-171">找不到資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-171">The table was not found.</span></span></exception>
        <summary><span data-ttu-id="c5488-172">傳回描述資料模型資料表的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-172">Returns the metadata that describes a data model table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-173"><xref:System.Web.DynamicData.MetaTable>的多載方法會傳回的物件包含與指定之資料表相關聯的中繼資料資訊。</span><span class="sxs-lookup"><span data-stu-id="c5488-173">The <xref:System.Web.DynamicData.MetaTable> object that is returned by the overloaded methods contains the metadata information that is associated with the specified table.</span></span>  
  
 <span data-ttu-id="c5488-174">[執行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx)線上這項功能的範例。</span><span class="sxs-lookup"><span data-stu-id="c5488-174">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5488-175">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.GetTable%2A>多載的方法來執行下列工作：</span><span class="sxs-lookup"><span data-stu-id="c5488-175">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> overloaded methods to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="c5488-176">取得<xref:System.Web.DynamicData.MetaTable>指定之資料表的物件。</span><span class="sxs-lookup"><span data-stu-id="c5488-176">Get the <xref:System.Web.DynamicData.MetaTable> object for the specified table.</span></span>  
  
-   <span data-ttu-id="c5488-177">存取所包含的中繼資料資訊<xref:System.Web.DynamicData.MetaTable>物件。</span><span class="sxs-lookup"><span data-stu-id="c5488-177">Access the metadata information that is contained by the <xref:System.Web.DynamicData.MetaTable> object.</span></span>  
  
 <span data-ttu-id="c5488-178">此範例是由頁面和其程式碼後置檔案所組成。</span><span class="sxs-lookup"><span data-stu-id="c5488-178">The example consists of a page and its code-behind file.</span></span>  
  
 <span data-ttu-id="c5488-179">[!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --></span><span class="sxs-lookup"><span data-stu-id="c5488-179">[!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
[!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --></span></span> 
  
 [!code-csharp[System.Web.DynamicData.MetaModel#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#4)]
 [!code-vb[System.Web.DynamicData.MetaModel#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string uniqueTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (uniqueTableName As String) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ uniqueTableName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="c5488-180">名稱，識別資料模型中的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-180">The name that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="c5488-181">傳回與指定之資料表相關聯的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-181">Returns the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="c5488-182">中繼資料，描述指定的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-182">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-183">名稱可唯一識別資料模型中的資料表，並將用來產生相關的路由 URL。</span><span class="sxs-lookup"><span data-stu-id="c5488-183">The name uniquely identifies a table in the data model and is used to generate the related URL for routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5488-184">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29>方法，以取得指定之資料表的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-184">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="c5488-185">如需完整的範例，請參閱<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="c5488-185">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]
 [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c5488-186">資料模型中找不到名稱。</span><span class="sxs-lookup"><span data-stu-id="c5488-186">The name was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="c5488-187">型別，識別資料模型中的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-187">The type that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="c5488-188">傳回描述指定之資料表的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-188">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="c5488-189">中繼資料，描述指定的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-189">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5488-190">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29>方法，以取得指定之資料表的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-190">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="c5488-191">如需完整的範例，請參閱<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="c5488-191">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]
 [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c5488-192">資料模型中找不到型別。</span><span class="sxs-lookup"><span data-stu-id="c5488-192">The type was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string tableName, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (tableName As String, contextType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ tableName, Type ^ contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="c5488-193">資料表的名稱。</span><span class="sxs-lookup"><span data-stu-id="c5488-193">The name of the table.</span></span></param>
        <param name="contextType"><span data-ttu-id="c5488-194">要搜尋資料表的資料內容。</span><span class="sxs-lookup"><span data-stu-id="c5488-194">The data context to search for the table.</span></span></param>
        <summary><span data-ttu-id="c5488-195">傳回描述指定之資料表的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-195">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="c5488-196">中繼資料，描述指定的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-196">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5488-197">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29>方法，以取得指定之資料表的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-197">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="c5488-198">如需完整的範例，請參閱<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="c5488-198">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]
 [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5488-199"><paramref name="tablename" /> 或 <paramref name="contextType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-199"><paramref name="tablename" /> or <paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c5488-200">內容未註冊，或資料表不存在於資料內容中。</span><span class="sxs-lookup"><span data-stu-id="c5488-200">The context is not registered or the table does not exist in the data context.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c5488-201">註冊資料內容。</span><span class="sxs-lookup"><span data-stu-id="c5488-201">Registers the data context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-202">您可以使用的屬性，以定義資料內容的初始化資訊<xref:System.Web.DynamicData.ContextConfiguration>類別。</span><span class="sxs-lookup"><span data-stu-id="c5488-202">You can define data-context initialization information by using the properties of the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="c5488-203">具現化資料內容的 Factory。</span><span class="sxs-lookup"><span data-stu-id="c5488-203">The factory for instantiating the data context.</span></span></param>
        <summary><span data-ttu-id="c5488-204">註冊內容 Factory 所指定的資料內容。</span><span class="sxs-lookup"><span data-stu-id="c5488-204">Registers the data context that is specified by a context factory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-205">這個方法會使用預設的內容資訊由定義<xref:System.Web.DynamicData.ContextConfiguration>類別。</span><span class="sxs-lookup"><span data-stu-id="c5488-205">This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span> <span data-ttu-id="c5488-206">它可讓您使用您自己的建構函式具現化的資料內容。</span><span class="sxs-lookup"><span data-stu-id="c5488-206">It enables you to instantiate the data context by using your own constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="c5488-207">資料內容的型別，如資料模型中所定義。</span><span class="sxs-lookup"><span data-stu-id="c5488-207">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="c5488-208">註冊資料內容執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-208">Registers a data-context instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-209">這個方法會使用預設的內容資訊所定義的<xref:System.Web.DynamicData.ContextConfiguration>類別。</span><span class="sxs-lookup"><span data-stu-id="c5488-209">This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="c5488-210">資料模型的提供者。</span><span class="sxs-lookup"><span data-stu-id="c5488-210">A provider for the data model.</span></span></param>
        <summary><span data-ttu-id="c5488-211">使用資料模型提供者，註冊資料內容執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-211">Registers a data context instance by using a data-model provider</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object), configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="c5488-212">用來具現化資料模型內容的委派 (Delegate)。</span><span class="sxs-lookup"><span data-stu-id="c5488-212">A delegate that is used to instantiate the data model context.</span></span></param>
        <param name="configuration"><span data-ttu-id="c5488-213">如 <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 類別所定義的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="c5488-213">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="c5488-214">使用指定的內容組態並啟用自訂建構函式，註冊資料內容執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-214">Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-215">內容 factory，這個方法可讓您使用的自訂建構函式具現化資料模型內容。</span><span class="sxs-lookup"><span data-stu-id="c5488-215">The context factory in this method enables you to instantiate a data model context by using a custom constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5488-216"><paramref name="contextFactory" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-216"><paramref name="contextFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c5488-217"><paramref name="contextType" /> 所具現化的 <paramref name="contextFactory" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="c5488-217">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type, configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="c5488-218">資料內容的型別，如資料模型中所定義。</span><span class="sxs-lookup"><span data-stu-id="c5488-218">The type of the data context as defined in the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="c5488-219">內容的組態資訊，如 <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 類別所定義。</span><span class="sxs-lookup"><span data-stu-id="c5488-219">The configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="c5488-220">使用指定的內容組態，註冊資料內容執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-220">Registers a data-context instance by using the specified context configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5488-221">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29>向 scaffolding 啟用，註冊的資料內容的方法所指定`configuration`參數。</span><span class="sxs-lookup"><span data-stu-id="c5488-221">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5488-222"><paramref name="contextType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-222"><paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="c5488-223">資料模型的提供者。</span><span class="sxs-lookup"><span data-stu-id="c5488-223">A provider for the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="c5488-224">如 <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 類別所定義的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="c5488-224">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="c5488-225">使用指定的內容組態並啟用資料模型提供者 (Provider)，註冊資料內容執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5488-225">Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5488-226"><paramref name="dataModelProvider" /> 或 <paramref name="configuration" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-226"><paramref name="dataModelProvider" /> or <paramref name="configuration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c5488-227"><paramref name="contextType" /> 已註冊。</span><span class="sxs-lookup"><span data-stu-id="c5488-227"><paramref name="contextType" /> is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetRegistrationException">
      <MemberSignature Language="C#" Value="public static void ResetRegistrationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetRegistrationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.ResetRegistrationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetRegistrationException ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetRegistrationException();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5488-228">重設任何可能已發生的先前內容註冊錯誤。</span><span class="sxs-lookup"><span data-stu-id="c5488-228">Resets any previous context registration error that might have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-229">資料內容註冊期間發生錯誤時，例外狀況會快取，並在後續的所有作業中擲回。</span><span class="sxs-lookup"><span data-stu-id="c5488-229">When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.</span></span> <span data-ttu-id="c5488-230">比方說，如果錯誤發生在應用程式啟動時，它會擲回每個要求。</span><span class="sxs-lookup"><span data-stu-id="c5488-230">For example, if an error occurs at application start, it is thrown on every request.</span></span> <span data-ttu-id="c5488-231">呼叫此方法，以清除錯誤，並啟用新的內容登錄来執行。</span><span class="sxs-lookup"><span data-stu-id="c5488-231">Call this method to clear the error and to enable a new context registration to be performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As ReadOnlyCollection(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ Tables { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5488-232">取得屬於資料模型之所有資料表的集合。</span><span class="sxs-lookup"><span data-stu-id="c5488-232">Gets a collection of all the tables that are part of the data model.</span></span></summary>
        <value><span data-ttu-id="c5488-233">集合，包含屬於資料模型的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-233">A collection that contains the tables that belong to the data model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-234">集合包含資料模型，其中包含不會顯示資料表中的所有資料表 （不是動態的資料 scaffolding 的一部分）。</span><span class="sxs-lookup"><span data-stu-id="c5488-234">The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).</span></span>  
  
 <span data-ttu-id="c5488-235">[執行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx)線上這項功能的範例。</span><span class="sxs-lookup"><span data-stu-id="c5488-235">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5488-236">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.Tables%2A>和<xref:System.Web.DynamicData.MetaModel.VisibleTables%2A>屬性，以執行下列工作：</span><span class="sxs-lookup"><span data-stu-id="c5488-236">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="c5488-237">取得資料模型中的所有資料表的集合，並顯示在`GridView`控制項。</span><span class="sxs-lookup"><span data-stu-id="c5488-237">Get a collection of all the tables in a data model and show them in a `GridView` control.</span></span>  
  
-   <span data-ttu-id="c5488-238">資料模型中取得的可見的資料表集合，並顯示在`GridView`控制項。</span><span class="sxs-lookup"><span data-stu-id="c5488-238">Get a collection of the visible tables in a data model and show them in a `GridView` control.</span></span>  
  
 <span data-ttu-id="c5488-239">此範例是由頁面和其程式碼後置檔案所組成。</span><span class="sxs-lookup"><span data-stu-id="c5488-239">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]
 [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c5488-240">嘗試取得與指定之資料表相關聯的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-240">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(string uniqueTableName, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (uniqueTableName As String, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(System::String ^ uniqueTableName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="c5488-241">唯一識別資料表的名稱。</span><span class="sxs-lookup"><span data-stu-id="c5488-241">The name that uniquely identifies the table.</span></span></param>
        <param name="table"><span data-ttu-id="c5488-242">當這個方法傳回時，如果它有找到要求的資料表，則會包含該資料表的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-242">When this method returns, and if it has found the requested table, contains the metadata for that table.</span></span> <span data-ttu-id="c5488-243">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="c5488-243">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c5488-244">嘗試取得與指定之資料表相關聯的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-244">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns>
          <span data-ttu-id="c5488-245">如果有找到資料表中繼資料則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-245"><see langword="true" /> if the table metadata is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-246">這個方法會取得與指定之資料表相關聯的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-246">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="c5488-247">如果資料表沒有找到，則這個方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c5488-247">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="c5488-248">這不同於<xref:System.Web.DynamicData.MetaModel.GetTable%2A>方法，這個方法會擲回例外狀況，如果找不到資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-248">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5488-249"><paramref name="uniqueTableName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-249"><paramref name="uniqueTableName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="c5488-250">資料表型別。</span><span class="sxs-lookup"><span data-stu-id="c5488-250">The table type.</span></span></param>
        <param name="table"><span data-ttu-id="c5488-251">當這個方法傳回時，如果已找到要求的資料表，則包含指定之資料表的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-251">When this method returns, and if the requested table has been found, contains the metadata for the specified table.</span></span> <span data-ttu-id="c5488-252">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="c5488-252">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c5488-253">嘗試取得與指定之資料表相關聯的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-253">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns>
          <span data-ttu-id="c5488-254">如果已找到該資料表中繼資料則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-254"><see langword="true" /> if the table metadata is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5488-255">這個方法會取得與指定之資料表相關聯的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c5488-255">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="c5488-256">如果資料表沒有找到，則這個方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c5488-256">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="c5488-257">這不同於<xref:System.Web.DynamicData.MetaModel.GetTable%2A>方法，這個方法會擲回例外狀況，如果找不到資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-257">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5488-258"><paramref name="entityType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c5488-258"><paramref name="entityType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VisibleTables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt; VisibleTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Web.DynamicData.MetaTable&gt; VisibleTables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleTables As List(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ VisibleTables { System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5488-259">取得資料模型中可見資料表的集合。</span><span class="sxs-lookup"><span data-stu-id="c5488-259">Gets a collection of the visible tables in the data model.</span></span></summary>
        <value><span data-ttu-id="c5488-260">可見資料表意指已啟用 Scaffolding 的資料表，</span><span class="sxs-lookup"><span data-stu-id="c5488-260">A visible table refers to a table that has scaffolding enabled.</span></span> <span data-ttu-id="c5488-261">也就是 List.aspx 頁面所存在的資料表。</span><span class="sxs-lookup"><span data-stu-id="c5488-261">This means that it is a table for which a List.aspx page exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5488-262">下列範例示範如何使用<xref:System.Web.DynamicData.MetaModel.VisibleTables%2A>屬性來取得資料模型中顯示資料表的集合。</span><span class="sxs-lookup"><span data-stu-id="c5488-262">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model.</span></span> <span data-ttu-id="c5488-263">如需完整範例，請參閱<xref:System.Web.DynamicData.MetaModel>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="c5488-263">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]
 [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>