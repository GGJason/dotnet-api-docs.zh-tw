<Type Name="FilterFactory" FullName="System.Web.DynamicData.FilterFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04abb9faebf167badc5be9fce42a90d317d74841" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30536712" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FilterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.FilterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0045e-101">建立篩選器範本。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0045e-101">Creates a filter template.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0045e-102"><xref:System.Web.DynamicData.FilterFactory>類別可在執行階段由動態資料來取得特定資料行類型的篩選器範本執行個體。</span><span class="sxs-lookup"><span data-stu-id="0045e-102">The <xref:System.Web.DynamicData.FilterFactory> class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.</span></span>  
  
 <span data-ttu-id="0045e-103">您可以覆寫這個類別，以自訂方式載入篩選的範本中所定義的方法。</span><span class="sxs-lookup"><span data-stu-id="0045e-103">You can override the methods that are defined in this class to customize how filter templates are loaded.</span></span> <span data-ttu-id="0045e-104">比方說，自訂實作可以從不同於預設 ~/DynamicData/Filters 資料夾的位置載入篩選範本。</span><span class="sxs-lookup"><span data-stu-id="0045e-104">For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.</span></span>  
  
 <span data-ttu-id="0045e-105">動態資料提供的篩選器範本的外部索引鍵、 Boolean 和列舉型別資料行類型並將其顯示使用<xref:System.Web.UI.WebControls.DropDownList>控制項。</span><span class="sxs-lookup"><span data-stu-id="0045e-105">Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="0045e-106">您也可以建立自訂篩選器範本。</span><span class="sxs-lookup"><span data-stu-id="0045e-106">You can also create custom filter templates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0045e-107">如範例的資料表資料列篩選會使用預設篩選器範本，請參閱<xref:System.Web.DynamicData.QueryableFilterRepeater>類別。</span><span class="sxs-lookup"><span data-stu-id="0045e-107">For an example of table row filtering uses the default filter templates, see the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.FieldTemplateFactory" />
    <altmember cref="T:System.Web.DynamicData.EntityTemplateFactory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0045e-108">初始化 <see cref="T:System.Web.DynamicData.FilterFactory" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl(class System.Web.DynamicData.MetaColumn column, string filterUIHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFilterControl (column As MetaColumn, filterUIHint As String) As QueryableFilterUserControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::DynamicData::QueryableFilterUserControl ^ CreateFilterControl(System::Web::DynamicData::MetaColumn ^ column, System::String ^ filterUIHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.QueryableFilterUserControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="filterUIHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="0045e-109">篩選器範本要套用到其中的資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-109">The data column to which the filter template applies.</span>
          </span>
        </param>
        <param name="filterUIHint">
          <span data-ttu-id="0045e-110">要使用的篩選器範本名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-110">The name of the filter template to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0045e-111">建立篩選器範本的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-111">Creates an instance of the filter template.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0045e-112">
            <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> 類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-112">An instance of the <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0045e-113">要取得的篩選器範本執行個體的動態資料會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="0045e-113">This method is called by Dynamic Data to get an instance of a filter template.</span></span> <span data-ttu-id="0045e-114">在衍生的類別可以覆寫這個方法，以自訂的篩選器範本執行個體的建立方式。</span><span class="sxs-lookup"><span data-stu-id="0045e-114">Derived classes can override this method to customize how instances of filter templates are created.</span></span> <span data-ttu-id="0045e-115">例如，自訂實作可以從編譯的組件而不是從預設 ~/DynamicData/Filters 資料夾載入範本。</span><span class="sxs-lookup"><span data-stu-id="0045e-115">For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0045e-116">
            <paramref name="column" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-116">
              <paramref name="column" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFilterVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilterVirtualPath(class System.Web.DynamicData.MetaColumn column, string filterUIHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilterVirtualPath (column As MetaColumn, filterUIHint As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFilterVirtualPath(System::Web::DynamicData::MetaColumn ^ column, System::String ^ filterUIHint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="filterUIHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="0045e-117">篩選器範本要套用到其中的資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-117">The data column to which the filter template applies.</span>
          </span>
        </param>
        <param name="filterUIHint">
          <span data-ttu-id="0045e-118">要使用的篩選器範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-118">The filter template to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0045e-119">取得篩選器範本的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-119">Gets the virtual path of the filter template.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0045e-120">篩選器範本的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-120">The virtual path of the filter template.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0045e-121">根據預設，篩選器範本位於 ~/DynamicData/Filers 資料夾中。</span><span class="sxs-lookup"><span data-stu-id="0045e-121">By default, filter templates are located in the ~/DynamicData/Filers folder.</span></span>  
  
 <span data-ttu-id="0045e-122">這個方法會判斷的欄位樣板所在的資料夾中的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="0045e-122">This method determines the virtual path of the folder that contains the field template.</span></span> <span data-ttu-id="0045e-123">在衍生的類別可以覆寫這個方法以提供篩選器範本，從不同的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="0045e-123">Derived classes can override this method to provide filter templates from a different virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0045e-124">
            <paramref name="column" /> 為 **null**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0045e-124">
              <paramref name="column" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>