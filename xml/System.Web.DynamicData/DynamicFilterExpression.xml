<Type Name="DynamicFilterExpression" FullName="System.Web.DynamicData.DynamicFilterExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca102009510edaaa03e6c0b910e97c852e04a086" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58875032" /></Metadata><TypeSignature Language="C#" Value="public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type DynamicFilterExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用所指定篩選控制項中的值，修改資料庫查詢。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicFilterExpression>類別可讓您修改資料庫查詢使用中指派值<xref:System.Web.DynamicData.DynamicFilter>控制項。 這個控制項委派 (delegate) 的建置工作<xref:System.Linq.IQueryable>查詢的特製化的控制項，例如<xref:System.Web.DynamicData.QueryableFilterRepeater>控制或<xref:System.Web.DynamicData.DynamicFilter>控制項。  
  
 篩選控制項依次委派之查詢所參考的篩選器範本的建置。 資料來源控制項所參考，然後執行查詢<xref:System.Web.UI.WebControls.QueryExtender>控制項。  
  
 若要使用<xref:System.Web.DynamicData.DynamicFilterExpression>類別在頁面中，請遵循下列步驟：  
  
-   新增<xref:System.Web.UI.WebControls.QueryExtender>控制項加入網頁。  
  
-   設定`TargetControlID`屬性<xref:System.Web.UI.WebControls.QueryExtender>參考資料來源控制項的控制項。  
  
-   新增<xref:System.Web.DynamicData.DynamicFilterExpression>物件做為子系<xref:System.Web.UI.WebControls.QueryExtender>控制項。  
  
-   設定`ControlID`屬性<xref:System.Web.DynamicData.DynamicFilterExpression>參考篩選控制項的物件。  
  
 在先前步驟中，則會假設相關的篩選器控制項、 資料繫結控制項和資料來源控制項的頁面中定義。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.DynamicData.DynamicFilterExpression>控制項以在頁面中選取篩選器範本。 選取的篩選器範本<xref:System.Web.DynamicData.DynamicFilter>所識別的控制項<xref:System.Web.DynamicData.DynamicFilterExpression>透過控制其`ControlID`屬性。  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlID : string with get, set" Usage="System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定篩選控制項識別項。</summary>
        <value>篩選控制項識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此控制項識別項由<xref:System.Web.DynamicData.DynamicFilterExpression>類別，以選取的篩選條件可讓您控制它委派查詢，因為它會接著執行資料來源控制項所建置的工作。  
  
 篩選控制項委派 (delegate) 建置的查詢以篩選器範本參照的工作。 資料來源控制項所參考，然後執行查詢<xref:System.Web.UI.WebControls.QueryExtender>控制項。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.DynamicData.DynamicFilterExpression>頁面中選取篩選器控制項的類別。  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="dynamicFilterExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">要修改的資料來源查詢。</param>
        <summary>取得使用目前的篩選值所修改的查詢。</summary>
        <returns>資料來源查詢，此查詢已使用 <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 執行個體中所包含的目前值完成修改。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicFilterExpression.GetQueryable%2A>方法會委派之查詢所指定的篩選條件控制項所參考的篩選器範本的建置工作<xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.SetContext : System.Web.UI.Control * System.Web.HttpContext * System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="dynamicFilterExpression.SetContext (owner, context, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">包含 <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 執行個體的控制項，例如 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控制項。</param>
        <param name="context">目前的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="dataSource"><see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 執行個體的目標資料來源。</param>
        <summary>使用資料來源資訊初始化運算式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>