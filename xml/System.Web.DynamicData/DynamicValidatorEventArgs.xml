<Type Name="DynamicValidatorEventArgs" FullName="System.Web.DynamicData.DynamicValidatorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f925b0977265d7d416c6bf77c7e57f9b40bb0be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537142" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidatorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidatorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidatorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidatorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>為包含事件資料之 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 類別的基底類別 (Base Class)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicValidator>類別會攔截從 LINQ to SQL 類別，或從 Entity Framework 資料模型中的方法會擲回的例外狀況。 這個類別不會包含事件資料。 它正由事件未通過的狀態資訊之事件處理常式時引發的事件。 如果事件處理常式需要狀態資訊，您必須從這個類別，以保存資料來建立衍生的類別。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, valuetype System.Web.DynamicData.DynamicDataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidatorEventArgs(Exception ^ exception, System::Web::DynamicData::DynamicDataSourceOperation operation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="operation" Type="System.Web.DynamicData.DynamicDataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="exception">發生的例外狀況。</param>
        <param name="operation">造成例外狀況的資料來源作業。</param>
        <summary>使用發生的例外狀況和造成例外狀況的資料來源作業，初始化 <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> 類別的新執行個體 (Instance)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 動態資料會提供可執行的資料來源物件的資料來源作業。 這些作業包括`Delete`， `Insert`，`Select`和`Update`和`ContextCreate`。 如果資料來源作業期間，發生例外狀況，造成例外狀況，並發生的例外狀況的資料來源作業由<xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A>和<xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A>分別。  
  
 這個建構函式初始化的新執行個體<xref:System.Web.DynamicData.DynamicValidatorEventArgs>類別使用這些屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得在資料來源作業事件期間發生的例外狀況。</summary>
        <value>在資料來源作業事件期間發生的例外狀況。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 動態資料會提供可執行的資料來源物件的資料來源作業。 這些作業包括`Delete`， `Insert`，`Select`和`Update`和`ContextCreate`。 如果發生例外狀況，<xref:System.Web.DynamicData.DynamicValidator>類別會使用這個屬性來取得資料來源作業時，會觸發的例外狀況的類型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.DynamicDataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DynamicDataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataSourceOperation Operation { System::Web::DynamicData::DynamicDataSourceOperation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 類別中造成例外狀況的資料來源作業。</summary>
        <value>造成例外狀況的資料來源作業。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 動態資料會提供可執行的資料來源物件的資料來源作業。 這些作業包括`Delete`， `Insert`，`Select`和`Update`和`ContextCreate`。 如果發生例外狀況，<xref:System.Web.DynamicData.DynamicValidator>類別會使用這個屬性來擷取觸發該例外狀況的作業。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>