<Type Name="Domain" FullName="System.DirectoryServices.ActiveDirectory.Domain">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a5b252a594a0a43a68961034d9744e56a263a31" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30400192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Domain : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Domain extends System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.Domain" />
  <TypeSignature Language="VB.NET" Value="Public Class Domain&#xA;Inherits ActiveDirectoryPartition" />
  <TypeSignature Language="C++ CLI" Value="public ref class Domain : System::DirectoryServices::ActiveDirectory::ActiveDirectoryPartition" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 類別代表 Active Directory 網域。</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As DomainCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainCollection ^ Children { System::DirectoryServices::ActiveDirectory::DomainCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個網域的子系網域。</summary>
        <value>包含子網域的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> 物件。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateLocalSideOfTrustRelationship(string targetDomainName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateLocalSideOfTrustRelationship (targetDomainName As String, direction As TrustDirection, trustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateLocalSideOfTrustRelationship(System::String ^ targetDomainName, System::DirectoryServices::ActiveDirectory::TrustDirection direction, System::String ^ trustPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="trustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">用來建立信任之網域的 DNS 名稱。</param>
        <param name="direction">其中一個 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 成員，決定相對於這個網域的信任方向。</param>
        <param name="trustPassword">信任的密碼。</param>
        <summary>建立與指定網域之信任關係的本機端。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會建立信任關係的一方。 在建立雙方的信任之前，不會建立信任。  
  
 `trustPassword`建立信任與參數產生關聯的密碼。 建立信任的另一端時，提供相同的密碼，而且兩個本機信任會接著繫結到彼此。  
  
 若要以程式設計方式建立信任關係的雙方單一方法呼叫中，使用<xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">信任關係已經存在。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 或 <paramref name="trustPassword" /> 是空的。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 或 <paramref name="trustPassword" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="direction" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="CreateTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateTrustRelationship (targetDomain As Domain, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain">
          <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，代表要與其建立信任的網域。</param>
        <param name="direction">其中一個 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 成員，決定相對於這個網域的信任方向。</param>
        <summary>建立與指定網域之信任關係的兩端。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法建立信任關係的兩端具有單一方法呼叫。 <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=nameWithType>方法用來建立信任的一側邊。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">信任關係已經存在。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="direction" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="DeleteLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteLocalSideOfTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLocalSideOfTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLocalSideOfTrustRelationship (targetDomainName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLocalSideOfTrustRelationship(System::String ^ targetDomainName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">與其存在信任之網域的 DNS 名稱。</param>
        <summary>刪除信任關係的本機端。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 刪除信任關係的一方時，較長的信任存在。  
  
 若要刪除單一方法呼叫的信任關係的兩端，使用<xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">和 <paramref name="targetDomainName" /> 參數指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteTrustRelationship (targetDomain As Domain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
      </Parameters>
      <Docs>
        <param name="targetDomain">表示與其存在信任之網域的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件。</param>
        <summary>刪除信任關係的雙方。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要刪除的信任關係的只有一個邊，使用<xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">和指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      </Docs>
    </Member>
    <Member MemberName="DomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomainControllers As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ DomainControllers { System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個網域中的網域控制站。</summary>
        <value>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> 物件，包含這個網域中的網域控制站。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <Member MemberName="DomainMode">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainMode DomainMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ActiveDirectory.DomainMode DomainMode" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomainMode As DomainMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainMode DomainMode { System::DirectoryServices::ActiveDirectory::DomainMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個網域作業所在的模式。</summary>
        <value>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> 值的其中一個，表示這個網域作業所在的模式。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" />
      </Docs>
    </Member>
    <Member MemberName="DomainModeLevel">
      <MemberSignature Language="C#" Value="public int DomainModeLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DomainModeLevel" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomainModeLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DomainModeLevel { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個網域作業所在的模式層級。</summary>
        <value>網域模式層級。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllDiscoverableDomainControllers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>尋找這個網域中的所有可探索網域控制站。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllDiscoverableDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableDomainControllers () As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAllDiscoverableDomainControllers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>尋找這個網域中的所有可探索網域控制站。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />，其中包含這個方法所找到的網域控制站物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以藉由查詢 DNS SRV 記錄來尋找可探索的網域控制站。 這個方法會傳回只註冊泛型、 非特定站台、 網域控制站的 SRV 記錄這些網域控制站。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllDiscoverableDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableDomainControllers (siteName As String) As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAllDiscoverableDomainControllers(System::String ^ siteName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">要搜尋網域控制站的網站名稱。</param>
        <summary>在這個網域中，尋找同時也在指定網站上之所有可探索的網域控制站。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />，其中包含這個方法所找到的網域控制站物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以藉由查詢 DNS SRV 記錄來尋找可探索的網域控制站。  如果網域控制站不會註冊指定的站台的 SRV 記錄，它將不會傳回使用這個方法，即使網域控制站實際上是位於站台中。  
  
 會使用這個方法，傳回註冊指定的站台的 SRV 記錄的所有網域控制站，即使不是實際位在該站台內。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="siteName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllDomainControllers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>尋找這個網域中的所有網域控制站。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDomainControllers () As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAllDomainControllers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>尋找這個網域中的所有網域控制站。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />，其中包含這個方法所找到的網域控制站物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDomainControllers (siteName As String) As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAllDomainControllers(System::String ^ siteName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">要搜尋網域控制站的網站名稱。</param>
        <summary>在這個網域中，尋找同時也在指定網站上的所有網域控制站。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />，其中包含這個方法所找到的網域控制站物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="siteName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindDomainController">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在此網域中尋找網域控制站。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDomainController () As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainController ^ FindDomainController();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在此網域中尋找網域控制站。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />，表示這個方法所找到的網域控制站。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會尋找任何網域控制站的網域中。 沒有相同的網域控制站會找到另一個呼叫這個方法保證。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">找不到網域控制站。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDomainController (flag As LocatorOptions) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainController ^ FindDomainController(System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="flag">一或多個 <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> 成員的組合，定義要尋找的網域控制站類型。</param>
        <summary>在這個網域中尋找符合指定準則的網域控制站。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />，表示這個方法所找到的網域控制站。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">找不到網域控制站。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="flag" /> 參數包含無效的值。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDomainController (siteName As String) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainController ^ FindDomainController(System::String ^ siteName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">要搜尋網域控制站的網站名稱。</param>
        <summary>在這個網域的指定網站中尋找網域控制站。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 物件，表示這個方法所找到的網域控制站。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">找不到網域控制站。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="siteName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDomainController (siteName As String, flag As LocatorOptions) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainController ^ FindDomainController(System::String ^ siteName, System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="siteName">要搜尋網域控制站的網站名稱。</param>
        <param name="flag">一或多個 <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> 成員的組合，定義要尋找的網域控制站類型。</param>
        <summary>在這個網域及符合指定準則的指定網站中，尋找網域控制站。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 物件，表示這個方法所找到的網域控制站。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">找不到網域控制站。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.ArgumentException">這個例外狀況會因為下列任一原因而發生。  
  
-   <paramref name="siteName" /> 為空字串。  
  
-   <paramref name="flag" /> 包含無效的值。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="Forest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Forest Forest" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Forest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Forest As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Forest ^ Forest { System::DirectoryServices::ActiveDirectory::Forest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個網域所隸屬的樹系。</summary>
        <value>
          <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 物件，表示此網域所隸屬的樹系。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Forest" />
      </Docs>
    </Member>
    <Member MemberName="GetAllTrustRelationships">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllTrustRelationships () As TrustRelationshipInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::TrustRelationshipInformationCollection ^ GetAllTrustRelationships();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取所有此網域的信任關係。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> 物件，其中包含此網域的所有信任關係。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetComputerDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComputerDomain () As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Domain ^ GetComputerDomain();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，表示本機電腦加入的網域。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，表示本機電腦所加入的網域。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回值<xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>方法<xref:System.DirectoryServices.ActiveDirectory.Domain>物件，表示執行應用程式的電腦已加入的網域。  這個傳回值無關的應用程式執行所在的網域認證。 這個方法會擷取電腦的網域，不論下執行的受信任的帳戶網域認證。  若要擷取<xref:System.DirectoryServices.ActiveDirectory.Domain>物件，表示對應的網域使用者認證作用中的應用程式執行所在的安全性內容，請使用<xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A>方法改為。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">無法連接到網域。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentDomain () As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Domain ^ GetCurrentDomain();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得對應用程式執行所在安全性內容有效之目前使用者認證的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，表示應用程式執行所根據的安全性內容中所指定有效使用者認證的網域。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> 方法取決於應用程式執行所在的網域認證。  若要擷取<xref:System.DirectoryServices.ActiveDirectory.Domain>加入物件，代表要執行應用程式的電腦的網域，無論與該應用程式相關聯的認證，請使用<xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>方法改為。  
  
## <a name="see-also"></a>請參閱  
 <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">無法連接到目前的內容。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryEntry">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.DirectoryEntry GetDirectoryEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDirectoryEntry () As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::DirectoryEntry ^ GetDirectoryEntry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 物件，表示網域的預設命名內容。</summary>
        <returns>表示此網域的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">目前的物件已經處置。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">要求值： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
        <altmember cref="T:System.DirectoryServices.DirectoryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetDomain (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetDomain(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDomain (context As DirectoryContext) As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Domain ^ GetDomain(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> 物件，其中包含用來擷取此物件的目標和認證。 內容的類型必須是網域或目錄伺服器。</param>
        <summary>取得指定之內容的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，表示指定之內容的網域。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">無法對 <paramref name="context" /> 中指定之目標建立連線。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> 無效。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public bool GetSelectiveAuthenticationStatus (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelectiveAuthenticationStatus(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectiveAuthenticationStatus (targetDomainName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSelectiveAuthenticationStatus(System::String ^ targetDomainName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">存在信任之網域的 DNS 名稱。</param>
        <summary>判斷連入信任的驗證類型。</summary>
        <returns>
          如果信任的驗證是選擇式則為 <see langword="true" />，如果驗證是用於整個網域則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">和 <paramref name="targetForestName" /> 參數指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫 LsaQueryTrustedDomainInfoByName 失敗。 如需詳細資訊，請參閱 MSDN Library ([http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)) 中的＜[LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp)＞主題。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">目前的物件已經處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public bool GetSidFilteringStatus (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSidFilteringStatus(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSidFilteringStatus (targetDomainName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSidFilteringStatus(System::String ^ targetDomainName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">存在信任關係之網域的 DNS 名稱。</param>
        <summary>決定信任的 SID 篩選狀態。</summary>
        <returns>
          如果要啟用 SID 篩選，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">和 <paramref name="targetForestName" /> 參數指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">目前的物件已經處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetTrustRelationship">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrustRelationship (targetDomainName As String) As TrustRelationshipInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::TrustRelationshipInformation ^ GetTrustRelationship(System::String ^ targetDomainName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">存在信任關係之網域的 DNS 名稱。</param>
        <summary>取得此網域和指定網域之間的信任關係。</summary>
        <returns>
          <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> 物件，表示此網域和指定之網域之間的信任關係。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">和 <paramref name="targetForestName" /> 參數指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">目前的物件已經處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="InfrastructureRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InfrastructureRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ InfrastructureRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個網域的基礎結構角色擁有者。</summary>
        <value>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 物件，表示具備基礎結構擁有人角色的網域控制站。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain Parent" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Domain ^ Parent { System::DirectoryServices::ActiveDirectory::Domain ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個網域的父系網域。</summary>
        <value>
          <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，表示這個網域的父網域。 如果此網域沒有父網域，則為 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="PdcRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PdcRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ PdcRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 物件，此物件持有此網域的網域主控制站 (PDC)。</summary>
        <value>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 物件，表示具備這個網域之 PDC 模擬器角色的網域控制站。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="RaiseDomainFunctionality">
      <MemberSignature Language="C#" Value="public void RaiseDomainFunctionality (System.DirectoryServices.ActiveDirectory.DomainMode domainMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseDomainFunctionality(valuetype System.DirectoryServices.ActiveDirectory.DomainMode domainMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseDomainFunctionality(System::DirectoryServices::ActiveDirectory::DomainMode domainMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainMode" Type="System.DirectoryServices.ActiveDirectory.DomainMode" />
      </Parameters>
      <Docs>
        <param name="domainMode">
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> 列舉值，會指定這個網域的新作業層級。</param>
        <summary>提高網域的作業模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.ActiveDirectory.DomainMode>值可以引發，但不是會降低。 這表示提高網域功能等級是無法回復，而且若要這樣做的決策應該小心進行。  
  
 如需網域操作模式的詳細資訊，請參閱[網域與樹系功能](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp)。  
  
 下表定義的有效值`domainMode`根據目前的作業模式的網域。  
  
|目前的模式|模式可引發來|  
|------------------|---------------------------|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|無|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">根據網域目前的作業模式，為 <paramref name="domainMode" /> 指定的值無效。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="domainMode" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> 列舉值。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" />
      </Docs>
    </Member>
    <Member MemberName="RaiseDomainFunctionalityLevel">
      <MemberSignature Language="C#" Value="public void RaiseDomainFunctionalityLevel (int domainMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseDomainFunctionalityLevel(int32 domainMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseDomainFunctionalityLevel (domainMode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseDomainFunctionalityLevel(int domainMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainMode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="domainMode">代表新層級的值。</param>
        <summary>提高網域功能層級。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairTrustRelationship">
      <MemberSignature Language="C#" Value="public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RepairTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RepairTrustRelationship (targetDomain As Domain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RepairTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
      </Parameters>
      <Docs>
        <param name="targetDomain">
          <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，表示信任存在的網域。</param>
        <summary>修復信任關係。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會藉由重設的安全通道信任修復信任。 如果作業無法重設的安全性通道，然後它也會重設信任密碼。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">與 <paramref name="targetDomain" /> 指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 之間沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標或來源伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </Docs>
    </Member>
    <Member MemberName="RidRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RidRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ RidRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個網域的 RID 主機角色持有者。</summary>
        <value>
          <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 物件，表示具備這個網域之相關識別元 (RID) 主機角色的網域控制站。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public void SetSelectiveAuthenticationStatus (string targetDomainName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectiveAuthenticationStatus(string targetDomainName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectiveAuthenticationStatus (targetDomainName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectiveAuthenticationStatus(System::String ^ targetDomainName, bool enable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">存在連入信任之網域的 DNS 名稱。</param>
        <param name="enable">
          如果要啟用選擇式驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>啟用或停用連入信任的選擇性驗證。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">與 <paramref name="targetDomainName" /> 指定的網域控制站之間沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">目前的物件已經處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public void SetSidFilteringStatus (string targetDomainName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSidFilteringStatus(string targetDomainName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSidFilteringStatus (targetDomainName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSidFilteringStatus(System::String ^ targetDomainName, bool enable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">存在信任之網域的 DNS 名稱。</param>
        <param name="enable">
          如果必須啟用 SID 篩選則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>設定指定網域的 SID 篩選狀態。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">與 <paramref name="targetDomainName" /> 指定的網域之間沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">目前的物件已經處置。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateLocalSideOfTrustRelationship">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>更新信任關係的本機端。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetDomainName, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetDomainName, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetDomainName As String, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetDomainName, System::String ^ newTrustPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">與其存在信任之網域的 DNS 名稱。</param>
        <param name="newTrustPassword">信任的新密碼。</param>
        <summary>更新信任關係本機端的密碼。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要重新建立信任關係，雙方的信任必須更新以相同的密碼。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">與 <paramref name="targetDomainName" /> 指定的網域之間沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 或 <paramref name="newTrustPassword" /> 是空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 或 <paramref name="newTrustPassword" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetDomainName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetDomainName As String, newTrustDirection As TrustDirection, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetDomainName, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection, System::String ^ newTrustPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">與其存在信任之網域的 DNS 名稱。</param>
        <param name="newTrustDirection">代表信任關係之新信任方向的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</param>
        <param name="newTrustPassword">信任的新密碼。</param>
        <summary>更新信任關係本機端的密碼和信任方向。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">與 <paramref name="targetDomainName" /> 參數指定的網域之間沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 或 <paramref name="newTrustPassword" /> 是空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 或 <paramref name="newTrustPassword" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="newTrustDirection" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTrustRelationship (targetDomain As Domain, newTrustDirection As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain">
          <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，表示信任存在的網域。</param>
        <param name="newTrustDirection">指定信任關係之新信任方向的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</param>
        <summary>更新現有信任關係的信任方向。 信任的兩端都已更新信任方向。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">與 <paramref name="targetDomain" /> 參數指定的網域之間沒有信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="newTrustDirection" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="VerifyOutboundTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyOutboundTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyOutboundTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyOutboundTrustRelationship (targetDomainName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyOutboundTrustRelationship(System::String ^ targetDomainName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">存在信任之網域的 DNS 名稱。</param>
        <summary>驗證之前與指定網域建立的輸出信任有效。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來確認已完整建立信任關係。 在建立雙方的信任之前，不會建立信任。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">與 <paramref name="targetDomainName" /> 指定的網域之間沒有傳出信任關係。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyTrustRelationship (targetDomain As Domain, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain">
          <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 物件，表示信任存在的網域。</param>
        <param name="direction">
          <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值，指定相對於此網域的信任方向。</param>
        <summary>驗證指定的網域與先前建立的信任有效。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會驗證已完整建立信任關係。 在建立雙方的信任之前，不會建立信任。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">與 <paramref name="targetDomain" /> 參數指定的網域之間沒有信任關係，或是目標網域沒有 <paramref name="direction" /> 參數指定的信任方向。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">呼叫基礎目錄服務導致發生錯誤。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目標伺服器忙碌或無法使用。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="direction" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">物件已被處置。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帳戶沒有執行這項作業的權限。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
  </Members>
</Type>