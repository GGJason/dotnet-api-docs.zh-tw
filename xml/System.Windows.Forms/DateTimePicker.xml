<Type Name="DateTimePicker" FullName="System.Windows.Forms.DateTimePicker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5aaa49aad7179a99115ce0a7caac7502183cb719" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640792" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DateTimePicker : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimePicker extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DateTimePicker" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimePicker&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimePicker : System::Windows::Forms::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DateTimePickerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 Windows 控制項，這個控制項允許使用者選取日期和時間，並使用指定的格式來顯示日期和時間。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker>控制項用來允許使用者選取日期和時間，並顯示該日期與時間中指定的格式。 <xref:System.Windows.Forms.DateTimePicker>控制項可讓您輕鬆地使用日期和時間，因為它會自動處理大量的資料驗證。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DateTimePicker>控制項僅支援西曆。  
  
 當用來代表日期，<xref:System.Windows.Forms.DateTimePicker>控制項出現在兩個部分： 下拉式清單，以表示文字，並按一下清單旁邊的向下箭號時，會出現日曆日期。 行事曆看起來像<xref:System.Windows.Forms.MonthCalendar>控制項，可用來選取多個日期。 如需有關<xref:System.Windows.Forms.MonthCalendar>控制，請參閱[MonthCalendar 控制項概觀](~/docs/framework/winforms/controls/monthcalendar-control-overview-windows-forms.md)。  
  
 您可以變更尋找 控制項的行事曆部分的設定<xref:System.Windows.Forms.DateTimePicker.CalendarForeColor%2A>， <xref:System.Windows.Forms.DateTimePicker.CalendarFont%2A>， <xref:System.Windows.Forms.DateTimePicker.CalendarTitleBackColor%2A>， <xref:System.Windows.Forms.DateTimePicker.CalendarTitleForeColor%2A>， <xref:System.Windows.Forms.DateTimePicker.CalendarTrailingForeColor%2A>，和<xref:System.Windows.Forms.DateTimePicker.CalendarMonthBackground%2A>屬性。  
  
 若要調整日期/時間值中使用微調按鈕控制項 （也稱為上下按鈕控制項），設定<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性`true`。 選取控制項時，則日曆不將下拉式清單。 您可以調整日期和時間，個別選取每個項目，然後使用向上和向下鍵按鈕，變更值。  
  
 <xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性包含目前的日期和時間控制項設定。 您可以使用<xref:System.Windows.Forms.DateTimePicker.Text%2A>屬性或的適當成員<xref:System.Windows.Forms.DateTimePicker.Value%2A>取得日期和時間值。 如需詳細資訊，請參閱[How to： 設定和傳回日期搭配 Windows Form DateTimePicker 控制項](~/docs/framework/winforms/controls/how-to-set-and-return-dates-with-the-windows-forms-datetimepicker-control.md)。 您可以限制日期和時間可以藉由設定選取<xref:System.Windows.Forms.DateTimePicker.MinDate%2A>和<xref:System.Windows.Forms.DateTimePicker.MaxDate%2A>屬性。  
  
 值可以顯示四種格式，這是由在<xref:System.Windows.Forms.DateTimePicker.Format%2A>屬性： <xref:System.Windows.Forms.DateTimePickerFormat.Long>， <xref:System.Windows.Forms.DateTimePickerFormat.Short>， <xref:System.Windows.Forms.DateTimePickerFormat.Time>，或<xref:System.Windows.Forms.DateTimePickerFormat.Custom>。 預設日期<xref:System.Windows.Forms.DateTimePicker.Format%2A>是<xref:System.Windows.Forms.DateTimePickerFormat.Long?displayProperty=nameWithType>。  
  
 如果您想<xref:System.Windows.Forms.DateTimePicker>顯示為挑選，或編輯而不是日期時間的控制項，設定<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性`true`和<xref:System.Windows.Forms.DateTimePicker.Format%2A>屬性<xref:System.Windows.Forms.DateTimePickerFormat.Time>。 如需詳細資訊，請參閱[How to： 使用 DateTimePicker 控制項顯示時間](~/docs/framework/winforms/controls/how-to-display-time-with-the-datetimepicker-control.md)。  
  
 如果<xref:System.Windows.Forms.DateTimePicker.Format%2A>屬性設定為<xref:System.Windows.Forms.DateTimePickerFormat.Custom?displayProperty=nameWithType>，您可以建立您自己的格式樣式，藉由設定<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性及建立自訂格式字串。 自訂格式字串可以是自訂欄位的字元和其他常值字元的組合。 比方說，您可以藉由設定顯示為 「 年 6 月 01，2012年-星期五 」 的日期<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>"MMMM dd，yyyy-dddd"的屬性。 如需詳細資訊，請參閱[How to： 使用 Windows Form DateTimePicker 控制項的自訂格式來顯示日期](~/docs/framework/winforms/controls/display-a-date-in-a-custom-format-with-wf-datetimepicker-control.md)和[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。  
  
> [!CAUTION]
>  當<xref:System.Windows.Forms.DateTimePicker>是資料繫結和備份值變更為`null`，值<xref:System.Windows.Forms.DateTimePicker>將不會更新，並將保留先前的值。 在其中此行為不需要這樣做 （例如，當使用一組資料繫結控制項分頁的資料錄集） 的情況下使用<xref:System.Windows.Forms.Binding.Format>事件<xref:System.Windows.Forms.Binding>類別來設定<xref:System.Windows.Forms.DateTimePicker>值辨識為`null`。  
  
   
  
## Examples  
 下列程式碼範例會建立新的執行個體<xref:System.Windows.Forms.DateTimePicker>控制，並將它初始化。 控制項的<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性設定。 此外，<xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A>屬性設定，讓控制項顯示<xref:System.Windows.Forms.CheckBox>，而<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性設定，讓控制項顯示為微調按鈕控制項。 若要執行此範例中，將下列程式碼貼到表單，並呼叫`CreateMyDateTimePicker`範例表單的建構函式中的方法或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MonthCalendar" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimePicker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimePicker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DateTimePicker" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立新的執行個體<xref:System.Windows.Forms.DateTimePicker>控制，並將它初始化。 控制項的<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性設定。 此外，<xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A>屬性設定，讓控制項顯示<xref:System.Windows.Forms.CheckBox>，而<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性設定，讓控制項顯示為微調按鈕控制項 （也稱為上下按鈕控制項）。  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的背景色彩。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DateTimePicker" /> 的背景 <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Windows.Forms.DateTimePicker.BackColor%2A>沒有任何作用的外觀<xref:System.Windows.Forms.DateTimePicker>。 若要設定的背景色彩的下拉式行事曆<xref:System.Windows.Forms.DateTimePicker>，請參閱<xref:System.Windows.Forms.DateTimePicker.CalendarMonthBackground%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarMonthBackground" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarTitleBackColor" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.BackColor" /> 屬性的值變更時。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項的背景影像。</summary>
        <value>控制項的背景影像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性/方法/事件與這個類別無關。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.BackgroundImage" /> 屬性的值變更時。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項之背景影像的配置。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.ImageLayout" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Windows.Forms.ProgressBar.BackgroundImageLayout%2A>屬性沒有任何作用的外觀<xref:System.Windows.Forms.DateTimePicker>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.BackgroundImageLayout" /> 屬性的值變更時。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font CalendarFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font CalendarFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarFont" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ CalendarFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定套用至月曆的字型樣式。</summary>
        <value>
          <see cref="T:System.Drawing.Font" />，表示套用至月曆的字型樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從開始使用 Windows Vista，並根據佈景主題，設定這個屬性可能不會變更行事曆外觀。 例如，如果您可以設定 Windows 使用 Aero 的佈景主題，設定此屬性沒有任何作用。 這是因為在執行階段衍生自目前作業系統的佈景主題的外觀呈現行事曆的更新的版本。 如果您想要使用這個屬性並啟用行事曆的舊版，您可以停用您的應用程式視覺化樣式。 停用視覺化樣式，可能會影響的外觀和行為的應用程式中其他控制項。 若要停用在 Visual Basic 中的視覺化樣式，請開啟 專案設計工具並取消核取**啟用 XP 視覺化樣式**核取方塊。 若要停用 C# 中的視覺化樣式，請開啟 Program.cs 並標記為註解`Application.EnableVisualStyles();`。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.DateTimePicker.CalendarFont%2A>屬性。 這個範例會建立新<xref:System.Windows.Forms.DateTimePicker>控制項，將它加入至<xref:System.Windows.Forms.Control.Controls%2A>集合<xref:System.Windows.Forms.Form>，並再初始化<xref:System.Windows.Forms.DateTimePicker.CalendarFont%2A>屬性，以動態定義<xref:System.Drawing.Font>。  
  
 [!code-cpp[DateTimePicker.CalendarFont#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DateTimePicker.CalendarFont/CPP/calendarfont.cpp#1)]
 [!code-csharp[DateTimePicker.CalendarFont#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DateTimePicker.CalendarFont/CS/calendarfont.cs#1)]
 [!code-vb[DateTimePicker.CalendarFont#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DateTimePicker.CalendarFont/VB/calendarfont.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定月曆的前景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示月曆的前景色彩。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DateTimePicker>已建立，這個屬性一開始設為等於<xref:System.Windows.Forms.Control.ForeColor%2A>屬性值。  
  
 從開始使用 Windows Vista，並根據佈景主題，設定這個屬性可能不會變更行事曆外觀。 例如，如果您可以設定 Windows 使用 Aero 的佈景主題，設定此屬性沒有任何作用。 這是因為在執行階段衍生自目前作業系統的佈景主題的外觀呈現行事曆的更新的版本。 如果您想要使用這個屬性並啟用行事曆的舊版，您可以停用您的應用程式視覺化樣式。 停用視覺化樣式，可能會影響的外觀和行為的應用程式中其他控制項。 若要停用在 Visual Basic 中的視覺化樣式，請開啟 專案設計工具並取消核取**啟用 XP 視覺化樣式**核取方塊。 若要停用 C# 中的視覺化樣式，請開啟 Program.cs 並標記為註解`Application.EnableVisualStyles();`。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.DateTimePicker.CalendarForeColor%2A>屬性。 這個範例會建立新<xref:System.Windows.Forms.DateTimePicker>，將它加入至<xref:System.Windows.Forms.Control.Controls%2A>集合，然後初始化其<xref:System.Windows.Forms.DateTimePicker.CalendarForeColor%2A>屬性<xref:System.Drawing.Color.Aqua%2A>常數。  
  
 [!code-cpp[DateTimePicker.CalendarForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DateTimePicker.CalendarForeColor/CPP/calendarforecolor.cpp#1)]
 [!code-csharp[DateTimePicker.CalendarForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DateTimePicker.CalendarForeColor/CS/calendarforecolor.cs#1)]
 [!code-vb[DateTimePicker.CalendarForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DateTimePicker.CalendarForeColor/VB/calendarforecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指派值為 <see langword="null" />。</exception>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="CalendarMonthBackground">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarMonthBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarMonthBackground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarMonthBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarMonthBackground As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarMonthBackground { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定月曆月份的背景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示月曆月份的背景色彩。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DateTimePicker>已建立，這個屬性一開始設為等於<xref:System.Windows.Forms.DateTimePicker.DefaultMonthBackColor>欄位值。  
  
 從開始使用 Windows Vista，並根據佈景主題，設定這個屬性可能不會變更行事曆外觀。 例如，如果您可以設定 Windows 使用 Aero 的佈景主題，設定此屬性沒有任何作用。 這是因為在執行階段衍生自目前作業系統的佈景主題的外觀呈現行事曆的更新的版本。 如果您想要使用這個屬性並啟用行事曆的舊版，您可以停用您的應用程式視覺化樣式。 停用視覺化樣式，可能會影響的外觀和行為的應用程式中其他控制項。 若要停用在 Visual Basic 中的視覺化樣式，請開啟 專案設計工具並取消核取**啟用 XP 視覺化樣式**核取方塊。 若要停用 C# 中的視覺化樣式，請開啟 Program.cs 並標記為註解`Application.EnableVisualStyles();`。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.DateTimePicker.CalendarMonthBackground%2A>屬性。 在建立之後<xref:System.Windows.Forms.DateTimePicker>並將它加入至<xref:System.Windows.Forms.Form>，範例會初始化<xref:System.Windows.Forms.DateTimePicker.CalendarMonthBackground%2A>屬性<xref:System.Drawing.Color>常數。  
  
 [!code-cpp[DateTimePicker.CalendarMonthBackground#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DateTimePicker.CalendarMonthBackground/CPP/calendarmonthbackground.cpp#1)]
 [!code-csharp[DateTimePicker.CalendarMonthBackground#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DateTimePicker.CalendarMonthBackground/CS/calendarmonthbackground.cs#1)]
 [!code-vb[DateTimePicker.CalendarMonthBackground#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DateTimePicker.CalendarMonthBackground/VB/calendarmonthbackground.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指派值為 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.DefaultMonthBackColor" />
      </Docs>
    </Member>
    <Member MemberName="CalendarTitleBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarTitleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarTitleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarTitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarTitleBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarTitleBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定月曆標題的背景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示月曆標題的背景色彩。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DateTimePicker>已建立，這個屬性一開始設為等於<xref:System.Windows.Forms.DateTimePicker.DefaultTitleBackColor>欄位值。  
  
 從開始使用 Windows Vista，並根據佈景主題，設定這個屬性可能不會變更行事曆外觀。 例如，如果您可以設定 Windows 使用 Aero 的佈景主題，設定此屬性沒有任何作用。 這是因為在執行階段衍生自目前作業系統的佈景主題的外觀呈現行事曆的更新的版本。 如果您想要使用這個屬性並啟用行事曆的舊版，您可以停用您的應用程式視覺化樣式。 停用視覺化樣式，可能會影響的外觀和行為的應用程式中其他控制項。 若要停用在 Visual Basic 中的視覺化樣式，請開啟 專案設計工具並取消核取**啟用 XP 視覺化樣式**核取方塊。 若要停用 C# 中的視覺化樣式，請開啟 Program.cs 並標記為註解`Application.EnableVisualStyles();`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指派值為 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.DefaultTitleBackColor" />
      </Docs>
    </Member>
    <Member MemberName="CalendarTitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarTitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarTitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarTitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarTitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarTitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定月曆標題的前景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示月曆標題的前景色彩。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DateTimePicker>已建立，這個屬性一開始設為等於<xref:System.Windows.Forms.DateTimePicker.DefaultTitleForeColor>欄位值。  
  
 從開始使用 Windows Vista，並根據佈景主題，設定這個屬性可能不會變更行事曆外觀。 例如，如果您可以設定 Windows 使用 Aero 的佈景主題，設定此屬性沒有任何作用。 這是因為在執行階段衍生自目前作業系統的佈景主題的外觀呈現行事曆的更新的版本。 如果您想要使用這個屬性並啟用行事曆的舊版，您可以停用您的應用程式視覺化樣式。 停用視覺化樣式，可能會影響的外觀和行為的應用程式中其他控制項。 若要停用在 Visual Basic 中的視覺化樣式，請開啟 專案設計工具並取消核取**啟用 XP 視覺化樣式**核取方塊。 若要停用 C# 中的視覺化樣式，請開啟 Program.cs 並標記為註解`Application.EnableVisualStyles();`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指派值為 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.DefaultTitleForeColor" />
      </Docs>
    </Member>
    <Member MemberName="CalendarTrailingForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarTrailingForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarTrailingForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarTrailingForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarTrailingForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarTrailingForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定月曆尾隨日期的前景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示月曆尾隨日期的前景色彩。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DateTimePicker>已建立，這個屬性一開始設為等於<xref:System.Windows.Forms.DateTimePicker.DefaultTrailingForeColor>欄位值。  
  
 尾隨日期是從上個月的結束日期或下個月用來填滿日曆的開始日期。  
  
 從開始使用 Windows Vista，並根據佈景主題，設定這個屬性可能不會變更行事曆外觀。 例如，如果您可以設定 Windows 使用 Aero 的佈景主題，設定此屬性沒有任何作用。 這是因為在執行階段衍生自目前作業系統的佈景主題的外觀呈現行事曆的更新的版本。 如果您想要使用這個屬性並啟用行事曆的舊版，您可以停用您的應用程式視覺化樣式。 停用視覺化樣式，可能會影響的外觀和行為的應用程式中其他控制項。 若要停用在 Visual Basic 中的視覺化樣式，請開啟 專案設計工具並取消核取**啟用 XP 視覺化樣式**核取方塊。 若要停用 C# 中的視覺化樣式，請開啟 Program.cs 並標記為註解`Application.EnableVisualStyles();`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指派值為 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.DefaultTrailingForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示 <see cref="P:System.Windows.Forms.DateTimePicker.Value" />屬性是否已經使用有效的日期/時間值設定，而且顯示的值能夠更新。</summary>
        <value>
          如果 <see cref="P:System.Windows.Forms.DateTimePicker.Value" /> 屬性已經使用有效的 <see cref="T:System.DateTime" /> 值設定，而且顯示的值能夠更新，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性用來取得狀態的核取方塊時，系統會顯示<xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A>屬性值是`true`。 如果<xref:System.Windows.Forms.DateTimePicker.Checked%2A>屬性值是`true`、<xref:System.Windows.Forms.DateTimePicker>控制項會顯示適當格式化<xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性值; 否則控制項就會顯示最後一個有效的日期/時間值指派給<xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性或目前的日期和時間 (<xref:System.DateTime.Now%2A?displayProperty=nameWithType>) 如果已經被不指派任何值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Value" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.ShowCheckBox" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於按下控制項時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個事件與這個類別無關。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseUp">
      <MemberSignature Language="C#" Value="public event EventHandler CloseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CloseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.CloseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CloseUp As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CloseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於下拉式月曆關閉並消失時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DateTimePicker.CloseUp>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>與<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DateTimePicker>名為`DateTimePicker1`。 請確定事件處理常式關聯<xref:System.Windows.Forms.DateTimePicker.CloseUp>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#376](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#376)]
 [!code-vb[System.Windows.Forms.EventExamples#376](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#376)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DateTimePicker.OnCloseUp(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項建立新的協助工具物件。</summary>
        <returns>控制項新的 <see cref="T:System.Windows.Forms.DateTimePicker.DateTimePickerAccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果沒有明確呼叫 <xref:System.Windows.Forms.DateTimePicker.CreateAccessibilityInstance%2A> 方法，將會在參考 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 屬性時呼叫該方法。  
  
> [!NOTE]
>  取得或設定<xref:System.Windows.Forms.Control.AccessibilityObject%2A>屬性，您必須加入參考`Accessibility`安裝.NET framework 組件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.CreateAccessibilityInstance" />在衍生類別中，您不應該呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.CreateAccessibilityInstance" />方法。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立實體視窗控制代碼 (Window Handle)。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>建立控制代碼時，取得必要的建立參數。</summary>
        <value>
          <see cref="T:System.Windows.Forms.CreateParams" />，包含建立控制項之控制代碼時所需的建立參數。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="CustomFormat">
      <MemberSignature Language="C#" Value="public string CustomFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CustomFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定自訂的日期時間格式字串。</summary>
        <value>表示自訂日期時間格式的字串。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要顯示包含日期和時間分隔符號的字串常值或字串的格式，您必須使用子字串中的逸出字元。 例如，若要顯示為"年 6 月 15 下午 12:00"的日期，設定<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>"MMMM dd 'at' t:mm tt"的屬性。 如果逸出字元不以"at"子字串，則結果是 「 年 6 月 15 aP 12:00 PM"因為當做單一字母 a.m./p.m.讀取"t"字元。 格式字串 （請參閱以下的格式字串資料表）。  
  
 格式字串可以結合以格式化的日期和時間。 例如，若要顯示的日期和時間為 06/15/2001年 12:00 PM，這個屬性應該設定為 「 MM '/' dd '/' yyyy hh': ' mm tt"。 如需詳細資訊，請參閱[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DateTimePicker.Format%2A>屬性必須設定為<xref:System.Windows.Forms.DateTimePickerFormat.Custom?displayProperty=nameWithType>為此屬性會影響顯示的日期和時間格式。  
  
 下表列出所有有效的格式字串和其說明。  
  
|格式化字串|描述|  
|-------------------|-----------------|  
|d|一個或兩位數的日期。|  
|dd|兩位數的日期。 單一位數的日期值前面都為 0。|  
|ddd|三個字元的週中日縮寫。|  
|dddd|完整的星期名稱。|  
|h|一個或兩個位數的小時，12 小時制的小時。|  
|hh|兩位數的小時，12 小時制的小時。 0 個前面有單一數字值。|  
|H|一個或兩個位數的小時，24 小時制的小時。|  
|HH|兩位數的小時，24 小時制的小時。 0 個前面有單一數字值。|  
|m|一個或兩位數分鐘。|  
|mm|兩位數分鐘。 0 個前面有單一數字值。|  
|M|一個或兩位數月份數。|  
|MM|兩位數月份數。 0 個前面有單一數字值。|  
|MMM|三個字元的月份縮寫。|  
|MMMM|完整月份名稱。|  
|秒|一個或兩位數的秒數。|  
|ss|兩位數的秒數。 0 個前面有單一數字值。|  
|t|單一字母 a.m./p.m.中。 縮寫 （上午 會顯示為"A"）。|  
|tt|兩個字母 a.m./p.m.中。 縮寫 （上午 會顯示為"AM"）。|  
|y|（顯示為"1"2001年） 的一位數年份。|  
|yy|兩位數的年份 （顯示為"01"2001年）。|  
|yyyy|完整的年份 （顯示為"2001"2001年）。|  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性以便<xref:System.Windows.Forms.DateTimePicker>將會顯示為 「 年 6 月 01，2001年-星期五 」 日期。 此程式碼會假設執行個體<xref:System.Windows.Forms.DateTimePicker>已經建立控制項上<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DateTimePickerFormat" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Format" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMonthBackColor">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Color DefaultMonthBackColor;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Color DefaultMonthBackColor" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.DefaultMonthBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DefaultMonthBackColor As Color " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Color DefaultMonthBackColor;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的預設月份背景色彩。 此欄位為唯讀。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項的預設大小。</summary>
        <value>控制項的預設 <see cref="T:System.Drawing.Size" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTitleBackColor">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Color DefaultTitleBackColor;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Color DefaultTitleBackColor" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.DefaultTitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DefaultTitleBackColor As Color " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Color DefaultTitleBackColor;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的預設標題背景色彩。 此欄位為唯讀。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTitleForeColor">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Color DefaultTitleForeColor;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Color DefaultTitleForeColor" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.DefaultTitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DefaultTitleForeColor As Color " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Color DefaultTitleForeColor;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的預設標題前景色彩。 此欄位為唯讀。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTrailingForeColor">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Color DefaultTrailingForeColor;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Color DefaultTrailingForeColor" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.DefaultTrailingForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DefaultTrailingForeColor As Color " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Color DefaultTrailingForeColor;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的預設尾隨前景色彩。 此欄位為唯讀。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="protected override void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DestroyHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>終結實體視窗控制代碼。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出控制項是否應使用次要緩衝區重繪其介面。 設定這個屬性並不會影響 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項。</summary>
        <value>
          如果控制項應使用次要緩衝區重繪其介面，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Windows.Forms.DateTimePicker.DoubleBuffered%2A>屬性沒有任何作用<xref:System.Windows.Forms.DateTimePicker>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於按兩下控制項時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 事件與這個類別無關。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="public event EventHandler DropDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.DropDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於下拉式月曆顯示時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範處理<xref:System.Windows.Forms.DateTimePicker.DropDown>事件<xref:System.Windows.Forms.DateTimePicker>和使用<xref:System.Windows.Forms.DateTimePicker.MinDateTime>和<xref:System.Windows.Forms.DateTimePicker.MaxDateTime>欄位。 若要執行此範例中貼上下列程式碼中包含表單的<xref:System.Windows.Forms.DateTimePicker>名為`DateTimePicker1`。  
  
 [!code-cpp[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DateTimePicker.OnDropDown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DropDownAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LeftRightAlignment DropDownAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LeftRightAlignment DropDownAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.DropDownAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownAlign As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LeftRightAlignment DropDownAlign { System::Windows::Forms::LeftRightAlignment get(); void set(System::Windows::Forms::LeftRightAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項上，下拉式月曆的對齊方式。</summary>
        <value>控制項上，下拉式月曆的對齊方式。 預設值為 <see cref="F:System.Windows.Forms.LeftRightAlignment.Left" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 左邊或右邊的控制項，可以對齊下拉式月曆。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.DateTimePicker>藉由設定<xref:System.Windows.Forms.DateTimePicker.DropDownAlign%2A>， <xref:System.Windows.Forms.DateTimePicker.Value%2A>， <xref:System.Windows.Forms.DateTimePicker.Format%2A>，和<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性。 若要執行此範例中，將下列程式碼貼到表單，並呼叫`InitializeDateTimePicker`從表單的建構函式或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-cpp[System.Windows.Forms.DateTimePicker#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DateTimePicker#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DateTimePicker#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">所指派的值不是其中一個 <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的前景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 的前景 <see cref="T:System.Windows.Forms.DateTimePicker" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Windows.Forms.DateTimePicker.ForeColor%2A>屬性沒有任何作用的外觀<xref:System.Windows.Forms.DateTimePicker>控制項。  
  
 若要設定的下拉式月曆的前景色彩<xref:System.Windows.Forms.DateTimePicker>，請參閱<xref:System.Windows.Forms.DateTimePicker.CalendarForeColor%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarMonthBackground" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarTitleBackColor" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarForeColor" />
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.ForeColor" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果會引發這個事件<xref:System.Windows.Forms.DateTimePicker.ForeColor%2A>屬性變更時以程式設計方式修改或透過互動。  
  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DateTimePickerFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DateTimePickerFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As DateTimePickerFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DateTimePickerFormat Format { System::Windows::Forms::DateTimePickerFormat get(); void set(System::Windows::Forms::DateTimePickerFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DateTimePickerFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項中，日期和時間顯示的格式。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.DateTimePickerFormat" /> 值。 預設值為 <see cref="F:System.Windows.Forms.DateTimePickerFormat.Long" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性決定中顯示的日期的日期/時間格式。 日期/時間格式取決於作業系統中的使用者的地區設定。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DateTimePicker.Format%2A>屬性必須設定為<xref:System.Windows.Forms.DateTimePickerFormat.Custom?displayProperty=nameWithType>如<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性會影響顯示的日期和時間格式。  
  
 若要顯示中的唯一時間<xref:System.Windows.Forms.DateTimePicker>，將<xref:System.Windows.Forms.DateTimePicker.Format%2A>至<xref:System.Windows.Forms.DateTimePickerFormat.Time>，而<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性`true`。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性以便<xref:System.Windows.Forms.DateTimePicker>將會顯示為 「 年 6 月 01，2001年-星期五 」 日期。 此程式碼會假設執行個體<xref:System.Windows.Forms.DateTimePicker>已經建立控制項上<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">所指派的值不是其中一個 <see cref="T:System.Windows.Forms.DateTimePickerFormat" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.DateTimePickerFormat" />
      </Docs>
    </Member>
    <Member MemberName="FormatChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormatChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormatChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.FormatChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormatChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FormatChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.Format" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DateTimePicker.FormatChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>與<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DateTimePicker>名為`DateTimePicker1`。 請確定事件處理常式關聯<xref:System.Windows.Forms.DateTimePicker.FormatChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#374](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#374)]
 [!code-vb[System.Windows.Forms.EventExamples#374](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#374)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Format" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">其中一個 <see cref="T:System.Windows.Forms.Keys" /> 值。</param>
        <summary>判斷指定的按鍵是標準輸入按鍵或需要前置處理的特殊按鍵。</summary>
        <returns>
          如果指定的按鍵是標準輸入按鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 視窗訊息來判斷指定的按鍵是標準輸入的按鍵，應直接傳送至控制項或應該前置處理過的特殊按鍵 （例如 PAGE UP 和 PAGE DOWN） 前置處理期間呼叫這個方法。 在後者的情況下，只有在前置處理階段沒有使用，來控制傳送索引鍵。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="MaxDate">
      <MemberSignature Language="C#" Value="public DateTime MaxDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.MaxDate" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime MaxDate { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項中可以選取的最大日期和時間。</summary>
        <value>控制項中可以選取的最大日期和時間。 預設值將判定為 CurrentCulture 之 Calendar 的 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" /> 屬性的最小值以及 9998 年 12 月 31 日上午 12 點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.DateTimePicker>控制，並將它初始化。 控制項的<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性設定。 此外，<xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A>屬性設定，讓控制項顯示<xref:System.Windows.Forms.CheckBox>，而<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性設定，讓控制項顯示為微調按鈕控制項 （也稱為上下按鈕控制項）。  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指派的值小於 <see cref="P:System.Windows.Forms.DateTimePicker.MinDate" /> 值。</exception>
        <exception cref="T:System.SystemException">指派的值大於 <see cref="F:System.Windows.Forms.DateTimePicker.MaxDateTime" /> 值。</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.MaxDateTime" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.MinDate" />
      </Docs>
    </Member>
    <Member MemberName="MaxDateTime">
      <MemberSignature Language="C#" Value="public static readonly DateTime MaxDateTime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MaxDateTime" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.MaxDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxDateTime As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MaxDateTime;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的最大日期值。 此欄位為唯讀。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 日期的上限設定為 12/31/9998 23:59:59。  
  
   
  
## Examples  
 下列程式碼範例示範處理<xref:System.Windows.Forms.DateTimePicker.DropDown>事件<xref:System.Windows.Forms.DateTimePicker>和使用<xref:System.Windows.Forms.DateTimePicker.MinDateTime>和<xref:System.Windows.Forms.DateTimePicker.MaxDateTime>欄位。 若要執行此範例中，將下列程式碼貼到表單，其中包含<xref:System.Windows.Forms.DateTimePicker>名為`DateTimePicker1`。  
  
 [!code-cpp[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.MaxDate" />
        <altmember cref="F:System.Windows.Forms.DateTimePicker.MinDateTime" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.MinDate" />
      </Docs>
    </Member>
    <Member MemberName="MaximumDateTime">
      <MemberSignature Language="C#" Value="public static DateTime MaximumDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime MaximumDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.MaximumDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaximumDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime MaximumDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項所允許的最大日期值。</summary>
        <value>
          <see cref="T:System.DateTime" />，表示 <see cref="P:System.Windows.Forms.DateTimePicker.MaximumDateTime" /> 控制項的最大日期值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最大的日期會設定為 12 月 31 日 9998。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDate">
      <MemberSignature Language="C#" Value="public DateTime MinDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.MinDate" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime MinDate { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項中可選取的最小日期和時間。</summary>
        <value>控制項中可選取的最小日期和時間。 預設是 1753/1/1 凌晨 00:00:00。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.DateTimePicker>控制，並將它初始化。 控制項的<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性設定。 此外，<xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A>屬性設定，讓控制項顯示<xref:System.Windows.Forms.CheckBox>，而<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性設定，讓控制項顯示為微調按鈕控制項 （也稱為上下按鈕控制項）。  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指派的值不小於 <see cref="P:System.Windows.Forms.DateTimePicker.MaxDate" /> 值。</exception>
        <exception cref="T:System.SystemException">指派的值小於 <see cref="F:System.Windows.Forms.DateTimePicker.MinDateTime" /> 值。</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.MinDateTime" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.MaxDate" />
      </Docs>
    </Member>
    <Member MemberName="MinDateTime">
      <MemberSignature Language="C#" Value="public static readonly DateTime MinDateTime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MinDateTime" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.MinDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinDateTime As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MinDateTime;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的最小日期值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最小日期設定為 1/1/1753年 00:00:00。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumDateTime">
      <MemberSignature Language="C#" Value="public static DateTime MinimumDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime MinimumDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.MinimumDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinimumDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime MinimumDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項所允許的最小日期值。</summary>
        <value>
          <see cref="T:System.DateTime" />，表示 <see cref="P:System.Windows.Forms.DateTimePicker.MaximumDateTime" /> 控制項的最小日期值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最小日期設定為 1753 年 1 月 1 日。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於以滑鼠按一下控制項時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 事件與這個類別無關。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於使用滑鼠按兩下控制項時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 事件與這個類別無關。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCloseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnCloseUp (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCloseUp(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnCloseUp(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCloseUp(EventArgs ^ eventargs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DateTimePicker.CloseUp" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.CloseUp>事件發生於下拉式月曆關閉並消失。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DateTimePicker.OnCloseUp%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.OnCloseUp(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.OnCloseUp(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DateTimePicker.CloseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnDropDown">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDown (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDown(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnDropDown(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDown(EventArgs ^ eventargs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DateTimePicker.DropDown" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.DropDown>下拉式月曆顯示時，就會發生事件。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DateTimePicker.OnDropDown%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.OnDropDown(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.OnDropDown(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DateTimePicker.DropDown" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DateTimePicker.OnFontChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.OnFontChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.OnFontChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnFormatChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DateTimePicker.FormatChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.FormatChanged>就會發生事件時<xref:System.Windows.Forms.DateTimePicker.Format%2A>屬性值已變更。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DateTimePicker.OnFormatChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.OnFormatChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.OnFormatChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DateTimePicker.FormatChanged" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Format" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DateTimePicker.OnHandleCreated%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.OnHandleCreated(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.OnHandleCreated(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DateTimePicker.OnHandleDestroyed%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.OnHandleDestroyed(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.OnHandleDestroyed(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="P:System.Windows.Forms.DateTimePicker.RightToLeftLayout" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DateTimePicker.OnRightToLeftLayoutChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.OnRightToLeftLayoutChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.OnRightToLeftLayoutChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>覆寫 <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> 方法。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnValueChanged(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(EventArgs ^ eventargs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DateTimePicker.ValueChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.ValueChanged>控制項的值變更時，就會發生事件。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.DateTimePicker.OnValueChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DateTimePicker.OnValueChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DateTimePicker.ValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項內容及其邊緣間的間距。</summary>
        <value>
          所有情況下都是 <see cref="F:System.Windows.Forms.Padding.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Windows.Forms.DateTimePicker.Padding%2A>屬性沒有任何作用<xref:System.Windows.Forms.DateTimePicker>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.Padding" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 事件與這個類別無關。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於重繪控制項時。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的慣用高度。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的慣用高度 (以像素為單位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 慣用的高度是以符合顯示的文字與指派所需的最小高度<xref:System.Drawing.Font>套用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DateTimePicker" /> 的內容是否由右至左顯示。</summary>
        <value>
          如果 <see cref="T:System.Windows.Forms.DateTimePicker" /> 內容的配置是由右至左則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false." /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.RightToLeftLayout%2A>屬性可用於國際應用程式的語言由右至左，例如希伯來文或阿拉伯文的寫入位置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.RightToLeftLayout" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DateTimePicker.RightToLeftLayoutChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>與<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DateTimePicker>名為`DateTimePicker1`。 請確定事件處理常式關聯<xref:System.Windows.Forms.DateTimePicker.RightToLeftLayoutChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#377](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#377)]
 [!code-vb[System.Windows.Forms.EventExamples#377](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#377)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public bool ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCheckBox { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出核取方塊是否顯示在選取的日期左邊。</summary>
        <value>
          如果核取方塊顯示在選取的日期左邊，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A>屬性設定為`true`，核取方塊就會顯示在控制項中日期的左方。 選取此核取方塊時，可以更新的日期/時間值。 清除核取方塊，日期/時間值時，無法變更。  
  
   
  
## Examples  
 下列程式碼範例會建立新的執行個體<xref:System.Windows.Forms.DateTimePicker>控制，並將它初始化。 控制項的<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性設定。 此外，<xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A>屬性設定，讓控制項顯示<xref:System.Windows.Forms.CheckBox>，而<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性設定，讓控制項顯示為微調按鈕控制項 （也稱為上下按鈕控制項）。  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowUpDown">
      <MemberSignature Language="C#" Value="public bool ShowUpDown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowUpDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.ShowUpDown" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowUpDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowUpDown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否使用微調按鈕控制項 (也稱為上下按鈕控制項) 來調整日期/時間值。</summary>
        <value>
          如果使用微調按鈕控制項來調整日期/時間值則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性設定為`true`、 微調按鈕控制項 （也稱為上下按鈕控制項），而不是下拉式行事曆，來調整時間值。 您可以調整日期和時間，個別選取每個項目，然後使用向上和向下鍵按鈕，變更值。  
  
 若要顯示中的唯一時間<xref:System.Windows.Forms.DateTimePicker>，將<xref:System.Windows.Forms.DateTimePicker.Format%2A>屬性<xref:System.Windows.Forms.DateTimePickerFormat.Time>，而<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性`true`。  
  
   
  
## Examples  
 下列程式碼範例會建立新的執行個體<xref:System.Windows.Forms.DateTimePicker>控制，並將它初始化。 控制項的<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性設定。 此外，<xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A>屬性設定，讓控制項顯示<xref:System.Windows.Forms.CheckBox>，而<xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A>屬性設定，讓控制項顯示為微調按鈕控制項。  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個控制項的相關文字。</summary>
        <value>字串，表示和這個控制項相關的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性所傳回的字串相當於<xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性與適當的格式設定或套用自訂格式。 例如，如果<xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性設定為 06/01/2001年 12:00:00 時<xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A>屬性設定為"dddd，MMMM dd，yyyy"<xref:System.Windows.Forms.DateTimePicker.Text%2A>屬性值為"Friday，年 6 月 01，2001 」。  
  
 設定此屬性時，字串必須可轉換為的執行個體<xref:System.DateTime>類別。 您可透過定義自訂格式，導致無法轉換成有效的字串<xref:System.DateTime>值。 因為這個緣故，傳回從字串<xref:System.Windows.Forms.DateTimePicker.Text%2A>屬性可能會導致錯誤，如果傳遞回<xref:System.Windows.Forms.DateTimePicker.Text%2A>屬性。 如果字串無法轉換成日期/時間值，<xref:System.DateTime>類別會擲回<xref:System.FormatException>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Value" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.Text" /> 屬性的值變更時。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回代表目前 <see cref="T:System.Windows.Forms.DateTimePicker" /> 控制項的字串。</summary>
        <returns>字串，代表目前的 <see cref="T:System.Windows.Forms.DateTimePicker" />。 這個字串包括了控制項的類型與  屬性。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public DateTime Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Value { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定指派給控制項的日期時間值。</summary>
        <value>指派給控制項的  值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性未變更程式碼或使用者，則會設定為目前的日期和時間 (<xref:System.DateTime.Now%2A?displayProperty=nameWithType>)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性，以擷取目前的日期值。 首先，此範例會顯示<xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性。 接著，此範例為增量單位<xref:System.Windows.Forms.DateTimePicker.Value%2A>屬性，方法是一天，並顯示屬性值，一次。  
  
 [!code-cpp[DateTimePicker.Value#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DateTimePicker.Value/CPP/value.cpp#1)]
 [!code-csharp[DateTimePicker.Value#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DateTimePicker.Value/CS/value.cs#1)]
 [!code-vb[DateTimePicker.Value#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DateTimePicker.Value/VB/value.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定的值小於 <see cref="P:System.Windows.Forms.DateTimePicker.MinDate" /> 或大於 <see cref="P:System.Windows.Forms.DateTimePicker.MaxDate" />。</exception>
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DateTimePicker.Value" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 驗證使用者輸入之前會引發這個事件。 輸入的日期早於時，不會引發這個事件<xref:System.Windows.Forms.DateTimePicker.MinDateTime>或更晚<xref:System.Windows.Forms.DateTimePicker.MaxDateTime>。  
  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DateTimePicker.ValueChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>與<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DateTimePicker>名為`DateTimePicker1`。 請確定事件處理常式關聯<xref:System.Windows.Forms.DateTimePicker.ValueChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#378](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#378)]
 [!code-vb[System.Windows.Forms.EventExamples#378](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#378)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DateTimePicker.OnValueChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">要處理的 Windows <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>處理 Windows 訊息。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>