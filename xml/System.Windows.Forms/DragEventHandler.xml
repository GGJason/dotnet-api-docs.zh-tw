<Type Name="DragEventHandler" FullName="System.Windows.Forms.DragEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DragEventHandler(object sender, DragEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DragEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DragEventHandler(sender As Object, e As DragEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DragEventHandler(System::Object ^ sender, DragEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="04e76-101">事件的來源。</span><span class="sxs-lookup"><span data-stu-id="04e76-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="04e76-102"><see cref="T:System.Windows.Forms.DragEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="04e76-102">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="04e76-103">表示處理 <see cref="E:System.Windows.Forms.Control.DragDrop" /> 之 <see cref="E:System.Windows.Forms.Control.DragEnter" />、<see cref="E:System.Windows.Forms.Control.DragOver" /> 或 <see cref="T:System.Windows.Forms.Control" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="04e76-103">Represents the method that will handle the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event of a <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04e76-104">建立 <xref:System.Windows.Forms.DragEventHandler> 委派時，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="04e76-104">When you create a <xref:System.Windows.Forms.DragEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="04e76-105">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="04e76-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="04e76-106">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="04e76-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="04e76-107">如需處理事件的委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="04e76-107">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04e76-108">下列範例會示範兩個之間的拖放作業<xref:System.Windows.Forms.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="04e76-108">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="04e76-109">範例會呼叫<xref:System.Windows.Forms.Control.DoDragDrop%2A>時拖曳動作開始的方法。</span><span class="sxs-lookup"><span data-stu-id="04e76-109">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="04e76-110">如果已移動滑鼠拖曳動作會啟動多個<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>期間的滑鼠位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="04e76-110">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="04e76-111"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用來決定要在拖曳的項目索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="04e76-111">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="04e76-112">此範例也示範如何使用自訂游標拖放作業。</span><span class="sxs-lookup"><span data-stu-id="04e76-112">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="04e76-113">這個範例假設有兩個資料指標檔案`3dwarro.cur`和`3dwno.cur`、 自訂拖放到的應用程式目錄，存在於和不置放資料指標，分別。</span><span class="sxs-lookup"><span data-stu-id="04e76-113">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="04e76-114">如果使用自訂游標`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已核取。</span><span class="sxs-lookup"><span data-stu-id="04e76-114">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="04e76-115">自訂的資料指標中所設定<xref:System.Windows.Forms.Control.GiveFeedback>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="04e76-115">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="04e76-116">鍵盤的狀態會在評估<xref:System.Windows.Forms.Control.DragOver>右邊的事件處理常式`ListBox`，以決定在拖曳作業將會根據 SHIFT、 CTRL、 ALT 或 CTRL + ALT 鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="04e76-116">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="04e76-117">中的位置`ListBox`期間也決定會卸除`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="04e76-117">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="04e76-118">如果要卸除的資料不是`String`，然後在<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>設<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="04e76-118">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04e76-119">最後，卸除的狀態會顯示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="04e76-119">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="04e76-120">若要提供的權限卸除資料`ListBox`決定<xref:System.Windows.Forms.Control.DragDrop>事件處理常式和`String`中適當的位置加入值`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="04e76-120">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="04e76-121">如果在拖曳作業移動超出界限的表單，則取消拖放作業<xref:System.Windows.Forms.Control.QueryContinueDrag>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="04e76-121">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="04e76-122">此程式碼摘錄示範如何使用<xref:System.Windows.Forms.DragEventHandler>委派與<xref:System.Windows.Forms.Control.DragOver>事件。</span><span class="sxs-lookup"><span data-stu-id="04e76-122">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventHandler> delegate with the <xref:System.Windows.Forms.Control.DragOver> event.</span></span> <span data-ttu-id="04e76-123">請參閱<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="04e76-123">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
    <altmember cref="T:System.Windows.Forms.DragEventArgs" />
  </Docs>
</Type>