<Type Name="ListViewItem+ListViewSubItemCollection" FullName="System.Windows.Forms.ListViewItem+ListViewSubItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06a979de516ed3e42564a36220a8c7ef4bd03162" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36518435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItem.ListViewSubItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListViewItem/ListViewSubItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem.ListViewSubItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListViewItem::ListViewSubItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewItem.ListViewSubItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 中儲存的 <see cref="T:System.Windows.Forms.ListViewItem" /> 物件集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>儲存<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件，表示子項目的父代<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView>控制項。 子項目只會顯示在<xref:System.Windows.Forms.ListView>控制資料行中指定的時<xref:System.Windows.Forms.ListView.Columns%2A>屬性<xref:System.Windows.Forms.ListView>控制項及何時<xref:System.Windows.Forms.ListView.View%2A>屬性<xref:System.Windows.Forms.ListView>控制設為  <xref:System.Windows.Forms.View.Details>。 中的子項目順序<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>決定子項目會顯示在資料行<xref:System.Windows.Forms.ListView>控制項。  
  
 有數種方式將子項目加入至集合。 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法會將單一<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>至集合。 要加入集合的子項目數目，您建立的陣列<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件，並將它傳遞給<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法。 如果您想要插入集合中特定位置的子項目，您可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A>方法。 若要移除的子項目，您可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A>方法或<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A>方法，如果您知道子項目位於集合中的位置。 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A>方法可讓您移除而不是使用集合中的所有子項目<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A>方法一次移除單一子項目。  
  
 除了方法和屬性加入和移除子項目<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>也提供方法來尋找子項目集合中。 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A>方法可讓您判斷是否<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>集合的成員。 一旦您知道子項目位於集合中，您可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A>方法來判斷集合中子項目的位置。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItemCollection (System.Windows.Forms.ListViewItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.#ctor(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItemCollection(System::Windows::Forms::ListViewItem ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListViewItem.ListViewSubItemCollection : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem.ListViewSubItemCollection" Usage="new System.Windows.Forms.ListViewItem.ListViewSubItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="owner">擁有集合的 <see cref="T:System.Windows.Forms.ListViewItem" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您無法建立此類別的執行個體，而不將它與相關聯<xref:System.Windows.Forms.ListViewItem>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將子項目加入至子項目的集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (text As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要顯示的子項目文字。</param>
        <summary>利用指定文字將子項目加入至集合中。</summary>
        <returns>已加入至集合中的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法可讓您加入至集合的子項目，藉由指定子項目的文字。 當呼叫此方法，新<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>建立使用指定的文字。 然後您可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>由這個方法，以設定屬性，並呼叫管理子項目的的方法。 如果您已經有現有<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>，您想要加入至集合，您可以使用的版本<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法可接受<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>做為參數，或者使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A>方法，如果您想要加入在特定的子項目將集合中。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.ListView>控制項具有三個<xref:System.Windows.Forms.ListViewItem>所指定的物件和三個<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>針對每個項目指定的物件。 此範例也會建立<xref:System.Windows.Forms.ColumnHeader>物件詳細資料檢視中顯示子項目。 兩個<xref:System.Windows.Forms.ImageList>物件也會建立在程式碼範例中提供的映像<xref:System.Windows.Forms.ListViewItem>物件。 這些<xref:System.Windows.Forms.ImageList>物件加入至<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性。 此範例會使用下列屬性建立<xref:System.Windows.Forms.ListView>控制項：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 這個範例需要您已加入的程式碼<xref:System.Windows.Forms.Form>並呼叫從建構函式或在表單上的另一個方法範例中所建立的方法。 這個範例也會需要映像命名為`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位於 c 磁碟機的根目錄  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As ListViewItem.ListViewSubItem) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">要加入至集合的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</param>
        <summary>將現有的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 加入至集合。</summary>
        <returns>已加入至集合中的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個版本的<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法，將現有<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>至集合。 這個方法通常用來重複使用現有的子項目，從其他<xref:System.Windows.Forms.ListViewItem>物件。 加入至集合的項目會插入清單的結尾。 若要將項目插入集合中特定位置，使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A>方法。 如果您想要將現有的陣列新增<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件，您可以使用的版本<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法可接受的陣列<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>做為參數的物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add (text, foreColor, backColor, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">要顯示的子項目文字。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示子項目的前景色彩。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示子項目的背景色彩。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，表示子項目文字所顯示的字樣。</param>
        <summary>使用指定文字、前景色彩、背景色彩和字型的設定，將子項目加入至集合中。</summary>
        <returns>已加入至集合中的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法可讓您加入至集合的子項目，藉由指定子項目的文字。 此外，這個版本的<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法可讓您指定初始的前景色彩、 背景色彩和子項目文字的字型。 當呼叫此方法，新<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>建立使用指定的文字。 然後您可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>由這個方法，以設定屬性，並呼叫管理子項目的的方法。 如果您已經有現有<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>，您想要加入至集合，您可以使用的版本<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法可接受<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>做為參數，或者使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A>方法，如果您想要加入在特定的子項目將集合中。  
  
> [!NOTE]
>  根據預設，子項目使用的前景色彩、 背景色彩和字型指定的父項目。 設定<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType>屬性`false`防止覆寫子項目的樣式的父項目樣式。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將子項目的陣列加入至集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] -&gt; unit" Usage="listViewSubItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="items">字串陣列，表示加入至集合中的各子項目的文字。</param>
        <summary>根據陣列建立新的子項目並加入至集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個版本的<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法，以加入至集合，其中每個集合中的字串表示新的子項目文字的字串陣列。 您可以使用其他版本<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>接受字串陣列做為參數來指定前景色彩、 背景色彩，以及每個要加入的項目字型的方法。 如果您想要重複使用現有的<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件並將其加入至集合，您可以使用的版本<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法可接受的陣列<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>做為參數的物件。  
  
 如果您想要新增單一<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>，使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法。 您也可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A>方法，如果您想要新增單一<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>集合中特定位置。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem.ListViewSubItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem/ListViewSubItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem.ListViewSubItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem.ListViewSubItem[] -&gt; unit" Usage="listViewSubItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
      </Parameters>
      <Docs>
        <param name="items">要加入至集合中之 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 物件的陣列。</param>
        <summary>將 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 物件陣列加入集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法重複使用儲存在不同的子項目<xref:System.Windows.Forms.ListViewItem>。 如果您想要新增單一<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件，請使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法。 您也可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A>方法，如果您想要新增單一<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>集合中特定位置。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[],System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; unit" Usage="listViewSubItemCollection.AddRange (items, foreColor, backColor, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">字串陣列，表示加入至集合中的各子項目的文字。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示子項目的前景色彩。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示子項目的背景色彩。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，表示子項目文字所顯示的字樣。</param>
        <summary>根據陣列建立新的子項目，並使用指定的前景色彩、背景色彩和字型加入至集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個版本的<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法，以加入至集合，其中每個集合中的字串表示新的子項目文字的字串陣列。 此外，這個版本的<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法可讓您指定前景色彩、 背景色彩和字型的每一個子項目。 您可以使用其他版本<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法可做為參數接受字串陣列，如果不要指定前景色彩、 背景色彩和字型設定每一個子項目。 如果您想要重複使用現有的<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件並將其加入至集合，您可以使用的版本<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法可接受的陣列<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>做為參數的物件。  
  
 如果您想要新增單一<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>，使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法。 您也可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A>方法，如果您想要新增單一<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>集合中特定位置。  
  
> [!NOTE]
>  根據預設，子項目使用的前景色彩、 背景色彩和字型指定的父項目。 設定<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType>屬性`false`防止覆寫子項目的樣式的父項目樣式。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewSubItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除集合中的所有子項目和父 <see cref="T:System.Windows.Forms.ListViewItem" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您從集合移除的子項目時，已刪除的子項目有關的所有資訊將都會遺失。 若要從集合移除單一子項目<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A>或<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (subItem As ListViewItem.ListViewSubItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; bool" Usage="listViewSubItemCollection.Contains subItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />，表示位於集合中的子項目。</param>
        <summary>判斷指定的子項目是否位於集合中。</summary>
        <returns>如果子項目包含在集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A>方法可讓您判斷是否<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>集合的成員。 一旦您知道子項目位於集合中，您可以使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A>方法來判斷集合中的子項目的位置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="listViewSubItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要搜尋之 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的名稱。</param>
        <summary>判斷集合是否包含具有指定索引鍵的項目。</summary>
        <returns>
          <see langword="true" /> 表示集合包含具有指定索引鍵的項目，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A>屬性會對應至索引鍵<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>中<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>。  
  
 索引鍵的比較不區分大小寫。 如果`key`參數是`null`或空字串，<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey%2A>傳回 `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得集合中的子項目數目。</summary>
        <value>集合中的子項目數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性可讓您判斷所定義的子項目的號碼<xref:System.Windows.Forms.ListViewItem>。 然後，當您逐一查看集合的值，而且您必須提供的數字執行迴圈的反覆運算時，您可以使用這個值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewSubItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回用於逐一查看子項目集合的列舉程式。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" />，表示子項目的集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (subItem As ListViewItem.ListViewSubItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; int" Usage="listViewSubItemCollection.IndexOf subItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />，表示位於集合中的子項目。</param>
        <summary>傳回指定子項目集合中的索引。</summary>
        <returns>集合中子項目位置之以零起始的索引。 如果子項目不在集合中，則傳回值為負值 (-1)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A>方法可讓您判斷集合中的子項目位置。 若要判斷子項目是否包含在集合上呼叫這個方法之前，請使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="listViewSubItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要擷取索引之項目的名稱。</param>
        <summary>傳回具有指定索引鍵之項目在集合中第一次出現的索引。</summary>
        <returns>具有指定索引鍵之項目第一次出現的以零起始的索引。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A>稱為連續，最後一個傳回索引會檢查索引鍵的符合項目第一次，而且如果沒有相符項目，搜尋會從集合的開頭。  
  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A>屬性會對應至索引鍵<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>中<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>。  
  
 索引鍵的比較不區分大小寫。 如果`key`參數是`null`或空字串，<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A>傳回-1。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; unit" Usage="listViewSubItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="index">插入項目所在的索引位置 (以零為起始)。</param>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />，代表要插入集合中的子項目。</param>
        <summary>將子項目插入位於指定索引處的集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可讓您在特定位置插入子項目<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>。 若要新增子項目時未指定特定位置，使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法。 如果您想要加入至集合的子項目陣列，使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A>方法。 如果您想要將新的子項目插入至現有的子項目集合，您可以使用這個方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 參數小於零或大於 <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> 之 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" /> 屬性的值。</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示集合是否為唯讀。</summary>
        <value>如果集合是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性一律為`false`這個集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從集合中取得項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[int] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem.ListViewSubItem with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要從集合中擷取的項目索引。</param>
        <summary>取得或設定集合中位於指定索引處的子項目。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />，表示集合中、位於指定索引處的子項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法來取得<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>儲存在集合中特定位置。 若要判斷特定集合中項目的索引，請使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 參數小於零，或者大於等於 <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" /> 屬性值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem.ListViewSubItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要擷取之 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的名稱。</param>
        <summary>從集合中取得具有指定索引鍵的項目。</summary>
        <value>具有指定金鑰的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A>屬性會對應至索引鍵<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>中<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>。  
  
 索引鍵的比較不區分大小寫。 如果`key`參數是`null`或空字串，<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item%2A>傳回 `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; unit" Usage="listViewSubItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">要從集合中移除的項目。</param>
        <summary>從集合中移除指定的項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要移除的項目中指定索引處，或具有指定索引鍵，使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A>方法或<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey%2A>方法，分別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewSubItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除之子項目的以零起始索引。</param>
        <summary>移除集合中位於指定索引處的子項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您從集合移除子項目時，後續的子項目集合中索引將會變更。 已移除的子項目有關的所有資訊都會都刪除。 您可以使用這個方法從集合移除指定的子項目，藉由指定要從集合中移除的子項目之索引。 若要指定要移除而不是以子項目的索引的子項目，請使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A>方法。 若要從集合中移除所有的子項目，使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 參數小於零，或者大於等於 <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> 的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" /> 屬性值。</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="listViewSubItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要從集合移除之項目的名稱。</param>
        <summary>從集合中移除具有指定索引鍵的項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A>屬性會對應至索引鍵<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>中<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>。  
  
 索引鍵的比較不區分大小寫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的陣列。</param>
        <param name="index">陣列中以零起始的索引，即複製的起始處。</param>
        <summary>將此項目和子項目的集合複製到陣列中。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">此陣列型別與 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 不相容。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示是否同步化存取集合 (執行緒安全)。</summary>
        <value>所有情況下都是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得物件，這個物件可以用來對集合進行同步存取。</summary>
        <value>用來同步處理集合的物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">要加入至集合的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</param>
        <summary>將現有的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 加入至集合。</summary>
        <returns>以零起始的索引，表示物件加入集合中的位置。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" /> 不是 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (subItem As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ subItem) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">物件，表示要在集合中尋找的子項目。</param>
        <summary>判斷指定的子項目是否位於集合中。</summary>
        <returns>如果子項目包含在集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (subItem As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ subItem) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">物件，表示要在集合中尋找的子項目。</param>
        <summary>傳回指定子項目集合中的索引。</summary>
        <returns>子項目之以零起始的索引 (如果位於集合中)，否則為 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">插入項目所在的索引位置 (以零為起始)。</param>
        <param name="item">物件，表示要插入集合中的子項目。</param>
        <summary>將子項目插入位於指定索引處的集合中。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" /> 不是 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">索引參數小於 0，或者大於或等於 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" /> 的 Count 屬性值。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示集合的大小是否是固定的。</summary>
        <value>所有情況下都是 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要取得或設定之以零為起始的項目索引。</param>
        <summary>取得或設定集合內位於指定索引處的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />，表示集合中位於指定索引處的項目。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">索引參數小於 0，或者大於或等於 <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> 的 Count 屬性值。</exception>
        <exception cref="T:System.ArgumentException">物件不是 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">要從集合中移除的項目。</param>
        <summary>從集合中移除指定的項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>