<Type Name="TextBox" FullName="System.Windows.Forms.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c97df4724eef96604decf652aa62c906d5be4974" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015110" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="33fb8-101">表示 Windows 文字方塊控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-101">Represents a Windows text box control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-102">使用<xref:System.Windows.Forms.TextBox>控制項，使用者可以輸入應用程式中的文字。</span><span class="sxs-lookup"><span data-stu-id="33fb8-102">With the <xref:System.Windows.Forms.TextBox> control, the user can enter text in an application.</span></span> <span data-ttu-id="33fb8-103">這個控制項具有標準 Windows 文字方塊控制項，包括多行編輯和密碼的字元遮罩中找不到的其他功能。</span><span class="sxs-lookup"><span data-stu-id="33fb8-103">This control has additional functionality that is not found in the standard Windows text box control, including multiline editing and password character masking.</span></span>  
  
 <span data-ttu-id="33fb8-104">一般而言，<xref:System.Windows.Forms.TextBox>控制項用來顯示此項目，或接受做為輸入，單行文字。</span><span class="sxs-lookup"><span data-stu-id="33fb8-104">Typically, a <xref:System.Windows.Forms.TextBox> control is used to display, or accept as input, a single line of text.</span></span> <span data-ttu-id="33fb8-105">您可以使用<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>和<xref:System.Windows.Forms.TextBox.ScrollBars%2A>屬性，以啟用多行顯示或輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="33fb8-105">You can use the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBox.ScrollBars%2A> properties to enable multiple lines of text to be displayed or entered.</span></span> <span data-ttu-id="33fb8-106">設定<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>並<xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>屬性，以`true`若要啟用更多行文字操作<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-106">Set the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> and <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> properties to `true` to enable greater text manipulation in a multiline <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33fb8-107">您必須設定<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性，以`true`若要調整的高度<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-107">You must set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true` to adjust the height of the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="33fb8-108">您可以設定來調整高度<xref:System.Windows.Forms.Control.Size%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-108">You can adjust the height by setting the <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 <span data-ttu-id="33fb8-109">您可以限制輸入的文字數量<xref:System.Windows.Forms.TextBox>藉由設定控制<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>屬性指定的數字的字元。</span><span class="sxs-lookup"><span data-stu-id="33fb8-109">You can limit the amount of text entered into a <xref:System.Windows.Forms.TextBox> control by setting the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to a specific number of characters.</span></span> <span data-ttu-id="33fb8-110"><xref:System.Windows.Forms.TextBox> 控制項也可用來接受密碼和其他機密資訊。</span><span class="sxs-lookup"><span data-stu-id="33fb8-110"><xref:System.Windows.Forms.TextBox> controls can also be used to accept passwords and other sensitive information.</span></span> <span data-ttu-id="33fb8-111">您可以使用<xref:System.Windows.Forms.TextBox.PasswordChar%2A>單行版本的控制項中輸入的遮罩字元的屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-111">You can use the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property to mask characters entered in a single-line version of the control.</span></span> <span data-ttu-id="33fb8-112">使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>屬性，讓使用者只輸入大寫、 只有小寫或大寫和小寫字元的組合<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-112">Use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to enable the user to type only uppercase, only lowercase, or a combination of uppercase and lowercase characters into the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="33fb8-113">若要捲動的內容<xref:System.Windows.Forms.TextBox>內控制項的可見區域資料指標 （插入號） 之前，您可以使用<xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33fb8-113">To scroll the contents of the <xref:System.Windows.Forms.TextBox> until the cursor (caret) is within the visible region of the control, you can use the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method.</span></span> <span data-ttu-id="33fb8-114">若要選取某個範圍的文字在文字方塊中，您可以使用<xref:System.Windows.Forms.TextBoxBase.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33fb8-114">To select a range of text in the text box, you can use the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span>  
  
 <span data-ttu-id="33fb8-115">若要限制中所輸入的文字<xref:System.Windows.Forms.TextBox>控制項，您可以建立的事件處理常式<xref:System.Windows.Forms.Control.KeyDown>事件，以驗證輸入控制項中的每個字元。</span><span class="sxs-lookup"><span data-stu-id="33fb8-115">To restrict text from being entered in a <xref:System.Windows.Forms.TextBox> control, you can create an event handler for the <xref:System.Windows.Forms.Control.KeyDown> event in order to validate each character entered in the control.</span></span> <span data-ttu-id="33fb8-116">您也可以限制中的資料的所有項目<xref:System.Windows.Forms.TextBox>控制項，藉由設定<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="33fb8-116">You can also restrict all entry of data in a <xref:System.Windows.Forms.TextBox> control by setting the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33fb8-117">大部分的功能<xref:System.Windows.Forms.TextBox>控制項繼承自<xref:System.Windows.Forms.TextBoxBase>類別。</span><span class="sxs-lookup"><span data-stu-id="33fb8-117">Most of the functionality of the <xref:System.Windows.Forms.TextBox> control is inherited from the <xref:System.Windows.Forms.TextBoxBase> class.</span></span>  
>   
>  <span data-ttu-id="33fb8-118">使用<xref:System.Windows.Forms.TextBox>控制項啟用視覺化樣式會導致不正確處理 surrogate 字型。</span><span class="sxs-lookup"><span data-stu-id="33fb8-118">Using the <xref:System.Windows.Forms.TextBox> control with visual styles enabled will cause the incorrect handling of surrogate fonts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-119">下列程式碼範例會建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-119">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="33fb8-120">這個範例會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.Control.Dock%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-120">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.Control.Dock%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-csharp[Classic TextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TextBoxBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33fb8-121">初始化 <see cref="T:System.Windows.Forms.TextBox" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="33fb8-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.TextBox" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-122">父容器控制項定義的色彩和字型設定<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="33fb8-122">The parent container control defines the color and font settings for the <xref:System.Windows.Forms.TextBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-123">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.TextBox>控制項，並將字串指派給控制項的<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-123">The following code example creates a new instance of the <xref:System.Windows.Forms.TextBox> control and assigns a string to the control's <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
 [!code-cpp[Classic TextBox.TextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.TextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.TextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.TextBox Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.TextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.TextBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Windows.Forms.TextBox.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-124">取得或設定值，指出是否按下 ENTER 鍵在多行<see cref="T:System.Windows.Forms.TextBox" />控制項在控制項中建立新的文字行，或啟動表單的預設按鈕。</span><span class="sxs-lookup"><span data-stu-id="33fb8-124">Gets or sets a value indicating whether pressing ENTER in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control creates a new line of text in the control or activates the default button for the form.</span></span></summary>
        <value><span data-ttu-id="33fb8-125"><see langword="true" /> 如果 ENTER 鍵在控制項中，多行版本中建立新的文字行<see langword="false" />如果 ENTER 鍵啟動表單的預設按鈕。</span><span class="sxs-lookup"><span data-stu-id="33fb8-125"><see langword="true" /> if the ENTER key creates a new line of text in a multiline version of the control; <see langword="false" /> if the ENTER key activates the default button for the form.</span></span> <span data-ttu-id="33fb8-126">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-127">如果這個屬性的值是`false`，使用者必須按 CTRL + ENTER 鍵來建立新的一行中多行<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-127">If the value of this property is `false`, the user must press CTRL+ENTER to create a new line in a multiline <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="33fb8-128">如果沒有任何預設按鈕的表單，ENTER 鍵一律會建立新的一行文字在控制項中，不論這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-128">If there is no default button for the form, the ENTER key will always create a new line of text in the control, regardless of the value of this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-129">下列程式碼範例會建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-129">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="33fb8-130">這個範例會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-130">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteCustomSource : System.Windows.Forms.AutoCompleteStringCollection with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-131">取得或設定當 <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> 屬性設定為 <see langword="CustomSource" /> 時所使用的自訂 <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-131">Gets or sets a custom <see cref="T:System.Collections.Specialized.StringCollection" /> to use when the <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> property is set to <see langword="CustomSource" />.</span></span></summary>
        <value><span data-ttu-id="33fb8-132">要搭配 <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> 使用的 <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-132">A <see cref="T:System.Collections.Specialized.StringCollection" /> to use with <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-133">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>， <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>，並<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性，以建立<xref:System.Windows.Forms.TextBox>，自動完成輸入的字串比較輸入中維護來源的所有字串的前置詞的前置詞。</span><span class="sxs-lookup"><span data-stu-id="33fb8-133">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="33fb8-134">這適合用於<xref:System.Windows.Forms.TextBox>所在 Url、 位址、 檔案名稱或命令會經常輸入的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-134">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="33fb8-135">善用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性是選擇性的但是您必須設定<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性設`CustomSource`若要使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="33fb8-135">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="33fb8-136">您必須使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性放在一起。</span><span class="sxs-lookup"><span data-stu-id="33fb8-136">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33fb8-137">作業系統可能會限制可同時顯示的自訂字串數目。</span><span class="sxs-lookup"><span data-stu-id="33fb8-137">The operating system might limit the number of custom strings that it can display at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-138">下列程式碼範例示範如何使用集合做為，自動完成的自訂來源<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-138">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="33fb8-139">此範例會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="33fb8-139">This example does the following:</span></span>  
  
-   <span data-ttu-id="33fb8-140">會使用<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性，來啟用<xref:System.Windows.Forms.TextBox>接受其自動完成行為的自訂來源的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-140">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="33fb8-141">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性來設定自訂的值清單。</span><span class="sxs-lookup"><span data-stu-id="33fb8-141">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="33fb8-142">使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>屬性來設定自動完成的候選項目顯示的方式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-142">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteMode : System.Windows.Forms.AutoCompleteMode with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-143">取得或設定選項，控制如何在 <see cref="T:System.Windows.Forms.TextBox" /> 中使用自動完成。</span><span class="sxs-lookup"><span data-stu-id="33fb8-143">Gets or sets an option that controls how automatic completion works for the <see cref="T:System.Windows.Forms.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="33fb8-144"><see cref="T:System.Windows.Forms.AutoCompleteMode" /> 的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-144">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span> <span data-ttu-id="33fb8-145">以下是這些值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-145">The following are the values.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />  
<span data-ttu-id="33fb8-146">將最可能的候選字串的其餘部分附加到現有的字元，反白顯示附加的字元。</span><span class="sxs-lookup"><span data-stu-id="33fb8-146">Appends the remainder of the most likely candidate string to the existing characters, highlighting the appended characters.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />  
<span data-ttu-id="33fb8-147">顯示與編輯控制項相關聯的輔助下拉式清單。</span><span class="sxs-lookup"><span data-stu-id="33fb8-147">Displays the auxiliary drop-down list associated with the edit control.</span></span> <span data-ttu-id="33fb8-148">這個下拉式清單會填入一個或多個建議的完成字串。</span><span class="sxs-lookup"><span data-stu-id="33fb8-148">This drop-down is populated with one or more suggested completion strings.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />  
<span data-ttu-id="33fb8-149">附加<see langword="Suggest" />和<see langword="Append" />選項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-149">Appends both <see langword="Suggest" /> and <see langword="Append" /> options.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />  
<span data-ttu-id="33fb8-150">停用自動完成。</span><span class="sxs-lookup"><span data-stu-id="33fb8-150">Disables automatic completion.</span></span> <span data-ttu-id="33fb8-151">這是預設值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-151">This is the default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-152">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>， <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>，並<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性，以建立<xref:System.Windows.Forms.TextBox>，自動完成輸入的字串比較輸入中維護來源的所有字串的前置詞的前置詞。</span><span class="sxs-lookup"><span data-stu-id="33fb8-152">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="33fb8-153">這適合用於<xref:System.Windows.Forms.TextBox>所在 Url、 位址、 檔案名稱或命令會經常輸入的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-153">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="33fb8-154">善用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性是選擇性的但是您必須設定<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性設`CustomSource`若要使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="33fb8-154">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="33fb8-155">您必須使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性放在一起。</span><span class="sxs-lookup"><span data-stu-id="33fb8-155">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33fb8-156">作業系統可能會限制可同時顯示的自訂字串數目。</span><span class="sxs-lookup"><span data-stu-id="33fb8-156">The operating system might limit the number of custom strings that it can display at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-157">下列程式碼範例示範如何使用集合做為，自動完成的自訂來源<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-157">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="33fb8-158">此範例會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="33fb8-158">This example does the following:</span></span>  
  
-   <span data-ttu-id="33fb8-159">會使用<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性，來啟用<xref:System.Windows.Forms.TextBox>接受其自動完成行為的自訂來源的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-159">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="33fb8-160">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性來設定自訂的值清單。</span><span class="sxs-lookup"><span data-stu-id="33fb8-160">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="33fb8-161">使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>屬性來設定自動完成的候選項目顯示的方式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-161">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="33fb8-162">指定的值不是其中一個值<see cref="T:System.Windows.Forms.AutoCompleteMode" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-162">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteSource : System.Windows.Forms.AutoCompleteSource with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TextBoxAutoCompleteSourceConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-163">取得或設定值，以指定用於自動完成的完整字串來源。</span><span class="sxs-lookup"><span data-stu-id="33fb8-163">Gets or sets a value specifying the source of complete strings used for automatic completion.</span></span></summary>
        <value><span data-ttu-id="33fb8-164"><see cref="T:System.Windows.Forms.AutoCompleteSource" /> 的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-164">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span> <span data-ttu-id="33fb8-165">這些選項包括 <see langword="AllSystemSources" />、<see langword="AllUrl" />、<see langword="FileSystem" />、<see langword="HistoryList" />、<see langword="RecentlyUsedList" />、<see langword="CustomSource" /> 和 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-165">The options are <see langword="AllSystemSources" />, <see langword="AllUrl" />, <see langword="FileSystem" />, <see langword="HistoryList" />, <see langword="RecentlyUsedList" />, <see langword="CustomSource" />, and <see langword="None" />.</span></span> <span data-ttu-id="33fb8-166">預設為 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-166">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-167">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>， <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>，並<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性，以建立<xref:System.Windows.Forms.TextBox>，自動完成輸入的字串比較輸入中維護來源的所有字串的前置詞的前置詞。</span><span class="sxs-lookup"><span data-stu-id="33fb8-167">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="33fb8-168">這適合用於<xref:System.Windows.Forms.TextBox>所在 Url、 位址、 檔案名稱或命令會經常輸入的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-168">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="33fb8-169">善用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性是選擇性的但是您必須設定<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性設`CustomSource`若要使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="33fb8-169">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="33fb8-170">您必須使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性放在一起。</span><span class="sxs-lookup"><span data-stu-id="33fb8-170">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33fb8-171"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 在多行上無法運作<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-171"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> does not work on multiline <xref:System.Windows.Forms.TextBox> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33fb8-172">作業系統可能會限制可以一次顯示的自訂字串數目。</span><span class="sxs-lookup"><span data-stu-id="33fb8-172">The operating system might limit the number of custom strings that can be displayed at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-173">下列程式碼範例示範如何使用集合做為，自動完成的自訂來源<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-173">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="33fb8-174">此範例會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="33fb8-174">This example does the following:</span></span>  
  
-   <span data-ttu-id="33fb8-175">會使用<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性，來啟用<xref:System.Windows.Forms.TextBox>接受其自動完成行為的自訂來源的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-175">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="33fb8-176">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性來設定自訂的值清單。</span><span class="sxs-lookup"><span data-stu-id="33fb8-176">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="33fb8-177">使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>屬性來設定自動完成的候選項目顯示的方式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-177">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="33fb8-178">指定的值不是其中一個值<see cref="T:System.Windows.Forms.AutoCompleteSource" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-178">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CharacterCasing CharacterCasing { System::Windows::Forms::CharacterCasing get(); void set(System::Windows::Forms::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Forms.CharacterCasing with get, set" Usage="System.Windows.Forms.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-179">取得或設定是否<see cref="T:System.Windows.Forms.TextBox" />控制項修改字元的大小寫，依照其輸入。</span><span class="sxs-lookup"><span data-stu-id="33fb8-179">Gets or sets whether the <see cref="T:System.Windows.Forms.TextBox" /> control modifies the case of characters as they are typed.</span></span></summary>
        <value><span data-ttu-id="33fb8-180">其中一個<see cref="T:System.Windows.Forms.CharacterCasing" />列舉值，指定是否<see cref="T:System.Windows.Forms.TextBox" />控制項修改字元的大小寫。</span><span class="sxs-lookup"><span data-stu-id="33fb8-180">One of the <see cref="T:System.Windows.Forms.CharacterCasing" /> enumeration values that specifies whether the <see cref="T:System.Windows.Forms.TextBox" /> control modifies the case of characters.</span></span> <span data-ttu-id="33fb8-181">預設為 <see langword="CharacterCasing.Normal" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-181">The default is <see langword="CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-182">您可以使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>屬性變更為您的應用程式所需的字元的大小寫。</span><span class="sxs-lookup"><span data-stu-id="33fb8-182">You can use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change the case of characters as required by your application.</span></span> <span data-ttu-id="33fb8-183">例如，您可以變更輸入中的所有字元的大小寫<xref:System.Windows.Forms.TextBox>用於密碼項目為大寫或小寫，以強制執行密碼原則控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-183">For example, you could change the case of all characters entered in a <xref:System.Windows.Forms.TextBox> control used for password entry to uppercase or lowercase to enforce a policy for passwords.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-184">下列程式碼範例會建立<xref:System.Windows.Forms.TextBox>用來接受密碼的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-184">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="33fb8-185">這個範例會使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>屬性來變更類型的所有字元小寫字母和<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>將密碼長度限制為八個字元的屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-185">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase, and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="33fb8-186">此範例也會使用<xref:System.Windows.Forms.TextBox.TextAlign%2A>置中的密碼屬性<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-186">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="33fb8-187">值不是有效的列舉值的範圍內，這個值已指派給屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-187">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="textBox.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-188">建立控制代碼時，取得必要的建立參數。</span><span class="sxs-lookup"><span data-stu-id="33fb8-188">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="33fb8-189"><see cref="T:System.Windows.Forms.CreateParams" />，包含建立控制項之控制代碼時所需的建立參數。</span><span class="sxs-lookup"><span data-stu-id="33fb8-189">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.TextBox.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-190">取得控制項支援的預設輸入法 (IME) 模式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-190">Gets the default Input Method Editor (IME) mode supported by the control.</span></span></summary>
        <value><span data-ttu-id="33fb8-191">控制項所支援的預設輸入法模式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-191">The default IME mode supported by the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="textBox.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="33fb8-192"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="33fb8-192"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="33fb8-193">釋放 <see cref="T:System.Windows.Forms.TextBox" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="33fb8-193">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.TextBox" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-194">這個方法會呼叫公用`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33fb8-194">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="33fb8-195">`Dispose` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="33fb8-195">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="33fb8-196"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="33fb8-196"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="33fb8-197">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Windows.Forms.TextBox> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="33fb8-197">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.TextBox> references.</span></span> <span data-ttu-id="33fb8-198">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="33fb8-198">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33fb8-199">
            <see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="33fb8-199">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="33fb8-200">當覆寫<see langword="Dispose(Boolean)" />，請小心不要參考先前處置呼叫中的物件<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-200">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="33fb8-201">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="33fb8-201">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="33fb8-202">如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="33fb8-202">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBox.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="33fb8-203">其中一個索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-203">One of the key's values.</span></span></param>
        <summary><span data-ttu-id="33fb8-204">判斷指定的按鍵是輸入按鍵還是需要前置處理的特殊按鍵。</span><span class="sxs-lookup"><span data-stu-id="33fb8-204">Determines whether the specified key is an input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="33fb8-205"><see langword="true" /> 如果指定的按鍵是輸入的索引鍵;否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-205"><see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-206"><xref:System.Windows.Forms.TextBox.IsInputKey%2A>方法會傳回`true`當`keyData`包含<xref:System.Windows.Forms.Keys.Return>值，而<xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="33fb8-206">The <xref:System.Windows.Forms.TextBox.IsInputKey%2A> method returns `true` when `keyData` includes the <xref:System.Windows.Forms.Keys.Return> value and the <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-207">取得或設定值，其會表示這是否為多行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-207">Gets or sets a value indicating whether this is a multiline <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="33fb8-208">如果控制項是多行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-208"><see langword="true" /> if the control is a multiline <see cref="T:System.Windows.Forms.TextBox" /> control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33fb8-209">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-209">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-210"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 在多行上無法運作<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-210"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> does not work on multiline <xref:System.Windows.Forms.TextBox> controls.</span></span>  
  
 <span data-ttu-id="33fb8-211">當字型變更時，您已定義任何縮排不會出現。</span><span class="sxs-lookup"><span data-stu-id="33fb8-211">When the font is changed, any indentation that you have defined does not appear.</span></span> <span data-ttu-id="33fb8-212">若要取得縮排，請設定<xref:System.Windows.Forms.TextBox.Multiline%2A>至`true`並覆寫 WM_SETFONT，而不需要呼叫基底類別，如此就不會呼叫 SETMARGINS。</span><span class="sxs-lookup"><span data-stu-id="33fb8-212">To get indentation, set <xref:System.Windows.Forms.TextBox.Multiline%2A> to `true` and override WM_SETFONT without calling the base class so that SETMARGINS is not called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-213">下列程式碼範例會建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-213">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="33fb8-214">這個範例會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-214">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="textBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33fb8-215">包含事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-215">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33fb8-216">引發 <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-216">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-217">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-217">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="33fb8-218">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="33fb8-218">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="33fb8-219"><xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="33fb8-219">The <xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="33fb8-220">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="33fb8-220">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33fb8-221">當覆寫<see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別<see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-221">When overriding <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBox.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33fb8-222">包含事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-222">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33fb8-223">引發 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-223">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-224">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-224">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="33fb8-225">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="33fb8-225">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="33fb8-226"><xref:System.Windows.Forms.TextBox.OnFontChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="33fb8-226">The <xref:System.Windows.Forms.TextBox.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="33fb8-227">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="33fb8-227">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33fb8-228">當覆寫<see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別<see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-228">When overriding <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="textBox.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33fb8-229">包含事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-229">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33fb8-230">引發 <see cref="E:System.Windows.Forms.Control.GotFocus" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-230">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-231">當使用者選取的文字<xref:System.Windows.Forms.TextBox>控制項，控制項儲存選取項目。</span><span class="sxs-lookup"><span data-stu-id="33fb8-231">When the user selects text in a <xref:System.Windows.Forms.TextBox> control, the control saves the selection.</span></span> <span data-ttu-id="33fb8-232">當<xref:System.Windows.Forms.TextBox>控制項取得焦點時，將選取範圍會如同在<xref:System.Windows.Forms.TextBox>失去焦點。</span><span class="sxs-lookup"><span data-stu-id="33fb8-232">When a <xref:System.Windows.Forms.TextBox> control gets focus, the selection is the same as when the <xref:System.Windows.Forms.TextBox> loses focus.</span></span> <span data-ttu-id="33fb8-233">當<xref:System.Windows.Forms.TextBox>取得焦點放在第一次，會選取整個文字。</span><span class="sxs-lookup"><span data-stu-id="33fb8-233">When the <xref:System.Windows.Forms.TextBox> gets focus for the first time, the entire text is selected.</span></span>  
  
 <span data-ttu-id="33fb8-234">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-234">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="33fb8-235">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="33fb8-235">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="33fb8-236"><xref:System.Windows.Forms.TextBox.OnGotFocus%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="33fb8-236">The <xref:System.Windows.Forms.TextBox.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="33fb8-237">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="33fb8-237">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33fb8-238">當覆寫<see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />衍生類別時，請務必呼叫基底類別<see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />方法，讓已註冊的委派收到事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-238">When overriding <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33fb8-239">事件資料。</span><span class="sxs-lookup"><span data-stu-id="33fb8-239">The event data.</span></span></param>
        <summary><span data-ttu-id="33fb8-240">引發 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-240">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33fb8-241">包含事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-241">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33fb8-242">引發 <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-242">Raises the <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-243">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-243">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="33fb8-244">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="33fb8-244">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="33fb8-245"><xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="33fb8-245">The <xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="33fb8-246">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="33fb8-246">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33fb8-247">當覆寫<see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />衍生類別時，請務必呼叫基底類別<see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />方法，讓已註冊的委派收到事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-247">When overriding <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBox.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="33fb8-248">包含事件資料的物件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-248">An object that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33fb8-249">引發 <see cref="E:System.Windows.Forms.Control.MouseUp" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-249">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextAlignChanged : EventArgs -&gt; unit&#xA;override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="textBox.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33fb8-250">包含事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33fb8-251">引發 <see cref="E:System.Windows.Forms.TextBox.TextAlignChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-251">Raises the <see cref="E:System.Windows.Forms.TextBox.TextAlignChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-252">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-252">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="33fb8-253">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="33fb8-253">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="33fb8-254"><xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="33fb8-254">The <xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="33fb8-255">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="33fb8-255">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33fb8-256">當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-256">When overriding <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.TextBox.TextAlignChanged" />
        <altmember cref="P:System.Windows.Forms.TextBox.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.Windows.Forms.TextBox.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('\0')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-257">取得或設定用來遮罩在單行中的密碼字元的字元<see cref="T:System.Windows.Forms.TextBox" />控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-257">Gets or sets the character used to mask characters of a password in a single-line <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="33fb8-258">用來在單行中輸入的遮罩字元的字元<see cref="T:System.Windows.Forms.TextBox" />控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-258">The character used to mask characters entered in a single-line <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span> <span data-ttu-id="33fb8-259">如果輸入不想要遮罩字元的控制項，請設定這個屬性的值為 0 （字元值）。</span><span class="sxs-lookup"><span data-stu-id="33fb8-259">Set the value of this property to 0 (character value) if you do not want the control to mask characters as they are typed.</span></span> <span data-ttu-id="33fb8-260">依預設會等於 0 （字元值）。</span><span class="sxs-lookup"><span data-stu-id="33fb8-260">Equals 0 (character value) by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-261"><xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>屬性的優先順序高於<xref:System.Windows.Forms.TextBox.PasswordChar%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-261">The <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> property has precedence over the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span> <span data-ttu-id="33fb8-262">每當<xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>設定為`true`，預設系統密碼字元，並設定任何字元<xref:System.Windows.Forms.TextBox.PasswordChar%2A>會被忽略。</span><span class="sxs-lookup"><span data-stu-id="33fb8-262">Whenever the <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> is set to `true`, the default system password character is used and any character set by <xref:System.Windows.Forms.TextBox.PasswordChar%2A> is ignored.</span></span>  
  
 <span data-ttu-id="33fb8-263">當<xref:System.Windows.Forms.TextBox.PasswordChar%2A>屬性設定，無法執行剪下和複製動作中使用鍵盤的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-263">When the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property is set, cut and copy actions in the control using the keyboard cannot be performed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33fb8-264">當<xref:System.Windows.Forms.TextBox>處於密碼模式，因為<xref:System.Windows.Forms.TextBox.PasswordChar%2A>， <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>，或<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>會`true`，則<xref:System.Windows.Forms.TextBox>目前為限制模式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-264">When the <xref:System.Windows.Forms.TextBox> is in password mode because <xref:System.Windows.Forms.TextBox.PasswordChar%2A>, <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>, or <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is `true`, the <xref:System.Windows.Forms.TextBox> is in restricted mode.</span></span> <span data-ttu-id="33fb8-265">在此模式中，<xref:System.Windows.Forms.ImeMode>已停用，但目前<xref:System.Windows.Forms.ImeMode>快取，以便可以還原如果<xref:System.Windows.Forms.TextBox>萬一不受限制。</span><span class="sxs-lookup"><span data-stu-id="33fb8-265">In this mode, the <xref:System.Windows.Forms.ImeMode> is disabled, but the current <xref:System.Windows.Forms.ImeMode> is cached so that it can be restored if the <xref:System.Windows.Forms.TextBox> ever becomes unrestricted.</span></span> <span data-ttu-id="33fb8-266">切換<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>是常見的案例。</span><span class="sxs-lookup"><span data-stu-id="33fb8-266">Toggling the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is a common scenario.</span></span> <span data-ttu-id="33fb8-267"><xref:System.Windows.Forms.ImeMode>時的控制項是在受限制的模式是加上陰影。</span><span class="sxs-lookup"><span data-stu-id="33fb8-267">The <xref:System.Windows.Forms.ImeMode> is shadowed while the control is in restricted mode.</span></span> <span data-ttu-id="33fb8-268">從設計工具的觀點來看，<xref:System.Windows.Forms.ImeMode>所顯示的值是實際的值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-268">From the designer perspective, the <xref:System.Windows.Forms.ImeMode> value shown is the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-269">下列程式碼範例會建立<xref:System.Windows.Forms.TextBox>用來接受密碼的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-269">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="33fb8-270">這個範例會使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>將所有字元都變更的屬性型別為小寫和<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>將密碼長度限制為八個字元的屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-270">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="33fb8-271">此範例也會使用<xref:System.Windows.Forms.TextBox.TextAlign%2A>置中的密碼屬性<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-271">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.Paste(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.Paste : string -&gt; unit" Usage="textBox.Paste text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="33fb8-272">要取代的文字。</span><span class="sxs-lookup"><span data-stu-id="33fb8-272">The text to replace.</span></span></param>
        <summary><span data-ttu-id="33fb8-273">設定為指定文字的選取的文字，而不清除復原緩衝區。</span><span class="sxs-lookup"><span data-stu-id="33fb8-273">Sets the selected text to the specified text without clearing the undo buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-274">不同於設定<xref:System.Windows.Forms.TextBoxBase.SelectedText%2A>，<xref:System.Windows.Forms.TextBox.Paste%2A>並不會影響剪貼簿。</span><span class="sxs-lookup"><span data-stu-id="33fb8-274">Unlike setting <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A>, <xref:System.Windows.Forms.TextBox.Paste%2A> does not affect the Clipboard.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaceholderText">
      <MemberSignature Language="C#" Value="public string PlaceholderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PlaceholderText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.PlaceholderText" />
      <MemberSignature Language="VB.NET" Value="Public Property PlaceholderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PlaceholderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlaceholderText : string with get, set" Usage="System.Windows.Forms.TextBox.PlaceholderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBox.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="33fb8-275">以傳參考方式傳遞的 <see cref="T:System.Windows.Forms.Message" />，它代表要處理的視窗訊息。</span><span class="sxs-lookup"><span data-stu-id="33fb8-275">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="33fb8-276">其中一個 <see cref="T:System.Windows.Forms.Keys" /> 值，它代表要處理的快速鍵。</span><span class="sxs-lookup"><span data-stu-id="33fb8-276">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span></span></param>
        <summary><span data-ttu-id="33fb8-277">處理命令按鍵。</span><span class="sxs-lookup"><span data-stu-id="33fb8-277">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="33fb8-278">若命令按鍵已由控制項處理，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-278"><see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-279">新 4.6.1。</span><span class="sxs-lookup"><span data-stu-id="33fb8-279">New in 4.6.1.</span></span> <span data-ttu-id="33fb8-280">在舊版中，在 CTRL-A 快速鍵<xref:System.Windows.Forms.TextBox>無法選取所有文字時<xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>並<xref:System.Windows.Forms.TextBox.Multiline%2A>屬性都設定為`true.`。</span><span class="sxs-lookup"><span data-stu-id="33fb8-280">In previous versions, the  Ctrl-A shortcut key in a <xref:System.Windows.Forms.TextBox> failed to select all text when the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> and <xref:System.Windows.Forms.TextBox.Multiline%2A> properties were both set to `true.`.</span></span> <span data-ttu-id="33fb8-281">這個方法可讓 CTRL-A 攠摝坫選取所有文字時<xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>和<xref:System.Windows.Forms.TextBox.Multiline%2A>屬性都設為 `true.`</span><span class="sxs-lookup"><span data-stu-id="33fb8-281">This method enables the Ctrl-A shortcut key to select all text when the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> and <xref:System.Windows.Forms.TextBox.Multiline%2A> properties are both set to `true.`</span></span>  
  
 <span data-ttu-id="33fb8-282">以.NET Framework 版本 4.0 到 4.6 為目標的應用程式可以利用這個方法藉由將下列內容加入`<runtime>`app.config 檔的區段：</span><span class="sxs-lookup"><span data-stu-id="33fb8-282">Applications targeting .NET Framework versions 4.0 through 4.6 can take advantage of this method by adding the following to the `<runtime>` section of the app.config file:</span></span>  
  
```xml  
<AppContextSwitchOverrides value = "Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />  
```  
  
 <span data-ttu-id="33fb8-283">應用程式目標設為.NET framework 4.6.1 或更新版本可以藉由新增下列內容來選擇退出此行為`<runtime>`app.config 檔的區段：</span><span class="sxs-lookup"><span data-stu-id="33fb8-283">Applications targeting .NET Framework versions 4.6.1 or newer can opt out of this behavior by adding the following to the `<runtime>` section of the app.config file:</span></span>  
  
```xml  
<AppContextSwitchOverrides value = "Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=true" />  
```  
  
> [!NOTE]
>  <span data-ttu-id="33fb8-284">如果 app.config 檔案已經包含`AppContextSwitchOverrides`機碼，請合併現有的索引鍵的新索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-284">If the app.config file already contains an `AppContextSwitchOverrides` key, merge the new key value into the existing key.</span></span> <span data-ttu-id="33fb8-285">例如， `<AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />` 。</span><span class="sxs-lookup"><span data-stu-id="33fb8-285">For example, `<AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="33fb8-286">操作與 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="33fb8-286">for operating with unmanaged code.</span></span> <span data-ttu-id="33fb8-287">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="33fb8-287">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ScrollBars ScrollBars { System::Windows::Forms::ScrollBars get(); void set(System::Windows::Forms::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.ScrollBars with get, set" Usage="System.Windows.Forms.TextBox.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-288">取得或設定捲軸這應該會出現在多行<see cref="T:System.Windows.Forms.TextBox" />控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-288">Gets or sets which scroll bars should appear in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="33fb8-289">其中一個<see cref="T:System.Windows.Forms.ScrollBars" />列舉值，指出是否多行<see cref="T:System.Windows.Forms.TextBox" />控制項是顯示為沒有捲軸、 水平捲軸、 垂直捲軸，或兩者。</span><span class="sxs-lookup"><span data-stu-id="33fb8-289">One of the <see cref="T:System.Windows.Forms.ScrollBars" /> enumeration values that indicates whether a multiline <see cref="T:System.Windows.Forms.TextBox" /> control appears with no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both.</span></span> <span data-ttu-id="33fb8-290">預設為 <see langword="ScrollBars.None" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-290">The default is <see langword="ScrollBars.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-291">水平捲軸不會顯示如果<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性設定為`true`無關的值、<xref:System.Windows.Forms.TextBox.ScrollBars%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-291">Horizontal scroll bars will not be shown if the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, regardless of the value of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-292">下列程式碼範例會建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-292">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="33fb8-293">此範例也會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，並<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行<xref:System.Windows.Forms.TextBox>適合用來建立文字文件的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-293">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline <xref:System.Windows.Forms.TextBox> control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.ScrollBars Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.ScrollBars Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.ScrollBars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="33fb8-294">值不是有效的列舉值的範圍內，這個值已指派給屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-294">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public override int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-295">取得或設定在文字方塊可編輯部分中選取的字元數。</span><span class="sxs-lookup"><span data-stu-id="33fb8-295">Gets or sets the number of characters selected in the editable portion of the text box.</span></span></summary>
        <value><span data-ttu-id="33fb8-296">在 [文字] 方塊中選取的字元數。</span><span class="sxs-lookup"><span data-stu-id="33fb8-296">The number of characters selected in the text box.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-297">取得或設定這個控制項的相關文字。</span><span class="sxs-lookup"><span data-stu-id="33fb8-297">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="33fb8-298">與這個控制項關聯的文字。</span><span class="sxs-lookup"><span data-stu-id="33fb8-298">The text associated with this control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment TextAlign { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.TextBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-299">取得或設定文字中的對齊方式<see cref="T:System.Windows.Forms.TextBox" />控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-299">Gets or sets how text is aligned in a <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="33fb8-300">其中一個<see cref="T:System.Windows.Forms.HorizontalAlignment" />列舉值，指定控制項中文字的對齊方式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-300">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> enumeration values that specifies how text is aligned in the control.</span></span> <span data-ttu-id="33fb8-301">預設為 <see langword="HorizontalAlignment.Left" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-301">The default is <see langword="HorizontalAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-302">您可以使用這個屬性來對齊內的文字<xref:System.Windows.Forms.TextBox>以符合您的表單上的文字版面配置。</span><span class="sxs-lookup"><span data-stu-id="33fb8-302">You can use this property to align the text within a <xref:System.Windows.Forms.TextBox> to match the layout of text on your form.</span></span> <span data-ttu-id="33fb8-303">例如，如果您的控制項全都位於表單右邊，您可以設定<xref:System.Windows.Forms.Label.TextAlign%2A>屬性設`HorizontalAlignment.Right`，並將對齊文字，而不是預設值靠左對齊控制項的右側。</span><span class="sxs-lookup"><span data-stu-id="33fb8-303">For example, if your controls are all located on the right side of the form, you can set the <xref:System.Windows.Forms.Label.TextAlign%2A> property to `HorizontalAlignment.Right`, and the text will be aligned with the right side of the control instead of the default left alignment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-304">下列程式碼範例會建立<xref:System.Windows.Forms.TextBox>用來接受密碼的控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-304">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="33fb8-305">這個範例會使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>屬性來變更類型的所有字元小寫字母和<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>將密碼長度限制為八個字元的屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-305">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase, and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="33fb8-306">此範例也會使用<xref:System.Windows.Forms.TextBox.TextAlign%2A>置中的密碼屬性<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="33fb8-306">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="33fb8-307">值不是有效的列舉值的範圍內，這個值已指派給屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-307">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBox.TextAlignChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextAlignChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextAlignChanged;" />
      <MemberSignature Language="F#" Value="member this.TextAlignChanged : EventHandler " Usage="member this.TextAlignChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-308">發生於 <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> 屬性的值已變更時。</span><span class="sxs-lookup"><span data-stu-id="33fb8-308">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-309">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="33fb8-309">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33fb8-310">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="33fb8-310">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="33fb8-311">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBox.TextAlignChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-311">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBox.TextAlignChanged> event.</span></span> <span data-ttu-id="33fb8-312">當事件發生，並可協助您在偵錯時，您了解此報告可協助。</span><span class="sxs-lookup"><span data-stu-id="33fb8-312">This report helps you find out when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="33fb8-313">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="33fb8-313">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="33fb8-314">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.TextBox>名為`TextBox1`。</span><span class="sxs-lookup"><span data-stu-id="33fb8-314">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="33fb8-315">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.TextBox.TextAlignChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-315">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBox.TextAlignChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#249](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#249)]
 [!code-vb[System.Windows.Forms.EventExamples#249](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#249)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.TextBox.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="UseSystemPasswordChar">
      <MemberSignature Language="C#" Value="public bool UseSystemPasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.UseSystemPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemPasswordChar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemPasswordChar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSystemPasswordChar : bool with get, set" Usage="System.Windows.Forms.TextBox.UseSystemPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33fb8-316">取得或設定值，指出是否在文字<see cref="T:System.Windows.Forms.TextBox" />控制項應顯示為預設密碼字元。</span><span class="sxs-lookup"><span data-stu-id="33fb8-316">Gets or sets a value indicating whether the text in the <see cref="T:System.Windows.Forms.TextBox" /> control should appear as the default password character.</span></span></summary>
        <value><span data-ttu-id="33fb8-317"><see langword="true" /> 如果中的文字<see cref="T:System.Windows.Forms.TextBox" />控制項應該顯示為預設密碼字元，否則<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33fb8-317"><see langword="true" /> if the text in the <see cref="T:System.Windows.Forms.TextBox" /> control should appear as the default password character; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33fb8-318"><xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>屬性的優先順序高於<xref:System.Windows.Forms.TextBox.PasswordChar%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="33fb8-318">The <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> property has precedence over the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span> <span data-ttu-id="33fb8-319">每當<xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>設定為`true`，預設系統密碼字元，並設定任何字元<xref:System.Windows.Forms.TextBox.PasswordChar%2A>會被忽略。</span><span class="sxs-lookup"><span data-stu-id="33fb8-319">Whenever the <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> is set to `true`, the default system password character is used and any character set by <xref:System.Windows.Forms.TextBox.PasswordChar%2A> is ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33fb8-320">當<xref:System.Windows.Forms.TextBox>處於密碼模式，因為<xref:System.Windows.Forms.TextBox.PasswordChar%2A>， <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>，或<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>會`true`，則<xref:System.Windows.Forms.TextBox>目前為限制模式。</span><span class="sxs-lookup"><span data-stu-id="33fb8-320">When the <xref:System.Windows.Forms.TextBox> is in password mode because <xref:System.Windows.Forms.TextBox.PasswordChar%2A>, <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>, or <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is `true`, the <xref:System.Windows.Forms.TextBox> is in restricted mode.</span></span> <span data-ttu-id="33fb8-321">在此模式中，<xref:System.Windows.Forms.ImeMode>已停用，但目前<xref:System.Windows.Forms.ImeMode>快取，以便可以還原如果<xref:System.Windows.Forms.TextBox>萬一不受限制。</span><span class="sxs-lookup"><span data-stu-id="33fb8-321">In this mode, the <xref:System.Windows.Forms.ImeMode> is disabled, but the current <xref:System.Windows.Forms.ImeMode> is cached so that it can be restored if the <xref:System.Windows.Forms.TextBox> ever becomes unrestricted.</span></span> <span data-ttu-id="33fb8-322">切換<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>是常見的案例。</span><span class="sxs-lookup"><span data-stu-id="33fb8-322">Toggling the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is a common scenario.</span></span> <span data-ttu-id="33fb8-323"><xref:System.Windows.Forms.ImeMode>時的控制項是在受限制的模式是加上陰影。</span><span class="sxs-lookup"><span data-stu-id="33fb8-323">The <xref:System.Windows.Forms.ImeMode> is shadowed while the control is in restricted mode.</span></span> <span data-ttu-id="33fb8-324">從設計工具的觀點來看，<xref:System.Windows.Forms.ImeMode>所顯示的值是實際的值。</span><span class="sxs-lookup"><span data-stu-id="33fb8-324">From the designer perspective, the <xref:System.Windows.Forms.ImeMode> value shown is the actual value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="33fb8-325">Windows 訊息物件。</span><span class="sxs-lookup"><span data-stu-id="33fb8-325">A Windows Message object.</span></span></param>
        <summary><span data-ttu-id="33fb8-326">處理 Windows 訊息。</span><span class="sxs-lookup"><span data-stu-id="33fb8-326">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>