<Type Name="TextBox" FullName="System.Windows.Forms.TextBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c781ba2c48d47bfc8148e34a5813b4a9c9e0568" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36513472" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dc063-101">表示 Windows 文字方塊控制項。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc063-101">Represents a Windows text box control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-102">與<xref:System.Windows.Forms.TextBox>控制項，使用者也可以在應用程式中輸入文字。</span><span class="sxs-lookup"><span data-stu-id="dc063-102">With the <xref:System.Windows.Forms.TextBox> control, the user can enter text in an application.</span></span> <span data-ttu-id="dc063-103">這個控制項具有標準 Windows 文字方塊控制項，包括多行編輯與密碼字元遮罩中找不到的其他功能。</span><span class="sxs-lookup"><span data-stu-id="dc063-103">This control has additional functionality that is not found in the standard Windows text box control, including multiline editing and password character masking.</span></span>  
  
 <span data-ttu-id="dc063-104">一般而言，<xref:System.Windows.Forms.TextBox>控制項用來顯示，或接受做為輸入，單行文字。</span><span class="sxs-lookup"><span data-stu-id="dc063-104">Typically, a <xref:System.Windows.Forms.TextBox> control is used to display, or accept as input, a single line of text.</span></span> <span data-ttu-id="dc063-105">您可以使用<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>和<xref:System.Windows.Forms.TextBox.ScrollBars%2A>屬性，以啟用多行顯示，或輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="dc063-105">You can use the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBox.ScrollBars%2A> properties to enable multiple lines of text to be displayed or entered.</span></span> <span data-ttu-id="dc063-106">設定<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>和<xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>屬性`true`啟用更多行中的文字操作<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-106">Set the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> and <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> properties to `true` to enable greater text manipulation in a multiline <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc063-107">您必須設定<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性`true`調整的高度<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-107">You must set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true` to adjust the height of the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="dc063-108">您可以設定來調整高度<xref:System.Windows.Forms.Control.Size%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc063-108">You can adjust the height by setting the <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 <span data-ttu-id="dc063-109">您可以限制輸入的文字數量<xref:System.Windows.Forms.TextBox>藉由設定控制<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>屬性設為特定數目的字元。</span><span class="sxs-lookup"><span data-stu-id="dc063-109">You can limit the amount of text entered into a <xref:System.Windows.Forms.TextBox> control by setting the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to a specific number of characters.</span></span> <span data-ttu-id="dc063-110"><xref:System.Windows.Forms.TextBox> 控制項也可用來接受密碼和其他機密資訊。</span><span class="sxs-lookup"><span data-stu-id="dc063-110"><xref:System.Windows.Forms.TextBox> controls can also be used to accept passwords and other sensitive information.</span></span> <span data-ttu-id="dc063-111">您可以使用<xref:System.Windows.Forms.TextBox.PasswordChar%2A>遮罩字元版本的控制項會單行中輸入的屬性。</span><span class="sxs-lookup"><span data-stu-id="dc063-111">You can use the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property to mask characters entered in a single-line version of the control.</span></span> <span data-ttu-id="dc063-112">使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>屬性，讓使用者只輸入大寫、 僅小寫或大寫和小寫字元的組合<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-112">Use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to enable the user to type only uppercase, only lowercase, or a combination of uppercase and lowercase characters into the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="dc063-113">視窗的內容捲動<xref:System.Windows.Forms.TextBox>內控制項的可見區域資料指標 （插入號） 之前，您可以使用<xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc063-113">To scroll the contents of the <xref:System.Windows.Forms.TextBox> until the cursor (caret) is within the visible region of the control, you can use the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method.</span></span> <span data-ttu-id="dc063-114">若要選取文字範圍的文字方塊中，您可以使用<xref:System.Windows.Forms.TextBoxBase.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc063-114">To select a range of text in the text box, you can use the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span>  
  
 <span data-ttu-id="dc063-115">若要限制從輸入中的文字<xref:System.Windows.Forms.TextBox>控制項時，您可以建立事件處理常式<xref:System.Windows.Forms.Control.KeyDown>事件，以驗證輸入控制項中的每個字元。</span><span class="sxs-lookup"><span data-stu-id="dc063-115">To restrict text from being entered in a <xref:System.Windows.Forms.TextBox> control, you can create an event handler for the <xref:System.Windows.Forms.Control.KeyDown> event in order to validate each character entered in the control.</span></span> <span data-ttu-id="dc063-116">您也可以限制資料中的所有項目<xref:System.Windows.Forms.TextBox>藉由設定控制<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="dc063-116">You can also restrict all entry of data in a <xref:System.Windows.Forms.TextBox> control by setting the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc063-117">大部分的功能<xref:System.Windows.Forms.TextBox>控制項都繼承自<xref:System.Windows.Forms.TextBoxBase>類別。</span><span class="sxs-lookup"><span data-stu-id="dc063-117">Most of the functionality of the <xref:System.Windows.Forms.TextBox> control is inherited from the <xref:System.Windows.Forms.TextBoxBase> class.</span></span>  
>   
>  <span data-ttu-id="dc063-118">使用<xref:System.Windows.Forms.TextBox>控制項啟用視覺化樣式會導致不正確處理 surrogate 字型。</span><span class="sxs-lookup"><span data-stu-id="dc063-118">Using the <xref:System.Windows.Forms.TextBox> control with visual styles enabled will cause the incorrect handling of surrogate fonts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-119">下列程式碼範例會建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-119">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="dc063-120">這個範例會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.Control.Dock%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="dc063-120">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.Control.Dock%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-csharp[Classic TextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TextBoxBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc063-121">初始化 <see cref="T:System.Windows.Forms.TextBox" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.TextBox" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-122">父容器控制項定義的色彩和字型設定<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="dc063-122">The parent container control defines the color and font settings for the <xref:System.Windows.Forms.TextBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-123">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.TextBox>控制，並將字串指派給控制項的<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc063-123">The following code example creates a new instance of the <xref:System.Windows.Forms.TextBox> control and assigns a string to the control's <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
 [!code-cpp[Classic TextBox.TextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.TextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.TextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.TextBox Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.TextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.TextBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Windows.Forms.TextBox.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-124">取得或設定值，指出在多行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項中按 ENTER 時，是否會在控制項中建立新行文字或啟動表單的預設按鈕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-124">Gets or sets a value indicating whether pressing ENTER in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control creates a new line of text in the control or activates the default button for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-125">如果 ENTER 鍵在控制項的多行版本中建立新的文字行，則為 <see langword="true" />，如果 ENTER 鍵啟動表單的預設按鈕，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-125">
              <see langword="true" /> if the ENTER key creates a new line of text in a multiline version of the control; <see langword="false" /> if the ENTER key activates the default button for the form.</span>
          </span>
          <span data-ttu-id="dc063-126">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-126">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-127">如果這個屬性的值為`false`，使用者必須按 CTRL + ENTER 在多行中建立新的一行<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-127">If the value of this property is `false`, the user must press CTRL+ENTER to create a new line in a multiline <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="dc063-128">如果沒有任何表單的預設按鈕，ENTER 鍵一律會建立新的一行文字在控制項中，不論這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="dc063-128">If there is no default button for the form, the ENTER key will always create a new line of text in the control, regardless of the value of this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-129">下列程式碼範例會建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-129">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="dc063-130">這個範例會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="dc063-130">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteCustomSource : System.Windows.Forms.AutoCompleteStringCollection with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-131">取得或設定當 <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> 屬性設定為 <see langword="CustomSource" /> 時所使用的自訂 <see cref="T:System.Collections.Specialized.StringCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-131">Gets or sets a custom <see cref="T:System.Collections.Specialized.StringCollection" /> to use when the <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> property is set to <see langword="CustomSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-132">要搭配 <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> 使用的 <see cref="T:System.Collections.Specialized.StringCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-132">A <see cref="T:System.Collections.Specialized.StringCollection" /> to use with <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-133">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>， <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>，和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性來建立<xref:System.Windows.Forms.TextBox>自動完成輸入的字串比較輸入中維護的來源的所有字串的前置詞的前置詞。</span><span class="sxs-lookup"><span data-stu-id="dc063-133">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="dc063-134">這適用於<xref:System.Windows.Forms.TextBox>所在 Url、 地址、 檔案名稱或命令會經常輸入的控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-134">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="dc063-135">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性是選擇性的但是您必須設定<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性`CustomSource`才能使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc063-135">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="dc063-136">您必須使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性放在一起。</span><span class="sxs-lookup"><span data-stu-id="dc063-136">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc063-137">作業系統可能會限制可同時顯示的自訂字串數目。</span><span class="sxs-lookup"><span data-stu-id="dc063-137">The operating system might limit the number of custom strings that it can display at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-138">下列程式碼範例示範如何使用集合做為，自動完成的自訂來源<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-138">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="dc063-139">此範例會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="dc063-139">This example does the following:</span></span>  
  
-   <span data-ttu-id="dc063-140">使用<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性來啟用<xref:System.Windows.Forms.TextBox>控制項來接受自動完成行為的自訂來源。</span><span class="sxs-lookup"><span data-stu-id="dc063-140">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="dc063-141">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性來設定自訂值的清單。</span><span class="sxs-lookup"><span data-stu-id="dc063-141">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="dc063-142">使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>屬性來設定自動完成的候選項目顯示的方式。</span><span class="sxs-lookup"><span data-stu-id="dc063-142">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteMode : System.Windows.Forms.AutoCompleteMode with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-143">取得或設定選項，控制如何在 <see cref="T:System.Windows.Forms.TextBox" /> 中使用自動完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-143">Gets or sets an option that controls how automatic completion works for the <see cref="T:System.Windows.Forms.TextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-144">
            <see cref="T:System.Windows.Forms.AutoCompleteMode" /> 的其中一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-144">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span>
          </span>
          <span data-ttu-id="dc063-145">值如下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-145">The following are the values.</span>
          </span>
          <span data-ttu-id="dc063-146">
            <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" /> 將最可能的候選字串的其餘部分附加至現有的字元，並反白顯示附加的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-146">
              <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" /> Appends the remainder of the most likely candidate string to the existing characters, highlighting the appended characters.</span>
          </span>
          <span data-ttu-id="dc063-147">
            <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" /> 顯示與編輯控制項相關聯的輔助下拉式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-147">
              <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" /> Displays the auxiliary drop-down list associated with the edit control.</span>
          </span>
          <span data-ttu-id="dc063-148">一或多個建議完成字串會填入這個下拉式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-148">This drop-down is populated with one or more suggested completion strings.</span>
          </span>
          <span data-ttu-id="dc063-149">
            <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" /> 將附加兩者<see langword="Suggest" />和<see langword="Append" />選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-149">
              <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" /> Appends both <see langword="Suggest" /> and <see langword="Append" /> options.</span>
          </span>
          <span data-ttu-id="dc063-150">
            <see cref="F:System.Windows.Forms.AutoCompleteMode.None" /> 停用自動完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-150">
              <see cref="F:System.Windows.Forms.AutoCompleteMode.None" /> Disables automatic completion.</span>
          </span>
          <span data-ttu-id="dc063-151">這是預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-151">This is the default.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-152">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>， <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>，和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性來建立<xref:System.Windows.Forms.TextBox>自動完成輸入的字串比較輸入中維護的來源的所有字串的前置詞的前置詞。</span><span class="sxs-lookup"><span data-stu-id="dc063-152">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="dc063-153">這適用於<xref:System.Windows.Forms.TextBox>所在 Url、 地址、 檔案名稱或命令會經常輸入的控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-153">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="dc063-154">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性是選擇性的但是您必須設定<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性`CustomSource`才能使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc063-154">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="dc063-155">您必須使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性放在一起。</span><span class="sxs-lookup"><span data-stu-id="dc063-155">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc063-156">作業系統可能會限制可同時顯示的自訂字串數目。</span><span class="sxs-lookup"><span data-stu-id="dc063-156">The operating system might limit the number of custom strings that it can display at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-157">下列程式碼範例示範如何使用集合做為，自動完成的自訂來源<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-157">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="dc063-158">此範例會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="dc063-158">This example does the following:</span></span>  
  
-   <span data-ttu-id="dc063-159">使用<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性來啟用<xref:System.Windows.Forms.TextBox>控制項來接受自動完成行為的自訂來源。</span><span class="sxs-lookup"><span data-stu-id="dc063-159">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="dc063-160">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性來設定自訂值的清單。</span><span class="sxs-lookup"><span data-stu-id="dc063-160">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="dc063-161">使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>屬性來設定自動完成的候選項目顯示的方式。</span><span class="sxs-lookup"><span data-stu-id="dc063-161">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc063-162">指定值不是 <see cref="T:System.Windows.Forms.AutoCompleteMode" /> 的其中一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-162">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteSource : System.Windows.Forms.AutoCompleteSource with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TextBoxAutoCompleteSourceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-163">取得或設定值，以指定用於自動完成的完整字串來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-163">Gets or sets a value specifying the source of complete strings used for automatic completion.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-164">
            <see cref="T:System.Windows.Forms.AutoCompleteSource" /> 的其中一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-164">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span>
          </span>
          <span data-ttu-id="dc063-165">這些選項包括 <see langword="AllSystemSources" />、<see langword="AllUrl" />、<see langword="FileSystem" />、<see langword="HistoryList" />、<see langword="RecentlyUsedList" />、<see langword="CustomSource" /> 和 <see langword="None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-165">The options are <see langword="AllSystemSources" />, <see langword="AllUrl" />, <see langword="FileSystem" />, <see langword="HistoryList" />, <see langword="RecentlyUsedList" />, <see langword="CustomSource" />, and <see langword="None" />.</span>
          </span>
          <span data-ttu-id="dc063-166">預設值為 <see langword="None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-166">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-167">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>， <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>，和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性來建立<xref:System.Windows.Forms.TextBox>自動完成輸入的字串比較輸入中維護的來源的所有字串的前置詞的前置詞。</span><span class="sxs-lookup"><span data-stu-id="dc063-167">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="dc063-168">這適用於<xref:System.Windows.Forms.TextBox>所在 Url、 地址、 檔案名稱或命令會經常輸入的控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-168">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="dc063-169">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性是選擇性的但是您必須設定<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性`CustomSource`才能使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="dc063-169">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="dc063-170">您必須使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>和<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性放在一起。</span><span class="sxs-lookup"><span data-stu-id="dc063-170">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc063-171"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 在多行上無法運作<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-171"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> does not work on multiline <xref:System.Windows.Forms.TextBox> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc063-172">作業系統可能會限制可以同時顯示的自訂字串數目。</span><span class="sxs-lookup"><span data-stu-id="dc063-172">The operating system might limit the number of custom strings that can be displayed at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-173">下列程式碼範例示範如何使用集合做為，自動完成的自訂來源<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-173">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="dc063-174">此範例會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="dc063-174">This example does the following:</span></span>  
  
-   <span data-ttu-id="dc063-175">使用<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>屬性來啟用<xref:System.Windows.Forms.TextBox>控制項來接受自動完成行為的自訂來源。</span><span class="sxs-lookup"><span data-stu-id="dc063-175">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="dc063-176">使用<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>屬性來設定自訂值的清單。</span><span class="sxs-lookup"><span data-stu-id="dc063-176">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="dc063-177">使用<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>屬性來設定自動完成的候選項目顯示的方式。</span><span class="sxs-lookup"><span data-stu-id="dc063-177">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc063-178">指定值不是 <see cref="T:System.Windows.Forms.AutoCompleteSource" /> 的其中一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-178">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CharacterCasing CharacterCasing { System::Windows::Forms::CharacterCasing get(); void set(System::Windows::Forms::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Forms.CharacterCasing with get, set" Usage="System.Windows.Forms.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-179">取得或設定 <see cref="T:System.Windows.Forms.TextBox" /> 控制項是否在輸入字元時修改字元的大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-179">Gets or sets whether the <see cref="T:System.Windows.Forms.TextBox" /> control modifies the case of characters as they are typed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-180">其中一個 <see cref="T:System.Windows.Forms.CharacterCasing" /> 列舉值，指定 <see cref="T:System.Windows.Forms.TextBox" /> 控制項是否修改字元的大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-180">One of the <see cref="T:System.Windows.Forms.CharacterCasing" /> enumeration values that specifies whether the <see cref="T:System.Windows.Forms.TextBox" /> control modifies the case of characters.</span>
          </span>
          <span data-ttu-id="dc063-181">預設值為 <see langword="CharacterCasing.Normal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-181">The default is <see langword="CharacterCasing.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-182">您可以使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>屬性來變更所需的應用程式的字元的大小寫。</span><span class="sxs-lookup"><span data-stu-id="dc063-182">You can use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change the case of characters as required by your application.</span></span> <span data-ttu-id="dc063-183">例如，您可以變更的所有輸入的字元大小寫<xref:System.Windows.Forms.TextBox>密碼項目為大寫或小寫來強制執行密碼原則所用的控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-183">For example, you could change the case of all characters entered in a <xref:System.Windows.Forms.TextBox> control used for password entry to uppercase or lowercase to enforce a policy for passwords.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-184">下列程式碼範例會建立<xref:System.Windows.Forms.TextBox>用來接受密碼的控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-184">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="dc063-185">這個範例會使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>屬性來變更類型的所有字元大小寫，而<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>屬性，以將密碼長度限制為 8 個字元。</span><span class="sxs-lookup"><span data-stu-id="dc063-185">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase, and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="dc063-186">此範例也會使用<xref:System.Windows.Forms.TextBox.TextAlign%2A>屬性中心中的密碼<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-186">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc063-187">不在列舉型別 (Enumeration) 有效值範圍內的值會指派給這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-187">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-188">建立控制代碼時，取得必要的建立參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-188">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-189">
            <see cref="T:System.Windows.Forms.CreateParams" />，包含建立控制項之控制代碼時所需的建立參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-189">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="textBox.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="dc063-190">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-190">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-191">釋放 <see cref="T:System.Windows.Forms.TextBox" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-191">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.TextBox" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-192">這個方法會呼叫公用`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dc063-192">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="dc063-193">`Dispose` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="dc063-193">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="dc063-194"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="dc063-194"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="dc063-195">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Windows.Forms.TextBox> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="dc063-195">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.TextBox> references.</span></span> <span data-ttu-id="dc063-196">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="dc063-196">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc063-197">
            <para>
              <see langword="Dispose" /> 可以被其他物件呼叫多次。在覆寫<see langword="Dispose(Boolean)" />，請小心不要參考到先前處置之前呼叫中的物件<see langword="Dispose" />。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱 [清理 Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) 上和 [覆寫 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-197">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBox.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="dc063-198">其中一個按鍵的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-198">One of the key's values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-199">判斷指定的按鍵是輸入按鍵還是需要前置處理的特殊按鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-199">Determines whether the specified key is an input key or a special key that requires preprocessing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc063-200">如果指定的按鍵是輸入按鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-200">
              <see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-201"><xref:System.Windows.Forms.TextBox.IsInputKey%2A>方法會傳回`true`時`keyData`包含<xref:System.Windows.Forms.Keys.Return>值和<xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="dc063-201">The <xref:System.Windows.Forms.TextBox.IsInputKey%2A> method returns `true` when `keyData` includes the <xref:System.Windows.Forms.Keys.Return> value and the <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-202">取得或設定值，指出這是否為多行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-202">Gets or sets a value indicating whether this is a multiline <see cref="T:System.Windows.Forms.TextBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-203">如果此控制項為多行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-203">
              <see langword="true" /> if the control is a multiline <see cref="T:System.Windows.Forms.TextBox" /> control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc063-204">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-204">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-205"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 在多行上無法運作<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-205"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> does not work on multiline <xref:System.Windows.Forms.TextBox> controls.</span></span>  
  
 <span data-ttu-id="dc063-206">變更字型時，未顯示您已定義任何縮排。</span><span class="sxs-lookup"><span data-stu-id="dc063-206">When the font is changed, any indentation that you have defined does not appear.</span></span> <span data-ttu-id="dc063-207">若要取得縮排，設定<xref:System.Windows.Forms.TextBox.Multiline%2A>至`true`並覆寫 WM_SETFONT，而不需要呼叫基底類別，以便 SETMARGINS 則不會呼叫。</span><span class="sxs-lookup"><span data-stu-id="dc063-207">To get indentation, set <xref:System.Windows.Forms.TextBox.Multiline%2A> to `true` and override WM_SETFONT without calling the base class so that SETMARGINS is not called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-208">下列程式碼範例會建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-208">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="dc063-209">這個範例會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="dc063-209">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="textBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc063-210">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-210">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-211">引發 <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-211">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-212">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc063-212">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc063-213">如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="dc063-213">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc063-214"><xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="dc063-214">The <xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc063-215">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="dc063-215">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc063-216">
            <para>在覆寫<see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-216">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBox.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc063-217">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-217">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-218">引發 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-218">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-219">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc063-219">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc063-220">如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="dc063-220">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc063-221"><xref:System.Windows.Forms.TextBox.OnFontChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="dc063-221">The <xref:System.Windows.Forms.TextBox.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc063-222">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="dc063-222">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc063-223">
            <para>在覆寫<see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-223">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="textBox.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc063-224">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-224">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-225">引發 <see cref="E:System.Windows.Forms.Control.GotFocus" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-225">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-226">當使用者選取的文字<xref:System.Windows.Forms.TextBox>控制項，控制項儲存選取項目。</span><span class="sxs-lookup"><span data-stu-id="dc063-226">When the user selects text in a <xref:System.Windows.Forms.TextBox> control, the control saves the selection.</span></span> <span data-ttu-id="dc063-227">當<xref:System.Windows.Forms.TextBox>控制項取得焦點，選取項目時相同<xref:System.Windows.Forms.TextBox>失去焦點。</span><span class="sxs-lookup"><span data-stu-id="dc063-227">When a <xref:System.Windows.Forms.TextBox> control gets focus, the selection is the same as when the <xref:System.Windows.Forms.TextBox> loses focus.</span></span> <span data-ttu-id="dc063-228">當<xref:System.Windows.Forms.TextBox>取得焦點放在第一次，、 選取整個文字。</span><span class="sxs-lookup"><span data-stu-id="dc063-228">When the <xref:System.Windows.Forms.TextBox> gets focus for the first time, the entire text is selected.</span></span>  
  
 <span data-ttu-id="dc063-229">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc063-229">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc063-230">如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="dc063-230">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc063-231"><xref:System.Windows.Forms.TextBox.OnGotFocus%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="dc063-231">The <xref:System.Windows.Forms.TextBox.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc063-232">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="dc063-232">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc063-233">
            <para>在覆寫<see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-233">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc063-234">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-234">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-235">引發 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-235">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc063-236">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-236">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-237">引發 <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-237">Raises the <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-238">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc063-238">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc063-239">如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="dc063-239">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc063-240"><xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="dc063-240">The <xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc063-241">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="dc063-241">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc063-242">
            <para>在覆寫<see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-242">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextAlignChanged : EventArgs -&gt; unit&#xA;override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="textBox.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc063-243">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-243">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-244">引發 <see cref="E:System.Windows.Forms.TextBox.TextAlignChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-244">Raises the <see cref="E:System.Windows.Forms.TextBox.TextAlignChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-245">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="dc063-245">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc063-246">如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="dc063-246">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc063-247"><xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="dc063-247">The <xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc063-248">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="dc063-248">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc063-249">
            <para>在覆寫<see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-249">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.TextBox.TextAlignChanged" />
        <altmember cref="P:System.Windows.Forms.TextBox.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.Windows.Forms.TextBox.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('\0')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-250">取得或設定在單行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項中用來遮罩密碼字元的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-250">Gets or sets the character used to mask characters of a password in a single-line <see cref="T:System.Windows.Forms.TextBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-251">用來遮罩在單行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項中已輸入字元的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-251">The character used to mask characters entered in a single-line <see cref="T:System.Windows.Forms.TextBox" /> control.</span>
          </span>
          <span data-ttu-id="dc063-252">如果您不想要控制項在輸入字元時遮罩它們，請設定這個屬性值為 0 (字元值)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-252">Set the value of this property to 0 (character value) if you do not want the control to mask characters as they are typed.</span>
          </span>
          <span data-ttu-id="dc063-253">預設值為 0 (字元值)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-253">Equals 0 (character value) by default.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-254"><xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>屬性的優先順序高於<xref:System.Windows.Forms.TextBox.PasswordChar%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc063-254">The <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> property has precedence over the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span> <span data-ttu-id="dc063-255">每當<xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>設`true`、 使用預設系統密碼字元，以及所設定的任何字元<xref:System.Windows.Forms.TextBox.PasswordChar%2A>會被忽略。</span><span class="sxs-lookup"><span data-stu-id="dc063-255">Whenever the <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> is set to `true`, the default system password character is used and any character set by <xref:System.Windows.Forms.TextBox.PasswordChar%2A> is ignored.</span></span>  
  
 <span data-ttu-id="dc063-256">當<xref:System.Windows.Forms.TextBox.PasswordChar%2A>屬性設定，使用鍵盤在控制項中的剪下和複製動作無法執行。</span><span class="sxs-lookup"><span data-stu-id="dc063-256">When the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property is set, cut and copy actions in the control using the keyboard cannot be performed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc063-257">當<xref:System.Windows.Forms.TextBox>是密碼模式中，因為<xref:System.Windows.Forms.TextBox.PasswordChar%2A>， <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>，或<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>是`true`、<xref:System.Windows.Forms.TextBox>為限制模式。</span><span class="sxs-lookup"><span data-stu-id="dc063-257">When the <xref:System.Windows.Forms.TextBox> is in password mode because <xref:System.Windows.Forms.TextBox.PasswordChar%2A>, <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>, or <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is `true`, the <xref:System.Windows.Forms.TextBox> is in restricted mode.</span></span> <span data-ttu-id="dc063-258">在此模式中，<xref:System.Windows.Forms.ImeMode>已停用，但目前<xref:System.Windows.Forms.ImeMode>快取，因此它可以還原如果<xref:System.Windows.Forms.TextBox>萬一不受限制。</span><span class="sxs-lookup"><span data-stu-id="dc063-258">In this mode, the <xref:System.Windows.Forms.ImeMode> is disabled, but the current <xref:System.Windows.Forms.ImeMode> is cached so that it can be restored if the <xref:System.Windows.Forms.TextBox> ever becomes unrestricted.</span></span> <span data-ttu-id="dc063-259">切換<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>是常見的案例。</span><span class="sxs-lookup"><span data-stu-id="dc063-259">Toggling the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is a common scenario.</span></span> <span data-ttu-id="dc063-260"><xref:System.Windows.Forms.ImeMode>控制項在受限制的模式時，會加上陰影。</span><span class="sxs-lookup"><span data-stu-id="dc063-260">The <xref:System.Windows.Forms.ImeMode> is shadowed while the control is in restricted mode.</span></span> <span data-ttu-id="dc063-261">從設計工具的觀點來看，<xref:System.Windows.Forms.ImeMode>值顯示為實際值。</span><span class="sxs-lookup"><span data-stu-id="dc063-261">From the designer perspective, the <xref:System.Windows.Forms.ImeMode> value shown is the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-262">下列程式碼範例會建立<xref:System.Windows.Forms.TextBox>用來接受密碼的控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-262">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="dc063-263">這個範例會使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>若要變更所有字元的屬性型別為小寫字母和<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>屬性，以將密碼長度限制為 8 個字元。</span><span class="sxs-lookup"><span data-stu-id="dc063-263">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="dc063-264">此範例也會使用<xref:System.Windows.Forms.TextBox.TextAlign%2A>屬性中心中的密碼<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-264">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.Paste(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.Paste : string -&gt; unit" Usage="textBox.Paste text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="dc063-265">要取代的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-265">The text to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-266">將所選文字設為所指定的文字，而不清除復原緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-266">Sets the selected text to the specified text without clearing the undo buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-267">不同於設定<xref:System.Windows.Forms.TextBoxBase.SelectedText%2A>，<xref:System.Windows.Forms.TextBox.Paste%2A>不會影響剪貼簿。</span><span class="sxs-lookup"><span data-stu-id="dc063-267">Unlike setting <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A>, <xref:System.Windows.Forms.TextBox.Paste%2A> does not affect the Clipboard.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBox.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="dc063-268">傳址方式所傳遞的 <see cref="T:System.Windows.Forms.Message" />，表示要處理的視窗訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-268">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="dc063-269">其中一個 <see cref="T:System.Windows.Forms.Keys" /> 值，表示要處理的快速鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-269">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-270">處理命令按鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-270">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc063-271">如果命令鍵已由控制項處理則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-271">
              <see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-272">4.6.1 的新。</span><span class="sxs-lookup"><span data-stu-id="dc063-272">New in 4.6.1.</span></span> <span data-ttu-id="dc063-273">在舊版中的 Ctrl A 快速鍵<xref:System.Windows.Forms.TextBox>無法選取所有文字時<xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>和<xref:System.Windows.Forms.TextBox.Multiline%2A>屬性已設為同時`true.`。</span><span class="sxs-lookup"><span data-stu-id="dc063-273">In previous versions, the  Ctrl-A shortcut key in a <xref:System.Windows.Forms.TextBox> failed to select all text when the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> and <xref:System.Windows.Forms.TextBox.Multiline%2A> properties were both set to `true.`.</span></span> <span data-ttu-id="dc063-274">這個方法可讓 CTRL-A 攠摝坫選取所有文字時<xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>和<xref:System.Windows.Forms.TextBox.Multiline%2A>屬性都設定為 `true.`</span><span class="sxs-lookup"><span data-stu-id="dc063-274">This method enables the Ctrl-A shortcut key to select all text when the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> and <xref:System.Windows.Forms.TextBox.Multiline%2A> properties are both set to `true.`</span></span>  
  
 <span data-ttu-id="dc063-275">以.NET Framework 版本 4.0 到 4.6 為目標的應用程式可以利用此方法加入至下列`<runtime>`app.config 檔的區段：</span><span class="sxs-lookup"><span data-stu-id="dc063-275">Applications targeting .NET Framework versions 4.0 through 4.6 can take advantage of this method by adding the following to the `<runtime>` section of the app.config file:</span></span>  
  
```xml  
<AppContextSwitchOverrides value = "Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />  
```  
  
 <span data-ttu-id="dc063-276">應用程式的目標為.NET framework 4.6.1 或更新版本可以藉由新增下列命令以取消這個行為`<runtime>`app.config 檔的區段：</span><span class="sxs-lookup"><span data-stu-id="dc063-276">Applications targeting .NET Framework versions 4.6.1 or newer can opt out of this behavior by adding the following to the `<runtime>` section of the app.config file:</span></span>  
  
```xml  
<AppContextSwitchOverrides value = "Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=true" />  
```  
  
> [!NOTE]
>  <span data-ttu-id="dc063-277">如果 app.config 檔已經包含`AppContextSwitchOverrides`機碼、 新的金鑰值合併至現有的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="dc063-277">If the app.config file already contains an `AppContextSwitchOverrides` key, merge the new key value into the existing key.</span></span> <span data-ttu-id="dc063-278">例如，`<AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />`。</span><span class="sxs-lookup"><span data-stu-id="dc063-278">For example, `<AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="dc063-279">用於與 unmanaged 程式碼的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-279">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="dc063-280">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-280">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ScrollBars ScrollBars { System::Windows::Forms::ScrollBars get(); void set(System::Windows::Forms::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.ScrollBars with get, set" Usage="System.Windows.Forms.TextBox.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-281">取得或設定在多行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項中應該顯示的捲軸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-281">Gets or sets which scroll bars should appear in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-282">其中一個 <see cref="T:System.Windows.Forms.ScrollBars" /> 列舉值，指出多行 <see cref="T:System.Windows.Forms.TextBox" /> 控制項是顯示為沒有捲軸、有水平捲軸、有垂直捲軸，還是兩者都有。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-282">One of the <see cref="T:System.Windows.Forms.ScrollBars" /> enumeration values that indicates whether a multiline <see cref="T:System.Windows.Forms.TextBox" /> control appears with no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both.</span>
          </span>
          <span data-ttu-id="dc063-283">預設值為 <see langword="ScrollBars.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-283">The default is <see langword="ScrollBars.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-284">水平捲軸不會顯示如果<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性設定為`true`，不論值的<xref:System.Windows.Forms.TextBox.ScrollBars%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc063-284">Horizontal scroll bars will not be shown if the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, regardless of the value of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-285">下列程式碼範例會建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-285">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="dc063-286">此範例也會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行<xref:System.Windows.Forms.TextBox>適用於建立文字文件的控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-286">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline <xref:System.Windows.Forms.TextBox> control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.ScrollBars Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.ScrollBars Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.ScrollBars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc063-287">不在列舉型別 (Enumeration) 有效值範圍內的值會指派給這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-287">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-288">取得或設定這個控制項的相關文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-288">Gets or sets the text associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-289">與這個控制項關聯的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-289">The text associated with this control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment TextAlign { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.TextBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-290">取得或設定在 <see cref="T:System.Windows.Forms.TextBox" /> 控制項中文字的對齊方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-290">Gets or sets how text is aligned in a <see cref="T:System.Windows.Forms.TextBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-291">其中一個 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 列舉值，指出在控制項中文字的對齊方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-291">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> enumeration values that specifies how text is aligned in the control.</span>
          </span>
          <span data-ttu-id="dc063-292">預設值為 <see langword="HorizontalAlignment.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-292">The default is <see langword="HorizontalAlignment.Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-293">您可以使用這個屬性來對齊文字方塊<xref:System.Windows.Forms.TextBox>以符合您的表單上的文字版面配置。</span><span class="sxs-lookup"><span data-stu-id="dc063-293">You can use this property to align the text within a <xref:System.Windows.Forms.TextBox> to match the layout of text on your form.</span></span> <span data-ttu-id="dc063-294">例如，如果您的控制項都位於右側的表單，您可以設定<xref:System.Windows.Forms.Label.TextAlign%2A>屬性`HorizontalAlignment.Right`，和的文字對齊右邊的控制項，而不是預設值靠左對齊。</span><span class="sxs-lookup"><span data-stu-id="dc063-294">For example, if your controls are all located on the right side of the form, you can set the <xref:System.Windows.Forms.Label.TextAlign%2A> property to `HorizontalAlignment.Right`, and the text will be aligned with the right side of the control instead of the default left alignment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-295">下列程式碼範例會建立<xref:System.Windows.Forms.TextBox>用來接受密碼的控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-295">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="dc063-296">這個範例會使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>屬性來變更類型的所有字元大小寫，而<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>屬性，以將密碼長度限制為 8 個字元。</span><span class="sxs-lookup"><span data-stu-id="dc063-296">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase, and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="dc063-297">此範例也會使用<xref:System.Windows.Forms.TextBox.TextAlign%2A>屬性中心中的密碼<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="dc063-297">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc063-298">不在列舉型別 (Enumeration) 有效值範圍內的值會指派給這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-298">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBox.TextAlignChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextAlignChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextAlignChanged;" />
      <MemberSignature Language="F#" Value="member this.TextAlignChanged : EventHandler " Usage="member this.TextAlignChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-299">發生於 <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> 屬性的值已變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-299">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-300">如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="dc063-300">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc063-301">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="dc063-301">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc063-302">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBox.TextAlignChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="dc063-302">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBox.TextAlignChanged> event.</span></span> <span data-ttu-id="dc063-303">此報表會幫助您找出事件發生，可協助您偵錯時。</span><span class="sxs-lookup"><span data-stu-id="dc063-303">This report helps you find out when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc063-304">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>與<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="dc063-304">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc063-305">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.TextBox>名為`TextBox1`。</span><span class="sxs-lookup"><span data-stu-id="dc063-305">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="dc063-306">請確定事件處理常式關聯<xref:System.Windows.Forms.TextBox.TextAlignChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="dc063-306">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBox.TextAlignChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#249](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#249)]
 [!code-vb[System.Windows.Forms.EventExamples#249](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#249)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.TextBox.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="UseSystemPasswordChar">
      <MemberSignature Language="C#" Value="public bool UseSystemPasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.UseSystemPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemPasswordChar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemPasswordChar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSystemPasswordChar : bool with get, set" Usage="System.Windows.Forms.TextBox.UseSystemPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc063-307">取得或設定值，指出在 <see cref="T:System.Windows.Forms.TextBox" /> 控制項中的文字是否應該顯示為預設密碼字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-307">Gets or sets a value indicating whether the text in the <see cref="T:System.Windows.Forms.TextBox" /> control should appear as the default password character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc063-308">如果 <see cref="T:System.Windows.Forms.TextBox" /> 控制項中的文字應顯示為預設的密碼字元，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-308">
              <see langword="true" /> if the text in the <see cref="T:System.Windows.Forms.TextBox" /> control should appear as the default password character; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc063-309"><xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>屬性的優先順序高於<xref:System.Windows.Forms.TextBox.PasswordChar%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dc063-309">The <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> property has precedence over the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span> <span data-ttu-id="dc063-310">每當<xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>設`true`、 使用預設系統密碼字元，以及所設定的任何字元<xref:System.Windows.Forms.TextBox.PasswordChar%2A>會被忽略。</span><span class="sxs-lookup"><span data-stu-id="dc063-310">Whenever the <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> is set to `true`, the default system password character is used and any character set by <xref:System.Windows.Forms.TextBox.PasswordChar%2A> is ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc063-311">當<xref:System.Windows.Forms.TextBox>是密碼模式中，因為<xref:System.Windows.Forms.TextBox.PasswordChar%2A>， <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>，或<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>是`true`、<xref:System.Windows.Forms.TextBox>為限制模式。</span><span class="sxs-lookup"><span data-stu-id="dc063-311">When the <xref:System.Windows.Forms.TextBox> is in password mode because <xref:System.Windows.Forms.TextBox.PasswordChar%2A>, <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>, or <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is `true`, the <xref:System.Windows.Forms.TextBox> is in restricted mode.</span></span> <span data-ttu-id="dc063-312">在此模式中，<xref:System.Windows.Forms.ImeMode>已停用，但目前<xref:System.Windows.Forms.ImeMode>快取，因此它可以還原如果<xref:System.Windows.Forms.TextBox>萬一不受限制。</span><span class="sxs-lookup"><span data-stu-id="dc063-312">In this mode, the <xref:System.Windows.Forms.ImeMode> is disabled, but the current <xref:System.Windows.Forms.ImeMode> is cached so that it can be restored if the <xref:System.Windows.Forms.TextBox> ever becomes unrestricted.</span></span> <span data-ttu-id="dc063-313">切換<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>是常見的案例。</span><span class="sxs-lookup"><span data-stu-id="dc063-313">Toggling the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is a common scenario.</span></span> <span data-ttu-id="dc063-314"><xref:System.Windows.Forms.ImeMode>控制項在受限制的模式時，會加上陰影。</span><span class="sxs-lookup"><span data-stu-id="dc063-314">The <xref:System.Windows.Forms.ImeMode> is shadowed while the control is in restricted mode.</span></span> <span data-ttu-id="dc063-315">從設計工具的觀點來看，<xref:System.Windows.Forms.ImeMode>值顯示為實際值。</span><span class="sxs-lookup"><span data-stu-id="dc063-315">From the designer perspective, the <xref:System.Windows.Forms.ImeMode> value shown is the actual value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="dc063-316">Windows 訊息物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-316">A Windows Message object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc063-317">處理 Windows 訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc063-317">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>