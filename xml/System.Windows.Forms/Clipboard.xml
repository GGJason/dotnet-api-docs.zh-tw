<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d061466ab8c586cfe56b419041cb2c8aad532ba6" /><Meta Name="ms.sourcegitcommit" Value="c902e847cd05ac37d93eca981b0fb009aae0a790" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/28/2018" /><Meta Name="ms.locfileid" Value="52455013" /></Metadata><TypeSignature Language="C#" Value="public sealed class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" />
  <TypeSignature Language="F#" Value="type Clipboard = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供將資料放置於系統，以及從系統剪貼簿擷取資料的方法。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得一份預先定義的格式，以搭配<xref:System.Windows.Forms.Clipboard>類別，請參閱<xref:System.Windows.Forms.DataFormats>類別。  
  
 呼叫<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>資料放入剪貼簿，並取代它目前的內容。 若要將資料永續性複本放在剪貼簿上，設定`copy`參數來`true`。  
  
> [!NOTE]
>  若要將資料放在剪貼簿以多種格式，使用<xref:System.Windows.Forms.DataObject>類別或<xref:System.Windows.Forms.IDataObject>實作。 將資料放到最大可能目標的應用程式，其格式需求，您可能不知道，可以成功擷取的資料以多種格式剪貼簿上。  
  
 呼叫<xref:System.Windows.Forms.Clipboard.GetDataObject%2A>從剪貼簿擷取資料。 資料以實作的物件傳回<xref:System.Windows.Forms.IDataObject>介面。 使用指定的方法<xref:System.Windows.Forms.IDataObject>中的欄位和<xref:System.Windows.Forms.DataFormats>從物件擷取資料。 如果您不知道您所擷取之資料的格式，呼叫<xref:System.Windows.Forms.IDataObject.GetFormats%2A>方法的<xref:System.Windows.Forms.IDataObject>介面，以取得一份所有格式的資料會儲存在。 然後呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>方法的<xref:System.Windows.Forms.IDataObject>介面，並指定您的應用程式可以使用的格式。  
  
 在  [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]，則<xref:System.Windows.Forms.Clipboard>類別會提供額外的方法，讓您輕鬆地使用系統剪貼簿。 呼叫<xref:System.Windows.Forms.Clipboard.Clear%2A>從剪貼簿移除所有資料的方法。 若要加入剪貼簿中的特定格式的資料，若要取代現有的資料，呼叫適當`Set`*格式*方法，例如<xref:System.Windows.Forms.Clipboard.SetText%2A>，或呼叫<xref:System.Windows.Forms.Clipboard.SetData%2A>方法，以指定的格式。 若要從剪貼簿中擷取特定格式的資料，請先呼叫適當`Contains`*格式*方法 (例如<xref:System.Windows.Forms.Clipboard.ContainsText%2A>) 方法來判斷 [剪貼簿] 是否包含資料的格式，然後再呼叫適當`Get`*格式*方法 (例如<xref:System.Windows.Forms.Clipboard.GetText%2A>) 來擷取資料，如果剪貼簿包含它。 若要在這些作業中指定的格式，呼叫<xref:System.Windows.Forms.Clipboard.ContainsData%2A>和<xref:System.Windows.Forms.Clipboard.GetData%2A>方法改為。  
  
> [!NOTE]
>  所有以 Windows 為基礎的應用程式會共用系統剪貼簿，因此當您切換到另一個應用程式內容可能會有所變更。  
>   
>  物件必須可序列化，才能放在剪貼簿。 如果您將不可序列化物件傳遞至剪貼簿方法時，此方法將會失敗而不擲回例外狀況。 請參閱<xref:System.Runtime.Serialization>如需有關序列化。 如果您的目標應用程式需要非常特定的資料格式，在序列化程序中的資料加入標頭可能會導致應用程式無法辨識您的資料。 若要保留您的資料格式，將資料做為<xref:System.Byte>陣列<xref:System.IO.MemoryStream>，並傳遞<xref:System.IO.MemoryStream>到<xref:System.Windows.Forms.DataObject.SetData%2A>方法。  
>   
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
>   
>  使用剪貼簿的中繼檔格式時，可能需要特殊考量。 由於目前的實作限制<xref:System.Windows.Forms.DataObject>類別，.NET Framework 所使用的中繼檔格式可能無法辨識的應用程式使用較舊的中繼檔格式。 在此情況下，您必須使用 Win32 剪貼簿應用程式開發介面 (Api) 在互通。
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Windows.Forms.Clipboard>將資料放在與系統剪貼簿擷取它的方法。 此程式碼假設`button1`， `button2`， `textBox1`，和`textBox2`已建立並放置在表單上。  
  
 `button1_Click`方法呼叫<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>接受選取的文字從文字方塊中，並將它放在系統剪貼簿上。  
  
 `button2_Click`方法呼叫<xref:System.Windows.Forms.Clipboard.GetDataObject%2A>從系統剪貼簿擷取資料。 程式碼會使用<xref:System.Windows.Forms.IDataObject>並<xref:System.Windows.Forms.DataFormats>擷取傳回的資料，並顯示在資料`textBox2`。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <related type="Article" href="https://msdn.microsoft.com/library/15abda8b-0527-47c7-aedb-77ab595f2bf1">Windows Form 中的其他安全性考量</related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Windows.Forms.Clipboard.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從剪貼簿中移除所有資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為多個處理序都共用剪貼簿，則呼叫這個方法可能會對這些處理序的影響。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">清除系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="static member ContainsAudio : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出剪貼簿上是否有 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式的資料。</summary>
        <returns>如果剪貼簿上有音訊資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來判斷 剪貼簿是否包含音訊資料，然後才能擷取它與<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ContainsData : string -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">要尋找的資料格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <summary>指出剪貼簿上是否有指定格式的資料，或是可以轉換為該格式的資料。</summary>
        <returns>如果剪貼簿上有指定 <paramref name="format" /> 的資料，或是可轉換為該格式的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataFormats>類別包含您可以使用這個方法的預先定義的格式名稱。  
  
 使用此方法來判斷 剪貼簿是否包含指定的格式或相容的格式中的資料，然後才能擷取它與<xref:System.Windows.Forms.Clipboard.GetData%2A>方法。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果儲存時指定，允許的轉換，而且如果所要求的格式與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
>   
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="static member ContainsFileDropList : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出剪貼簿上是否有 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 格式的資料，或是可以轉換為該格式的資料。</summary>
        <returns>如果剪貼簿上有檔案下拉清單，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檔案下拉清單是包含檔案的路徑資訊的字串集合。  
  
 使用此方法來判斷 [剪貼簿] 是否包含檔案下拉清單，然後再擷取它與<xref:System.Windows.Forms.Clipboard.GetFileDropList%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberSignature Language="F#" Value="static member ContainsImage : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出剪貼簿上是否有 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 格式的資料，或是可以轉換為該格式的資料。</summary>
        <returns>如果剪貼簿上有影像資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來判斷 [剪貼簿] 是否包含影像資料，然後才能擷取它與<xref:System.Windows.Forms.Clipboard.GetImage%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指出剪貼簿上是否有文字資料。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberSignature Language="F#" Value="static member ContainsText : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出剪貼簿上是否有 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的資料，格式依作業系統而定。</summary>
        <returns>如果剪貼簿上有文字資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會檢查資料是否存在<xref:System.Windows.Forms.TextDataFormat.UnicodeText>格式化[!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]。 否則，這個方法會檢查資料是否存在<xref:System.Windows.Forms.TextDataFormat.Text>格式。  
  
 使用此方法來判斷 [剪貼簿] 是否包含文字資料，然後才能擷取它與<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例示範的多載<xref:System.Windows.Forms.Clipboard.ContainsText%2A>類似於這個多載的方法。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">其中一個 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</param>
        <summary>指出剪貼簿上是否有由所指定 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值代表之格式的文字資料。</summary>
        <returns>如果剪貼簿上有為 <paramref name="format" /> 所指定值的文字資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來判斷 [剪貼簿] 是否包含文字資料，然後才能擷取它與<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="static member GetAudioStream : unit -&gt; System.IO.Stream" Usage="System.Windows.Forms.Clipboard.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從剪貼簿擷取音效串流。</summary>
        <returns>如果剪貼簿不包含任何 <see cref="T:System.IO.Stream" /> 格式的資料，則為包含音訊資料或 <see langword="null" /> 的 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法，以判斷 剪貼簿是否包含音訊資料，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetAudio%2A>方法，將音訊資料加入到剪貼簿。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Windows.Forms.Clipboard.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">要擷取的資料格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <summary>從剪貼簿擷取指定格式的資料。</summary>
        <returns>如果剪貼簿不包含任何指定 <paramref name="format" /> 或可以轉換為該格式的資料，則為代表剪貼簿資料或 <see langword="null" /> 的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Clipboard.ContainsData%2A>方法，以判斷 剪貼簿是否包含指定的格式或相容的格式中的資料，然後再擷取與這個方法。  
  
 如果這個方法在指定的格式中找不到資料，它會嘗試將資料轉換成格式。 如果資料無法轉換成指定的格式，或是儲存資料時自動轉換設定為`false`，這個方法會傳回`null`。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果儲存時指定，允許的轉換，而且如果所要求的格式與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
>   
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetData%2A>方法將資料加入到剪貼簿，以特定格式。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="static member GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.Clipboard.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取目前在系統剪貼簿中的資料。</summary>
        <returns><see cref="T:System.Windows.Forms.IDataObject" />，表示目前在剪貼簿中的資料，或者如果剪貼簿中沒有資料，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從剪貼簿傳回之物件的資料類型可能會不同，因為這個方法會傳回在資料<xref:System.Windows.Forms.IDataObject>。 然後您可以使用的方法<xref:System.Windows.Forms.IDataObject>介面，以擷取其適當的資料型別中的資料。  
  
 這個方法會嘗試取得十倍 100 毫秒的間隔中的資料，並擲回<xref:System.Runtime.InteropServices.ExternalException>如果所有嘗試都都會失敗。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Windows.Forms.Clipboard>將資料放在與系統剪貼簿擷取它的方法。 此程式碼假設`button1`， `button2`， `textBox1`，和`textBox2`已放在表單上。  
  
 `button1_Click`方法呼叫<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>接受選取的文字從文字方塊中，並將它放在系統剪貼簿上。  
  
 `button2_Click`方法呼叫<xref:System.Windows.Forms.Clipboard.GetDataObject%2A>從系統剪貼簿擷取資料。 程式碼會使用<xref:System.Windows.Forms.IDataObject>和<xref:System.Windows.Forms.DataFormats>擷取傳回的資料。 資料會顯示在`textBox2`。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法從剪貼簿擷取資料。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前的執行緒不處於單一執行緒 Apartment (STA) 模式，而且 <see cref="P:System.Windows.Forms.Application.MessageLoop" /> 屬性值為 <see langword="true" />。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="static member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.Clipboard.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從剪貼簿擷取檔名稱的集合。</summary>
        <returns>如果剪貼簿不包含任何 <see cref="T:System.Collections.Specialized.StringCollection" /> 格式或可以轉換為該格式的資料，則為包含檔案名稱或 <see langword="null" /> 的 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檔案下拉清單是包含檔案的路徑資訊的字串集合。  
  
 檔案下拉清單儲存在剪貼簿作為<xref:System.String>陣列。 這個方法會轉換到這個陣列<xref:System.Collections.Specialized.StringCollection>並傳回的集合。  
  
 使用<xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A>方法，以判斷 剪貼簿是否包含檔案下拉清單，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetFileDropList%2A>方法，將檔案下拉清單加入到剪貼簿。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="static member GetImage : unit -&gt; System.Drawing.Image" Usage="System.Windows.Forms.Clipboard.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從剪貼簿擷取影像。</summary>
        <returns>如果剪貼簿不包含任何 <see cref="T:System.Drawing.Image" /> 格式或可以轉換為該格式的資料，則為代表剪貼簿影像資料或 <see langword="null" /> 的 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Clipboard.ContainsImage%2A>方法，以判斷 [剪貼簿] 是否包含影像資料，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetImage%2A>方法，將映像資料加入到剪貼簿。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從剪貼簿擷取文字資料。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="static member GetText : unit -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從剪貼簿擷取 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的文字資料，格式依作業系統而定。</summary>
        <returns>如果剪貼簿不包含 <see cref="F:System.String.Empty" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 格式 (依作業系統而定) 的文字資料，則為剪貼簿文字資料或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回文字資料中的<xref:System.Windows.Forms.TextDataFormat.UnicodeText>格式化[!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]。 否則，這個方法會傳回文字資料中的<xref:System.Windows.Forms.TextDataFormat.Text>格式。  
  
 使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法，以判斷 [剪貼簿] 是否包含文字資料，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetText%2A>方法將文字資料加入到剪貼簿。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例示範的多載<xref:System.Windows.Forms.Clipboard.GetText%2A>類似於這個多載的方法。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">其中一個 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</param>
        <summary>從剪貼簿擷取以所指定 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值表示之格式的文字資料。</summary>
        <returns>如果剪貼簿不包含所指定格式的資料，則為剪貼簿文字資料或 <see cref="F:System.String.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法，以判斷 [剪貼簿] 是否包含文字資料，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.Clipboard.SetText%2A>方法將文字資料加入到剪貼簿。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">在系統剪貼簿存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪貼簿，然後加入 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式的資料，取代現有資料。</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="static member SetAudio : byte[] -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes"><see cref="T:System.Byte" /> 陣列，包含音訊資料。</param>
        <summary>清除剪貼簿，並將 <see cref="T:System.Byte" /> 陣列轉換為 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />，然後再以 <see cref="T:System.IO.Stream" /> 格式加入至剪貼簿。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從剪貼簿擷取音訊資料，請先使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法來判斷剪貼簿是否包含音訊資料，然後再擷取它與<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例示範的多載<xref:System.Windows.Forms.Clipboard.SetAudio%2A>類似於這個多載的方法。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioBytes" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">將音訊資料新增到系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="static member SetAudio : System.IO.Stream -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream"><see cref="T:System.IO.Stream" />，包含音訊資料。</param>
        <summary>清除剪貼簿，然後加入 <see cref="T:System.IO.Stream" /> 格式的 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從剪貼簿擷取音訊資料，請先使用<xref:System.Windows.Forms.Clipboard.ContainsAudio%2A>方法來判斷剪貼簿是否包含音訊資料，然後再擷取它與<xref:System.Windows.Forms.Clipboard.GetAudioStream%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioStream" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">將音訊資料新增到系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">要設定的資料格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <param name="data"><see cref="T:System.Object" />，代表要加入的資料。</param>
        <summary>清除剪貼簿，然後加入指定之格式的資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您不知道目標應用程式的格式，您可以使用此方法的多個格式來儲存資料。  
  
 使用這個方法儲存的資料可以轉換成相容的格式，並在擷取時。  
  
 若要從以特定格式剪貼簿擷取資料，先使用<xref:System.Windows.Forms.Clipboard.ContainsData%2A>方法來判斷剪貼簿是否包含以該格式的資料，然後再擷取它與<xref:System.Windows.Forms.Clipboard.GetData%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">任何類型或格式的資料加入到系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪貼簿，然後將資料加入其中。</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">要放置到剪貼簿上的資料。</param>
        <summary>清除剪貼簿，然後將非永續性資料置於其中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式結束時，資料會從系統剪貼簿中刪除。  
  
 這個方法會嘗試設定在 100 毫秒的間隔，十倍的資料，並擲回<xref:System.Runtime.InteropServices.ExternalException>如果所有嘗試都都會失敗。  
  
> [!NOTE]
>  物件必須可序列化，才能放在剪貼簿。 如果您將不可序列化物件傳遞給這個方法時，它將會失敗而不擲回例外狀況。 請參閱<xref:System.Runtime.Serialization>如需有關序列化。  
>   
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Windows.Forms.Clipboard.SetDataObject%2A>放置到系統剪貼簿的非持續性的文字資料。 在 `button1_Click`方法中，選取的文字會從複製`textBox1`並貼上剪貼簿上。 在 `button2_Click`方法中，資訊會從剪貼簿擷取並顯示在`textBox2`。 此程式碼假設`button1`， `button2`， `textBox1`，和`textBox2`已建立並在表單上。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">資料無法放置到剪貼簿上。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 的值是 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">任何類型或格式的資料加入到系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">要放置到剪貼簿上的資料。</param>
        <param name="copy">如果您要在這個應用程式結束之後，將資料保留在剪貼簿上，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>清除 [剪貼簿]，然後將資料放置在 [剪貼簿] 上，並指定在應用程式結束之後，是否應保留資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`copy`參數是`false`，應用程式結束時，會從系統剪貼簿刪除資料。  
  
 這個方法會嘗試設定在 100 毫秒的間隔，十倍的資料，並擲回<xref:System.Runtime.InteropServices.ExternalException>如果所有嘗試都都會失敗。  
  
> [!NOTE]
>  物件必須可序列化，才能放在剪貼簿。 如果您將不可序列化物件傳遞給這個方法時，它將會失敗而不擲回例外狀況。 請參閱<xref:System.Runtime.Serialization>如需有關序列化。  
>   
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列方法會執行應用程式中。 就會在系統剪貼簿上的文字方塊中將選取的文字資料永續性複本。 此程式碼假設`button1`， `textBox1`，和`textBox2`已建立並在表單上。  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 在不同的應用程式中，下列方法從系統剪貼簿擷取文字並貼到文字`textBox2`。 此程式碼假設`button2`和`textBox2`已建立並在表單上。  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">資料無法放置到剪貼簿上。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 的值是 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">任何類型或格式的資料加入到系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool * int * int -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy, retryTimes, retryDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
        <Parameter Name="retryTimes" Type="System.Int32" />
        <Parameter Name="retryDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">要放置到剪貼簿上的資料。</param>
        <param name="copy">如果您要在這個應用程式結束之後，將資料保留在剪貼簿上，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="retryTimes">嘗試將資料放置於剪貼簿上的次數。</param>
        <param name="retryDelay">嘗試之間暫停的毫秒數。</param>
        <summary>清除 [剪貼簿]，然後嘗試以指定的次數將資料放置於 [剪貼簿] 上，而且在兩次嘗試之間採用指定的延遲，同時可以選擇在應用程式結束以後，將資料保留在 [剪貼簿] 上。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將資料加入至剪貼簿可以偶爾會失敗如果剪貼簿正忙著處理另一個執行緒或應用程式。 此方法相當實用，若要解決此問題在環境中經常使用剪貼簿。  
  
 如果`copy`參數是`false`，應用程式結束時，會從系統剪貼簿刪除資料。  
  
> [!NOTE]
>  物件必須可序列化，才能放在剪貼簿。 如果您將不可序列化物件傳遞給這個方法時，它將會失敗而不擲回例外狀況。 請參閱<xref:System.Runtime.Serialization>如需有關序列化。  
>   
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="retryTimes" /> 小於零。  
  
-或- 
 <paramref name="retryDelay" /> 小於零。</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">資料無法放置到剪貼簿上。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">任何類型或格式的資料加入到系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="static member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths"><see cref="T:System.Collections.Specialized.StringCollection" />，其中包含檔案名稱。</param>
        <summary>清除剪貼簿，然後加入 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 格式的檔案名稱集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檔案下拉清單是包含檔案的路徑資訊的字串集合。  
  
 檔案下拉清單儲存在剪貼簿作為<xref:System.String>陣列。 這個方法會轉換`filePaths`至<xref:System.String>陣列，再將它新增到剪貼簿。  
  
 若要從剪貼簿擷取檔案下拉清單，請先使用<xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A>方法來判斷剪貼簿是否包含以該格式的資料，然後再擷取它與<xref:System.Windows.Forms.Clipboard.GetFileDropList%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" /> 不包含任何字串。  
  
-或- 
<paramref name="filePaths" /> 內至少其中一個字串為 <see cref="F:System.String.Empty" />，僅包含空格、包含一個或多個由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定義的無效字元、為 <see langword="null" />、包含冒號 (:)，或是超過系統定義的最大長度。  
  
如需詳細資訊，請參閱 <see cref="P:System.Exception.InnerException" /> 的 <see cref="T:System.ArgumentException" /> 屬性。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">新增資料<see cref="F:System.Windows.Forms.DataFormats.FileDrop" />系統剪貼簿格式。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">檔案系統存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member SetImage : System.Drawing.Image -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">要加入剪貼簿的 <see cref="T:System.Drawing.Image" />。</param>
        <summary>清除剪貼簿，然後加入 <see cref="T:System.Drawing.Image" /> 格式的 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從剪貼簿擷取影像資料，請先使用<xref:System.Windows.Forms.Clipboard.ContainsImage%2A>方法，以判斷 [剪貼簿] 是否包含影像資料，然後才能擷取它與<xref:System.Windows.Forms.Clipboard.GetImage%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">新增資料<see cref="F:System.Windows.Forms.DataFormats.Bitmap" />系統剪貼簿格式。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪貼簿，然後將文字資料加入其中。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member SetText : string -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要加入至剪貼簿的文字。</param>
        <summary>清除剪貼簿，然後依作業系統而定加入 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的文字資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會將文字資料中的<xref:System.Windows.Forms.TextDataFormat.UnicodeText>格式化[!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)]和[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]。 否則，此方法會將文字資料中的<xref:System.Windows.Forms.TextDataFormat.Text>格式。  
  
 若要從剪貼簿擷取文字資料，請先使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法，以判斷 [剪貼簿] 是否包含文字資料，然後才能擷取它與<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例示範的多載<xref:System.Windows.Forms.Clipboard.SetText%2A>類似於這個多載的方法。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> 為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">將文字資料加入到系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="text">要加入至剪貼簿的文字。</param>
        <param name="format">其中一個 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</param>
        <summary>清除剪貼簿，然後加入指定之 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值所表示格式的文字資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從剪貼簿擷取文字資料，請先使用<xref:System.Windows.Forms.Clipboard.ContainsText%2A>方法，以判斷 [剪貼簿] 是否包含文字資料，然後才能擷取它與<xref:System.Windows.Forms.Clipboard.GetText%2A>方法。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>類別只能設定為單一執行緒 apartment (STA) 模式的執行緒中。 若要使用這個類別，請確認您`Main`方法會標示<xref:System.STAThreadAttribute>屬性。  
  
   
  
## Examples  
 下列範例會示範這個成員。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">無法清除剪貼簿。 這通常在剪貼簿由另一個處理序使用時發生。</exception>
        <exception cref="T:System.Threading.ThreadStateException">目前執行緒 (Thread) 不是在單一執行緒 Apartment (STA) 模式。 將 <see cref="T:System.STAThreadAttribute" /> 加入至應用程式的 <see langword="Main" /> 方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> 為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">將文字資料加入到系統剪貼簿。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>