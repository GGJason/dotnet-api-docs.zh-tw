<Type Name="TreeNode" FullName="System.Windows.Forms.TreeNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00cc797d09168b7644056f5a641b7cfa5b07abac" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37564028" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TreeNode extends System.MarshalByRefObject implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : MarshalByRefObject, ICloneable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.TreeView" /> 的節點。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Nodes%2A>集合會保存所有的子系<xref:System.Windows.Forms.TreeNode>指派給目前物件<xref:System.Windows.Forms.TreeNode>。 您可以新增、 移除或複製<xref:System.Windows.Forms.TreeNode>; 當您這樣做，所有的子樹狀結構節點新增、 移除或複製。 每個<xref:System.Windows.Forms.TreeNode>可以包含其他集合<xref:System.Windows.Forms.TreeNode>物件。 這可讓難以判斷在<xref:System.Windows.Forms.TreeView>時逐一查看集合。 若要判斷您在樹狀結構中的位置，請使用<xref:System.Windows.Forms.TreeNode.FullPath%2A>屬性。 <xref:System.Windows.Forms.TreeNode.FullPath%2A>可以使用剖析字串<xref:System.Windows.Forms.TreeView.PathSeparator%2A>字串值，以判斷 where<xref:System.Windows.Forms.TreeNode>標籤開始和結束。  
  
 <xref:System.Windows.Forms.TreeNode>標籤設定藉由設定<xref:System.Windows.Forms.TreeNode.Text%2A>屬性明確。 替代方法是建立樹狀節點使用其中一種<xref:System.Windows.Forms.TreeNode.%23ctor%2A>表示的字串參數的建構函式<xref:System.Windows.Forms.TreeNode.Text%2A>屬性。 標籤會顯示旁<xref:System.Windows.Forms.TreeNode>映像，如果顯示的其中一個。  
  
 若要顯示的樹狀節點旁的映像，請指派<xref:System.Windows.Forms.ImageList>來<xref:System.Windows.Forms.TreeView.ImageList%2A>屬性之父代<xref:System.Windows.Forms.TreeView>控制項，並指派<xref:System.Drawing.Image>藉由參考中的其索引值<xref:System.Windows.Forms.ImageList>屬性。 設定<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>的索引值的屬性<xref:System.Drawing.Image>您想要顯示當<xref:System.Windows.Forms.TreeNode>處於未選取狀態。 同樣地，設定<xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A>的索引值的屬性<xref:System.Drawing.Image>您想要顯示當<xref:System.Windows.Forms.TreeNode>已選取。  
  
 選取特定的樹狀節點，然後逐一查看<xref:System.Windows.Forms.TreeView.Nodes%2A>集合可藉由使用下列屬性值： <xref:System.Windows.Forms.TreeNode.FirstNode%2A>， <xref:System.Windows.Forms.TreeNode.LastNode%2A>， <xref:System.Windows.Forms.TreeNode.NextNode%2A>， <xref:System.Windows.Forms.TreeNode.PrevNode%2A>， <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>， <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>。 指派<xref:System.Windows.Forms.TreeNode>傳回的其中一個先前提到的屬性，以<xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>屬性，以選取該樹狀結構節點<xref:System.Windows.Forms.TreeView>控制項。  
  
 可以展開樹狀節點，以顯示子樹狀節點的下一個層級。 使用者可以展開<xref:System.Windows.Forms.TreeNode>按下加號 （+） 按鈕旁<xref:System.Windows.Forms.TreeNode>，如果其中一個會顯示，或您可以展開<xref:System.Windows.Forms.TreeNode>藉由呼叫<xref:System.Windows.Forms.TreeNode.Expand%2A>方法。 若要展開子樹狀結構節點中的所有層級<xref:System.Windows.Forms.TreeNode.Nodes%2A>集合中，呼叫<xref:System.Windows.Forms.TreeNode.ExpandAll%2A>方法。 您可以摺疊子系<xref:System.Windows.Forms.TreeNode>藉由呼叫層級<xref:System.Windows.Forms.TreeNode.Collapse%2A>方法或使用者可以按減號 （-） 按鈕旁的<xref:System.Windows.Forms.TreeNode>，如果顯示的其中一個。 您也可以呼叫<xref:System.Windows.Forms.TreeNode.Toggle%2A>方法來替代<xref:System.Windows.Forms.TreeNode>展開和摺疊狀態之間。  
  
 樹狀節點，可以選擇顯示核取方塊。 若要顯示核取方塊，將<xref:System.Windows.Forms.TreeView.CheckBoxes%2A>的屬性<xref:System.Windows.Forms.TreeView>至`true`。 <xref:System.Windows.Forms.TreeNode.Checked%2A>屬性設定為`true`為樹狀節點處於選取狀態。  
  
   
  
## Examples  
 下列程式碼範例會顯示客戶資訊<xref:System.Windows.Forms.TreeView>控制項。 根樹狀節點顯示客戶名稱，而子樹狀節點顯示指派給每位客戶的訂單數目。 在此範例中，15 筆訂單會顯示 1,000 個客戶。 重新繪製的<xref:System.Windows.Forms.TreeView>使用隱藏<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>並<xref:System.Windows.Forms.TreeView.EndUpdate%2A>方法，並等候<xref:System.Windows.Forms.Cursor>會顯示時<xref:System.Windows.Forms.TreeView>建立和繪製<xref:System.Windows.Forms.TreeNode>物件。 此範例中，您需要`Customer`物件，可保存集合`Order`物件。 它也需要您已建立的執行個體<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.TreeNode" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.TreeNode" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立將子樹狀節點的根樹狀節點。 每一個子樹狀節點`Customer`物件<xref:System.Collections.ArrayList>每個新增至根樹狀節點，以及子樹狀節點`Order`指派給物件`Customer`物件。 `Customer`物件會指派給<xref:System.Windows.Forms.TreeNode.Tag%2A>屬性，並表示樹狀節點`Customer`物件會顯示與<xref:System.Drawing.Color.Orange%2A>文字。 此範例中，您需要`Customer`並`Order`物件定義，<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>，和<xref:System.Collections.ArrayList>名為`customerArray`包含`Customer`物件。  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">新樹狀節點的 <see cref="P:System.Windows.Forms.TreeNode.Text" /> 標籤。</param>
        <summary>使用指定的標籤文字，初始化 <see cref="T:System.Windows.Forms.TreeNode" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text`參數的值指派給節點的<xref:System.Windows.Forms.TreeNode.Text%2A>屬性並成為樹狀節點標籤。  
  
   
  
## Examples  
 下列程式碼範例會顯示客戶資訊<xref:System.Windows.Forms.TreeView>控制項。 根樹狀節點顯示客戶名稱，而子樹狀節點顯示指派給每位客戶的訂單數目。 在此範例中，15 筆訂單會顯示 1,000 個客戶。 重新繪製的<xref:System.Windows.Forms.TreeView>使用隱藏<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>並<xref:System.Windows.Forms.TreeView.EndUpdate%2A>方法，並等候<xref:System.Windows.Forms.Cursor>會顯示時<xref:System.Windows.Forms.TreeView>建立和繪製<xref:System.Windows.Forms.TreeNode>物件。 此範例中，您需要`Customer`物件，可保存集合`Order`物件。 它也需要您已建立的執行個體<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TreeNode(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">包含還原序列化類別所需資料的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">包含已序列化資料流的來源和目的端的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <summary>使用指定的序列化資訊和內容 (Context)，初始化 <see cref="T:System.Windows.Forms.TreeNode" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">新樹狀節點的 <see cref="P:System.Windows.Forms.TreeNode.Text" /> 標籤。</param>
        <param name="children">子 <see cref="T:System.Windows.Forms.TreeNode" /> 物件的陣列。</param>
        <summary>使用指定的標籤文字和子樹狀節點，初始化 <see cref="T:System.Windows.Forms.TreeNode" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text`參數的值指派給節點的<xref:System.Windows.Forms.TreeNode.Text%2A>屬性並成為樹狀節點標籤。 中所包含的樹狀節點`children`陣列加入至<xref:System.Windows.Forms.TreeNodeCollection>儲存於<xref:System.Windows.Forms.TreeNode.Nodes%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會建立將子樹狀節點的根樹狀節點。 每一個子樹狀節點`Customer`物件<xref:System.Collections.ArrayList>每個新增至根樹狀節點，以及子樹狀節點`Order`指派給物件`Customer`物件。 `Customer`物件會指派給<xref:System.Windows.Forms.TreeNode.Tag%2A>屬性，並表示樹狀節點`Customer`物件會顯示與<xref:System.Drawing.Color.Orange%2A>文字。 此範例中，您需要`Customer`並`Order`物件定義，<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>，和<xref:System.Collections.ArrayList>名為`customerArray`包含`Customer`物件。  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">新樹狀節點的 <see cref="P:System.Windows.Forms.TreeNode.Text" /> 標籤。</param>
        <param name="imageIndex">樹狀節點未選取時顯示的 <see cref="T:System.Drawing.Image" /> 索引值。</param>
        <param name="selectedImageIndex">樹狀節點選取時顯示的 <see cref="T:System.Drawing.Image" /> 索引值。</param>
        <summary>使用指定的標籤文字和當樹狀節點處於選取或未選取狀態時所顯示的影像，初始化 <see cref="T:System.Windows.Forms.TreeNode" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text`參數的值指派給節點的<xref:System.Windows.Forms.TreeNode.Text%2A>屬性並成為樹狀節點標籤。 `imageIndex`並`selectedImageIndex`的值為索引值<xref:System.Drawing.Image>存入<xref:System.Windows.Forms.ImageList>指派給<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType>屬性。 在參照映像`imageIndex`未選取樹狀節點時，會顯示屬性。 同樣地，在參照映像`selectedImageIndex`樹狀節點處於選取狀態時，會顯示屬性。  
  
   
  
## Examples  
 下列程式碼範例會建立並指派<xref:System.Windows.Forms.ImageList>要<xref:System.Windows.Forms.TreeView>控制項並填入<xref:System.Windows.Forms.TreeView>控制與<xref:System.Windows.Forms.TreeNode>物件。 樹狀節點指派從映像<xref:System.Windows.Forms.ImageList>樹狀節點處於選取或取消選取狀態時顯示。 此範例中，您需要<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TreeView>，以及<xref:System.Collections.ArrayList>，其中包含`Customer`物件，每個包含`Order`物件。 它也需要`Customer`和`Order`物件定義。  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">新樹狀節點的 <see cref="P:System.Windows.Forms.TreeNode.Text" /> 標籤。</param>
        <param name="imageIndex">樹狀節點未選取時顯示的 <see cref="T:System.Drawing.Image" /> 索引值。</param>
        <param name="selectedImageIndex">樹狀節點選取時顯示的 <see cref="T:System.Drawing.Image" /> 索引值。</param>
        <param name="children">子 <see cref="T:System.Windows.Forms.TreeNode" /> 物件的陣列。</param>
        <summary>使用指定的標籤文字、子樹狀節點和當樹狀節點處於選取和未選取狀態時所顯示的影像，來初始化 <see cref="T:System.Windows.Forms.TreeNode" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text`參數的值指派給節點的<xref:System.Windows.Forms.TreeNode.Text%2A>屬性並成為樹狀節點標籤。 `imageIndex`並`selectedImageIndex`的值為索引值<xref:System.Drawing.Image>存入<xref:System.Windows.Forms.ImageList>指派給<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType>屬性。 在參照映像`imageIndex`未選取樹狀節點時，會顯示參數。 同樣地，在參照映像`selectedImageIndex`樹狀節點處於選取狀態時，會顯示參數。 中所包含的樹狀節點`children`陣列加入至<xref:System.Windows.Forms.TreeNodeCollection>儲存於<xref:System.Windows.Forms.TreeNode.Nodes%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會建立並指派<xref:System.Windows.Forms.ImageList>要<xref:System.Windows.Forms.TreeView>控制項並填入<xref:System.Windows.Forms.TreeView>控制與<xref:System.Windows.Forms.TreeNode>物件。 樹狀節點指派從映像<xref:System.Windows.Forms.ImageList>樹狀節點處於選取或取消選取狀態時顯示。 此範例中，您需要<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TreeView>，以及<xref:System.Collections.ArrayList>，其中包含`Customer`物件，每個包含`Order`物件。 它也需要`Customer`和`Order`物件定義。  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樹狀節點的背景色彩。</summary>
        <value>樹狀節點的 <see cref="T:System.Drawing.Color" /> 背景。 預設值為 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.TreeNode.BackColor%2A>屬性設定為<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>，則<xref:System.Drawing.Color>當作<xref:System.Windows.Forms.Control.BackColor%2A>屬性值<xref:System.Windows.Forms.TreeView>樹狀節點指派給控制項。  
  
   
  
## Examples  
 下列程式碼範例將任何會反白顯示<xref:System.Windows.Forms.TreeNode>物件<xref:System.Windows.Forms.TreeView>控制項，其其<xref:System.Windows.Forms.TreeNode.Checked%2A>屬性設定為`true`藉由設定其<xref:System.Windows.Forms.TreeNode.BackColor%2A>屬性設<xref:System.Drawing.Color.Yellow%2A>。 此程式碼，您必須擁有<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>集合與<xref:System.Windows.Forms.TreeNode>物件。  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="treeNode.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>啟始樹狀節點標籤的編輯。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 典型的案例，才能使用這個方法是呼叫上<xref:System.Windows.Forms.MenuItem.Click>事件的<xref:System.Windows.Forms.MenuItem>或<xref:System.Windows.Forms.ContextMenu>。  
  
> [!NOTE]
>  這個方法僅適用於<xref:System.Windows.Forms.TreeView.LabelEdit%2A>的屬性<xref:System.Windows.Forms.TreeView>設定為`true`。 如果<xref:System.Windows.Forms.TreeView.LabelEdit%2A>設為`false`、 擲回例外狀況和樹狀節點將不會進入可編輯的狀態。  
  
   
  
## Examples  
 下列程式碼範例可讓使用者編輯非根樹狀節點使用<xref:System.Windows.Forms.ContextMenu>。 當使用者按一下滑鼠右鍵滑鼠<xref:System.Windows.Forms.TreeNode>在的位置會決定，並儲存在名為的變數`mySelectedNode`。 如果選取根樹狀節點，它會進入 「 編輯 」 狀態，允許使用者編輯節點標籤。 當使用者停止編輯樹狀節點標籤之後，新的標籤文字會評估，並儲存。 針對此範例中，數個字元會視為無效的標籤文字中。 如果其中一個無效的字元是標籤，以字串或字串是空的使用者會收到通知的錯誤，標籤會傳回到其先前的內容。  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.TreeView.LabelEdit" /> 設定為 <see langword="false" />。</exception>
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.TreeNode.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得樹狀節點的界限。</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" />，表示樹狀節點的界限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 座標是相對於左上角<xref:System.Windows.Forms.TreeView>控制項。  
  
   
  
## Examples  
 下列程式碼範例會變更大小<xref:System.Windows.Forms.TreeNode.NodeFont%2A>指定的大小，並調整<xref:System.Windows.Forms.TreeView.ItemHeight%2A>樹狀目錄節點的父代<xref:System.Windows.Forms.TreeView>控制項。 此範例中，您需要<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TreeView>控制項的集合<xref:System.Windows.Forms.TreeNode>物件，和<xref:System.Windows.Forms.ComboBox>，包含字型的大小。  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出樹狀節點是否處於核取狀態。</summary>
        <value>如果樹狀節點處於核取狀態則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將任何會反白顯示<xref:System.Windows.Forms.TreeNode>物件<xref:System.Windows.Forms.TreeView>控制項，其其<xref:System.Windows.Forms.TreeNode.Checked%2A>屬性設定為`true`藉由設定其<xref:System.Windows.Forms.TreeNode.BackColor%2A>屬性設<xref:System.Drawing.Color.Yellow%2A>。 此程式碼，您必須擁有<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>集合與<xref:System.Windows.Forms.TreeNode>物件。  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>複製樹狀節點和以這個樹狀節點為根部的整個樹狀子目錄。</summary>
        <returns>
          <see cref="T:System.Object" />，表示複製的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從所複製的樹狀節點和下方的樹狀結構會複製。 指派給任何子樹狀節點<xref:System.Windows.Forms.TreeNode>被複製包含新的樹狀節點和子樹狀目錄中。  
  
 <xref:System.Windows.Forms.TreeNode.Clone%2A>方法會執行節點的淺層複本。 如果值<xref:System.Windows.Forms.TreeNode.Tag%2A>屬性是參考型別，原始和複製的複本將會指向相同的單一執行個體的<xref:System.Windows.Forms.TreeNode.Tag%2A>值。  
  
   
  
## Examples  
 下列程式碼範例複製過去的根樹狀節點的最後一個子樹狀結構節點，並將它複製插入中的第一個根樹狀節點為`TreeNodeCollection`。 此範例中，您需要<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>，其中包含的集合<xref:System.Windows.Forms.TreeNode>物件和<xref:System.Windows.Forms.Button>。  
  
 [!code-cpp[TreeNode_EnsureVisible_4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#3)]
 [!code-csharp[TreeNode_EnsureVisible_4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#3)]
 [!code-vb[TreeNode_EnsureVisible_4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Collapse">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>摺疊 <see cref="T:System.Windows.Forms.TreeNode" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>收合樹狀節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Collapse%2A>方法會摺疊目前<xref:System.Windows.Forms.TreeNode>及其子節點。 如果您想要摺疊的目前<xref:System.Windows.Forms.TreeNode>，使用<xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=nameWithType>多載，並傳遞`true`要略過它的子節點。  
  
> [!NOTE]
>  狀態<xref:System.Windows.Forms.TreeNode>會保存。 例如，如果子節點的下一個層級未摺疊先前，當<xref:System.Windows.Forms.TreeNode.Expand%2A>呼叫方法，子節點會出現在其先前的展開狀態。  
  
   
  
## Examples  
 按一下按鈕時，下列程式碼範例會切換到選取的節點。 如果已摺疊選取的節點，它會展開，如果已展開藉由呼叫<xref:System.Windows.Forms.TreeNode.Expand%2A>方法，它會摺疊呼叫<xref:System.Windows.Forms.TreeNode.Collapse%2A>方法。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>至少有一個控制項<xref:System.Windows.Forms.TreeNode>且具有至少一個子系<xref:System.Windows.Forms.TreeNode>。  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (bool ignoreChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(bool ignoreChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (ignoreChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse(bool ignoreChildren);" />
      <MemberSignature Language="F#" Value="member this.Collapse : bool -&gt; unit" Usage="treeNode.Collapse ignoreChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignoreChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignoreChildren">若要讓子節點維持目前的狀態，則為 <see langword="true" />；若要摺疊子節點，則為 <see langword="false" />。</param>
        <summary>摺疊 <see cref="T:System.Windows.Forms.TreeNode" /> 並選擇性地摺疊其子系。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.TreeNode.Collapse%2A>方法，傳遞`true`，當您想要摺疊節點，但保留它的子系節點的展開狀態。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個樹狀節點關聯的捷徑功能表。</summary>
        <value>與樹狀節點關聯的 <see cref="T:System.Windows.Forms.ContextMenu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將關聯樹狀節點的捷徑功能表的慣用的方法是使用<xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個樹狀節點關聯的捷徑功能表。</summary>
        <value>與樹狀節點關聯的 <see cref="T:System.Windows.Forms.ContextMenuStrip" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用者以滑鼠右鍵按一下樹狀節點時，會顯示快顯功能表。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Deserialize (serializationInfo, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，描述 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，表示在還原序列化 (Deserialization) 期間資料流的狀態。</param>
        <summary>從指定的 <see cref="T:System.Windows.Forms.TreeNode" /> 載入 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 的狀態。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit(bool cancel);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : bool -&gt; unit" Usage="treeNode.EndEdit cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">如果樹狀節點標籤文字的編輯作業被取消，但沒有進行儲存，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>結束樹狀節點標籤的編輯。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例可讓使用者編輯非根樹狀節點使用<xref:System.Windows.Forms.ContextMenu>。 當使用者以滑鼠右鍵按一下滑鼠<xref:System.Windows.Forms.TreeNode>在的位置會決定，並儲存在名為的變數`mySelectedNode`。 如果選取根樹狀節點，它會進入 「 編輯 」 狀態，允許使用者編輯節點標籤。 當使用者停止編輯樹狀節點標籤之後，新的標籤文字會評估，並儲存。 針對此範例中，數個字元會視為無效的標籤文字中。 如果其中一個無效的字元是標籤，以字串或字串是空的使用者會收到通知的錯誤，標籤會傳回到其先前的內容。  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : unit -&gt; unit" Usage="treeNode.EnsureVisible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>請確保樹狀節點是可見的，如有必要請展開樹狀節點和捲動樹狀檢視控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.TreeNode.EnsureVisible%2A>方法呼叫中，展開樹狀結構並捲動以確保目前的樹狀節點會顯示在<xref:System.Windows.Forms.TreeView>。 這個方法很有用，如果您選取樹狀節點在根據特定準則的程式碼中。 藉由呼叫這個方法，您選取的節點之後，使用者可以查看並與其互動所選取的節點。  
  
> [!NOTE]
>  如果<xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=nameWithType>屬性設定為大於已呼叫這個方法，以樹狀檢視控制項的高度的值為非預期的結果。  
  
   
  
## Examples  
 下列程式碼範例將最後一個子系的最後一個根樹狀節點的樹狀節點成檢視樹狀檢視中按一下按鈕時。 此範例中，您需要<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>，其中包含的集合<xref:System.Windows.Forms.TreeNode>物件，和<xref:System.Windows.Forms.Button>。 這樣就不必在樹狀檢視控制項中所有可見時，則應該是足夠的樹狀節點。  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>展開樹狀節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Expand%2A>方法會展開目前<xref:System.Windows.Forms.TreeNode>到下一個層級的節點。  
  
> [!NOTE]
>  狀態<xref:System.Windows.Forms.TreeNode>會保存。 例如，如果子節點的下一個層級未摺疊先前，當<xref:System.Windows.Forms.TreeNode.Expand%2A>呼叫方法，子節點會出現在其先前的展開狀態。  
  
   
  
## Examples  
 按一下按鈕時，下列程式碼範例會切換到選取的節點。 如果已摺疊選取的節點，它會展開，如果已展開藉由呼叫<xref:System.Windows.Forms.TreeNode.Expand%2A>方法，它會摺疊呼叫<xref:System.Windows.Forms.TreeNode.Collapse%2A>方法。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>至少有一個控制項<xref:System.Windows.Forms.TreeNode>且具有至少一個子系<xref:System.Windows.Forms.TreeNode>。  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>展開所有子樹狀節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.ExpandAll%2A>方法會展開所有子樹狀節點指派給<xref:System.Windows.Forms.TreeNode.Nodes%2A>集合。  
  
> [!NOTE]
>  狀態<xref:System.Windows.Forms.TreeNode>會保存。 例如，如果子節點的下一個層級未摺疊先前，當<xref:System.Windows.Forms.TreeNode.Expand%2A>呼叫方法，子節點會出現在其先前的展開狀態。  
  
   
  
## Examples  
 下列程式碼範例會展開所有樹狀節點<xref:System.Windows.Forms.TreeView>控制何時<xref:System.Windows.Forms.CheckBox>勾選，並摺疊<xref:System.Windows.Forms.TreeNode.FirstNode%2A>當<xref:System.Windows.Forms.CheckBox>已清除。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.CheckBox>，，<xref:System.Windows.Forms.TreeView>用來控制<xref:System.Windows.Forms.TreeNodeCollection>，有數個<xref:System.Windows.Forms.TreeNode>（最好是具有三個或多個層級） 的物件。  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="FirstNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode FirstNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode FirstNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FirstNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ FirstNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FirstNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得樹狀節點集合的第一個子樹狀節點。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> 集合中的第一個子 <see cref="P:System.Windows.Forms.TreeNode.Nodes" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.FirstNode%2A>是第一個子系<xref:System.Windows.Forms.TreeNode>中<xref:System.Windows.Forms.TreeNodeCollection>儲存在<xref:System.Windows.Forms.TreeNode.Nodes%2A>目前樹狀節點的屬性。 如果<xref:System.Windows.Forms.TreeNode>不有任何子樹狀結構節點中，<xref:System.Windows.Forms.TreeNode.FirstNode%2A>屬性會傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例會選取適當<xref:System.Windows.Forms.TreeNode>決定如果之後<xref:System.Windows.Forms.TreeNode>傳遞中已選取和<xref:System.Windows.Forms.TreeNode>選取。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其<xref:System.Windows.Forms.TreeNodeCollection>，其中包含數個<xref:System.Windows.Forms.TreeNode>物件。 它也需要有<xref:System.Windows.Forms.ComboBox>與下列項目:"Previous"、"PreviousVisible 」、 「 下一步，"NextVisible"、"First"和"Last"。  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樹狀節點的前景色彩。</summary>
        <value>樹狀節點的 <see cref="T:System.Drawing.Color" /> 前景。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`null`，則<xref:System.Drawing.Color>當作<xref:System.Windows.Forms.Control.ForeColor%2A>屬性值為<xref:System.Windows.Forms.TreeView>樹狀節點指派給控制項。  
  
   
  
## Examples  
 下列程式碼範例會建立將子樹狀節點的根樹狀節點。 每一個子樹狀節點`Customer`物件<xref:System.Collections.ArrayList>每個新增至根樹狀節點，以及子樹狀節點`Order`指派給物件`Customer`物件。 `Customer`物件會指派給<xref:System.Windows.Forms.TreeNode.Tag%2A>屬性，並表示樹狀節點`Customer`物件會顯示與<xref:System.Drawing.Color.Orange%2A>文字。 此範例中，您需要`Customer`並`Order`物件定義，<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>，和<xref:System.Collections.ArrayList>名為`customerArray`包含`Customer`物件。  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TreeNode FromHandle(class System.Windows.Forms.TreeView tree, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (tree As TreeView, handle As IntPtr) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::TreeNode ^ FromHandle(System::Windows::Forms::TreeView ^ tree, IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : System.Windows.Forms.TreeView * nativeint -&gt; System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FromHandle (tree, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tree" Type="System.Windows.Forms.TreeView" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tree">
          <see cref="T:System.Windows.Forms.TreeView" />，包含樹狀節點。</param>
        <param name="handle">樹狀節點的控制代碼。</param>
        <summary>傳回具有指定控制代碼和指派給樹狀檢視控制項的樹狀節點。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.TreeNode" />，表示樹狀節點，它被指派給具有指定控制代碼的指定 <see cref="T:System.Windows.Forms.TreeView" /> 控制項。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當節點加入至<xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=nameWithType>集合，<xref:System.Windows.Forms.TreeView>控制項會傳送 NM_CUSTOMDRAW 通知才節點控制代碼。 如果您覆寫<xref:System.Windows.Forms.Control.WndProc%2A>方法<xref:System.Windows.Forms.TreeView>若要提供自訂繪製，以回應這項通知，您應該一律檢查這個方法的傳回值`null`您嘗試存取的節點之前。  
  
   
  
## Examples  
 下列程式碼範例中取得<xref:System.Windows.Forms.TreeNode>，已摺疊，並建立一份使用其<xref:System.Windows.Forms.TreeNode.Handle%2A>屬性。 原始<xref:System.Windows.Forms.TreeNode>移除從<xref:System.Windows.Forms.TreeNodeCollection>，並將複本新增至集合。 此範例中，您需要<xref:System.Windows.Forms.Form>與<xref:System.Windows.Forms.TreeView>對它進行控制。 <xref:System.Windows.Forms.TreeView>控制項應該有至少一個子節點有兩個或多個根節點。  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.TreeView" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.Windows.Forms.TreeNode.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得從根樹狀節點通往目前樹狀節點的路徑。</summary>
        <value>從根樹狀節點通往目前樹狀節點的路徑。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 路徑包含必須瀏覽至連線到這個樹狀節點，從根樹狀節點的所有樹狀節點標籤。 節點標籤中指定的分隔符號字元以分隔<xref:System.Windows.Forms.TreeView.PathSeparator%2A>屬性<xref:System.Windows.Forms.TreeView>控制項，其中包含這個節點。 比方說，如果樹狀檢視控制項中的分隔符號字元名為 「 位置 」 設定為反斜線字元 (\\)，則<xref:System.Windows.Forms.TreeNode.FullPath%2A>屬性值是"Country\Region\State 」。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Windows.Forms.TreeView.PathSeparator%2A>的屬性<xref:System.Windows.Forms.TreeView>，並顯示中所包含的子樹狀節點的數目<xref:System.Windows.Forms.TreeNodeCollection>的<xref:System.Windows.Forms.TreeView.SelectedNode%2A>。 此外，也會顯示對樹狀檢視控制項中的所有樹狀節點的子樹狀節點的百分比。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.Button>，，<xref:System.Windows.Forms.TreeView>用來控制<xref:System.Windows.Forms.TreeNodeCollection>，有數個<xref:System.Windows.Forms.TreeNode>（最好是具有三個或多個層級） 的物件。  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">節點未包含在 <see cref="T:System.Windows.Forms.TreeView" /> 中。</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberSignature Language="F#" Value="member this.GetNodeCount : bool -&gt; int" Usage="treeNode.GetNodeCount includeSubTrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees">如果產生的計數包括間接以這個樹狀節點做為根部的所有樹狀節點，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>傳回子樹狀節點的數目。</summary>
        <returns>指派給 <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> 集合的子樹狀節點數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會設定<xref:System.Windows.Forms.TreeView.PathSeparator%2A>的屬性<xref:System.Windows.Forms.TreeView>，並顯示中所包含的子樹狀節點的數目<xref:System.Windows.Forms.TreeNodeCollection>的<xref:System.Windows.Forms.TreeView.SelectedNode%2A>。 此外，也會顯示對樹狀檢視控制項中的所有樹狀節點的子樹狀節點的百分比。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.Button>，，<xref:System.Windows.Forms.TreeView>用來控制<xref:System.Windows.Forms.TreeNodeCollection>，有數個<xref:System.Windows.Forms.TreeNode>（最好是具有三個或多個層級） 的物件。  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Nodes" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.TreeNode.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得樹狀節點的控制代碼。</summary>
        <value>樹狀節點控制代碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果控制代碼不已建立時<xref:System.Windows.Forms.TreeNode.Handle%2A>參考屬性，則會建立。  
  
   
  
## Examples  
 下列程式碼範例中取得<xref:System.Windows.Forms.TreeNode>，已摺疊，並建立一份使用其<xref:System.Windows.Forms.TreeNode.Handle%2A>屬性。 原始<xref:System.Windows.Forms.TreeNode>移除從<xref:System.Windows.Forms.TreeNodeCollection>，並將複本新增至集合。 此範例中，您需要<xref:System.Windows.Forms.Form>與<xref:System.Windows.Forms.TreeView>對它進行控制。 <xref:System.Windows.Forms.TreeView>控制項應該有至少一個子節點有兩個或多個根節點。  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樹狀節點處於未選取狀態時，顯示影像的影像清單索引值。</summary>
        <value>以零起始的索引值，表示指定 <see cref="T:System.Windows.Forms.ImageList" /> 中的影像位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>值是索引的值<xref:System.Drawing.Image>存入<xref:System.Windows.Forms.ImageList>指派給<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType>屬性。  
  
> [!NOTE]
>  預設值<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>屬性是相同<xref:System.Windows.Forms.TreeView.ImageIndex%2A>屬性<xref:System.Windows.Forms.TreeView>控制項<xref:System.Windows.Forms.TreeNode>指派給。  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A>和<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>屬性是互斥的; 因此，如果設定了一個屬性，其他則會忽略。 如果您設定<xref:System.Windows.Forms.TreeNode.ImageKey%2A>屬性，<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>屬性會自動設為-1。 或者，如果您設定<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>，<xref:System.Windows.Forms.TreeNode.ImageKey%2A>會自動設為空字串 ("")。  
  
   
  
## Examples  
 下列程式碼範例會建立並指派<xref:System.Windows.Forms.ImageList>要<xref:System.Windows.Forms.TreeView>控制項並填入<xref:System.Windows.Forms.TreeView>控制與<xref:System.Windows.Forms.TreeNode>物件。 樹狀節點指派從映像<xref:System.Windows.Forms.ImageList>樹狀節點處於選取或取消選取狀態時顯示。 此範例中，您需要<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TreeView>，以及<xref:System.Collections.ArrayList>，其中包含`Customer`物件，每個包含`Order`物件。 它也需要`Customer`和`Order`物件定義。  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定影像的索引鍵，這個影像會在節點處於未選取狀態時與這個樹狀節點關聯。</summary>
        <value>當節點處於未選取狀態時，與這個樹狀節點關聯之影像的索引鍵。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性所傳回的映像索引鍵包含在<xref:System.Windows.Forms.TreeView.ImageList%2A>屬性包含<xref:System.Windows.Forms.TreeView>控制項。  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A>不區分大小寫。  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A>和<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>屬性是互斥的; 如果設定了一個屬性，其他則會忽略。 如果您設定<xref:System.Windows.Forms.TreeNode.ImageKey%2A>屬性，<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>屬性會自動設為-1。 或者，如果您設定<xref:System.Windows.Forms.TreeNode.ImageIndex%2A>，<xref:System.Windows.Forms.TreeNode.ImageKey%2A>會自動設為空字串 ("")。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.TreeNode.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得樹狀節點集合中的樹狀節點位置。</summary>
        <value>以零起始的索引值，表示 <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> 集合中的樹狀節點位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會顯示<xref:System.Windows.Forms.TreeNode.Text%2A>並<xref:System.Windows.Forms.TreeNode.Index%2A>屬性值<xref:System.Windows.Forms.TreeNode>由<xref:System.Windows.Forms.TreeNode.Parent%2A>屬性<xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>。 此範例中，您需要<xref:System.Windows.Forms.Form>與<xref:System.Windows.Forms.TreeView>對它進行控制。 <xref:System.Windows.Forms.TreeView>應該有至少兩個根節點，每個需要至少一個子節點。  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditing">
      <MemberSignature Language="C#" Value="public bool IsEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditing : bool" Usage="System.Windows.Forms.TreeNode.IsEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出樹狀節點是否處於可編輯的狀態。</summary>
        <value>如果樹狀節點處於可編輯狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例可讓使用者編輯非根樹狀節點使用<xref:System.Windows.Forms.ContextMenu>。 當使用者以滑鼠右鍵按一下滑鼠<xref:System.Windows.Forms.TreeNode>在的位置會決定，並儲存在名為的變數`mySelectedNode`。 如果選取根樹狀節點，它會進入 「 編輯 」 狀態，讓使用者編輯節點標籤。 當使用者停止編輯樹狀節點標籤之後，新的標籤文字會評估，並儲存。 針對此範例中，數個字元會視為無效的標籤文字中。 如果其中一個無效的字元是標籤，以字串或字串是空的使用者會收到通知的錯誤，標籤會傳回到其先前的內容。  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExpanded : bool" Usage="System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出樹狀節點是否處於展開狀態。</summary>
        <value>如果樹狀節點處於展開狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 按一下按鈕時，下列程式碼範例會切換到選取的節點。 如果已摺疊選取的節點，它會展開，如果已展開藉由呼叫<xref:System.Windows.Forms.TreeNode.Expand%2A>方法，它會摺疊呼叫<xref:System.Windows.Forms.TreeNode.Collapse%2A>方法。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>至少有一個控制項<xref:System.Windows.Forms.TreeNode>且具有至少一個子系<xref:System.Windows.Forms.TreeNode>。  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Windows.Forms.TreeNode.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出樹狀節點是否處於選取狀態。</summary>
        <value>如果樹狀節點處於選取狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會選取適當<xref:System.Windows.Forms.TreeNode>決定如果之後<xref:System.Windows.Forms.TreeNode>傳遞中已選取和<xref:System.Windows.Forms.TreeNode>選取。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其<xref:System.Windows.Forms.TreeNodeCollection>包含多項<xref:System.Windows.Forms.TreeNode>物件。 它也需要有<xref:System.Windows.Forms.ComboBox>與下列項目:"Previous"、"PreviousVisible 」、 「 下一步，"NextVisible"、"First"和"Last"。  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.Forms.TreeNode.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出是否可看見整個或部分樹狀節點。</summary>
        <value>如果可看見整個或部分樹狀節點，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將最後一個子系的最後一個根樹狀節點的樹狀節點成檢視樹狀檢視中按一下按鈕時。 此範例中，您需要<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>，其中包含的集合<xref:System.Windows.Forms.TreeNode>物件，和<xref:System.Windows.Forms.Button>。 這樣就不必在樹狀檢視控制項中所有可見時，則應該是足夠的樹狀節點。  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="LastNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode LastNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode LastNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.LastNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ LastNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.LastNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得最後一個子樹狀節點。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" />，表示最後一個子樹狀節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.LastNode%2A>是最後一個子系<xref:System.Windows.Forms.TreeNode>中<xref:System.Windows.Forms.TreeNodeCollection>儲存在<xref:System.Windows.Forms.TreeNode.Nodes%2A>目前樹狀節點的屬性。 如果<xref:System.Windows.Forms.TreeNode>不有任何子樹狀結構節點中，<xref:System.Windows.Forms.TreeNode.LastNode%2A>屬性會傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例會選取適當<xref:System.Windows.Forms.TreeNode>決定如果之後<xref:System.Windows.Forms.TreeNode>傳遞中已選取和<xref:System.Windows.Forms.TreeNode>選取。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其<xref:System.Windows.Forms.TreeNodeCollection>，其中包含數個<xref:System.Windows.Forms.TreeNode>物件。 它也需要有<xref:System.Windows.Forms.ComboBox>與下列項目:"Previous"、"PreviousVisible 」、 「 下一步，"NextVisible"、"First"和"Last"。  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : int" Usage="System.Windows.Forms.TreeNode.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得樹狀節點在 <see cref="T:System.Windows.Forms.TreeView" /> 控制項中的深度，以零起始。</summary>
        <value>樹狀節點在 <see cref="T:System.Windows.Forms.TreeView" /> 控制項中的深度，以零起始。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 針對<xref:System.Windows.Forms.TreeNode.Level%2A>屬性的根節點會被視為第一層的巢狀，並傳回 0。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.TreeNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樹狀節點的名稱。</summary>
        <value>
          <see cref="T:System.String" />，表示樹狀節點名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>的<xref:System.Windows.Forms.TreeNode>也是節點的索引鍵，這個節點時的一部分<xref:System.Windows.Forms.TreeNodeCollection>。 如果節點沒有名稱，<xref:System.Windows.Forms.TreeNode.Name%2A>傳回空字串 ("")。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得下一個同層級 (Sibling) 樹狀節點。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" />，表示下一個同層級樹狀節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.NextNode%2A>是下一個同層級<xref:System.Windows.Forms.TreeNode>中<xref:System.Windows.Forms.TreeNodeCollection>存入<xref:System.Windows.Forms.TreeNode.Nodes%2A>屬性的樹狀結構節點的父代<xref:System.Windows.Forms.TreeNode>。 如果沒有下一個樹狀結構節點，<xref:System.Windows.Forms.TreeNode.NextNode%2A>屬性會傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例會選取適當<xref:System.Windows.Forms.TreeNode>決定如果之後<xref:System.Windows.Forms.TreeNode>傳遞中已選取和<xref:System.Windows.Forms.TreeNode>選取。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其<xref:System.Windows.Forms.TreeNodeCollection>，其中包含數個<xref:System.Windows.Forms.TreeNode>物件。 它也需要有<xref:System.Windows.Forms.ComboBox>與下列項目:"Previous"、"PreviousVisible 」、 「 下一步，"NextVisible"、"First"和"Last"。  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="NextVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得下一個可見的樹狀節點。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" />，表示下一個可見的樹狀節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>可以是子系、 同層級或從其他分支的樹狀節點。 如果沒有下一個樹狀結構節點，<xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>屬性會傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例會選取適當<xref:System.Windows.Forms.TreeNode>決定如果之後<xref:System.Windows.Forms.TreeNode>傳遞中已選取和<xref:System.Windows.Forms.TreeNode>選取。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其<xref:System.Windows.Forms.TreeNodeCollection>，其中包含數個<xref:System.Windows.Forms.TreeNode>物件。 它也需要有<xref:System.Windows.Forms.ComboBox>與下列項目:"Previous"、"PreviousVisible 」、 「 下一步，"NextVisible"、"First"和"Last"。  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="NodeFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font NodeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font NodeFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NodeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ NodeFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NodeFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.TreeNode.NodeFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來顯示樹狀節點標籤文字的字型。</summary>
        <value>
          <see cref="T:System.Drawing.Font" />，用來顯示樹狀節點標籤文字的字型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`null`，則<xref:System.Drawing.Font>當作<xref:System.Windows.Forms.Control.Font%2A>屬性值為<xref:System.Windows.Forms.TreeView>此節點會附加至的控制項。  
  
> [!NOTE]
>  如果節點字型大於<xref:System.Windows.Forms.Control.Font%2A>中所設定的屬性值<xref:System.Windows.Forms.TreeView>樹狀節點標籤文字的控制項會遭到裁剪。  
  
   
  
## Examples  
 下列程式碼範例會變更的大小<xref:System.Windows.Forms.TreeNode.NodeFont%2A>指定的大小，並調整<xref:System.Windows.Forms.TreeView.ItemHeight%2A>樹狀目錄節點的父代<xref:System.Windows.Forms.TreeView>控制項。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其中包含的集合<xref:System.Windows.Forms.TreeNode>物件，和<xref:System.Windows.Forms.ComboBox>，包含字型的大小。  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Windows.Forms.TreeNodeCollection" Usage="System.Windows.Forms.TreeNode.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指派給目前樹狀節點之 <see cref="T:System.Windows.Forms.TreeNode" /> 物件的集合。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNodeCollection" />，表示指派給目前樹狀節點的樹狀節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Nodes%2A>屬性可保有其他集合<xref:System.Windows.Forms.TreeNode>物件。 樹狀節點集合中的每個都有<xref:System.Windows.Forms.TreeNode.Nodes%2A>可以包含它自己的屬性<xref:System.Windows.Forms.TreeNodeCollection>。 這個巢狀結構的樹狀節點難以瀏覽樹狀結構。 <xref:System.Windows.Forms.TreeNode.FullPath%2A>屬性可讓您更輕鬆地判斷您在樹狀目錄中的位置。  
  
   
  
## Examples  
 下列程式碼範例會移除選取的樹狀節點從一個<xref:System.Windows.Forms.TreeView>並將它加入至另一個，如果這兩個樹狀節點集合不是唯讀狀態。 當<xref:System.Windows.Forms.Button>按下時，<xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>刪除從某個<xref:System.Windows.Forms.TreeView>使用<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>方法，並加入另<xref:System.Windows.Forms.TreeView>使用<xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>方法。 此範例中，您需要兩個<xref:System.Windows.Forms.TreeView>控制項命名為`treeView1`並`treeView2`，和<xref:System.Windows.Forms.Button>上<xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Parent { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前樹狀節點的父樹狀節點。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" />，表示目前樹狀節點的父層。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果樹狀節點是根層次<xref:System.Windows.Forms.TreeNode.Parent%2A>屬性會傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例會顯示<xref:System.Windows.Forms.TreeNode.Text%2A>並<xref:System.Windows.Forms.TreeNode.Index%2A>屬性值<xref:System.Windows.Forms.TreeNode>由<xref:System.Windows.Forms.TreeNode.Parent%2A>屬性<xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>。 此範例中，您需要<xref:System.Windows.Forms.Form>與<xref:System.Windows.Forms.TreeView>對它進行控制。 <xref:System.Windows.Forms.TreeView>應該有至少兩個根節點，每個需要至少一個子節點。  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得上一個同層級樹狀節點。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" />，表示上一個同層級樹狀節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.PrevNode%2A>是上一個同層級<xref:System.Windows.Forms.TreeNode>中<xref:System.Windows.Forms.TreeNodeCollection>存入<xref:System.Windows.Forms.TreeNode.Nodes%2A>屬性的樹狀結構節點的父代<xref:System.Windows.Forms.TreeNode>。 如果沒有上一個樹狀結構節點，<xref:System.Windows.Forms.TreeNode.PrevNode%2A>屬性會傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例會選取適當<xref:System.Windows.Forms.TreeNode>決定如果之後<xref:System.Windows.Forms.TreeNode>傳遞中已選取和<xref:System.Windows.Forms.TreeNode>選取。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其<xref:System.Windows.Forms.TreeNodeCollection>，其中包含數個<xref:System.Windows.Forms.TreeNode>物件。 它也需要有<xref:System.Windows.Forms.ComboBox>與下列項目:"Previous"、"PreviousVisible 」、 「 下一步，"NextVisible"、"First"和"Last"。  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="PrevVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得上一個可見樹狀節點。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" />，表示上一個可見樹狀節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>可以是子系、 同層級或從其他分支的樹狀節點。 如果沒有上一個樹狀結構節點，<xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>屬性會傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例會選取適當<xref:System.Windows.Forms.TreeNode>決定如果之後<xref:System.Windows.Forms.TreeNode>傳遞中已選取和<xref:System.Windows.Forms.TreeNode>選取。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其<xref:System.Windows.Forms.TreeNodeCollection>，其中包含數個<xref:System.Windows.Forms.TreeNode>物件。 它也需要有<xref:System.Windows.Forms.ComboBox>與下列項目:"Previous"、"PreviousVisible 」、 「 下一步，"NextVisible"、"First"和"Last"。  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="treeNode.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從樹狀檢視控制項移除目前的樹狀節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.TreeNode.Remove%2A>呼叫方法時，樹狀節點和任何子樹狀節點指派給<xref:System.Windows.Forms.TreeNode>，就會自<xref:System.Windows.Forms.TreeView>。 已移除的子節點會從<xref:System.Windows.Forms.TreeView>但仍會附加到這個樹狀節點。  
  
   
  
## Examples  
 下列程式碼範例中移除<xref:System.Windows.Forms.TreeNode>當使用者以滑鼠右鍵按一下上方的滑鼠，並從切換至摺疊時展開使用者對它按一下滑鼠滾輪。 此範例中，您需要<xref:System.Windows.Forms.Form>與<xref:System.Windows.Forms.TreeView>對它進行控制。 <xref:System.Windows.Forms.TreeView>應該有兩個或多個根樹狀節點，各自擁有至少一個子節點。  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當樹狀節點處於選取狀態時，顯示影像的影像清單索引值。</summary>
        <value>以零起始的索引值，表示 <see cref="T:System.Windows.Forms.ImageList" /> 中的影像位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A>值是索引的值<xref:System.Drawing.Image>存入<xref:System.Windows.Forms.ImageList>指派給<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType>屬性。  
  
> [!NOTE]
>  預設值<xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A>屬性是相同<xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A>屬性<xref:System.Windows.Forms.TreeView>控制項<xref:System.Windows.Forms.TreeNode>指派給。  
  
   
  
## Examples  
 下列程式碼範例會建立並指派<xref:System.Windows.Forms.ImageList>要<xref:System.Windows.Forms.TreeView>控制項並填入<xref:System.Windows.Forms.TreeView>控制與<xref:System.Windows.Forms.TreeNode>物件。 樹狀節點指派從映像<xref:System.Windows.Forms.ImageList>樹狀節點處於選取或取消選取狀態時顯示。 此範例中，您需要<xref:System.Windows.Forms.Form>包含<xref:System.Windows.Forms.TreeView>，以及<xref:System.Collections.ArrayList>包含`Customer`物件，每個包含`Order`物件。 它也需要`Customer`和`Order`物件定義。  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定影像的索引鍵，這個影像會在樹狀節點處於選取狀態時顯示在樹狀節點中。</summary>
        <value>當樹狀節點處於選取狀態時所顯示之影像的索引鍵。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性所傳回的映像索引鍵包含在<xref:System.Windows.Forms.TreeView.ImageList%2A>屬性之父代<xref:System.Windows.Forms.TreeView>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Serialize (si, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，描述 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，表示在序列化 (Serialization) 期間資料流的狀態。</param>
        <summary>將 <see cref="T:System.Windows.Forms.TreeNode" /> 的狀態儲存至指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於序列化服務。 相關聯的列舉型別： <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定影像的索引，用於在父代 <see cref="T:System.Windows.Forms.TreeNode" /> 的 <see cref="T:System.Windows.Forms.TreeView" /> 屬性設為 <see langword="false" /> 時，指示 <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> 的狀態。</summary>
        <value>用來表示 <see cref="T:System.Windows.Forms.TreeNode" /> 狀態的影像索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性所傳回的影像索引中包含<xref:System.Windows.Forms.TreeView.StateImageList%2A>屬性之父代<xref:System.Windows.Forms.TreeView>控制項。  
  
 如果父代<xref:System.Windows.Forms.TreeView>已啟用，核取方塊<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>會被忽略，而且節點會顯示第一個或第二個映像<xref:System.Windows.Forms.TreeView.StateImageList%2A>設定父代上<xref:System.Windows.Forms.TreeView>分別表示為未選取或核取狀態。 切換<xref:System.Windows.Forms.TreeNode.Checked%2A>屬性不會影響值<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>。  
  
 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>會傳回-1 時未設定。 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>和<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>屬性是互斥的這表示如果其中一個設定，其他則會忽略。 如果您設定<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>屬性，<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>屬性會自動設為-1。 或者，如果您設定<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>，<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>會自動設為空字串 ("")。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的索引小於 -1 或大於 14。</exception>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageKey" />
      </Docs>
    </Member>
    <Member MemberName="StateImageKey">
      <MemberSignature Language="C#" Value="public string StateImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定影像的索引鍵，用於在父代 <see cref="T:System.Windows.Forms.TreeNode" /> 的 <see cref="T:System.Windows.Forms.TreeView" /> 屬性設為 <see langword="false" /> 時，指示 <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> 的狀態。</summary>
        <value>用來表示 <see cref="T:System.Windows.Forms.TreeNode" /> 狀態的影像索引鍵。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性由映像索引鍵包含在<xref:System.Windows.Forms.TreeView.StateImageList%2A>屬性之父代<xref:System.Windows.Forms.TreeView>控制項。  
  
 如果父代<xref:System.Windows.Forms.TreeView>已啟用，核取方塊<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>會被忽略，而且節點會顯示第一個或第二個映像<xref:System.Windows.Forms.TreeView.StateImageList%2A>設定父代上<xref:System.Windows.Forms.TreeView>分別表示為未選取或核取狀態。 切換<xref:System.Windows.Forms.TreeNode.Checked%2A>屬性不會影響值<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>。  
  
 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>和<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>屬性是互斥的這表示如果其中一個設定，其他則會忽略。 如果您設定<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>屬性，<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>屬性會自動設為-1。 或者，如果您設定<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>，<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>會自動設為空字串 ("")。 您應該設定<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>的映像具有對應的索引，介於 0 到 14 之間。 您可以設定<xref:System.Windows.Forms.TreeNode.StateImageKey%2A>的映像具有索引值大於 14 （將不會擲回例外狀況），但映像可能不會顯示  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含序列化 <see cref="T:System.Windows.Forms.TreeNode" /> 所需的資料。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，包含這個序列化的目的端資訊。</param>
        <summary>以序列化 <see cref="T:System.Windows.Forms.TreeNode" /> 所需的資料，填入序列化資訊物件。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於序列化服務。 相關聯的列舉型別： <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.TreeNode.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定包含有關樹狀節點資料的物件。</summary>
        <value>
          <see cref="T:System.Object" />，包含有關樹狀節點資料。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何<xref:System.Object>衍生型別可以指派給這個屬性。 如果您正在透過 Windows Form 設計工具設定這個屬性，就可以指派只有文字。  
  
> [!CAUTION]
>  <xref:System.Windows.Forms.TreeNode.Clone%2A>方法會執行節點的淺層複本。 如果值<xref:System.Windows.Forms.TreeNode.Tag%2A>屬性是參考型別，原始和複製的複本將會指向相同的單一執行個體的<xref:System.Windows.Forms.TreeNode.Tag%2A>值。  
  
   
  
## Examples  
 下列程式碼範例會建立將子樹狀節點的根樹狀節點。 每一個子樹狀節點`Customer`物件<xref:System.Collections.ArrayList>每個新增至根樹狀節點，以及子樹狀節點`Order`指派給物件`Customer`物件。 `Customer`物件會指派給<xref:System.Windows.Forms.TreeNode.Tag%2A>屬性，並表示樹狀節點`Customer`物件會顯示與<xref:System.Drawing.Color.Orange%2A>文字。 此範例中，您需要`Customer`並`Order`物件定義，<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>，和<xref:System.Collections.ArrayList>名為`customerArray`包含`Customer`物件。  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樹狀節點標籤中顯示的文字。</summary>
        <value>樹狀節點的標籤中所顯示的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最大字元數，<xref:System.Windows.Forms.TreeNode>可以顯示為 259。 如果<xref:System.String>具有超過 259 個字元指派給這個屬性，則會顯示只有第一次 259 個字元。  
  
 無法由使用者設定此屬性，如果<xref:System.Windows.Forms.TreeView.LabelEdit%2A>屬性之父代<xref:System.Windows.Forms.TreeView>設定為`false`。 明確地設定這個屬性的替代方案是使用其中一種建立樹狀節點<xref:System.Windows.Forms.TreeNode.%23ctor%2A>表示的字串參數的建構函式<xref:System.Windows.Forms.TreeNode.Text%2A>屬性。 標籤會顯示旁<xref:System.Windows.Forms.TreeNode>映像，如果顯示的其中一個。  
  
   
  
## Examples  
 下列程式碼範例會建立將子樹狀節點的根樹狀節點。 每一個子樹狀節點`Customer`物件<xref:System.Collections.ArrayList>每個新增至根樹狀節點，以及子樹狀節點`Order`指派給物件`Customer`物件。 `Customer`物件會指派給<xref:System.Windows.Forms.TreeNode.Tag%2A>屬性，並表示樹狀節點`Customer`物件會顯示與<xref:System.Drawing.Color.Orange%2A>文字。 此範例中，您需要`Customer`並`Order`物件定義，<xref:System.Windows.Forms.TreeView>控制<xref:System.Windows.Forms.Form>，和<xref:System.Collections.ArrayList>名為`customerArray`包含`Customer`物件。  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.LabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public void Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Toggle" />
      <MemberSignature Language="VB.NET" Value="Public Sub Toggle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Toggle();" />
      <MemberSignature Language="F#" Value="member this.Toggle : unit -&gt; unit" Usage="treeNode.Toggle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>切換樹狀節點為展開或收合的狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 樹狀節點已切換為相反其目前的狀態，請展開或摺疊的狀態。  
  
> [!NOTE]
>  狀態<xref:System.Windows.Forms.TreeNode>會保存。 例如，如果子節點的下一個層級未摺疊先前，當<xref:System.Windows.Forms.TreeNode.Expand%2A>呼叫方法，子節點會出現在其先前的展開狀態。  
  
   
  
## Examples  
 下列程式碼範例中移除<xref:System.Windows.Forms.TreeNode>當使用者以滑鼠右鍵按一下上方的滑鼠，並從切換至摺疊時展開使用者對它按一下滑鼠滾輪。 此範例中，您需要<xref:System.Windows.Forms.Form>與<xref:System.Windows.Forms.TreeView>對它進行控制。 <xref:System.Windows.Forms.TreeView>應該有兩個或多個根樹狀節點，各自擁有至少一個子節點。  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當滑鼠指標停留在 <see cref="T:System.Windows.Forms.TreeNode" /> 上時將出現的文字。</summary>
        <value>取得當滑鼠指標停留在 <see cref="T:System.Windows.Forms.TreeNode" /> 上時將出現的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須設定<xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A>屬性之父代<xref:System.Windows.Forms.TreeView>要`true`的<xref:System.Windows.Forms.TreeNode.ToolTipText%2A>可在執行階段。  
  
 如果<xref:System.Windows.Forms.TreeView>控制項有工具提示，也會包含<xref:System.Windows.Forms.TreeNode>具有<xref:System.Windows.Forms.ToolTip>，則僅<xref:System.Windows.Forms.ToolTip>的節點將會顯示。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.TreeNode.ToolTipText%2A>和<xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A>屬性。 若要執行此範例中，將下列程式碼貼到 Windows Form 並呼叫`InitializeTreeViewWithToolTips`從表單的建構函式或<xref:System.Windows.Forms.Form.Load>事件處理常式。  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回代表目前物件的字串。</summary>
        <returns>表示目前物件的字串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeView TreeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeView TreeView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.TreeView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TreeView As TreeView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeView ^ TreeView { System::Windows::Forms::TreeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TreeView : System.Windows.Forms.TreeView" Usage="System.Windows.Forms.TreeNode.TreeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指派給樹狀節點的父樹狀檢視。</summary>
        <value>表示父樹狀檢視的 <see cref="T:System.Windows.Forms.TreeView" />，會將樹狀節點指派給該父樹狀檢視；如果尚未指派節點給樹狀檢視，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會選取適當<xref:System.Windows.Forms.TreeNode>決定如果之後<xref:System.Windows.Forms.TreeNode>傳遞中已選取和<xref:System.Windows.Forms.TreeNode>選取。 此範例中，您需要<xref:System.Windows.Forms.Form>具有<xref:System.Windows.Forms.TreeView>控制項，其<xref:System.Windows.Forms.TreeNodeCollection>，其中包含數個<xref:System.Windows.Forms.TreeNode>物件。 它也需要有<xref:System.Windows.Forms.ComboBox>與下列項目:"Previous"、"PreviousVisible 」、 「 下一步，"NextVisible"、"First"和"Last"。  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>