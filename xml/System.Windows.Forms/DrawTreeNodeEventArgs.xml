<Type Name="DrawTreeNodeEventArgs" FullName="System.Windows.Forms.DrawTreeNodeEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5237a64511cc5d9ac0ef7537e00b3c807722106" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39730681" /></Metadata><TypeSignature Language="C#" Value="public class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawTreeNodeEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawTreeNodeEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawTreeNodeEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see cref="E:System.Windows.Forms.TreeView.DrawNode" /> 事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.TreeView.DrawNode>事件，以自訂中的節點外觀<xref:System.Windows.Forms.TreeView>使用主控描繪的控制項。  
  
 <xref:System.Windows.Forms.TreeView.DrawNode>引發事件時<xref:System.Windows.Forms.TreeView>控制其<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>屬性設定為<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>或<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>及其節點會顯示或更新。 <xref:System.Windows.Forms.DrawTreeNodeEventArgs>傳遞至事件處理常式包含要繪製及提供方法，以協助您繪製節點的節點的相關資訊。  
  
 使用<xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>或<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>屬性，以擷取要繪製之節點的相關資訊。 使用<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A>屬性，以執行實際的繪製所指定的區域內<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>屬性。 若要進行繪製，不需要是擁有者繪製該節點的作業系統，設定<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>屬性設`true`。  
  
 當<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>屬性設定為<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>，區域由<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>屬性包含僅限節點的標籤部分。 當<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>屬性設定為<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>，則<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>區域包含整個節點，包含圖示、 核取方塊、 加號和減號，通常使用的區域和線條連接的節點。  
  
   
  
## Examples  
 下列程式碼範例示範如何自訂<xref:System.Windows.Forms.TreeView>使用主控描繪的控制項。 <xref:System.Windows.Forms.TreeView>控制項在範例中顯示的標準節點標籤旁的選擇性節點標籤。 使用指定節點的標記<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>屬性。 <xref:System.Windows.Forms.TreeView>控制項也會使用自訂的色彩，包括將自訂的醒目提示色彩。  
  
 您可以自訂大部分的<xref:System.Windows.Forms.TreeView>設定色彩的色彩屬性，但選項醒目提示色彩不是做為屬性使用。 此外，預設選取項目反白顯示矩擴充只周圍節點標籤。 必須使用主控描繪，繪製節點標記，以及繪製夠大，無法包含節點標籤的自訂反白顯示矩形。  
  
 在範例中，處理常式<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>事件繪製節點標籤和自訂所選取的項目醒目提示以手動方式。 未選取的節點不需要自訂。 對於這些<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>屬性設定為`true`以便由作業系統繪製。  
  
 此外，處理常式<xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType>事件提供點擊測試。 根據預設，您可以選取節點，只能透過按一下其標籤周圍的區域。 <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType>事件處理常式如果有的話，請選取節點，此區域內或節點標記，周圍區域內任何位置按一下。  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
    <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
    <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.TreeNode node, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.TreeNodeStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawTreeNodeEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::TreeNode ^ node, System::Drawing::Rectangle bounds, System::Windows::Forms::TreeNodeStates state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawTreeNodeEventArgs : System.Drawing.Graphics * System.Windows.Forms.TreeNode * System.Drawing.Rectangle * System.Windows.Forms.TreeNodeStates -&gt; System.Windows.Forms.DrawTreeNodeEventArgs" Usage="new System.Windows.Forms.DrawTreeNodeEventArgs (graphics, node, bounds, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.TreeNodeStates" />
      </Parameters>
      <Docs>
        <param name="graphics">要繪製的 <see cref="T:System.Drawing.Graphics" /> 表層。</param>
        <param name="node">要繪製的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <param name="bounds">要於其中進行繪製的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="state"><see cref="T:System.Windows.Forms.TreeNodeStates" /> 值的位元組合，表示所要繪製 <see cref="T:System.Windows.Forms.TreeNode" /> 的目前狀態。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得所要繪製 <see cref="T:System.Windows.Forms.TreeNode" /> 的大小和位置。</summary>
        <value><see cref="T:System.Drawing.Rectangle" />，表示所要繪製 <see cref="T:System.Windows.Forms.TreeNode" /> 的界限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性所指定的位置是相對於左上角<xref:System.Windows.Forms.TreeView>控制項。  
  
 當<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>屬性設定為<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>，所指定的區域<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>屬性是在其中一個節點可以按一下來選取它的區域。 如果您繪製這個點擊的測試區域之外，您應該提供您自己的程式碼來選取節點，按一下其可見的區域時。 您也可以提供您自己的點擊的測試程式碼的時機<xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>屬性設定為<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>。 在此模式中，<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>屬性會包含整個節點的整個寬度<xref:System.Windows.Forms.TreeView>控制，而不是只要點擊的測試區域。  
  
   
  
## Examples  
 下列程式碼範例示範如何自訂<xref:System.Windows.Forms.TreeView>使用主控描繪的控制項。 <xref:System.Windows.Forms.TreeView>控制項在範例中顯示的標準節點標籤旁的選擇性節點標籤。 使用指定節點的標記<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>屬性。 <xref:System.Windows.Forms.TreeView>控制項也會使用自訂的色彩，包括將自訂的醒目提示色彩。  
  
 您可以自訂大部分的<xref:System.Windows.Forms.TreeView>設定色彩的色彩屬性，但選項醒目提示色彩不是做為屬性使用。 此外，預設選取項目反白顯示矩擴充只周圍節點標籤。 必須使用主控描繪，繪製節點標記，以及繪製夠大，無法包含節點標籤的自訂反白顯示矩形。  
  
 在範例中，處理常式<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>事件繪製節點標籤和自訂所選取的項目醒目提示以手動方式。 未選取的節點不需要自訂。 對於這些<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>屬性設定為`true`以便由作業系統繪製。  
  
 完整的範例，請參閱<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概觀參考主題。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否應該由作業系統繪製 <see cref="T:System.Windows.Forms.TreeNode" />，而不是由擁有者繪製。</summary>
        <value>如果應該由作業系統繪製節點，則為 <see langword="true" />；如果要由事件處理常式繪製節點，則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將此屬性設定為`true`不要自訂時您所處理的節點<xref:System.Windows.Forms.TreeView.DrawNode>事件。 比方說，這是很有用時您想要自訂會處於特定狀態的節點。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個屬性。 在範例中，處理常式<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>事件繪製節點標記，並自訂反白顯示色彩，以手動方式為選取的節點。 未選取的節點不需要自訂。 未選取的節點，如<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>屬性設定為`true`，這樣它們就會由作業系統繪製，不會有自訂的外觀。  
  
> [!NOTE]
>  如果您繪製節點以及手動設定<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>屬性設`true`，部分或所有您所繪製可能會覆寫作業系統。  
  
 完整的範例，請參閱<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概觀參考主題。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用來繪製 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.TreeNode" /> 物件。</summary>
        <value>用來繪製 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics>類別提供屬性和有用的方法，在顯示裝置上繪製。  
  
   
  
## Examples  
 下列程式碼範例示範如何自訂<xref:System.Windows.Forms.TreeView>使用主控描繪的控制項。 <xref:System.Windows.Forms.TreeView>控制項在範例中顯示的標準節點標籤旁的選擇性節點標籤。 使用指定節點的標記<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>屬性。 <xref:System.Windows.Forms.TreeView>控制項也會使用自訂的色彩，包括將自訂的醒目提示色彩。  
  
 您可以自訂大部分的<xref:System.Windows.Forms.TreeView>設定色彩的色彩屬性，但選項醒目提示色彩不是做為屬性使用。 此外，預設選取項目反白顯示矩擴充只周圍節點標籤。 必須使用主控描繪，繪製節點標記，以及繪製夠大，無法包含節點標籤的自訂反白顯示矩形。  
  
 在範例中，處理常式<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>事件繪製節點標籤和自訂所選取的項目醒目提示以手動方式。 未選取的節點不需要自訂。 對於這些<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>屬性設定為`true`以便由作業系統繪製。  
  
 完整的範例，請參閱<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概觀參考主題。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得要繪製的 <see cref="T:System.Windows.Forms.TreeNode" />。</summary>
        <value>要繪製的 <see cref="T:System.Windows.Forms.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性來存取<xref:System.Windows.Forms.TreeNode>来繪製物件。 這很有用，當<xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>屬性不提供足夠的資訊，以符合您的需求。 <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>屬性只會提供基本的狀態資訊，您可以使用，例如，若要判斷是否選取、 核取，或已取得焦點的節點。 <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>屬性，相反地，可讓您存取的所有成員<xref:System.Windows.Forms.TreeNode>物件。 您必須在節點直接存取，比方說，當您想要判斷其展開狀態。  
  
   
  
## Examples  
 下列程式碼範例示範如何自訂<xref:System.Windows.Forms.TreeView>使用主控描繪的控制項。 <xref:System.Windows.Forms.TreeView>控制項在範例中顯示的標準節點標籤旁的選擇性節點標籤。 使用指定節點的標記<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>屬性。 <xref:System.Windows.Forms.TreeView>控制項也會使用自訂的色彩，包括將自訂的醒目提示色彩。  
  
 您可以自訂大部分的<xref:System.Windows.Forms.TreeView>設定色彩的色彩屬性，但選項醒目提示色彩不是做為屬性使用。 此外，預設選取項目反白顯示矩擴充只周圍節點標籤。 必須使用主控描繪，繪製節點標記，以及繪製夠大，無法包含節點標籤的自訂反白顯示矩形。  
  
 在範例中，處理常式<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>事件繪製節點標籤和自訂所選取的項目醒目提示以手動方式。 未選取的節點不需要自訂。 對於這些<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>屬性設定為`true`以便由作業系統繪製。  
  
 完整的範例，請參閱<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概觀參考主題。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeNodeStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As TreeNodeStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeStates State { System::Windows::Forms::TreeNodeStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.TreeNodeStates" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得所要繪製 <see cref="T:System.Windows.Forms.TreeNode" /> 的目前狀態。</summary>
        <value><see cref="T:System.Windows.Forms.TreeNodeStates" /> 值的位元組合，表示 <see cref="T:System.Windows.Forms.TreeNode" /> 的目前狀態。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性來檢查是否<xref:System.Windows.Forms.TreeNode>物件來繪製處於特定狀態。 這個屬性會提供僅與節點有關的基本狀態資訊。 您可以使用這個屬性，例如，若要判斷是否選取、 核取，或已取得焦點的節點。 若要深入了解，擷取透過節點<xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>屬性。 例如，若要判斷是否要展開節點，您必須擷取節點並檢查<xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=nameWithType>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何自訂<xref:System.Windows.Forms.TreeView>使用主控描繪的控制項。 <xref:System.Windows.Forms.TreeView>控制項在範例中顯示的標準節點標籤旁的選擇性節點標籤。 使用指定節點的標記<xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType>屬性。 <xref:System.Windows.Forms.TreeView>控制項也會使用自訂的色彩，包括將自訂的醒目提示色彩。  
  
 您可以自訂大部分的<xref:System.Windows.Forms.TreeView>設定色彩的色彩屬性，但選項醒目提示色彩不是做為屬性使用。 此外，預設選取項目反白顯示矩擴充只周圍節點標籤。 必須使用主控描繪，繪製節點標記，以及繪製夠大，無法包含節點標籤的自訂反白顯示矩形。  
  
 在範例中，處理常式<xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType>事件繪製節點標籤和自訂所選取的項目醒目提示以手動方式。 未選取的節點不需要自訂。 對於這些<xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>屬性設定為`true`以便由作業系統繪製。  
  
 完整的範例，請參閱<xref:System.Windows.Forms.DrawTreeNodeEventArgs>概觀參考主題。  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>