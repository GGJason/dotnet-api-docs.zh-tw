<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8abd493a6fe9fe49fde83c679f6f6edbcbe902aa" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53229554" /></Metadata><TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewGroupCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表 <see cref="T:System.Windows.Forms.ListView" /> 控制項內的群組集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>屬性來取得<xref:System.Windows.Forms.ListViewGroupCollection>聯<xref:System.Windows.Forms.ListView>控制項。 此集合包含<xref:System.Windows.Forms.ListViewGroup>代表顯示於控制項中之群組的物件時<xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType>以外的其他屬性設定為值<xref:System.Windows.Forms.View.List?displayProperty=nameWithType>。 不會指派給群組的任何項目會出現在預設群組中，具有標頭標籤"DefaultGroup{0}"。 預設群組未包含在<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合，而且不能更改。 它主要是用於偵錯，以確保所有項目有已正確新增至群組。 如果在沒有群組<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合中，「 群組 」 功能已停用。  
  
 使用<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>方法，將單一的群組加入至集合。 使用<xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A>方法，將群組加入集合中的特定索引處。 若要移除的群組，請使用<xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>方法。 使用<xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>方法來移除特定索引處的群組。  
  
 您無法新增<xref:System.Windows.Forms.ListViewGroup>不止一次集合。 若要重新定位在集合中的群組，您必須先從集合移除，並再插入所需的位置。 使用<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>方法，以判斷特定的群組是否已在集合中。 若要擷取群組，以在集合中的索引，請使用<xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A>方法。 您可以取得或設定群組與特定索引處<xref:System.Windows.Forms.ListViewGroupCollection.Item%2A>索引子。  
  
 使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法，將多個群組加入至集合。 您可以新增多個群組，為群組或做為陣列<xref:System.Windows.Forms.ListViewGroupCollection>擷取透過<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>他人財產<xref:System.Windows.Forms.ListView>控制項。 使用<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法來移除集合中的所有群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>， <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>，並<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法，從集合中移除群組，但不是會移除任何項目<xref:System.Windows.Forms.ListView>控制項。 如果在沒有群組<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合群組功能已停用和控制項中的所有項目會正常顯示。  
  
 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>並<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法會很有用，當您想要提供多種方式可用來群組中的項目<xref:System.Windows.Forms.ListView>控制項。 若要這樣做，請建立多個群組陣列。 若要變更群組，請先使用<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法，從集合移除所有群組，然後使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法來加入 [下一步] 的陣列，要顯示的群組。  
  
 使用<xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A>方法，將群組複製到相容的陣列，指定索引處開始的集合中。 這非常有用，例如，當您想要排序群組在集合中使用<xref:System.Array.Sort%2A?displayProperty=nameWithType>方法。 若要這樣做，請將群組複製到相容的陣列，然後排序陣列。 接下來，使用<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法，從集合移除所有群組，然後使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法，將已排序的陣列加入集合。  
  
 使用<xref:System.Windows.Forms.ListViewGroupCollection.Count%2A>若要判定集合中有多少群組的屬性。 若要逐一查看集合，使用<xref:System.Collections.IEnumerator>傳回<xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A>方法。  
  
> [!NOTE]
>  「 群組 」 功能在您的應用程式呼叫時僅適用於 Windows XP 和 Windows Server 2003 系列<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>方法。 在舊版的作業系統，與群組相關的任何程式碼將會被忽略，並不會出現群組。 如此一來，取決於群組功能的任何程式碼可能無法正確運作。 您可能想要包含的測試，決定是否可以使用，「 群組 」 功能，並提供替代功能，無法使用時。 例如，您可以提供替代的排序時不支援依群組排序的作業系統上執行。  
>   
>  插入標記功能會提供相同的程式庫，提供作業系統的佈景主題功能。 若要檢查此程式庫的可用性，請呼叫<xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>方法多載，並傳入<xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>值。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Forms.ListView>來組織項目詳細資料檢視中的子項目值的分組功能。 這種形式是群組的類似於 Windows 檔案總管中所使用的群組。 在範例中，會以動態方式建立的群組。 每一個子項目的資料行中，一個群組會針對每個唯一子項目的值。 父項目資料行中，建立一個群組的每個唯一的首字母。 按一下資料行標頭的項目排序到建立該資料行的群組。 再次按一下相同的資料行標頭會回復群組的順序。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Windows.Forms.ListViewGroup" /> 加入集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.Add group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">要加入至集合的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>將指定的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 加入至集合。</summary>
        <returns>群組在集合內的索引；如果群組已在集合中，則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來加入現有<xref:System.Windows.Forms.ListViewGroup>至集合。 您無法新增<xref:System.Windows.Forms.ListViewGroup>不止一次集合。 當您呼叫<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>方法使用<xref:System.Windows.Forms.ListViewGroup>已經在集合中，新增會失敗，則傳回-1。  
  
 若要加入集合中的多個群組，請使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="group" /> 包含的 <see cref="T:System.Windows.Forms.ListViewItem" /> 中，至少有一個屬於不是擁有此 <see cref="T:System.Windows.Forms.ListView" /> 的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 控制項。</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Windows.Forms.ListViewGroup" Usage="listViewGroupCollection.Add (key, headerText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">新群組之 <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> 屬性的初始值。</param>
        <param name="headerText">新群組之 <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> 屬性的初始值。</param>
        <summary>使用指定的值將新的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 加入集合，以初始化 <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> 和 <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> 屬性。</summary>
        <returns>新的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將多個群組加入至集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroup[] -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups"><see cref="T:System.Windows.Forms.ListViewGroup" /> 型別的陣列，指定要加入至集合的群組。</param>
        <summary>將群組陣列加入至集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此版本的<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法，將群組陣列加入至群組集合。 這個方法很有用，當您建立多個<xref:System.Windows.Forms.ListViewGroup>物件，並想要將它們新增至具有單一方法呼叫的集合。 若要加入集合中的個別群組，請使用<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>方法。  
  
 這個方法也很有用時您想要提供多種方式可用來群組中的項目<xref:System.Windows.Forms.ListView>控制項。 若要這樣做，請建立多個群組陣列。 若要變更群組，請先使用<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法，從集合移除所有群組，然後使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法來加入群組的不同的陣列。  
  
 不同於<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>方法，<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法沒有傳回值，可用來判斷是否要加入的群組已存在集合中。 如果您需要此資訊，請使用<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>方法，然後再使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法。  
  
   
  
## Examples  
 下列範例示範如何<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法可用的應用程式，會將組織<xref:System.Windows.Forms.ListView>詳細資料檢視中的子項目值的項目。 這種形式是群組的類似於 Windows 檔案總管中所使用的群組。 在範例中，會以動態方式建立的群組。 每一個子項目的資料行中，一個群組會針對每個唯一子項目的值。 父項目資料行中，建立一個群組的每個唯一的首字母。 針對每個資料行建立的群組會儲存在雜湊表，以及首字母的子項目文字。 按一下資料行標頭時，<xref:System.Windows.Forms.ListViewGroupCollection>已清除。 然後會擷取對應至所按資料行的雜湊表，每個項目指派給適當的群組。 最後，將已排序的陣列的雜湊表中的群組新增至<xref:System.Windows.Forms.ListViewGroupCollection>。  
  
 完整的範例，請參閱<xref:System.Windows.Forms.ListViewGroupCollection>概觀參考主題。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="groups" /> 至少包含一個群組，其中至少有一個 <see cref="T:System.Windows.Forms.ListViewItem" /> 屬於不是擁有此 <see cref="T:System.Windows.Forms.ListView" /> 的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 控制項。</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroupCollection -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups"><see cref="T:System.Windows.Forms.ListViewGroupCollection" />，含有要加入至集合的群組。</param>
        <summary>將現有 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 中的群組加入集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此版本<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法來加入的項目<xref:System.Windows.Forms.ListViewGroupCollection>擷取透過<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>不同屬性<xref:System.Windows.Forms.ListView>控制項。  
  
 不同於<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>方法，<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法沒有傳回值，可用來判斷是否要加入的群組已存在集合中。 如果您需要此資訊，請使用<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>方法，然後再使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="groups" /> 至少包含一個群組，其中至少有一個 <see cref="T:System.Windows.Forms.ListViewItem" /> 屬於不是擁有此 <see cref="T:System.Windows.Forms.ListView" /> 的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 控制項。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewGroupCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除集合中所有的群組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從集合中移除所有群組中使用這個方法。 請注意，移除群組從<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合並不會移除項目從<xref:System.Windows.Forms.ListView>控制項。  
  
 此方法相當實用，若要停用分組功能。 當沒有任何群組中的<xref:System.Windows.Forms.ListView>控制，通常顯示的項目。 若要從集合中移除個別的群組，請使用<xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>或<xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>方法。  
  
 當您想要提供多種方式可用來群組項目時，這個方法也很有用。 若要變更群組，請先使用<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法，從集合移除所有群組，然後使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法來加入群組的不同的陣列。  
  
   
  
## Examples  
 下列範例示範如何<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法可用的應用程式，會將組織<xref:System.Windows.Forms.ListView>詳細資料檢視中的子項目值的項目。 這種形式是群組的類似於 Windows 檔案總管中所使用的群組。 在範例中，會以動態方式建立的群組。 每一個子項目的資料行中，一個群組會針對每個唯一子項目的值。 父項目資料行中，建立一個群組的每個唯一的首字母。 針對每個資料行建立的群組會儲存在雜湊表，以及首字母的子項目文字。 按一下資料行標頭時，<xref:System.Windows.Forms.ListViewGroupCollection>已清除。 然後會擷取對應至所按資料行的雜湊表，每個項目指派給適當的群組。 最後，將已排序的陣列的雜湊表中的群組新增至<xref:System.Windows.Forms.ListViewGroupCollection>。  
  
 完整的範例，請參閱<xref:System.Windows.Forms.ListViewGroupCollection>概觀參考主題。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewGroup -&gt; bool" Usage="listViewGroupCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">要在集合中尋找的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>判斷指定的群組是否位於集合中。</summary>
        <returns>如果群組位在集合中則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您無法新增<xref:System.Windows.Forms.ListViewGroup>不止一次集合。 不過，嘗試加入另一個複本不會擲回例外狀況。 相反地，新增將會失敗。 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>方法會在此情況下傳回-1 值。 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>和<xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A>方法，不過，沒有傳回值。 新增時使用這些方法的其中一個群組，使用<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>方法，以判斷是否特定<xref:System.Windows.Forms.ListViewGroup>已經存在於集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewGroupCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">群組複製到的 <see cref="T:System.Array" />。</param>
        <param name="index">群組複製到的陣列內的第一個索引。</param>
        <summary>將集合中的群組複製到相容的一維 <see cref="T:System.Array" />，從目標陣列的指定索引開始。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A>方法，將集合 （包括其所包含的項目參考） 中的群組複製到相容的陣列，指定索引處開始。 這非常有用，例如，當您想要排序群組在集合中使用<xref:System.Array.Sort%2A?displayProperty=nameWithType>方法。 若要這樣做，請將群組複製到相容的陣列，然後排序陣列。 接下來，使用<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法，從集合移除所有群組，然後使用<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>方法，將已排序的陣列加入集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得集合中的群組數目。</summary>
        <value>集合中的群組數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性來判斷集合中的群組數目。 當您需要的集合執行迴圈，並執行相同的作業，針對每個群組時，這非常有用。 您也可以使用<xref:System.Collections.IEnumerator>所傳回<xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A>方法來逐一查看集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewGroupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回用來逐一查看集合的列舉值。</summary>
        <returns><see cref="T:System.Collections.IEnumerator" />，表示集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您需要逐一查看要執行相同的作業，針對每個群組的集合時，此方法相當實用。 也可以循環使用每個群組，一次的集合使用<xref:System.Windows.Forms.ListViewGroupCollection.Count%2A>屬性來判斷迴圈的數目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">要在集合中尋找的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>傳回集合中指定 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的索引。</summary>
        <returns>群組在集合內的以零起始索引；如果群組不在集合中，則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來判斷集合中群組的索引。 這非常有用，例如，若要判斷每個群組的索引，當您逐一查看集合時<xref:System.Collections.IEnumerator>所傳回<xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Insert (index, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">集合內要插入群組的索引處。</param>
        <param name="group">要插入至集合的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>將指定的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 插入至集合中的指定索引處。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來插入現有<xref:System.Windows.Forms.ListViewGroup>集合內的特定索引處。  
  
 您無法新增<xref:System.Windows.Forms.ListViewGroup>不止一次集合。 當您呼叫<xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A>方法使用的群組已經在集合中，插入只會失敗。 使用<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>來判斷特定的群組是否已在集合中插入之前的方法。 重新定位在集合中的群組，您必須先移除它，並再將其插入所需的索引處。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得或設定集合中的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">在要取得或設定的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 集合中的索引。</param>
        <summary>取得或設定集合內位於指定索引處的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewGroup" />，位於集合中指定的索引處。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性可以用於擷取集合中的指定索引處的群組。 當您有群組物件的參考，而且需要索引時，使用<xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 小於 0，或大於等於 <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要取得或設定的群組名稱。</param>
        <summary>取得或設定具有指定之 <see cref="T:System.Windows.Forms.ListViewGroup" /> 屬性值的 <see cref="P:System.Windows.Forms.ListViewGroup.Name" />。</summary>
        <value>具有指定名稱的 <see cref="T:System.Windows.Forms.ListViewGroup" />，如果沒有這種 <see cref="T:System.Windows.Forms.ListViewGroup" /> 則為 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Remove group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">要從集合中移除的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>從集合移除指定的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從集合移除群組，當您有群組的參考時使用這個方法。 請注意，從群組移除<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合並不會移除項目從<xref:System.Windows.Forms.ListView>控制項。  
  
 若要移除特定索引處的群組，請使用<xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>方法改為。 若要從集合移除所有群組，請使用<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewGroupCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合內要移除之 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的索引。</param>
        <summary>移除集合中位於指定索引處的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從集合移除的群組，您已在集合中群組的索引時使用這個方法。 請注意，移除群組從<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合並不會移除項目從<xref:System.Windows.Forms.ListView>控制項。  
  
 若要移除群組，使用物件的參考，請使用<xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>方法改為。 若要從集合移除所有群組，請使用<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>方法。 當您從集合移除項目時，在集合中的後續項目索引將會變更。 已移除的項目相關的所有資訊都會都刪除。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示是否同步化存取集合 (執行緒安全)。</summary>
        <value>所有情況下都是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得物件，這個物件可以用來對集合進行同步存取。</summary>
        <value>用來同步處理集合的物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要加入至 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</param>
        <summary>將新的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 加入至 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</summary>
        <returns>已加入 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的索引。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> 不是 <see cref="T:System.Windows.Forms.ListViewGroup" />。  
  
-或- 
 <paramref name="value" /> 包含的 <see cref="T:System.Windows.Forms.ListViewItem" /> 中，至少有一個屬於不是擁有此 <see cref="T:System.Windows.Forms.ListView" /> 的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 控制項。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">表示要在集合中尋找之 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的物件。</param>
        <summary>判斷指定的數值是否位於集合中。</summary>
        <returns>如果 <paramref name="value" /> 是集合中包含的 <see cref="T:System.Windows.Forms.ListViewGroup" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要在 <see cref="T:System.Windows.Forms.ListViewGroup" /> 中尋找的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</param>
        <summary>傳回指定值在集合內的索引。</summary>
        <returns>如果該值位於集合中，則為 <paramref name="value" /> 之以零起始的索引，否則為 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">在集合中加入 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的位置。</param>
        <param name="value">要加入至集合的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>將 <see cref="T:System.Windows.Forms.ListViewGroup" /> 插入至 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`value`不是<xref:System.Windows.Forms.ListViewGroup>，它將不會加入至集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示集合的大小是否是固定的。</summary>
        <value>所有情況下都是 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示集合是否為唯讀。</summary>
        <value>所有情況下都是 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要取得或設定之以零為起始的項目索引。</param>
        <summary>取得或設定集合內位於指定索引處的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewGroup" />，表示集合中位於指定索引處的項目。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要從 <see cref="T:System.Windows.Forms.ListViewGroup" /> 移除的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</param>
        <summary>從 <see cref="T:System.Windows.Forms.ListViewGroup" /> 中移除 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>