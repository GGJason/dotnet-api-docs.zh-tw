<Type Name="MenuItem" FullName="System.Windows.Forms.MenuItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a045b9fca935bcd9374b2814300acbc021bce54b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuItem extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Forms::Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ed973-101">表示 <see cref="T:System.Windows.Forms.MainMenu" /> 或 <see cref="T:System.Windows.Forms.ContextMenu" /> 中顯示的個別項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed973-101">Represents an individual item that is displayed within a <see cref="T:System.Windows.Forms.MainMenu" /> or <see cref="T:System.Windows.Forms.ContextMenu" />.</span>
      </span>
      <span data-ttu-id="ed973-102">雖然 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 會取代並且將功能加入至之前版本的 <see cref="T:System.Windows.Forms.MenuItem" /> 控制項；不過，也可以選擇保留 <see cref="T:System.Windows.Forms.MenuItem" />，以提供回溯相容性 (Backward Compatibility) 以及供未來使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed973-102">Although <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> replaces and adds functionality to the <see cref="T:System.Windows.Forms.MenuItem" /> control of previous versions, <see cref="T:System.Windows.Forms.MenuItem" /> is retained for both backward compatibility and future use if you choose.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-103">為了讓<xref:System.Windows.Forms.MenuItem>若要顯示，您必須新增至<xref:System.Windows.Forms.MainMenu>或<xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="ed973-103">In order for a <xref:System.Windows.Forms.MenuItem> to be displayed, you must add it to a <xref:System.Windows.Forms.MainMenu> or <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="ed973-104">若要建立子功能表，您可以加入<xref:System.Windows.Forms.MenuItem>物件加入至<xref:System.Windows.Forms.Menu.MenuItems%2A>屬性之父代<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-104">To create submenus, you can add <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.Menu.MenuItems%2A> property of the parent <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 <span data-ttu-id="ed973-105"><xref:System.Windows.Forms.MenuItem>類別提供的內容，讓您設定的外觀和功能的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-105">The <xref:System.Windows.Forms.MenuItem> class provides properties that enable you to configure the appearance and functionality of a menu item.</span></span> <span data-ttu-id="ed973-106">若要顯示功能表項目旁的核取記號，請使用<xref:System.Windows.Forms.MenuItem.Checked%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ed973-106">To display a check mark next to a menu item, use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property.</span></span> <span data-ttu-id="ed973-107">您可以使用這項功能，來識別在互斥的功能表項目清單中選取的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-107">You can use this feature to identify a menu item that is selected in a list of mutually exclusive menu items.</span></span> <span data-ttu-id="ed973-108">例如，如果您有一組功能表項目來設定中的文字色彩的<xref:System.Windows.Forms.TextBox>控制項，您可以使用<xref:System.Windows.Forms.MenuItem.Checked%2A>屬性來識別目前選取的色彩。</span><span class="sxs-lookup"><span data-stu-id="ed973-108">For example, if you have a set of menu items for setting the color of text in a <xref:System.Windows.Forms.TextBox> control, you can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify which color is currently selected.</span></span> <span data-ttu-id="ed973-109"><xref:System.Windows.Forms.MenuItem.Shortcut%2A>屬性可以用來定義要選取功能表項目是可以按下鍵盤組合。</span><span class="sxs-lookup"><span data-stu-id="ed973-109">The <xref:System.Windows.Forms.MenuItem.Shortcut%2A> property can be used to define a keyboard combination that can be pressed to select the menu item.</span></span>  
  
 <span data-ttu-id="ed973-110">如<xref:System.Windows.Forms.MenuItem>多重文件介面 (MDI) 應用程式中顯示的物件，您可以使用<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法，將合併的 MDI 功能表的父代與它的子表單，以建立合併的功能表結構。</span><span class="sxs-lookup"><span data-stu-id="ed973-110">For <xref:System.Windows.Forms.MenuItem> objects displayed in a Multiple Document Interface (MDI) application, you can use the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menus of an MDI parent for with that of its child forms to create a consolidated menu structure.</span></span> <span data-ttu-id="ed973-111">因為<xref:System.Windows.Forms.MenuItem>無法重複使用多個位置中同時，例如在<xref:System.Windows.Forms.MainMenu>和<xref:System.Windows.Forms.ContextMenu>，您可以使用<xref:System.Windows.Forms.MenuItem.CloneMenu%2A>方法來建立一份<xref:System.Windows.Forms.MenuItem>用於另一個位置。</span><span class="sxs-lookup"><span data-stu-id="ed973-111">Because a <xref:System.Windows.Forms.MenuItem> cannot be reused in multiple locations at the same time, such as in a <xref:System.Windows.Forms.MainMenu> and a <xref:System.Windows.Forms.ContextMenu>, you can use the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> for use in another location.</span></span>  
  
 <span data-ttu-id="ed973-112"><xref:System.Windows.Forms.MenuItem.Popup>事件可讓您執行工作，才能在顯示的功能表。</span><span class="sxs-lookup"><span data-stu-id="ed973-112">The <xref:System.Windows.Forms.MenuItem.Popup> event enables you to perform tasks before a menu is displayed.</span></span> <span data-ttu-id="ed973-113">例如，您可以建立此事件，以顯示或隱藏功能表項目，根據您的程式碼狀態的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-113">For example, you can create an event handler for this event to display or hide menu items based on the state of your code.</span></span> <span data-ttu-id="ed973-114"><xref:System.Windows.Forms.MenuItem.Select>事件可讓您執行工作，例如當使用者將滑鼠指標放在功能表項目時，應用程式的功能表項目提供詳細的說明。</span><span class="sxs-lookup"><span data-stu-id="ed973-114">The <xref:System.Windows.Forms.MenuItem.Select> event enables you to perform tasks such as providing detailed help for your application's menu items when the user places the mouse pointer over a menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-115">下列程式碼範例會建立表單的功能表結構。</span><span class="sxs-lookup"><span data-stu-id="ed973-115">The following code example creates a menu structure for a form.</span></span> <span data-ttu-id="ed973-116">範例程式碼加入<xref:System.Windows.Forms.MenuItem>，表示最上層功能表項目中，選取字型的大小，將子功能表項目加入至它，然後將兩個子功能表項目加入至該功能表項目代表應用程式中的大型和小型的字型選項。</span><span class="sxs-lookup"><span data-stu-id="ed973-116">The example code adds a <xref:System.Windows.Forms.MenuItem> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application.</span></span> <span data-ttu-id="ed973-117">這個範例需要有<xref:System.Windows.Forms.MainMenu>名為物件`mainMenu1`和第四個<xref:System.Windows.Forms.MenuItem>物件命名`menuItem1`， `menuItem2`， `menuItem3`，和`menuItem4`。</span><span class="sxs-lookup"><span data-stu-id="ed973-117">The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four <xref:System.Windows.Forms.MenuItem> objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.</span></span>  
  
 [!code-cpp[Classic Menu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu Example/CS/source.cs#1)]
 [!code-vb[Classic Menu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MainMenu" />
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuMerge" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-118">初始化 <see cref="T:System.Windows.Forms.MenuItem" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed973-119">使用空白標題來初始化 <see cref="T:System.Windows.Forms.MenuItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-119">Initializes a <see cref="T:System.Windows.Forms.MenuItem" /> with a blank caption.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-120">一旦您建立空白<xref:System.Windows.Forms.MenuItem>使用這個建構函式，您可以使用的屬性和方法的<xref:System.Windows.Forms.MenuItem>類別，以指定的外觀和行為您<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-120">Once you have created a blank <xref:System.Windows.Forms.MenuItem> using this constructor, you can use the properties and methods of the <xref:System.Windows.Forms.MenuItem> class to specify the appearance and behavior of your <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-121">下列程式碼範例會建立<xref:System.Windows.Forms.MenuItem>使用這個版本的建構函式。</span><span class="sxs-lookup"><span data-stu-id="ed973-121">The following code example creates a <xref:System.Windows.Forms.MenuItem> using this version of the constructor.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="ed973-122">功能表項目的標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-122">The caption for the menu item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-123">使用功能表項目的指定標題來初始化 <see cref="T:System.Windows.Forms.MenuItem" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-123">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption for the menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-124">當您指定的標題與功能表項目的`text`參數，您也可以指定存取金鑰放入來作為存取金鑰字元之前 '&' 字元。</span><span class="sxs-lookup"><span data-stu-id="ed973-124">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' character before the character to be used as the access key.</span></span> <span data-ttu-id="ed973-125">例如，若要指定 「 檔案 」 中的"F"做為存取金鑰，您會指定做為功能表項目的標題"& 檔案 」。</span><span class="sxs-lookup"><span data-stu-id="ed973-125">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="ed973-126">您可以使用這項功能可提供功能表的鍵盤巡覽。</span><span class="sxs-lookup"><span data-stu-id="ed973-126">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="ed973-127">設定`text`參數 」`-`"會導致您的功能表項目顯示為分隔符號 （水平列），而不是標準功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-127">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-128">下列程式碼範例會建立<xref:System.Windows.Forms.MenuItem>在建構階段指定功能表項目的標題。</span><span class="sxs-lookup"><span data-stu-id="ed973-128">The following code example creates a <xref:System.Windows.Forms.MenuItem> that specifies the caption of the menu item at the time it is constructed.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, onClick As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="ed973-129">功能表項目的標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-129">The caption for the menu item.</span>
          </span>
        </param>
        <param name="onClick">
          <span data-ttu-id="ed973-130">
            <see cref="T:System.EventHandler" />，處理這個功能表項目的 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-130">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-131">使用指定的標題和功能表項目的 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件的事件處理常式，初始化類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-131">Initializes a new instance of the class with a specified caption and event handler for the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event of the menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-132">當您指定的標題與功能表項目的`text`參數，您也可以指定存取金鑰前放置一個 '&' 字元來作為存取金鑰。</span><span class="sxs-lookup"><span data-stu-id="ed973-132">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="ed973-133">例如，若要指定 「 檔案 」 中的"F"做為存取金鑰，您會指定做為功能表項目的標題"& 檔案 」。</span><span class="sxs-lookup"><span data-stu-id="ed973-133">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="ed973-134">您可以使用這項功能可提供功能表的鍵盤巡覽。</span><span class="sxs-lookup"><span data-stu-id="ed973-134">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="ed973-135">設定`text`參數 」`-`"會導致您的功能表項目顯示為分隔符號 （水平列），而不是標準功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-135">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="ed973-136">此外，您可以使用這個建構函式來指定將處理委派<xref:System.Windows.Forms.MenuItem.Click>功能表項目所建立的事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-136">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="ed973-137"><xref:System.EventHandler>必須設定您將傳遞給這個建構函式呼叫事件處理常式可以處理<xref:System.Windows.Forms.MenuItem.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-137">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="ed973-138">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-138">For more information on handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-139">下列程式碼範例會建立<xref:System.Windows.Forms.MenuItem>物件與指定的標題和<xref:System.EventHandler>連線將處理之事件處理常式的委派<xref:System.Windows.Forms.MenuItem.Click>功能表項目的事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-139">The following code example creates a <xref:System.Windows.Forms.MenuItem> object with a specified caption and an <xref:System.EventHandler> delegate connected to an event handler that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="ed973-140">功能表項目的標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-140">The caption for the menu item.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="ed973-141">
            <see cref="T:System.Windows.Forms.MenuItem" /> 物件陣列，含有這個功能表項目的子功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-141">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-142">使用指定標題和為功能表項目定義的子功能表項目陣列，來初始化類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-142">Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-143">當您指定的標題與功能表項目的`text`參數，您也可以指定存取金鑰前放置一個 '&' 字元來作為存取金鑰。</span><span class="sxs-lookup"><span data-stu-id="ed973-143">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="ed973-144">例如，若要指定 「 檔案 」 中的"F"做為存取金鑰，您會指定做為功能表項目的標題"& 檔案 」。</span><span class="sxs-lookup"><span data-stu-id="ed973-144">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="ed973-145">您可以使用這項功能可提供功能表的鍵盤巡覽。</span><span class="sxs-lookup"><span data-stu-id="ed973-145">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="ed973-146">設定`text`參數 」`-`"會導致您的功能表項目顯示為分隔符號 （水平列），而不是標準功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-146">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="ed973-147">`items`參數可讓您指派來定義這個功能表項目的子功能表的功能表項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="ed973-147">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="ed973-148">陣列中的每個項目也可以指派給它的功能表項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="ed973-148">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="ed973-149">這可讓您建立完整的功能表結構，並將它們指派給功能表項目的建構函式。</span><span class="sxs-lookup"><span data-stu-id="ed973-149">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="ed973-150">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-150">For more information on handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-151">下列程式碼範例中建立物件與指定的標題，事件處理常式會處理事件的方法，來連接每個功能表項目的子功能表項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="ed973-151">The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick, System.Windows.Forms.Shortcut shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick, valuetype System.Windows.Forms.Shortcut shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick, System::Windows::Forms::Shortcut shortcut);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="ed973-152">功能表項目的標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-152">The caption for the menu item.</span>
          </span>
        </param>
        <param name="onClick">
          <span data-ttu-id="ed973-153">
            <see cref="T:System.EventHandler" />，處理這個功能表項目的 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-153">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span>
          </span>
        </param>
        <param name="shortcut">
          <span data-ttu-id="ed973-154">其中一個 <see cref="T:System.Windows.Forms.Shortcut" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-154">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-155">使用指定的標題、事件處理常式，和功能表項目的相關快速鍵，來初始化類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-155">Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-156">當您指定的標題與功能表項目的`text`參數，您也可以指定存取金鑰前放置一個 '&' 字元來作為存取金鑰。</span><span class="sxs-lookup"><span data-stu-id="ed973-156">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="ed973-157">例如，若要指定 「 檔案 」 中的"F"做為存取金鑰，您會指定做為功能表項目的標題"& 檔案 」。</span><span class="sxs-lookup"><span data-stu-id="ed973-157">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="ed973-158">您可以使用這項功能可提供功能表的鍵盤巡覽。</span><span class="sxs-lookup"><span data-stu-id="ed973-158">You can use this feature to provide keyboard navigation for your menus.</span></span> <span data-ttu-id="ed973-159">這個建構函式也可讓您指定除了便捷鍵，以提供鍵盤導覽的快速鍵。</span><span class="sxs-lookup"><span data-stu-id="ed973-159">This constructor also enables you to specify a shortcut key in addition to an access key to provide keyboard navigation.</span></span> <span data-ttu-id="ed973-160">快速鍵可讓您指定的機碼，可用來啟用功能表項目組合。</span><span class="sxs-lookup"><span data-stu-id="ed973-160">Shortcut keys allow you to specify a combination of keys that can be used to activate the menu item.</span></span>  
  
 <span data-ttu-id="ed973-161">設定`text`參數 」`-`"會導致您的功能表項目顯示為分隔符號 （水平列），而不是標準功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-161">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="ed973-162">此外，您可以使用這個建構函式來指定將處理委派<xref:System.Windows.Forms.MenuItem.Click>功能表項目所建立的事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-162">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="ed973-163"><xref:System.EventHandler>必須設定您將傳遞給這個建構函式呼叫事件處理常式可以處理<xref:System.Windows.Forms.MenuItem.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-163">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="ed973-164">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-164">For more information on handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-165">下列程式碼範例會建立指定的標題、 攠摝坫與事件處理常式會處理功能表項目的事件的方法，來連接物件。</span><span class="sxs-lookup"><span data-stu-id="ed973-165">The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (System.Windows.Forms.MenuMerge mergeType, int mergeOrder, System.Windows.Forms.Shortcut shortcut, string text, EventHandler onClick, EventHandler onPopup, EventHandler onSelect, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MenuMerge mergeType, int32 mergeOrder, valuetype System.Windows.Forms.Shortcut shortcut, string text, class System.EventHandler onClick, class System.EventHandler onPopup, class System.EventHandler onSelect, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::Windows::Forms::MenuMerge mergeType, int mergeOrder, System::Windows::Forms::Shortcut shortcut, System::String ^ text, EventHandler ^ onClick, EventHandler ^ onPopup, EventHandler ^ onSelect, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mergeType" Type="System.Windows.Forms.MenuMerge" />
        <Parameter Name="mergeOrder" Type="System.Int32" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="onPopup" Type="System.EventHandler" />
        <Parameter Name="onSelect" Type="System.EventHandler" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="mergeType">
          <span data-ttu-id="ed973-166">其中一個 <see cref="T:System.Windows.Forms.MenuMerge" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-166">One of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span>
          </span>
        </param>
        <param name="mergeOrder">
          <span data-ttu-id="ed973-167">此功能表項目在合併的功能表中採用的相對位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-167">The relative position that this menu item will take in a merged menu.</span>
          </span>
        </param>
        <param name="shortcut">
          <span data-ttu-id="ed973-168">其中一個 <see cref="T:System.Windows.Forms.Shortcut" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-168">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="ed973-169">功能表項目的標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-169">The caption for the menu item.</span>
          </span>
        </param>
        <param name="onClick">
          <span data-ttu-id="ed973-170">
            <see cref="T:System.EventHandler" />，處理這個功能表項目的 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-170">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span>
          </span>
        </param>
        <param name="onPopup">
          <span data-ttu-id="ed973-171">
            <see cref="T:System.EventHandler" />，處理這個功能表項目的 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-171">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event for this menu item.</span>
          </span>
        </param>
        <param name="onSelect">
          <span data-ttu-id="ed973-172">
            <see cref="T:System.EventHandler" />，處理這個功能表項目的 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-172">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="ed973-173">
            <see cref="T:System.Windows.Forms.MenuItem" /> 物件陣列，含有這個功能表項目的子功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-173">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-174">使用指定的標題；為 <see cref="T:System.Windows.Forms.MenuItem" />、<see cref="E:System.Windows.Forms.MenuItem.Click" /> 和 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件定義的事件處理常式；快速鍵；合併型別；和為功能表項目指定的順序，來初始化 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-174">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption; defined event-handlers for the <see cref="E:System.Windows.Forms.MenuItem.Click" />, <see cref="E:System.Windows.Forms.MenuItem.Select" /> and <see cref="E:System.Windows.Forms.MenuItem.Popup" /> events; a shortcut key; a merge type; and order specified for the menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-175">當您指定的標題與功能表項目的`text`參數，您也可以指定存取金鑰前放置一個 '&' 字元來作為存取金鑰。</span><span class="sxs-lookup"><span data-stu-id="ed973-175">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="ed973-176">例如，若要指定 「 檔案 」 中的"F"做為存取金鑰，您會指定做為功能表項目的標題"& 檔案 」。</span><span class="sxs-lookup"><span data-stu-id="ed973-176">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="ed973-177">您可以使用這項功能可提供功能表的鍵盤巡覽。</span><span class="sxs-lookup"><span data-stu-id="ed973-177">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="ed973-178">設定`text`參數 」`-`"會導致您的功能表項目顯示為分隔符號 （水平列），而不是標準功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-178">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="ed973-179">`items`參數可讓您指派來定義這個功能表項目的子功能表的功能表項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="ed973-179">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="ed973-180">陣列中的每個項目也可以指派給它的功能表項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="ed973-180">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="ed973-181">這可讓您建立完整的功能表結構，並將它們指派給功能表項目的建構函式。</span><span class="sxs-lookup"><span data-stu-id="ed973-181">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="ed973-182">`mergeType`和`mergeOrder`參數可讓您判斷此功能表項目與另一個功能表合併的功能表項目之後的行為。</span><span class="sxs-lookup"><span data-stu-id="ed973-182">The `mergeType` and `mergeOrder` parameters allow you to determine how this menu item will behave when the menu item is merged with another menu.</span></span> <span data-ttu-id="ed973-183">您指定的值而定`mergeType`參數，您可以新增、 移除、 取代或合併的功能表項目及與它與合併的功能表及其子功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-183">Depending on the value you specify for the `mergeType` parameter, you can either add, remove, replace, or merge the menu item and its submenu items with the menu that it is merging with.</span></span> <span data-ttu-id="ed973-184">`mergeOrder`參數會決定功能表合併時其中放置所建立的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-184">The `mergeOrder` parameter determines where the menu item being created will be positioned when the menu is merged.</span></span>  
  
 <span data-ttu-id="ed973-185">此外，您可以使用這個建構函式來建立<xref:System.Windows.Forms.MenuItem>，並讓它連接至事件處理常式會處理功能表項目的按一下程式碼中。</span><span class="sxs-lookup"><span data-stu-id="ed973-185">In addition, you can use this constructor to create a <xref:System.Windows.Forms.MenuItem> and have it connected to an event handler in your code that will process the click of the menu item.</span></span> <span data-ttu-id="ed973-186"><xref:System.EventHandler>傳入此建構函式應該設定為呼叫事件處理常式可以處理<xref:System.Windows.Forms.MenuItem.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-186">The <xref:System.EventHandler> that you pass into this constructor should be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="ed973-187">藉由使用這個建構函式版本，您也可以連接<xref:System.Windows.Forms.MenuItem.Popup>和<xref:System.Windows.Forms.MenuItem.Select>事件，以判斷當選取此功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-187">By using this constructor version, you can also connect the <xref:System.Windows.Forms.MenuItem.Popup> and <xref:System.Windows.Forms.MenuItem.Select> events to determine when this menu item is selected.</span></span> <span data-ttu-id="ed973-188">您可以使用這些事件的工作，例如決定顯示子功能表項目旁的核取記號，或要啟用或停用應用程式的狀態為基礎的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-188">You can use these events for tasks such as determining whether or not to display a check mark next to submenu items or to enable or disable menu items based on the state of the application.</span></span> <span data-ttu-id="ed973-189"><xref:System.Windows.Forms.MenuItem.Select>和<xref:System.Windows.Forms.MenuItem.Click>會引發事件，僅適用於<xref:System.Windows.Forms.MenuItem>的物件不父功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-189">The <xref:System.Windows.Forms.MenuItem.Select> and <xref:System.Windows.Forms.MenuItem.Click> events are raised only for <xref:System.Windows.Forms.MenuItem> objects that are not parent menu items.</span></span> <span data-ttu-id="ed973-190">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-190">For more information on handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-191">下列程式碼範例會建立具有標題和快速鍵的索引鍵的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-191">The following code example creates a menu item that has a caption and shortcut key.</span></span> <span data-ttu-id="ed973-192">功能表項目也有定義的事件處理常式<xref:System.Windows.Forms.MenuItem.Popup>， <xref:System.Windows.Forms.MenuItem.Click>，和<xref:System.Windows.Forms.MenuItem.Select>事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-192">The menu item also has event handlers defined for the <xref:System.Windows.Forms.MenuItem.Popup>, <xref:System.Windows.Forms.MenuItem.Click>, and <xref:System.Windows.Forms.MenuItem.Select> events.</span></span> <span data-ttu-id="ed973-193">如果合併這個功能表項目，它會將功能表項目，加入具有零的合併式順序的功能表。</span><span class="sxs-lookup"><span data-stu-id="ed973-193">If this menu item is merged, it will add the menu item to the menu with the merge order of zero.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Popup" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Select" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="BarBreak">
      <MemberSignature Language="C#" Value="public bool BarBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BarBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.BarBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property BarBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BarBreak { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-194">取得或設定值，指出 <see cref="T:System.Windows.Forms.MenuItem" /> 是放在新的一行 (對加入至 <see cref="T:System.Windows.Forms.MainMenu" /> 物件的功能表項目而言) 還是新的一欄 (對 <see cref="T:System.Windows.Forms.ContextMenu" /> 中顯示的子功能表項目或功能表項目而言)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-194">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" /> is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a submenu item or menu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-195">如果功能表項目放置在新的一行或一欄中，則為 <see langword="true" />；如果功能表項目留在預設位置中，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-195">
              <see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span>
          </span>
          <span data-ttu-id="ed973-196">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-196">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-197">您可以使用<xref:System.Windows.Forms.MenuItem.BarBreak%2A>建立每個功能表項目放置相鄰水平而不是以垂直清單功能表的屬性。</span><span class="sxs-lookup"><span data-stu-id="ed973-197">You can use the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property to create a menu where each menu item is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="ed973-198">您也可以使用這個屬性來建立功能表列，其中包含多個資料列的最上層功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-198">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
 <span data-ttu-id="ed973-199">這個屬性與不同<xref:System.Windows.Forms.MenuItem.Break%2A>具有屬性中的每個功能表項目左邊緣會顯示一個列<xref:System.Windows.Forms.MenuItem.Break%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="ed973-199">This property differs from the <xref:System.Windows.Forms.MenuItem.Break%2A> property in that a bar is displayed on the left edge of each menu item that has the <xref:System.Windows.Forms.MenuItem.Break%2A> property set to `true`.</span></span> <span data-ttu-id="ed973-200">功能表項目不是最上層功能表項目時，才會顯示的列。</span><span class="sxs-lookup"><span data-stu-id="ed973-200">The bar is only displayed when the menu item is not a top-level menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-201">下列程式碼範例會建立<xref:System.Windows.Forms.MenuItem>與兩個子功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-201">The following code example creates a <xref:System.Windows.Forms.MenuItem> with two submenu items.</span></span> <span data-ttu-id="ed973-202">兩個子功能表項目會以水平方式顯示，而非使用垂直<xref:System.Windows.Forms.MenuItem.BarBreak%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ed973-202">The two submenu items are displayed horizontally instead of vertically using the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.BarBreak Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Break" />
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public bool Break { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Break" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Break" />
      <MemberSignature Language="VB.NET" Value="Public Property Break As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Break { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-203">取得或設定值，指出項目是放在新的一行 (對加入至 <see cref="T:System.Windows.Forms.MainMenu" /> 物件的功能表項目而言) 或新的一欄 (對 <see cref="T:System.Windows.Forms.ContextMenu" /> 中顯示的功能表項目或子功能表項目而言)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-203">Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a menu item or submenu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-204">如果功能表項目放置在新的一行或一欄中，則為 <see langword="true" />；如果功能表項目留在預設位置中，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-204">
              <see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span>
          </span>
          <span data-ttu-id="ed973-205">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-205">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-206">您可以使用<xref:System.Windows.Forms.MenuItem.Break%2A>建立每個功能表放置相鄰水平而不是以垂直清單功能表的屬性。</span><span class="sxs-lookup"><span data-stu-id="ed973-206">You can use the <xref:System.Windows.Forms.MenuItem.Break%2A> property to create a menu where each menu is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="ed973-207">您也可以使用這個屬性來建立功能表列，其中包含多個資料列的最上層功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-207">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-208">下列程式碼範例會建立功能表的上方資料列和一個功能表項目下方的資料列上的兩個最上層功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-208">The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.</span></span>  
  
 [!code-cpp[Classic MenuItem.Break Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Break Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Break Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Break Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.BarBreak" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-209">取得或設定值，指出功能表項目的文字旁邊要不要顯示核取記號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-209">Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-210">如果功能表項目旁邊有核取記號，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-210">
              <see langword="true" /> if there is a check mark next to the menu item; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed973-211">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-211">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-212">您可以使用<xref:System.Windows.Forms.MenuItem.Checked%2A>提供狀態的應用程式功能表中的其他功能表項目與屬性組合。</span><span class="sxs-lookup"><span data-stu-id="ed973-212">You can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property in combination with other menu items in a menu to provide state for an application.</span></span> <span data-ttu-id="ed973-213">例如，您可以將核取記號置於功能表項目群組中的項目來識別要顯示的應用程式中的文字字型的大小。</span><span class="sxs-lookup"><span data-stu-id="ed973-213">For example, you can place a check mark on a menu item in a group of items to identify the size of the font to be displayed for the text in an application.</span></span> <span data-ttu-id="ed973-214">您也可以使用<xref:System.Windows.Forms.MenuItem.Checked%2A>屬性，以識別一組互斥的功能表項目中的選取的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-214">You can also use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify the selected menu item in a group of mutually exclusive menu items.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed973-215">這個屬性不能設定為`true`最上層功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-215">This property cannot be set to `true` for top-level menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-216">下列程式碼範例使用<xref:System.Windows.Forms.MenuItem.Checked%2A>屬性以提供應用程式中的狀態。</span><span class="sxs-lookup"><span data-stu-id="ed973-216">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to provide the state in an application.</span></span> <span data-ttu-id="ed973-217">在此範例中，一組功能表項目可用來指定文字的色彩<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="ed973-217">In this example, a group of menu items are used to specify the color for the text in a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="ed973-218">提供的事件處理常式由<xref:System.Windows.Forms.MenuItem.Click>事件的三個功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-218">The event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of three menu items.</span></span> <span data-ttu-id="ed973-219">每個功能表項目指定文字的色彩， `menuItemRed` （紅色）， `menuItemGreen` （綠色），或`menuItemBlue`（藍色）。</span><span class="sxs-lookup"><span data-stu-id="ed973-219">Each menu item specifies a text color, `menuItemRed` (Red), `menuItemGreen` (Green), or `menuItemBlue` (Blue).</span></span> <span data-ttu-id="ed973-220">此事件處理常式決定哪一個功能表項目已按下、 放置一個核取記號來選取的功能表項目和變更表單的文字色彩<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="ed973-220">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="ed973-221">這個範例需要<xref:System.Drawing>已加入此程式碼置於表單的命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed973-221">The example requires that the <xref:System.Drawing> namespace has been added to the form that this code is placed in.</span></span> <span data-ttu-id="ed973-222">這個範例也需要<xref:System.Windows.Forms.TextBox>已新增至表單，此程式碼範例位於名為`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-222">The example also requires that a <xref:System.Windows.Forms.TextBox> has been added to the form that this example code is located in that is named `textBox1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Checked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Checked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Checked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Checked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed973-223">
            <see cref="T:System.Windows.Forms.MenuItem" /> 為最上層功能表或是具有子系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-223">The <see cref="T:System.Windows.Forms.MenuItem" /> is a top-level menu or has children.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-224">發生於按一下功能表項目，或使用為功能表項目定義的快速鍵或便捷鍵選取時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-224">Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-225"><xref:System.Windows.Forms.MenuItem.Click>就會發生事件時這<xref:System.Windows.Forms.MenuItem>使用者按下。</span><span class="sxs-lookup"><span data-stu-id="ed973-225">The <xref:System.Windows.Forms.MenuItem.Click> event occurs when this <xref:System.Windows.Forms.MenuItem> is clicked by the user.</span></span> <span data-ttu-id="ed973-226">此事件也會發生，如果使用者選取功能表項目，使用鍵盤，並按下 Enter 鍵。</span><span class="sxs-lookup"><span data-stu-id="ed973-226">This event also occurs if the user selects the menu item using the keyboard and presses the Enter key.</span></span> <span data-ttu-id="ed973-227">它也會發生的存取金鑰或攠摝坫按下時相關聯<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-227">It can also occur if an access key or shortcut key is pressed that is associated with the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="ed973-228">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-228">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed973-229">如果<xref:System.Windows.Forms.Menu.MenuItems%2A>屬性<xref:System.Windows.Forms.MenuItem>包含任何項目，就不會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-229">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="ed973-230">父功能表項目不會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-230">This event is not raised for parent menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-231">下列程式碼範例示範如何使用<xref:System.Windows.Forms.MenuItem.Click>事件以執行工作時<xref:System.Windows.Forms.MenuItem>按下。</span><span class="sxs-lookup"><span data-stu-id="ed973-231">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="ed973-232">此範例會建立<xref:System.Windows.Forms.MainMenu>呼叫`mainMenu1`及加入兩個<xref:System.Windows.Forms.MenuItem>物件`topMenuItem`(`File`) 和`menuItem1`(`Open`)。</span><span class="sxs-lookup"><span data-stu-id="ed973-232">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="ed973-233">然後連接`Click`事件`menuItem1_Click`事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-233">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="ed973-234">當使用者按一下`Open`功能表項目，<xref:System.Windows.Forms.OpenFileDialog>初始化，且會顯示。</span><span class="sxs-lookup"><span data-stu-id="ed973-234">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="ed973-235">這個範例需要您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-235">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloneMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-236">建立 <see cref="T:System.Windows.Forms.MenuItem" /> 的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-236">Creates a copy of a <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem CloneMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem CloneMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloneMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ CloneMenu();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed973-237">建立目前的 <see cref="T:System.Windows.Forms.MenuItem" /> 複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-237">Creates a copy of the current <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed973-238">
            <see cref="T:System.Windows.Forms.MenuItem" />，表示重複的功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-238">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the duplicated menu item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-239"><xref:System.Windows.Forms.MenuItem> 物件無法使用多個位置中，除非您取得一份<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-239"><xref:System.Windows.Forms.MenuItem> objects cannot be used in more than one place unless you obtain a copy of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="ed973-240">您可以呼叫此方法以建立一份此功能表項目，以用於<xref:System.Windows.Forms.ContextMenu>， <xref:System.Windows.Forms.MainMenu>，或其他<xref:System.Windows.Forms.MenuItem>應用程式中。</span><span class="sxs-lookup"><span data-stu-id="ed973-240">You can call this method to create a copy of this menu item for use in a <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, or other <xref:System.Windows.Forms.MenuItem> within your application.</span></span> <span data-ttu-id="ed973-241">當功能表項目會複製時，原始的功能表項目中指定的任何事件處理常式會繼續複製功能表項目的版本中運作。</span><span class="sxs-lookup"><span data-stu-id="ed973-241">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="ed973-242">例如，如果您建立<xref:System.Windows.Forms.MenuItem>，且已連線其<xref:System.Windows.Forms.MenuItem.Click>事件之事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-242">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="ed973-243">會複製功能表項目，複製的功能表項目會呼叫相同的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-243">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-244">下列程式碼範例複製品<xref:System.Windows.Forms.MenuItem>並顯示在<xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="ed973-244">The following code example clones a <xref:System.Windows.Forms.MenuItem> and displays it in a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="ed973-245">這個範例需要<xref:System.Windows.Forms.MenuItem>存在於<xref:System.Windows.Forms.MainMenu>表單上的名稱有`menuItem1`而且<xref:System.Windows.Forms.ContextMenu>名為物件`contextMenu1`表單上也有存在。</span><span class="sxs-lookup"><span data-stu-id="ed973-245">The example requires that a <xref:System.Windows.Forms.MenuItem> exists in a <xref:System.Windows.Forms.MainMenu> on a form with the name of `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> object named `contextMenu1` also exists on the form.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="protected void CloneMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CloneMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CloneMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CloneMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc">
          <span data-ttu-id="ed973-246">
            <see cref="T:System.Windows.Forms.MenuItem" />，表示要複製的功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-246">The <see cref="T:System.Windows.Forms.MenuItem" /> that represents the menu item to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-247">建立目前 <see cref="T:System.Windows.Forms.MenuItem" /> 的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-247">Creates a copy of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-248">呼叫此方法以建立您已經建立的捷徑功能表或其他功能表結構中使用應用程式中的功能表項目的複本。</span><span class="sxs-lookup"><span data-stu-id="ed973-248">Call this method to create copies of menu items that you have already created for use in a shortcut menu or another menu structure within your application.</span></span> <span data-ttu-id="ed973-249">這個版本的<xref:System.Windows.Forms.MenuItem.CloneMenu%2A>可讓您指定特定<xref:System.Windows.Forms.MenuItem>複製而不呼叫方法的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-249">This version of <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> allows you to specify a specific <xref:System.Windows.Forms.MenuItem> to copy instead of the menu item that is calling the method.</span></span> <span data-ttu-id="ed973-250">您可以使用這個方法來初始化新<xref:System.Windows.Forms.MenuItem>物件和另一份<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-250">You can use this method to initialize a new <xref:System.Windows.Forms.MenuItem> object with a copy of another <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="ed973-251">當功能表項目會複製時，原始的功能表項目中指定的任何事件處理常式會繼續複製功能表項目的版本中運作。</span><span class="sxs-lookup"><span data-stu-id="ed973-251">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="ed973-252">例如，如果您建立<xref:System.Windows.Forms.MenuItem>，且已連線其<xref:System.Windows.Forms.MenuItem.Click>事件之事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-252">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="ed973-253">會複製功能表項目，複製的功能表項目會呼叫相同的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-253">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-254">下列程式碼範例會初始化新<xref:System.Windows.Forms.MenuItem>的現有複本<xref:System.Windows.Forms.MenuItem>中都使用<xref:System.Windows.Forms.MainMenu>表單上。</span><span class="sxs-lookup"><span data-stu-id="ed973-254">The following code example initializes a new <xref:System.Windows.Forms.MenuItem> with a copy of an existing <xref:System.Windows.Forms.MenuItem> that is used in a <xref:System.Windows.Forms.MainMenu> on a form.</span></span> <span data-ttu-id="ed973-255">加入的程式碼再複製<xref:System.Windows.Forms.MenuItem>至<xref:System.Windows.Forms.ContextMenu>表單上。</span><span class="sxs-lookup"><span data-stu-id="ed973-255">The code then adds the cloned <xref:System.Windows.Forms.MenuItem> to a <xref:System.Windows.Forms.ContextMenu> on the form.</span></span> <span data-ttu-id="ed973-256">這個範例需要<xref:System.Windows.Forms.MenuItem>已經建立並命名`menuItem1`而且<xref:System.Windows.Forms.ContextMenu>控制已建立並命名`contextMenu1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-256">This example requires that a <xref:System.Windows.Forms.MenuItem> is already created and named `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> control has been created and named `contextMenu1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultItem">
      <MemberSignature Language="C#" Value="public bool DefaultItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DefaultItem { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-257">取得或設定值，指出功能表項目是不是預設的功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-257">Gets or sets a value indicating whether the menu item is the default menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-258">如果功能表項目是功能表中的預設項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-258">
              <see langword="true" /> if the menu item is the default item in a menu; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed973-259">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-259">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-260">功能表的預設功能表項目為粗體。</span><span class="sxs-lookup"><span data-stu-id="ed973-260">The default menu item for a menu is boldfaced.</span></span> <span data-ttu-id="ed973-261">當使用者按兩下子功能表，其中包含預設項目、 預設項目已選取，而且關閉子功能表。</span><span class="sxs-lookup"><span data-stu-id="ed973-261">When the user double-clicks a submenu that contains a default item, the default item is selected, and the submenu is closed.</span></span> <span data-ttu-id="ed973-262">您可以使用<xref:System.Windows.Forms.MenuItem.DefaultItem%2A>屬性來表示，功能表或快速鍵功能表中預期要有預設動作。</span><span class="sxs-lookup"><span data-stu-id="ed973-262">You can use the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property to indicate, the default action that is expected in a menu or shortcut menu.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-263">下列程式碼範例會建立包含兩個子功能表項目的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-263">The following code example creates a menu item with two submenu items.</span></span> <span data-ttu-id="ed973-264">範例會設定`menuItem2`做為預設功能表項目使用<xref:System.Windows.Forms.MenuItem.DefaultItem%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ed973-264">The example sets `menuItem2` as the default menu item using the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ed973-265">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-265">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-266">處置 (Dispose) <see cref="T:System.Windows.Forms.MenuItem" /> 所使用的資源 (除了記憶體之外)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-266">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-267"><xref:System.Windows.Forms.MenuItem.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-267">Call <xref:System.Windows.Forms.MenuItem.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="ed973-268"><xref:System.Windows.Forms.MenuItem.Dispose%2A> 方法會將 <xref:System.Windows.Forms.MenuItem> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="ed973-268">The <xref:System.Windows.Forms.MenuItem.Dispose%2A> method leaves the <xref:System.Windows.Forms.MenuItem> in an unusable state.</span></span> <span data-ttu-id="ed973-269">在呼叫<xref:System.Windows.Forms.MenuItem.Dispose%2A>，您必須釋放所有參考<xref:System.Windows.Forms.MenuItem>讓它所佔用的記憶體可由記憶體回收收回。</span><span class="sxs-lookup"><span data-stu-id="ed973-269">After calling <xref:System.Windows.Forms.MenuItem.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.MenuItem> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed973-270">在您釋放最後一個 <xref:System.Windows.Forms.MenuItem.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-270">Always call <xref:System.Windows.Forms.MenuItem.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="ed973-271">否則，資源<xref:System.Windows.Forms.MenuItem>是使用之前，將不會釋放記憶體回收集合呼叫<xref:System.Windows.Forms.MenuItem>物件的解構函式。</span><span class="sxs-lookup"><span data-stu-id="ed973-271">Otherwise, the resources the <xref:System.Windows.Forms.MenuItem> is using will not be freed until garbage collection calls the <xref:System.Windows.Forms.MenuItem> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-272">當功能表項目的 <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> 屬性設定為 <see langword="true" /> 並且有繪製功能表項目的要求時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-272">Occurs when the <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> property of a menu item is set to <see langword="true" /> and a request is made to draw the menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-273"><xref:System.Windows.Forms.DrawItemEventArgs>引數傳遞給<xref:System.Windows.Forms.MenuItem.DrawItem>事件處理常式提供<xref:System.Drawing.Graphics>物件，可讓您能夠執行繪圖以及其他圖形化介面上的作業的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-273">The <xref:System.Windows.Forms.DrawItemEventArgs> argument passed to a <xref:System.Windows.Forms.MenuItem.DrawItem> event handler provides a <xref:System.Drawing.Graphics> object that enables you to perform drawing and other graphical operations on the surface of the menu item.</span></span> <span data-ttu-id="ed973-274">您可以使用此事件處理常式來建立自訂的功能表，以符合您的應用程式的需求。</span><span class="sxs-lookup"><span data-stu-id="ed973-274">You can use this event handler to create custom menus that meet the needs of your application.</span></span> <span data-ttu-id="ed973-275">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-275">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-276">下列程式碼範例示範如何處理<xref:System.Windows.Forms.MenuItem.DrawItem>事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-276">The following code example demonstrates how to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="ed973-277">這個範例會繪製功能表項目使用<xref:System.Drawing.Brush>和<xref:System.Drawing.Font>，，然後繪製<xref:System.Drawing.Rectangle>功能表項目周圍。</span><span class="sxs-lookup"><span data-stu-id="ed973-277">This example draws a menu item using a <xref:System.Drawing.Brush> and a <xref:System.Drawing.Font>, and then draws a <xref:System.Drawing.Rectangle> around the menu item.</span></span> <span data-ttu-id="ed973-278">繪圖透過執行<xref:System.Drawing.Graphics>物件，傳遞至事件處理常式中<xref:System.Windows.Forms.DrawItemEventArgs>參數。</span><span class="sxs-lookup"><span data-stu-id="ed973-278">The drawing is performed through the <xref:System.Drawing.Graphics> object, which is passed to the event handler in the <xref:System.Windows.Forms.DrawItemEventArgs> parameter.</span></span> <span data-ttu-id="ed973-279">這個範例需要您具有初始化<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>屬性之項目的`true`。</span><span class="sxs-lookup"><span data-stu-id="ed973-279">This example requires that you have initialized the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property for the item to `true`.</span></span> <span data-ttu-id="ed973-280">C# 範例中，加上下列程式碼中表單的建構函式， `InitializeComponent`、 事件連結：</span><span class="sxs-lookup"><span data-stu-id="ed973-280">For the C# example, add the following code in the form's constructor, after `InitializeComponent`, to hook up the event:</span></span>  
  
 `this.menuItem1.DrawItem += new DrawItemEventHandler(menuItem1_DrawItem);`  
  
 [!code-cpp[OwnerDraw example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/OwnerDraw example/CPP/form1.cpp#1)]
 [!code-csharp[OwnerDraw example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/OwnerDraw example/CS/form1.cs#1)]
 [!code-vb[OwnerDraw example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/OwnerDraw example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-281">取得或設定值，指出是否啟用功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-281">Gets or sets a value indicating whether the menu item is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-282">如果啟用功能表項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-282">
              <see langword="true" /> if the menu item is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed973-283">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-283">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-284">A<xref:System.Windows.Forms.MenuItem>也就是已停用，都會在灰色來指示其狀態。</span><span class="sxs-lookup"><span data-stu-id="ed973-284">A <xref:System.Windows.Forms.MenuItem> that is disabled is displayed in a gray color to indicate its state.</span></span> <span data-ttu-id="ed973-285">停用父功能表項目時，不會顯示所有的子功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-285">When a parent menu item is disabled, all submenu items are not displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-286">下列程式碼範例示範如何使用<xref:System.Windows.Forms.MenuItem.Popup>事件，以判斷是否<xref:System.Windows.Forms.MenuItem>中顯示的功能表會顯示前，會啟用物件，提供支援進行剪下、 複製和刪除作業。</span><span class="sxs-lookup"><span data-stu-id="ed973-286">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="ed973-287">此範例會判斷如果`textBox1`、<xref:System.Windows.Forms.TextBox>控制表單上、 已啟用，擁有輸入焦點，而且有啟用之前選取的文字<xref:System.Windows.Forms.MenuItem>物件。</span><span class="sxs-lookup"><span data-stu-id="ed973-287">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="ed973-288">這個範例需要該三<xref:System.Windows.Forms.MenuItem>物件會建立具名`menuCut`， `menuCopy`，和`menuDelete`已建立。</span><span class="sxs-lookup"><span data-stu-id="ed973-288">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-289">取得或設定值，指出功能表項目在父功能表中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-289">Gets or sets a value indicating the position of the menu item in its parent menu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-290">以零為起始的索引，表示功能表項目在父功能表中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-290">The zero-based index representing the position of the menu item in its parent menu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-291">這個屬性會提供功能表項目的父功能表的功能表項目集合中的索引的位置。</span><span class="sxs-lookup"><span data-stu-id="ed973-291">This property provides the indexed position of a menu item in the menu item collection of its parent menu.</span></span> <span data-ttu-id="ed973-292">您可以使用這個屬性重新定位到其功能表中的不同位置的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-292">You can use this property to reposition a menu item to a different location within its menu.</span></span> <span data-ttu-id="ed973-293">您也可以使用這個屬性，建立時<xref:System.Windows.Forms.MenuItem>在建立時指定其功能表結構中的位置。</span><span class="sxs-lookup"><span data-stu-id="ed973-293">You can also use this property when creating a <xref:System.Windows.Forms.MenuItem> to specify its position in a menu structure at the time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-294">下列程式碼範例會切換功能表中的兩個功能表項目位置。</span><span class="sxs-lookup"><span data-stu-id="ed973-294">The following code example switches the position of two menu items in a menu.</span></span> <span data-ttu-id="ed973-295">下列程式碼範例需要有兩個<xref:System.Windows.Forms.MenuItem>物件會建立具名`menuItem1`和`menuItem2`。</span><span class="sxs-lookup"><span data-stu-id="ed973-295">The following code example requires that two <xref:System.Windows.Forms.MenuItem> objects are created named `menuItem1` and `menuItem2`.</span></span> <span data-ttu-id="ed973-296">`menuItem1`功能表項目下移一個位置，在功能表中，而`menuItem2`將向上移動一個位置。</span><span class="sxs-lookup"><span data-stu-id="ed973-296">The `menuItem1` menu item moves down one position in the menu, while `menuItem2` moves up one position.</span></span>  
  
 [!code-cpp[Classic MenuItem.Index Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Index Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Index Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Index Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed973-297">指派的值小於零或大於項目計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-297">The assigned value is less than zero or greater than the item count.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public override bool IsParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.IsParent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsParent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-298">取得值，指出功能表項目是否含有子功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-298">Gets a value indicating whether the menu item contains child menu items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-299">功能表項目含有子功能表項目，為 <see langword="true" />；功能表是獨立的功能表項目，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-299">
              <see langword="true" /> if the menu item contains child menu items; <see langword="false" /> if the menu is a standalone menu item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-300">您可以使用這個屬性與<xref:System.Windows.Forms.MenuItem.Parent%2A>透過整個功能表結構的程式碼中巡覽的屬性。</span><span class="sxs-lookup"><span data-stu-id="ed973-300">You can use this property with the <xref:System.Windows.Forms.MenuItem.Parent%2A> property to navigate in code through an entire menu structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-301">下列程式碼範例會判斷是否有任何相關聯的子功能表<xref:System.Windows.Forms.MenuItem>名為`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-301">The following code example determines whether there are any submenus associated with a <xref:System.Windows.Forms.MenuItem> named `menuItem1`.</span></span> <span data-ttu-id="ed973-302">如果存在任何的子功能表，則會停用它們藉由設定<xref:System.Windows.Forms.MenuItem.Enabled%2A>屬性`false`。</span><span class="sxs-lookup"><span data-stu-id="ed973-302">If any submenus exist, it disables them by setting the <xref:System.Windows.Forms.MenuItem.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="ed973-303">這個範例需要有<xref:System.Windows.Forms.MenuItem>建立名為`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-303">The example requires that there is a <xref:System.Windows.Forms.MenuItem> created named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.IsParent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.IsParent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.IsParent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MdiList">
      <MemberSignature Language="C#" Value="public bool MdiList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MdiList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MdiList" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MdiList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-304">取得或設定值，指出功能表項目中會不會填入相關表單內顯示的多重文件介面 (MDI) 的子視窗清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-304">Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-305">如果此功能表項目中有顯示 MDI 子視窗的清單，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-305">
              <see langword="true" /> if a list of the MDI child windows is displayed in this menu item; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed973-306">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-306">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-307">若要顯示 MDI 子視窗清單選取功能表項目時，清單會顯示為子功能表的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-307">When a menu item is selected to display an MDI child window list, the list is displayed as a submenu of the menu item.</span></span> <span data-ttu-id="ed973-308">定義為 MDI 子表單的表單會顯示在視窗清單。</span><span class="sxs-lookup"><span data-stu-id="ed973-308">Only forms that are defined as MDI child forms are displayed in the window list.</span></span> <span data-ttu-id="ed973-309">只有九個子視窗可以顯示一次。</span><span class="sxs-lookup"><span data-stu-id="ed973-309">Only nine child windows can be displayed at a time.</span></span> <span data-ttu-id="ed973-310">如果沒有顯示九個以上的子視窗，「 多個 Windows … 」 的功能表項目會顯示在視窗清單的結尾。</span><span class="sxs-lookup"><span data-stu-id="ed973-310">If there are more than nine child windows displayed, a "More Windows..." menu item is displayed at the end of the window list.</span></span> <span data-ttu-id="ed973-311">按一下這個功能表項目會顯示完整的清單包含目前使用中的子視窗的對話方塊。</span><span class="sxs-lookup"><span data-stu-id="ed973-311">Clicking this menu item displays a dialog box with a complete list of the child windows that are currently active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-312">下列程式碼範例會建立<xref:System.Windows.Forms.MenuItem>用來在 MDI 表單中顯示目前開啟的 MDI 子表單的清單。</span><span class="sxs-lookup"><span data-stu-id="ed973-312">The following code example creates a <xref:System.Windows.Forms.MenuItem> that is used to display the list of currently open MDI child forms in an MDI form.</span></span>  
  
 [!code-cpp[Classic MenuItem.MdiList Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MdiList Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MdiList Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-313">發生於功能表繪製前需要先知道功能表項目的大小時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-313">Occurs when the menu needs to know the size of a menu item before drawing it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-314">為了讓會引發這個事件，您必須擁有<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>功能表項目的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="ed973-314">In order for this event to be raised, you must have the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property of the menu item set to `true`.</span></span> <span data-ttu-id="ed973-315">繪製主控描繪功能表允許指定要繪製功能表項目的大小之前，會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-315">This event is raised before owner drawn menus are drawn to allow for the size of the menu item to be drawn to be specified.</span></span> <span data-ttu-id="ed973-316">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-316">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-317">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="ed973-317">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ed973-318">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.MenuItem.MeasureItem>事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-318">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span> <span data-ttu-id="ed973-319">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="ed973-319">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="ed973-320">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.MenuItem>名為`MenuItem1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-320">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MenuItem> named `MenuItem1`.</span></span> <span data-ttu-id="ed973-321">請確定事件處理常式關聯<xref:System.Windows.Forms.MenuItem.MeasureItem>事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-321">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#499](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#499)]
 [!code-vb[System.Windows.Forms.EventExamples#499](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#499)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="MenuID">
      <MemberSignature Language="C#" Value="protected int MenuID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MenuID" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MenuID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property MenuID As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int MenuID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-322">取得值，指出這個功能表項目的 Windows 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-322">Gets a value indicating the Windows identifier for this menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-323">這個功能表項目的 Windows 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-323">The Windows identifier for this menu item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-324">合併這個 <see cref="T:System.Windows.Forms.MenuItem" /> 和另一 <see cref="T:System.Windows.Forms.MenuItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-324">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem MergeMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem MergeMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ MergeMenu();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed973-325">這個 <see cref="T:System.Windows.Forms.MenuItem" /> 和另一 <see cref="T:System.Windows.Forms.MenuItem" /> 合併後傳回合併產生的 <see cref="T:System.Windows.Forms.MenuItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-325">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" /> and returns the resulting merged <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed973-326">
            <see cref="T:System.Windows.Forms.MenuItem" />，表示合併的功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-326">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the merged menu item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-327">當您呼叫這一版的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>、<xref:System.Windows.Forms.MenuItem>傳回是一份目前功能表項目可合併與另一個功能表項目，而不會影響目前項目的功能。</span><span class="sxs-lookup"><span data-stu-id="ed973-327">When you call this version of <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>, the <xref:System.Windows.Forms.MenuItem> returned is a copy of the current menu item that can be merged with another menu item without affecting the functionality of the current item.</span></span> <span data-ttu-id="ed973-328">這個版本的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法是類似於呼叫<xref:System.Windows.Forms.MenuItem.CloneMenu%2A>不含任何參數的方法。</span><span class="sxs-lookup"><span data-stu-id="ed973-328">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method is similar to calling the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method that contains no parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public void MergeMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc">
          <span data-ttu-id="ed973-329">
            <see cref="T:System.Windows.Forms.MenuItem" />，指定和這個功能表項目合併的功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-329">A <see cref="T:System.Windows.Forms.MenuItem" /> that specifies the menu item to merge with this one.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-330">合併這個功能表項目與另一功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-330">Merges another menu item with this menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-331">功能表項目會合併的功能表項目的值根據<xref:System.Windows.Forms.MenuItem.MergeType%2A>和<xref:System.Windows.Forms.MenuItem.MergeOrder%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ed973-331">Menu items are merged according to the value of the menu item's <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> properties.</span></span> <span data-ttu-id="ed973-332">這個版本的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法可讓您合併兩個<xref:System.Windows.Forms.MenuItem>物件 （和其子功能表） 於單一的功能表。</span><span class="sxs-lookup"><span data-stu-id="ed973-332">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method enables you to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenus) into a single menu.</span></span> <span data-ttu-id="ed973-333">當多個文件介面 (MDI) 父表單和子功能表時，會自動處理功能表合併。</span><span class="sxs-lookup"><span data-stu-id="ed973-333">Menu merging is handled automatically when a Multiple Document Interface (MDI) parent form and a child both have menus.</span></span> <span data-ttu-id="ed973-334">您可以使用這個版本的方法來合併兩個<xref:System.Windows.Forms.MenuItem>物件 （和其子功能表項目） 位於<xref:System.Windows.Forms.MainMenu>控制項內的單一功能表插入<xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="ed973-334">You can use this version of the method to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenu items) located in a <xref:System.Windows.Forms.MainMenu> control into a single menu within a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="ed973-335">例如，您可以呼叫這一版的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法，將檔案和編輯功能表的功能表項目合併成單一<xref:System.Windows.Forms.MenuItem>，可以再加入並顯示由<xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="ed973-335">For example, you can call this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menu items of a File and Edit menu into a single <xref:System.Windows.Forms.MenuItem> that can then be added to and displayed by a <xref:System.Windows.Forms.ContextMenu>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-336">下列程式碼範例會使用這個版本的<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>方法來建立一份<xref:System.Windows.Forms.MenuItem>及合併與另一個。</span><span class="sxs-lookup"><span data-stu-id="ed973-336">The following code example uses this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> and merge it with another.</span></span> <span data-ttu-id="ed973-337">合併<xref:System.Windows.Forms.MenuItem>接著會新增至<xref:System.Windows.Forms.ContextMenu>控制項。</span><span class="sxs-lookup"><span data-stu-id="ed973-337">The merged <xref:System.Windows.Forms.MenuItem> is then added to a <xref:System.Windows.Forms.ContextMenu> control.</span></span> <span data-ttu-id="ed973-338">這個範例需要有兩個功能表項目稱為`menuItem1`和`menuItem2`子功能表項目，其中包含與<xref:System.Windows.Forms.ContextMenu>名為`contextMenu1`顯示功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-338">This example requires that there are two menu items called `menuItem1` and `menuItem2` that contain submenu items within them and a <xref:System.Windows.Forms.ContextMenu> named `contextMenu1` to display the menu items.</span></span> <span data-ttu-id="ed973-339">`menuItem1` 和`menuItem2`有其內含不同的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-339">`menuItem1` and `menuItem2` have different menu items contained within them.</span></span> <span data-ttu-id="ed973-340">在呼叫之後<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>進行時，合併功能表的建立。</span><span class="sxs-lookup"><span data-stu-id="ed973-340">After the call to <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> is made, a consolidated menu is created.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOrder">
      <MemberSignature Language="C#" Value="public int MergeOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MergeOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MergeOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-341">取得或設定值，指出功能表項目與其他項目合併時的相對位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-341">Gets or sets a value indicating the relative position of the menu item when it is merged with another.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-342">以零為起始的索引，表示這個功能表項目的合併順序位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-342">A zero-based index representing the merge order position for this menu item.</span>
          </span>
          <span data-ttu-id="ed973-343">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-343">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-344">功能表項目的合併順序指定的相對位置，如果功能表結構，會採取這個功能表項目<xref:System.Windows.Forms.MenuItem>包含在與另一個合併。</span><span class="sxs-lookup"><span data-stu-id="ed973-344">The merge order of a menu item specifies the relative position that this menu item will take if the menu structure that the <xref:System.Windows.Forms.MenuItem> is contained in is merged with another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-345">下列程式碼範例示範如何使用<xref:System.Windows.Forms.MenuItem.MergeOrder%2A>屬性來控制合併的功能表顯示的方式。</span><span class="sxs-lookup"><span data-stu-id="ed973-345">The following code example demonstrates using the <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> property to control the way a merged menu is displayed.</span></span> <span data-ttu-id="ed973-346">這是完整的範例，準備好要執行之後將它加入至您的專案。</span><span class="sxs-lookup"><span data-stu-id="ed973-346">This is a complete example, ready to run once you add it to your project.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="M:System.Windows.Forms.MenuItem.MergeMenu" />
      </Docs>
    </Member>
    <Member MemberName="MergeType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuMerge MergeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MenuMerge MergeType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeType" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeType As MenuMerge" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuMerge MergeType { System::Windows::Forms::MenuMerge get(); void set(System::Windows::Forms::MenuMerge value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuMerge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-347">取得或設定值，指出這個功能表項目的功能表和其他功能表合併時，這個功能表項目的行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-347">Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-348">
            <see cref="T:System.Windows.Forms.MenuMerge" /> 的值，表示功能表項目的合併型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-348">A <see cref="T:System.Windows.Forms.MenuMerge" /> value that represents the menu item's merge type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-349">合併功能表項目型別表示功能表項目有另一個要合併的功能表項目的合併順序相同的行為。</span><span class="sxs-lookup"><span data-stu-id="ed973-349">The merge type of a menu item indicates how the menu item behaves when it has the same merge order as another menu item being merged.</span></span> <span data-ttu-id="ed973-350">您可以使用合併的功能表，建立根據兩個或多個現有的功能表合併的功能表。</span><span class="sxs-lookup"><span data-stu-id="ed973-350">You can use merged menus to create a consolidated menu based on two or more existing menus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-351">下列程式碼範例會建立<xref:System.Windows.Forms.MenuItem>與<xref:System.Windows.Forms.MenuItem.MergeType%2A>和<xref:System.Windows.Forms.MenuItem.MergeOrder%2A>指定功能表項目會加入至第一個位置的合併功能表。</span><span class="sxs-lookup"><span data-stu-id="ed973-351">The following code example creates a <xref:System.Windows.Forms.MenuItem> with the <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> specified so that the menu item is added to the merged menu at first position.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ed973-352">指派的值不是其中一個 <see cref="T:System.Windows.Forms.MenuMerge" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-352">The assigned value is not one of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.MenuMerge" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="Mnemonic">
      <MemberSignature Language="C#" Value="public char Mnemonic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Mnemonic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mnemonic As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char Mnemonic { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-353">取得值，指出與這個功能表項目相關的助憶鍵字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-353">Gets a value indicating the mnemonic character that is associated with this menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-354">字元，表示與這個功能表項目相關的助憶鍵字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-354">A character that represents the mnemonic character associated with this menu item.</span>
          </span>
          <span data-ttu-id="ed973-355">如果 <see cref="T:System.Windows.Forms.MenuItem" /> 的文字中沒有指定助憶鍵字元，則會傳回 NUL 字元 (ASCII 值 0)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-355">Returns the NUL character (ASCII value 0) if no mnemonic character is specified in the text of the <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-356">助憶鍵字元為第一個字元之後 & 符號字元 (&) 的文字中<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-356">The mnemonic character is the first character after an ampersand character (&) in the text of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="ed973-357">如果兩個連字號字元會放置在一起為連字號用來顯示的文字中的連字號，這個屬性不會傳回助憶鍵<xref:System.Windows.Forms.MenuItem>而不是定義助憶鍵字元。</span><span class="sxs-lookup"><span data-stu-id="ed973-357">This property will not return a mnemonic if two ampersand characters are placed together as the ampersands are used to display an ampersand in the text of the <xref:System.Windows.Forms.MenuItem> instead of defining a mnemonic character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Text" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed973-358">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-358">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-359">引發 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-359">Raises the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-360">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-360">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ed973-361">如需詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-361">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-362">下列程式碼範例示範如何使用<xref:System.Windows.Forms.MenuItem.Click>事件以執行工作時<xref:System.Windows.Forms.MenuItem>按下。</span><span class="sxs-lookup"><span data-stu-id="ed973-362">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="ed973-363">此範例會建立<xref:System.Windows.Forms.MainMenu>呼叫`mainMenu1`及加入兩個<xref:System.Windows.Forms.MenuItem>物件`topMenuItem`(`File`) 和`menuItem1`(`Open`)。</span><span class="sxs-lookup"><span data-stu-id="ed973-363">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="ed973-364">然後連接`Click`事件`menuItem1_Click`事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-364">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="ed973-365">當使用者按一下`Open`功能表項目，<xref:System.Windows.Forms.OpenFileDialog>初始化，且會顯示。</span><span class="sxs-lookup"><span data-stu-id="ed973-365">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="ed973-366">這個範例需要您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-366">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ed973-367">在覆寫<see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ed973-367">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed973-368">
            <see cref="T:System.Windows.Forms.DrawItemEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-368">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-369">引發 <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-369">Raises the <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-370">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-370">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ed973-371">如需詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-371">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ed973-372">在覆寫<see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ed973-372">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInitMenuPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnInitMenuPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitMenuPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitMenuPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitMenuPopup(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed973-373">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-373">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-374">引發 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-374">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed973-375">
            <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-375">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-376">引發 <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-376">Raises the <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-377">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-377">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ed973-378">如需詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-378">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ed973-379">在覆寫<see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ed973-379">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.MeasureItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed973-380">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-380">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-381">引發 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-381">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-382">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-382">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ed973-383">如需詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-383">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-384">下列程式碼範例示範如何使用<xref:System.Windows.Forms.MenuItem.Popup>事件，以判斷是否<xref:System.Windows.Forms.MenuItem>中顯示的功能表會顯示前，會啟用物件，提供支援進行剪下、 複製和刪除作業。</span><span class="sxs-lookup"><span data-stu-id="ed973-384">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="ed973-385">此範例會判斷如果`textBox1`、<xref:System.Windows.Forms.TextBox>控制表單上、 已啟用，擁有輸入焦點，而且有啟用之前選取的文字<xref:System.Windows.Forms.MenuItem>物件。</span><span class="sxs-lookup"><span data-stu-id="ed973-385">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="ed973-386">這個範例需要該三<xref:System.Windows.Forms.MenuItem>物件會建立具名`menuCut`， `menuCopy`，和`menuDelete`已建立。</span><span class="sxs-lookup"><span data-stu-id="ed973-386">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ed973-387">在覆寫<see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ed973-387">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnSelect (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelect(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelect (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelect(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed973-388">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-388">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed973-389">引發 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-389">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-390">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-390">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ed973-391">如需詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-391">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-392">下列程式碼範例示範如何使用<xref:System.Windows.Forms.MenuItem.Select>事件<xref:System.Windows.Forms.MenuItem>類別，以指派的說明文字<xref:System.Windows.Forms.StatusBarPanel>的<xref:System.Windows.Forms.StatusBar>控制項。</span><span class="sxs-lookup"><span data-stu-id="ed973-392">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="ed973-393">這個範例需要<xref:System.Windows.Forms.MenuItem>物件命名`menuOpen`， `menuSave`，和`menuExit`加入至<xref:System.Windows.Forms.MainMenu>控制項在表單上的。</span><span class="sxs-lookup"><span data-stu-id="ed973-393">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="ed973-394">這個範例也需要<xref:System.Windows.Forms.StatusBar>控制項，名為`statusBar1`已加入至表單。</span><span class="sxs-lookup"><span data-stu-id="ed973-394">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="ed973-395"><xref:System.Windows.Forms.StatusBar>控制項應該包含<xref:System.Windows.Forms.StatusBarPanel>。</span><span class="sxs-lookup"><span data-stu-id="ed973-395">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ed973-396">在覆寫<see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ed973-396">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-397">取得或設定值，指出是您所提供的程式碼繪製功能表項目，還是由 Windows 來繪製功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-397">Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-398">如果功能表項目用程式碼繪製，則為 <see langword="true" />；功能表項目由 Windows 繪製，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-398">
              <see langword="true" /> if the menu item is to be drawn using code; <see langword="false" /> if the menu item is to be drawn by Windows.</span>
          </span>
          <span data-ttu-id="ed973-399">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-399">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-400">當<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>屬性設定為`true`，您需要處理所有功能表項目的繪圖。</span><span class="sxs-lookup"><span data-stu-id="ed973-400">When the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property is set to `true`, you need to handle all drawing of the menu item.</span></span> <span data-ttu-id="ed973-401">您可以使用這項功能來建立您自己的特殊功能表顯示。</span><span class="sxs-lookup"><span data-stu-id="ed973-401">You can use this capability to create your own special menu displays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-402">下列程式碼範例示範如何為主控描繪功能表項目具有的功能表。</span><span class="sxs-lookup"><span data-stu-id="ed973-402">The following code example demonstrates a menu with an owner-drawn menu item.</span></span> <span data-ttu-id="ed973-403">這個範例組<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>屬性，並使用`AddHandler`陳述式和`AddressOf`運算子來指定要處理的委派<xref:System.Windows.Forms.MenuItem.DrawItem>事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-403">This example set the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property and uses the `AddHandler` statement and the `AddressOf` operator to designate a delegate to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="ed973-404">若要執行此範例，將它貼入中匯入表單<xref:System>， <xref:System.Windows.Forms>，和<xref:System.Drawing>命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed973-404">To run the example, paste it in a form that imports the <xref:System>, <xref:System.Windows.Forms>, and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="ed973-405">呼叫`InitializeMenu`從表單的建構函式或`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="ed973-405">Call `InitializeMenu` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ Parent { System::Windows::Forms::Menu ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-406">取得值，指出含有這個功能表項目的功能表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-406">Gets a value indicating the menu that contains this menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-407">
            <see cref="T:System.Windows.Forms.Menu" />，表示含有這個功能表項目的功能表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-407">A <see cref="T:System.Windows.Forms.Menu" /> that represents the menu that contains this menu item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-408">您可以使用這個屬性來取得<xref:System.Windows.Forms.Menu>子功能表的物件。</span><span class="sxs-lookup"><span data-stu-id="ed973-408">You can use this property to obtain the <xref:System.Windows.Forms.Menu> object for a submenu.</span></span> <span data-ttu-id="ed973-409">您可以轉型<xref:System.Windows.Forms.Menu>這個屬性所傳回物件<xref:System.Windows.Forms.MenuItem>物件來操作它。</span><span class="sxs-lookup"><span data-stu-id="ed973-409">You can cast the <xref:System.Windows.Forms.Menu> object returned by this property to a <xref:System.Windows.Forms.MenuItem> object to manipulate it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-410">在此範例中，您建立主功能表與最上層功能表項目， `menuItem1` (`File`)。</span><span class="sxs-lookup"><span data-stu-id="ed973-410">In this example, you create a main menu and a top-level menu item, `menuItem1` (`File`).</span></span> <span data-ttu-id="ed973-411">您也可以建立兩個功能表項目， `menuItem2` (`New`) 和`menuItem3`(`Open`)，並將它們加入的功能表項目清單`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-411">You also create two menu items, `menuItem2` (`New`) and `menuItem3` (`Open`), and add them to the menu item list of `menuItem1`.</span></span> <span data-ttu-id="ed973-412">然後請檢查是否`menuItem3`有父功能表上，為 true，並顯示此父功能表的資訊訊息方塊中。</span><span class="sxs-lookup"><span data-stu-id="ed973-412">Then you check to see if `menuItem3` has got a parent menu, which is true, and display the information of this parent menu in message box.</span></span> <span data-ttu-id="ed973-413">這個範例需要您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-413">This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[ParentMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ParentMenu/CPP/form1.cpp#1)]
 [!code-csharp[ParentMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ParentMenu/CS/form1.cs#1)]
 [!code-vb[ParentMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ParentMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed973-414">產生 <see cref="E:System.Windows.Forms.Control.Click" /> 的 <see cref="T:System.Windows.Forms.MenuItem" /> 事件，模擬使用者按下的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-414">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for the <see cref="T:System.Windows.Forms.MenuItem" />, simulating a click by a user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-415">您可以使用這個功能表來啟動功能表項目，透過程式碼，而不傳送任何事件資訊。</span><span class="sxs-lookup"><span data-stu-id="ed973-415">You can use this menu to activate a menu item through code without passing any event information.</span></span> <span data-ttu-id="ed973-416">例如，如果您想要啟用功能表項目為基礎，就會發生在您的應用程式，您可以呼叫的動作<xref:System.Windows.Forms.MenuItem.PerformClick%2A>針對該方法<xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="ed973-416">For example, if you want to activate a menu item based on an action that occurs in your application, you can call the <xref:System.Windows.Forms.MenuItem.PerformClick%2A> method for that <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-417">在此範例中以程式設計方式按一下功能表項目使用`PerformClick`方法。</span><span class="sxs-lookup"><span data-stu-id="ed973-417">In this example you programmatically click a menu item by using the `PerformClick` method.</span></span> <span data-ttu-id="ed973-418">首先，您建立主功能表 (`mainMenu1`) 並將它加入兩個功能表項目， `menuItem1` (`File`) 和`menuItem2`(`Edit`)。</span><span class="sxs-lookup"><span data-stu-id="ed973-418">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="ed973-419">您也使用<xref:System.Windows.Forms.MenuItem.Click>按一下功能表項目時，將資料傳送至事件處理常式的事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-419">You also use the <xref:System.Windows.Forms.MenuItem.Click> event to send data to the event handler when a menu item is clicked.</span></span> <span data-ttu-id="ed973-420">然後您使用`PerformClick`方法來按一下`File`功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-420">Then you use the `PerformClick` method to click the `File` menu item.</span></span> <span data-ttu-id="ed973-421">當您啟動應用程式，`File`功能表項目已啟用，而且訊息方塊包含文字 「 在按下功能表檔案。 」</span><span class="sxs-lookup"><span data-stu-id="ed973-421">When you start the application, the `File` menu item is activated, and a message box that contains the text "The File menu is clicked."</span></span> <span data-ttu-id="ed973-422">會出現在螢幕上。</span><span class="sxs-lookup"><span data-stu-id="ed973-422">appears on the screen.</span></span> <span data-ttu-id="ed973-423">這個範例需要您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-423">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformClick/CPP/form1.cpp#1)]
 [!code-csharp[PerformClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformClick/CS/form1.cs#1)]
 [!code-vb[PerformClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="public virtual void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformSelect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed973-424">引發這個功能表項目的 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-424">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-425">這個方法可讓您將升級<xref:System.Windows.Forms.MenuItem.Select>而不需任何事件資訊傳遞至事件處理常式的事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-425">This method allows you to raise the <xref:System.Windows.Forms.MenuItem.Select> event without passing any event information to the event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-426">在此範例中以程式設計方式選取功能表項目使用`PerformSelect`方法。</span><span class="sxs-lookup"><span data-stu-id="ed973-426">In this example you programmatically select a menu item by using the `PerformSelect` method.</span></span> <span data-ttu-id="ed973-427">首先，您建立主功能表 (`mainMenu1`) 並將它加入兩個功能表項目， `menuItem1` (`File`) 和`menuItem2`(`Edit`)。</span><span class="sxs-lookup"><span data-stu-id="ed973-427">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="ed973-428">您也使用<xref:System.Windows.Forms.MenuItem.Select>事件來選取功能表項目時，將資料傳送至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="ed973-428">You also use the <xref:System.Windows.Forms.MenuItem.Select> event to send data to the event handler when a menu item is selected.</span></span> <span data-ttu-id="ed973-429">然後您使用`PerformSelect`方法來選取`File`功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-429">Then you use the `PerformSelect` method to select the `File` menu item.</span></span> <span data-ttu-id="ed973-430">當您啟動應用程式，`File`選取功能表項目，以及訊息方塊包含的文字 」 的功能表選取的檔案。 」</span><span class="sxs-lookup"><span data-stu-id="ed973-430">When you start the application, the `File` menu item is selected, and a message box that contains the text "The File menu is selected."</span></span> <span data-ttu-id="ed973-431">會出現在螢幕上。</span><span class="sxs-lookup"><span data-stu-id="ed973-431">appears on the screen.</span></span> <span data-ttu-id="ed973-432">這個範例需要您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-432">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformSelect#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformSelect/CPP/form1.cpp#1)]
 [!code-csharp[PerformSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformSelect/CS/form1.cs#1)]
 [!code-vb[PerformSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformSelect/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.MenuItem.PerformClick" />
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-433">發生於功能表項目的功能表項目清單顯示前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-433">Occurs before a menu item's list of menu items is displayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-434">此事件只會在功能表項目具有子功能表項目可以顯示時發生。</span><span class="sxs-lookup"><span data-stu-id="ed973-434">This event only occurs when a menu item has submenu items to display.</span></span> <span data-ttu-id="ed973-435">您可以使用此事件處理常式來新增、 移除、 啟用、 停用，請選取，或取消選取 根據您的應用程式的狀態，才能讓它們顯示的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-435">You can use this event handler to add, remove, enable, disable, check, or uncheck menu items based on the state of your application before they are displayed.</span></span> <span data-ttu-id="ed973-436">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-436">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-437">下列程式碼範例示範如何使用<xref:System.Windows.Forms.MenuItem.Popup>事件，以判斷是否<xref:System.Windows.Forms.MenuItem>中顯示的功能表會顯示前，會啟用物件，提供支援進行剪下、 複製和刪除作業。</span><span class="sxs-lookup"><span data-stu-id="ed973-437">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="ed973-438">此範例會判斷如果`textBox1`、<xref:System.Windows.Forms.TextBox>控制表單上、 已啟用，擁有輸入焦點，而且有啟用之前選取的文字<xref:System.Windows.Forms.MenuItem>物件。</span><span class="sxs-lookup"><span data-stu-id="ed973-438">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="ed973-439">這個範例需要該三<xref:System.Windows.Forms.MenuItem>物件會建立具名`menuCut`， `menuCopy`，和`menuDelete`已建立。</span><span class="sxs-lookup"><span data-stu-id="ed973-439">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadioCheck">
      <MemberSignature Language="C#" Value="public bool RadioCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RadioCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property RadioCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RadioCheck { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-440">取得或設定值，指出如果選取 <see cref="T:System.Windows.Forms.MenuItem" />，是否顯示選項按鈕，而不顯示核取記號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-440">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" />, if checked, displays a radio-button instead of a check mark.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-441">如果使用選項按鈕，而不用核取記號，則為 <see langword="true" />；功能表項目核取時顯示出標準的核取記號，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-441">
              <see langword="true" /> if a radio-button is to be used instead of a check mark; <see langword="false" /> if the standard check mark is to be displayed when the menu item is checked.</span>
          </span>
          <span data-ttu-id="ed973-442">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-442">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-443">核取記號不一定表示一組功能表項目互斥狀態。</span><span class="sxs-lookup"><span data-stu-id="ed973-443">Check marks do not necessarily imply a mutually exclusive state for a group of menu items.</span></span> <span data-ttu-id="ed973-444">您可以使用這個屬性，可對使用者指出核取記號的功能表項目是互為獨佔模式。</span><span class="sxs-lookup"><span data-stu-id="ed973-444">You can use this property to indicate to the user that the check mark of a menu item is mutually exclusive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-445">下列程式碼範例使用<xref:System.Windows.Forms.MenuItem.Checked%2A>屬性來變更應用程式的狀態。</span><span class="sxs-lookup"><span data-stu-id="ed973-445">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to change the state of an application.</span></span> <span data-ttu-id="ed973-446">在範例中，一組功能表項目會假設用來指定文字的色彩<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="ed973-446">In the example, a group of menu items are provided that are used to specify the color for the text in an <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="ed973-447">在範例中，提供此事件處理常式由<xref:System.Windows.Forms.MenuItem.Click>三個功能表項目的事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-447">In the example, the event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of the three menu items.</span></span> <span data-ttu-id="ed973-448">每個功能表項目指定色彩， `menuItemRed`， `menuItemGreen`，或`menuItemBlue`。</span><span class="sxs-lookup"><span data-stu-id="ed973-448">Each menu item specifies a color, `menuItemRed`, `menuItemGreen`, or `menuItemBlue`.</span></span> <span data-ttu-id="ed973-449">此事件處理常式決定哪一個功能表項目已按下、 放置一個核取記號來選取的功能表項目和變更表單的文字色彩<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-449">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control, named `textBox1`.</span></span> <span data-ttu-id="ed973-450">此範例也會使用<xref:System.Windows.Forms.MenuItem.RadioCheck%2A>屬性來示範如何使用選項按鈕核取來顯示互斥的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-450">The example also uses the <xref:System.Windows.Forms.MenuItem.RadioCheck%2A> property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive.</span></span> <span data-ttu-id="ed973-451">這個範例需要<xref:System.Drawing?displayProperty=nameWithType>已加入至表單，其中包含這個程式碼的命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed973-451">This example requires that the <xref:System.Drawing?displayProperty=nameWithType> namespace has been added to the form that contains this code.</span></span>  
  
 [!code-cpp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Checked" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public event EventHandler Select;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Select" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Select" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Select As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Select;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-452">發生於使用者將指標放在功能表項目上方時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-452">Occurs when the user places the pointer over a menu item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-453">當使用者將滑鼠指標放在功能表項目上時，通常會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-453">This event is typically raised when the user places the mouse pointer over the menu item.</span></span> <span data-ttu-id="ed973-454">只有當使用者反白顯示的功能表項目，使用鍵盤，使用方向鍵捲動功能表項目，也可能引發此事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-454">The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys.</span></span> <span data-ttu-id="ed973-455">您可以使用此事件，以顯示應用程式的狀態列中的這個功能表項目相關的詳細的說明字串。</span><span class="sxs-lookup"><span data-stu-id="ed973-455">You can use this event to display a detailed help string pertaining to this menu item in an application's status bar.</span></span> <span data-ttu-id="ed973-456">如需處理事件的詳細資訊，請參閱[處理和引發事件](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)。</span><span class="sxs-lookup"><span data-stu-id="ed973-456">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed973-457">如果<xref:System.Windows.Forms.Menu.MenuItems%2A>屬性<xref:System.Windows.Forms.MenuItem>包含任何項目，就不會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-457">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="ed973-458">父功能表項目不會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="ed973-458">This event is not raised for parent menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-459">下列程式碼範例示範如何使用<xref:System.Windows.Forms.MenuItem.Select>事件<xref:System.Windows.Forms.MenuItem>類別，以指派的說明文字<xref:System.Windows.Forms.StatusBarPanel>的<xref:System.Windows.Forms.StatusBar>控制項。</span><span class="sxs-lookup"><span data-stu-id="ed973-459">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="ed973-460">這個範例需要<xref:System.Windows.Forms.MenuItem>物件命名`menuOpen`， `menuSave`，和`menuExit`加入至<xref:System.Windows.Forms.MainMenu>控制項在表單上的。</span><span class="sxs-lookup"><span data-stu-id="ed973-460">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="ed973-461">這個範例也需要<xref:System.Windows.Forms.StatusBar>控制項，名為`statusBar1`已加入至表單。</span><span class="sxs-lookup"><span data-stu-id="ed973-461">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="ed973-462"><xref:System.Windows.Forms.StatusBar>控制項應該包含<xref:System.Windows.Forms.StatusBarPanel>。</span><span class="sxs-lookup"><span data-stu-id="ed973-462">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
      </Docs>
    </Member>
    <Member MemberName="Shortcut">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Shortcut Shortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Shortcut Shortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Shortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property Shortcut As Shortcut" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Shortcut Shortcut { System::Windows::Forms::Shortcut get(); void set(System::Windows::Forms::Shortcut value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Shortcut</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-463">取得或設定值，指出與功能表項目相關的快速鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-463">Gets or sets a value indicating the shortcut key associated with the menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-464">其中一個 <see cref="T:System.Windows.Forms.Shortcut" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-464">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span>
          </span>
          <span data-ttu-id="ed973-465">預設值為 <see langword="Shortcut.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-465">The default is <see langword="Shortcut.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-466">快速鍵提供功能表系統中，並提供鍵盤存取的使用者沒有滑鼠或其他指標裝置來存取您的應用程式，方法必須經常啟動的使用者使用功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-466">Shortcut keys provide a method for users to activate frequently used menu items in your menu system and to provide keyboard access to your application for those users who do not have access to a mouse or other pointer device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-467">下列程式碼範例建立功能表項目、 設定標題、 指派攠摝坫、 讓功能表項目成為可見，且會顯示快顯功能表項目的顯示索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ed973-467">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="ed973-468">這個範例需要<xref:System.Windows.Forms.MenuItem>也就是已建立名為`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-468">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ed973-469">指派的值不是其中一個 <see cref="T:System.Windows.Forms.Shortcut" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-469">The assigned value is not one of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="ShowShortcut">
      <MemberSignature Language="C#" Value="public bool ShowShortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowShortcut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowShortcut { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-470">取得或設定值，指出功能表項目標題的旁邊是否顯示出與功能表項目相關的快速鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-470">Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-471">如果功能表項目標題的旁邊顯示快速組合鍵，則為 <see langword="true" />；不顯示快速組合鍵，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-471">
              <see langword="true" /> if the shortcut key combination is displayed next to the menu item caption; <see langword="false" /> if the shortcut key combination is not to be displayed.</span>
          </span>
          <span data-ttu-id="ed973-472">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-472">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-473">您可以使用這個屬性提供的使用者隱藏的捷徑功能表選項，節省功能表的空間，或隱藏顯示的快速鍵。</span><span class="sxs-lookup"><span data-stu-id="ed973-473">You can use this property to provide the option for users to hide shortcuts from menus to conserve menu space or to hide a shortcut key from being displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-474">下列程式碼範例建立功能表項目、 設定標題、 指派攠摝坫、 讓功能表項目成為可見，且會顯示快顯功能表項目的顯示索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ed973-474">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="ed973-475">這個範例需要<xref:System.Windows.Forms.MenuItem>也就是已建立名為`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-475">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-476">取得或設定值，指出功能表項目的標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-476">Gets or sets a value indicating the caption of the menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-477">功能表項目的文字標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-477">The text caption of the menu item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-478">當您指定功能表項目的標題時，您也可以指定存取金鑰放 '&' 來存取金鑰作為字元之前。</span><span class="sxs-lookup"><span data-stu-id="ed973-478">When you specify a caption for your menu item, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="ed973-479">例如，若要指定 「 檔案 」 中的"F"做為存取金鑰，您會指定做為功能表項目的標題"& 檔案 」。</span><span class="sxs-lookup"><span data-stu-id="ed973-479">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="ed973-480">您可以使用這項功能可提供功能表的鍵盤巡覽。</span><span class="sxs-lookup"><span data-stu-id="ed973-480">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="ed973-481">此屬性設定為"`-`"會導致您的功能表項目顯示為分隔符號 （水平列），而不是標準功能表項目。</span><span class="sxs-lookup"><span data-stu-id="ed973-481">Setting this property to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-482">下列程式碼範例建立功能表項目、 設定標題、 指派攠摝坫、 讓功能表項目成為可見，且會顯示快顯功能表項目的顯示索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ed973-482">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="ed973-483">這個範例需要<xref:System.Windows.Forms.MenuItem>也就是已建立名為`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-483">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Mnemonic" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed973-484">傳回表示 <see cref="T:System.Windows.Forms.MenuItem" /> 的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-484">Returns a string that represents the <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed973-485">字串，代表目前的 <see cref="T:System.Windows.Forms.MenuItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-485">A string that represents the current <see cref="T:System.Windows.Forms.MenuItem" />.</span>
          </span>
          <span data-ttu-id="ed973-486">這個字串包括了控制項的類型與 <see cref="P:System.Windows.Forms.MenuItem.Text" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-486">The string includes the type and the <see cref="P:System.Windows.Forms.MenuItem.Text" /> property of the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed973-487">取得或設定值，指出功能表項目是否為可見。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-487">Gets or sets a value indicating whether the menu item is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed973-488">功能表項目在功能表上可見，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-488">
              <see langword="true" /> if the menu item will be made visible on the menu; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed973-489">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed973-489">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed973-490">您可以使用這個屬性來修改而不需要合併功能表或停用功能表的功能表結構。</span><span class="sxs-lookup"><span data-stu-id="ed973-490">You can use this property to modify a menu structure without having to merge menus or disable menus.</span></span> <span data-ttu-id="ed973-491">比方說，如果您想要隱藏完整的一段功能從您的應用程式的功能表，您可以隱藏它們從使用者將此屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="ed973-491">For example, if you want to hide a complete section of functionality from the menus for your application, you can hide them from the user by setting this property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed973-492">下列程式碼範例建立功能表項目、 設定標題、 指派攠摝坫、 讓功能表項目成為可見，且會顯示快顯功能表項目的顯示索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ed973-492">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="ed973-493">這個範例需要<xref:System.Windows.Forms.MenuItem>也就是已建立名為`menuItem1`。</span><span class="sxs-lookup"><span data-stu-id="ed973-493">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>