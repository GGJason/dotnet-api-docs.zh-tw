<Type Name="AxHost+AboutBoxDelegate" FullName="System.Windows.Forms.AxHost+AboutBoxDelegate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6394649cc0319f587b5240d08cda350f587a5ab2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30635242" />
  </Metadata>
  <TypeSignature Language="C#" Value="protected delegate void AxHost.AboutBoxDelegate();" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi sealed AxHost/AboutBoxDelegate extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AxHost.AboutBoxDelegate" />
  <TypeSignature Language="VB.NET" Value="Protected Delegate Sub AxHost.AboutBoxDelegate()" />
  <TypeSignature Language="C++ CLI" Value="protected: delegate void AxHost::AboutBoxDelegate();" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>代表將顯示 ActiveX 控制項之 [關於] 對話方塊的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AxHost.AboutBoxDelegate>提供您的 ActiveX 控制項的相關方塊即將顯示時收到通知的能力。 [關於] 對話方塊顯示之前執行程式碼加入至委派方法。  
  
 當您建立<xref:System.Windows.Forms.AxHost.AboutBoxDelegate>委派，必須識別的方法將處理的 ActiveX 控制項的關於對話方塊顯示，如果有的話。 若要與您處理常式關聯的方法，將加入至方法的委派的執行個體。 除非您移除委派，呼叫方法時，會呼叫處理常式。 如需委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列範例會覆寫建構函式，而<xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A>和<xref:System.Windows.Forms.AxHost.AttachInterfaces%2A>方法<xref:System.Windows.Forms.AxHost>衍生包裝 Microsoft 格式編輯 ActiveX 控制項的類別。 此程式碼假設您已建立產生的原始程式碼 MSMask32.ocx 檔案上執行 AxImp.exe`/source`參數來產生包裝函式類別，可供編輯。 這會顯示程式碼只在 C# 語法，也就是做為唯一語言輸出 AxImp.exe。  
  
 [!code-csharp[AxHost_Wrap_MaskEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AxHost_Wrap_MaskEdit/CS/axmsmask.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" />
    <altmember cref="M:System.Windows.Forms.AxHost.ShowAboutBox" />
    <altmember cref="P:System.Windows.Forms.AxHost.HasAboutBox" />
  </Docs>
</Type>