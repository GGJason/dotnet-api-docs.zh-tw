<Type Name="TextRenderer" FullName="System.Windows.Forms.TextRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d0655bdd836d1f2fea1a3b84cbf6d681179018e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650602" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供方法用來測量及呈現文字。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer>類別提供一組`static`可以用於測量和 Windows Form 控制項上繪製文字的方法。  
  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。 例如，<xref:System.Windows.Forms.TextRenderer> 的預設行為是將邊框距離加入至已繪製之文字的週框 (Bounding Rectangle)，以容納突出 (Overhanging) 的圖像 (Glyph)。 如果您需要繪製一行文字而不含這些額外空格，則應該使用會採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 和 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> 參數的 <xref:System.Drawing.Size> 和 <xref:System.Windows.Forms.TextFormatFlags> 版本。 如需範例，請參閱 <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer> 的 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法不支援列印。 您應該一律使用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText1`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的裝置內容、色彩和字型，在指定的位置上繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中繪製文字的裝置內容。</param>
        <param name="text">要繪製的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已繪製的文字。</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" />，表示已繪製之文字的左上角。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，要套用到已繪製的文字。</param>
        <summary>使用指定的裝置內容、字型和色彩，在指定的位置上繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。  
  
 如果`font`是`null`或`forecolor`是<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>、<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法時，會繪製文字的字型或所指定的裝置內容中目前選取的色彩`dc`。 如果`forecolor`是<xref:System.Drawing.Color.Transparent%2A>，不會繪製文字。  
  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法指定<xref:System.Drawing.Point>繪製文字左上角為無法正確轉譯在 Windows 2000 上。 如果您的應用程式適用於執行 Windows 2000 的電腦上，您應該使用其中一個<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法指定<xref:System.Drawing.Rectangle>繪製文字的繫結。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText1`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中繪製文字的裝置內容。</param>
        <param name="text">要繪製的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已繪製的文字。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" />，表示文字的界限。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，要套用到已繪製的文字。</param>
        <summary>使用指定的裝置內容、字型和色彩，在指定的界限內繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`font`或`forecolor`是`null`或<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>分別;<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法時，會繪製文字的字型或所指定的裝置內容中目前選取的色彩`dc`。 如果`forecolor`是<xref:System.Drawing.Color.Transparent%2A>，不會繪製文字。  
  
 這個方法會以水平和垂直置中所指定的矩形中的文字`bounds`參數。 若要變更繪製文字的方式，使用的版本<xref:System.Windows.Forms.TextRenderer.DrawText%2A>採用<xref:System.Windows.Forms.TextFormatFlags>參數類型。  
  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText2`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中繪製文字的裝置內容。</param>
        <param name="text">要繪製的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已繪製的文字。</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" />，表示已繪製之文字的左上角。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，要套用到已繪製的文字。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，要套用至已繪製之文字的背景區域。</param>
        <summary>使用指定的裝置內容、字型、色彩和背景色彩，在指定的位置上繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor`參數會套用至包含繪製的文字的矩形區域。 如果`font`，`backcolor`或`forecolor`是`null`或<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>分別;<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法時，會繪製文字的字型或所指定的裝置內容中目前選取的色彩`dc`。 如果`forecolor`是<xref:System.Drawing.Color.Transparent%2A>，不會繪製文字。  
  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。  
  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法指定<xref:System.Drawing.Point>繪製文字左上角為無法正確轉譯在 Windows 2000 上。 如果您的應用程式適用於執行 Windows 2000 的電腦上，您應該使用其中一個<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法指定<xref:System.Drawing.Rectangle>繪製文字的繫結。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText3`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中繪製文字的裝置內容。</param>
        <param name="text">要繪製的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已繪製的文字。</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" />，表示已繪製之文字的左上角。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，要套用到已繪製的文字。</param>
        <param name="flags">
          <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的位元組合。</param>
        <summary>使用指定的裝置內容、字型、色彩和格式化指示，在指定的位置上繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。 例如，<xref:System.Windows.Forms.TextRenderer> 的預設行為是將邊框距離加入至已繪製之文字的週框 (Bounding Rectangle)，以容納突出 (Overhanging) 的圖像 (Glyph)。 如果您需要繪製一行文字而不含這些額外空格，則應該使用會採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 和 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> 參數的 <xref:System.Drawing.Size> 和 <xref:System.Windows.Forms.TextFormatFlags> 版本。 如需範例，請參閱 <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>。  
  
 `backColor`參數會套用至內的區域`bounds`參數。 如果`font`或`forecolor`是`null`或<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>分別;<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法時，會繪製文字的字型或所指定的裝置內容中目前選取的色彩`dc`。 如果`forecolor`是<xref:System.Drawing.Color.Transparent%2A>，不會繪製文字。  
  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
 <xref:System.Windows.Forms.TextRenderer>無法支援新增定位停駐點繪製的文字中，雖然您可以擴充現有的索引標籤可讓您停止使用<xref:System.Windows.Forms.TextFormatFlags.ExpandTabs>旗標。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法指定<xref:System.Drawing.Point>繪製文字左上角為無法正確轉譯在 Windows 2000 上。 如果您的應用程式適用於執行 Windows 2000 的電腦上，您應該使用其中一個<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法指定<xref:System.Drawing.Rectangle>繪製文字的繫結。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText5`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中繪製文字的裝置內容。</param>
        <param name="text">要繪製的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已繪製的文字。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" />，表示文字的界限。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，要套用到已繪製的文字。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，要套用至以 <c>bounds</c> 表示的區域。</param>
        <summary>使用指定的裝置內容、字型、色彩和背景色彩，在指定的界限之內繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor`參數會套用至內的區域`bounds`參數。 如果`font`，`backcolor`或`forecolor`是`null`或<xref:System.Drawing.Color.Empty>分別;<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法時，會繪製文字的字型或所指定的裝置內容中目前選取的色彩`dc`。 如果`forecolor`是<xref:System.Drawing.Color.Transparent%2A>，不會繪製文字。  
  
 這個方法會以水平和垂直置中所指定的矩形中的文字`bounds`參數。 若要變更繪製文字的方式，使用的版本<xref:System.Windows.Forms.TextRenderer.DrawText%2A>採用<xref:System.Windows.Forms.TextFormatFlags>參數類型。  
  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText4`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中繪製文字的裝置內容。</param>
        <param name="text">要繪製的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已繪製的文字。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" />，表示文字的界限。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，要套用到已繪製的文字。</param>
        <param name="flags">
          <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的位元組合。</param>
        <summary>使用指定的裝置內容、字型、色彩和格式化指示，在指定的界限之內繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`font`或`color`是`null`或<xref:System.Drawing.Color.Empty>分別;<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法時，會繪製文字的字型或所指定的裝置內容中目前選取的色彩`dc`。 如果`forecolor`是<xref:System.Drawing.Color.Transparent%2A>，不會繪製文字。  
  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。 例如，<xref:System.Windows.Forms.TextRenderer> 的預設行為是將邊框距離加入至已繪製之文字的週框 (Bounding Rectangle)，以容納突出 (Overhanging) 的圖像 (Glyph)。 如果您需要繪製一行文字而不含這些額外空格，則應該使用會採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 和 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> 參數的 <xref:System.Drawing.Size> 和 <xref:System.Windows.Forms.TextFormatFlags> 版本。 如需範例，請參閱 <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>。  
  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
 <xref:System.Windows.Forms.TextRenderer>無法支援新增定位停駐點繪製的文字中，雖然您可以擴充現有的索引標籤可讓您停止使用<xref:System.Windows.Forms.TextFormatFlags.ExpandTabs>旗標。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText6`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中繪製文字的裝置內容。</param>
        <param name="text">要繪製的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已繪製的文字。</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" />，表示已繪製之文字的左上角。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，要套用至文字。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，要套用至已繪製之文字的背景區域。</param>
        <param name="flags">
          <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的位元組合。</param>
        <summary>使用指定的裝置內容、字型、色彩、背景色彩和格式化指示，在指定的位置上繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backcolor`參數套用包含繪製的文字的矩形區域。 如果`font`或`forecolor`是`null`或<xref:System.Drawing.Color.Empty>分別;<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法時，會繪製文字的字型或所指定的裝置內容中目前選取的色彩`dc`。 如果`forecolor`是<xref:System.Drawing.Color.Transparent%2A>，不會繪製文字。  
  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。 例如，<xref:System.Windows.Forms.TextRenderer> 的預設行為是將邊框距離加入至已繪製之文字的週框 (Bounding Rectangle)，以容納突出 (Overhanging) 的圖像 (Glyph)。 如果您需要繪製一行文字而不含這些額外空格，則應該使用會採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 和 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> 參數的 <xref:System.Drawing.Size> 和 <xref:System.Windows.Forms.TextFormatFlags> 版本。 如需範例，請參閱 <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>。  
  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
 <xref:System.Windows.Forms.TextRenderer>無法支援新增定位停駐點繪製的文字中，雖然您可以擴充現有的索引標籤可讓您停止使用<xref:System.Windows.Forms.TextFormatFlags.ExpandTabs>旗標。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法指定<xref:System.Drawing.Point>繪製文字左上角為無法正確轉譯在 Windows 2000 上。 如果您的應用程式適用於執行 Windows 2000 的電腦上，您應該使用其中一個<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法指定<xref:System.Drawing.Rectangle>繪製文字的繫結。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText7`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中繪製文字的裝置內容。</param>
        <param name="text">要繪製的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已繪製的文字。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" />，表示文字的界限。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，要套用至文字。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，要套用至以 <c>bounds</c> 表示的區域。</param>
        <param name="flags">
          <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的位元組合。</param>
        <summary>使用指定的裝置內容、字型、色彩、背景色彩和格式化指示，在指定的界限之內繪製指定的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backcolor`參數會套用至內的區域`bounds`參數`.`如果`font`，`forecolor`或`backcolor`是`null`或<xref:System.Drawing.Color.Empty>分別;<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法將繪製文字的字型或所指定的裝置內容中目前選取的色彩中`dc`。 如果`forecolor`是<xref:System.Drawing.Color.Transparent%2A>，不會繪製文字。  
  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。 例如，<xref:System.Windows.Forms.TextRenderer> 的預設行為是將邊框距離加入至已繪製之文字的週框 (Bounding Rectangle)，以容納突出 (Overhanging) 的圖像 (Glyph)。 如果您需要繪製一行文字而不含這些額外空格，則應該使用會採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 和 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> 參數的 <xref:System.Drawing.Size> 和 <xref:System.Windows.Forms.TextFormatFlags> 版本。 如需範例，請參閱 <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>。  
  
 所提供的文字轉譯<xref:System.Windows.Forms.TextRenderer>類別根據 GDI 文字轉譯，而且不支援從 Windows Form 列印。 請改用<xref:System.Drawing.Graphics.DrawString%2A>方法<xref:System.Drawing.Graphics>類別。  
  
 <xref:System.Windows.Forms.TextRenderer>無法支援新增定位停駐點繪製的文字中，雖然您可以擴充現有的索引標籤可讓您停止使用<xref:System.Windows.Forms.TextFormatFlags.ExpandTabs>旗標。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`RenderText8`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在使用指定的字型繪製時，測量指定的文字。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">要測量的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已測量的文字。</param>
        <summary>以指定的字型繪製時，提供所指定文字的大小 (以像素為單位)。</summary>
        <returns>以指定之 <paramref name="text" />，在單行上已繪製之 <paramref name="font" /> 的 <see cref="T:System.Drawing.Size" /> (以像素為單位)。 您可以使用其中一個採用 <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" /> 參數的 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 多載，管理文字的繪製方式。 例如，<see cref="T:System.Windows.Forms.TextRenderer" /> 的預設行為是將邊框距離加入至已繪製之文字的週框 (Bounding Rectangle)，以容納突出 (Overhanging) 的圖像 (Glyph)。 如果您需要繪製一行文字而不含這些額外空格，則應該使用會採用 <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" /> 和 <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" /> 參數的 <see cref="T:System.Drawing.Size" /> 和 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 版本。 如需範例，請參閱 <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法必須在單一行中繪製文字。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> 方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`MeasureText1`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中測量文字的裝置內容。</param>
        <param name="text">要測量的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已測量的文字。</param>
        <summary>提供在指定的裝置內容中以指定的字型繪製之文字的大小 (以像素為單位)。</summary>
        <returns>以指定之裝置內容中所指定的 <paramref name="text" />，在單行上所繪製 <paramref name="font" /> 的 <see cref="T:System.Drawing.Size" /> (以像素為單位)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法必須在單一行中繪製文字。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用其中一種<xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`DrawALineOfText`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="text">要測量的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已測量的文字。</param>
        <param name="proposedSize">初始周框 (Bounding Rectangle) 的 <see cref="T:System.Drawing.Size" />。</param>
        <summary>使用指定的大小建立初始周框並以指定的字型繪製時，提供所指定文字的大小 (以像素為單位)。</summary>
        <returns>以指定之 <paramref name="text" /> 所繪製 <paramref name="font" /> 的 <see cref="T:System.Drawing.Size" /> (以像素為單位)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法會使用`proposedSize`參數，以判斷文字大小時指定高度與寬度的關聯性。 當測量在單一行中的文字，如果`proposedSize`參數代表<xref:System.Drawing.Size>具有高度維度大於<xref:System.Int32.MaxValue?displayProperty=nameWithType>，傳回<xref:System.Drawing.Size>會調整，以反映實際文字的高度。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用其中一種<xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`DrawALineOfText`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中測量文字的裝置內容。</param>
        <param name="text">要測量的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已測量的文字。</param>
        <param name="proposedSize">初始周框 (Bounding Rectangle) 的 <see cref="T:System.Drawing.Size" />。</param>
        <summary>使用指定之大小建立文字的初始周框，以指定之裝置內容中所指定的字型繪製時，提供所指定文字的大小 (以像素為單位)。</summary>
        <returns>以指定之 <paramref name="text" /> 所繪製 <paramref name="font" /> 的 <see cref="T:System.Drawing.Size" /> (以像素為單位)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法會使用`proposedSize`參數，以判斷文字大小時指定高度與寬度的關聯性。 當測量在單一行中的文字，如果`proposedSize`參數代表<xref:System.Drawing.Size>具有高度維度大於<xref:System.Int32.MaxValue?displayProperty=nameWithType>，傳回<xref:System.Drawing.Size>會調整，以反映實際文字的高度。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用其中一種<xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`DrawALineOfText`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="text">要測量的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已測量的文字。</param>
        <param name="proposedSize">初始周框 (Bounding Rectangle) 的 <see cref="T:System.Drawing.Size" />。</param>
        <param name="flags">格式化指示，要套用至已測量的文字。</param>
        <summary>使用指定的大小建立文字的初始周框 ，以指定的字型和格式化指示繪製時，提供所指定文字的大小 (以像素為單位)。</summary>
        <returns>以指定之 <paramref name="text" /> 和格式所繪製 <paramref name="font" /> 的 <see cref="T:System.Drawing.Size" /> (以像素為單位)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> 使用`proposedSize`和`flags`參數來決定文字大小表示高度與寬度的關聯性。 當測量在單一行中的文字，如果`proposedSize`參數代表<xref:System.Drawing.Size>具有高度維度大於<xref:System.Int32.MaxValue?displayProperty=nameWithType>，傳回<xref:System.Drawing.Size>會調整，以反映實際文字的高度。  
  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。 例如，<xref:System.Windows.Forms.TextRenderer> 的預設行為是將邊框距離加入至已繪製之文字的週框 (Bounding Rectangle)，以容納突出 (Overhanging) 的圖像 (Glyph)。 如果您需要繪製一行文字而不含這些額外空格，則應該使用會採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 和 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> 參數的 <xref:System.Drawing.Size> 和 <xref:System.Windows.Forms.TextFormatFlags> 版本。 如需範例，請參閱 <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>。  
  
> [!NOTE]
>  這個多載<xref:System.Windows.Forms.TextRenderer.MeasureText%28System.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>將會忽略<xref:System.Windows.Forms.TextFormatFlags>值<xref:System.Windows.Forms.TextFormatFlags.NoPadding>或<xref:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding>。 如果您要指定非預設的填補值，您應該使用的多載<xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>採用<xref:System.Drawing.IDeviceContext>物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用其中一種<xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`DrawALineOfText`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">要在其中測量文字的裝置內容。</param>
        <param name="text">要測量的文字。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，要套用到已測量的文字。</param>
        <param name="proposedSize">初始周框 (Bounding Rectangle) 的 <see cref="T:System.Drawing.Size" />。</param>
        <param name="flags">格式化指示，要套用至已測量的文字。</param>
        <summary>使用指定的大小建立文字的初始周框 ，以指定的裝置內容、字型和格式化指示繪製時，提供所指定文字的大小 (以像素為單位)。</summary>
        <returns>以指定之 <paramref name="text" /> 和格式所繪製 <paramref name="font" /> 的 <see cref="T:System.Drawing.Size" /> (以像素為單位)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>方法會使用`proposedSize`和`flags`參數來決定文字大小表示高度與寬度的關聯性。 當測量在單一行中的文字，如果`proposedSize`參數代表<xref:System.Drawing.Size>具有高度維度大於<xref:System.Int32.MaxValue?displayProperty=nameWithType>，傳回<xref:System.Drawing.Size>會調整，以反映實際文字的高度。  
  
 您可以使用其中一個採用 <xref:System.Windows.Forms.TextRenderer.DrawText%2A> 參數的 <xref:System.Windows.Forms.TextFormatFlags> 多載，管理文字的繪製方式。 例如，<xref:System.Windows.Forms.TextRenderer> 的預設行為是將邊框距離加入至已繪製之文字的週框 (Bounding Rectangle)，以容納突出 (Overhanging) 的圖像 (Glyph)。 如果您要繪製文字行，不含這些額外的空格，請使用舊版<xref:System.Windows.Forms.TextRenderer.DrawText%2A>和<xref:System.Windows.Forms.TextRenderer.MeasureText%2A>採用<xref:System.Drawing.Size>和<xref:System.Windows.Forms.TextFormatFlags>參數，如範例所示。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Forms.TextRenderer.MeasureText%2A>和<xref:System.Windows.Forms.TextRenderer.DrawText%2A>方法，以繪製不同的字型樣式中的單行文字。 若要執行此範例中貼上下列程式碼會在 Windows Form 和呼叫`DrawALineOfText`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>