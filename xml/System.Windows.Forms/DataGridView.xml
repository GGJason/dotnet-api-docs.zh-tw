<Type Name="DataGridView" FullName="System.Windows.Forms.DataGridView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34018c3f358ad327888f5899459a52d1dc6f1ebd" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51939872" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridView : System.Windows.Forms.Control, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridView extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridView" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridView&#xA;Inherits Control&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridView : System::Windows::Forms::Control, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type DataGridView = class&#xA;    inherit Control&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("CellContentClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在可自訂的格線中顯示資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制項提供可自訂的資料表顯示資料。 <xref:System.Windows.Forms.DataGridView>類別可讓您自訂的資料格、 資料列、 資料行和透過屬性使用的框線這類<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>，和<xref:System.Windows.Forms.DataGridView.GridColor%2A>。 如需詳細資訊，請參閱 <<c0> [ 基本格式化和樣式設定 Windows Form DataGridView 控制項中的](~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md)。  
  
 您可以使用<xref:System.Windows.Forms.DataGridView>控制項來顯示資料，不論基礎資料來源。 如果沒有指定資料來源，您可以建立資料行和資料列包含資料，並將它們加入直接<xref:System.Windows.Forms.DataGridView>使用<xref:System.Windows.Forms.DataGridView.Rows%2A>和<xref:System.Windows.Forms.DataGridView.Columns%2A>屬性。 您也可以使用<xref:System.Windows.Forms.DataGridView.Rows%2A>集合，以存取<xref:System.Windows.Forms.DataGridViewRow>物件和<xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=nameWithType>屬性來讀取或直接寫入資料格的值。 <xref:System.Windows.Forms.DataGridView.Item%2A>索引子也可直接存取的資料格。  
  
 若要以手動方式填入控制項或者，您可以設定<xref:System.Windows.Forms.DataGridView.DataSource%2A>和<xref:System.Windows.Forms.DataGridView.DataMember%2A>屬性，以繫結<xref:System.Windows.Forms.DataGridView>到資料來源，並會自動填入資料。 如需詳細資訊，請參閱 <<c0> [ 顯示 Windows Form DataGridView 控制項中的資料](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)。  
  
 當使用非常大量的資料，您可以設定<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性設`true`來顯示可用的資料子集。 虛擬模式要求來源的資料快取實作<xref:System.Windows.Forms.DataGridView>填入。 如需詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的資料顯示模式](~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)。  
  
 如需有關可用的功能<xref:System.Windows.Forms.DataGridView>控制項，請參閱[DataGridView 控制項](~/docs/framework/winforms/controls/datagridview-control-windows-forms.md)。 下表提供一般工作的直接連結。  
  
-   [操作說明：將資料繫結至 Windows Forms DataGridView 控制項](https://msdn.microsoft.com/library/fbk67b6z\(v=vs.110\).aspx)  
  
-   [操作說明：將工具提示加入至 Windows Forms DataGridView 控制項中的個別儲存格](https://msdn.microsoft.com/library/2249cf0a\(v=vs.110\).aspx)  
  
-   [操作說明：設定 Windows Forms DataGridView 控制項的字型和色彩樣式](https://msdn.microsoft.com/library/z2akwyy7\(v=vs.110\).aspx)  
  
-   [操作說明：使用設計工具變更 Windows Forms DataGridView 資料行的類型](https://msdn.microsoft.com/library/053656ss\(v=vs.110\).aspx)  
  
-   [操作說明：使用設計工具將資料繫結至 Windows Forms DataGridView 控制項](https://msdn.microsoft.com/library/33w255ac\(v=vs.110\).aspx)  
  
-   [操作說明：使用設計工具設定 Windows Forms DataGridView 控制項的預設儲存格樣式和資料格式](https://msdn.microsoft.com/library/95y5fz2x\(v=vs.110\).aspx)  
  
-   [操作說明：格式化 Windows Forms DataGridView 控制項中的資料](https://msdn.microsoft.com/library/f9x2790s\(v=vs.110\).aspx)  
  
-   [逐步解說：驗證 Windows Forms DataGridView 控制項中的資料](https://msdn.microsoft.com/library/ykdxa0bc\(v=vs.110\).aspx)  
  
-   [操作說明：自訂 Windows Forms DataGridView 控制項中的資料格式](https://msdn.microsoft.com/library/z1cc356h\(v=vs.110\).aspx)  
  
-   [逐步解說：使用兩個 Windows Forms DataGridView 控制項建立主從式表單](https://msdn.microsoft.com/library/y8c0cxey\(v=vs.110\).aspx)  
  
 雖然<xref:System.Windows.Forms.DataGridView>會取代並將功能加入至<xref:System.Windows.Forms.DataGrid>先前的版本控制<xref:System.Windows.Forms.DataGrid>如果您選擇，將會保留回溯相容性以及供未來使用的控制項。 如需詳細資訊，請參閱 [Windows Forms DataGridView 和 DataGrid 控制項之間的差異](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>控制項繼承兩者<xref:System.Windows.Forms.Control.ContextMenu%2A>並<xref:System.Windows.Forms.Control.ContextMenuStrip%2A>屬性從<xref:System.Windows.Forms.Control>，但僅支援<xref:System.Windows.Forms.Control.ContextMenuStrip%2A>屬性。 使用<xref:System.Windows.Forms.Control.ContextMenu%2A>屬性與<xref:System.Windows.Forms.DataGridView>控制項沒有任何作用。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化未繫結<xref:System.Windows.Forms.DataGridView>控制項。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/CS/simpleunbound.cs#00)]
 [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/VB/simpleunbound.vb#00)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0a45c661-89dc-4390-9cc6-c47eee501488">DataGridView 控制項概觀 (Windows Form)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b9b90836-1f56-4aa9-8db8-edc78fe830e8">Windows Form DataGridView 控制項中的基本格式化和樣式設定</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b170b52a-2ebd-4948-ac2f-e52d494cebb2">在 Windows Form DataGridView 控制項中顯示資料</related>
    <related type="Article" href="https://msdn.microsoft.com/library/9755a030-3f3f-4705-a661-ba5a48a81875">Windows Form DataGridView 控制項的資料顯示模式</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d412c786-140e-4210-8a56-a68467530a55">Windows Form DataGridView 和 DataGrid 控制項之間的差異</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridView" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.Windows.Forms.DataGridView> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumns%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumns%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None>|  
|<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None>|  
|<xref:System.Windows.Forms.DataGridView.ClipboardCopyMode%2A>|<xref:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText>|  
|<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing>|  
|<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.EditMode%2A>|<xref:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2>|  
|<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.ReadOnly%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing>|  
|<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>|<xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNotifyCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void AccessibilityNotifyCurrentCellChanged (System.Drawing.Point cellAddress);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AccessibilityNotifyCurrentCellChanged(valuetype System.Drawing.Point cellAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AccessibilityNotifyCurrentCellChanged (cellAddress As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AccessibilityNotifyCurrentCellChanged(System::Drawing::Point cellAddress);" />
      <MemberSignature Language="F#" Value="abstract member AccessibilityNotifyCurrentCellChanged : System.Drawing.Point -&gt; unit&#xA;override this.AccessibilityNotifyCurrentCellChanged : System.Drawing.Point -&gt; unit" Usage="dataGridView.AccessibilityNotifyCurrentCellChanged cellAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellAddress" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="cellAddress">
          <see cref="T:System.Drawing.Point" />，指出新的目前儲存格的資料列和資料行索引。</param>
        <summary>當新儲存格變成目前儲存格時，通知可存取的用戶端應用程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會轉換成指定的資料列和資料行索引`objectID`並`childID`參數並呼叫<xref:System.Windows.Forms.Control.AccessibilityNotifyClients%28System.Windows.Forms.AccessibleEvents%2CSystem.Int32%2CSystem.Int32%29>方法多載兩次使用<xref:System.Windows.Forms.AccessibleEvents.Focus>並<xref:System.Windows.Forms.AccessibleEvents.Selection>的值<xref:System.Windows.Forms.AccessibleEvents>列舉型別。 `objectID`和`childID`取決於其的顯示順序，如果它們是可見的且從 1 開始計算的資料列或資料行的標頭中編號只顯示資料列和資料行。 例如，如果資料行行首為可見，`objectID`針對第一個可見的非標題資料列會是 2。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="cellAddress" /> 的 <see cref="P:System.Drawing.Point.X" /> 屬性值小於 0 或大於控制項中的資料行數目減 1。  
  
-或- 
<paramref name="cellAddress" /> 的 <see cref="P:System.Drawing.Point.Y" /> 屬性值小於 0 或大於控制項中的資料列數目減 1。</exception>
        <block subset="none" type="overrides">
          <para>覆寫這個方法，自訂時<see cref="T:System.Windows.Forms.DataGridView" />控制項並修改目前的儲存格如何及何時變更。 例如，如果您建立自訂的資料列型別，將多個資料格合併至單一資料格，並據此修改導覽，您可以覆寫此方法以提供協助工具支援，您的變更。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.AccessibleEvents" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustColumnHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, isFirstDisplayedColumn As Boolean, isLastVisibleColumn As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustColumnHeaderBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);" />
      <MemberSignature Language="F#" Value="abstract member AdjustColumnHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustColumnHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridView.AdjustColumnHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, isFirstDisplayedColumn, isLastVisibleColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isLastVisibleColumn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，表示所要修改的資料行標頭框線樣式。</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，可用來儲存對資料行標頭框線樣式所做的中繼變更。</param>
        <param name="isFirstDisplayedColumn">
          <see langword="true" /> 表示目前所繪製的 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 位於顯示在 <see cref="T:System.Windows.Forms.DataGridView" /> 上的第一個資料行中，否則為 <see langword="false" />。</param>
        <param name="isLastVisibleColumn">
          <see langword="true" /> 表示目前所繪製的 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 位於 <see cref="T:System.Windows.Forms.DataGridView" /> 中 <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /> 屬性設定為 <see langword="true" /> 的最後一個資料行中；否則為 <see langword="false" />。</param>
        <summary>針對目前繪製之 <see cref="T:System.Windows.Forms.DataGridView" /> 的資料行標頭儲存格，調整 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，表示目前資料行標頭的框線樣式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制在內部呼叫<xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A>方法，以判斷資料行的標頭資料格的框線外觀。 <xref:System.Windows.Forms.DataGridView>控制項通常會使用值<xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A>屬性`dataGridViewAdvancedBorderStyleInput`參數。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A>方法，以自訂資料行的標頭資料格的框線。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle>類別。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果您想要自訂的資料行標題儲存格的框線外觀，請覆寫這個方法。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AdjustedTopLeftHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AdjustedTopLeftHeaderBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustedTopLeftHeaderBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdjustedTopLeftHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DataGridView" /> 中左上方儲存格的框線樣式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，表示 <see cref="T:System.Windows.Forms.DataGridView" /> 中左上方儲存格的框線樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 左上方儲存格位於共用的資料行的標頭資料列和資料列的標頭資料行的資料格。 <xref:System.Windows.Forms.DataGridView>繪製左上角儲存格時，取得這個屬性的值。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle%2A>自訂的左上角儲存格框線的屬性。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle>類別。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#12)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果您想要自訂的左上角的標頭資料格框線的外觀，請覆寫這個屬性。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedCellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedCellBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedCellBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedCellBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedCellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DataGridView" /> 中儲存格的框線樣式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，表示 <see cref="T:System.Windows.Forms.DataGridView" /> 中儲存格的框線樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A>自訂的資料格的框線外觀的屬性。 若要變更使用的內建樣式框線的樣式，請使用<xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedColumnHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedColumnHeadersBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedColumnHeadersBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedColumnHeadersBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DataGridView" /> 中資料行標頭儲存格的框線樣式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，表示 <see cref="T:System.Windows.Forms.DataGridView" /> 中 <see cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" /> 物件的框線樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A>屬性來自訂資料行標題儲存格的框線的外觀。 若要變更使用的內建樣式框線的樣式，請使用<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedRowHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedRowHeadersBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedRowHeadersBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedRowHeadersBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DataGridView" /> 中資料列標頭儲存格的框線樣式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，表示 <see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" /> 中 <see cref="T:System.Windows.Forms.DataGridView" /> 物件的框線樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A>來自訂中衍生的資料列標題儲存格的框線外觀的屬性<xref:System.Windows.Forms.DataGridView>控制項。 若要變更使用的內建樣式框線的樣式，請使用<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToAddRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToAddRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToAddRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToAddRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToAddRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToAddRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToAddRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否已為使用者顯示可加入資料列的選項。</summary>
        <value>如果已對使用者顯示加入資料列的選項，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView>繫結至資料，使用者可以新增資料列，如果這個屬性和資料來源的<xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=nameWithType>屬性都設為`true`。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToAddRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToAddRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToAddRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToAddRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToAddRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToAddRowsChanged : EventHandler " Usage="member this.AllowUserToAddRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#250](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#250)]
 [!code-vb[System.Windows.Forms.EventExamples#250](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#250)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToDeleteRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToDeleteRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToDeleteRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToDeleteRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToDeleteRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToDeleteRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToDeleteRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否允許使用者從 <see cref="T:System.Windows.Forms.DataGridView" /> 中刪除資料列。</summary>
        <value>如果使用者可以刪除資料列，則為<see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView>繫結至資料，使用者可以刪除資料列，如果兩個此屬性與<xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType>屬性都設為`true`。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToDeleteRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToDeleteRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToDeleteRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToDeleteRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToDeleteRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToDeleteRowsChanged : EventHandler " Usage="member this.AllowUserToDeleteRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#251](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#251)]
 [!code-vb[System.Windows.Forms.EventExamples#251](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#251)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToOrderColumns">
      <MemberSignature Language="C#" Value="public bool AllowUserToOrderColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToOrderColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToOrderColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToOrderColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToOrderColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否已啟用手動重新調整資料行的位置。</summary>
        <value>如果使用者可以變更資料行順序，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 啟用資料行重新調整位置時，使用者可以將資料行標頭拖曳到新位置。 請注意，已凍結和解除凍結的資料行形成兩個不同的群組;使用者可以重新定位在群組內，資料行，但無法將資料行從一個群組移到另。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>控制項不支援雙重緩衝。 如果<xref:System.Windows.Forms.Control.DoubleBuffered%2A>設定為`true`中衍生<xref:System.Windows.Forms.DataGridView>控制項，在調整大小時，資料列、 資料行或標頭，或重新排序資料行時，使用者不會接收視覺化回饋。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToOrderColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToOrderColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToOrderColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToOrderColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToOrderColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToOrderColumnsChanged : EventHandler " Usage="member this.AllowUserToOrderColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#252](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#252)]
 [!code-vb[System.Windows.Forms.EventExamples#252](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#252)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeColumns">
      <MemberSignature Language="C#" Value="public bool AllowUserToResizeColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToResizeColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToResizeColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToResizeColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出使用者是否可以調整資料行的大小。</summary>
        <value>如果使用者可以調整資料行的大小，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來防止使用者以手動方式變更資料行寬度。 這非常有用，例如，使用僅顯示資料行，一次載入資料和資料行，會在該時間調整大小。  
  
 如需有關使用者重新調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>控制項不支援雙重緩衝。 如果<xref:System.Windows.Forms.Control.DoubleBuffered%2A>設定為`true`中衍生<xref:System.Windows.Forms.DataGridView>控制項，在調整大小時，資料列、 資料行或標頭，或重新排序資料行時，使用者不會接收視覺化回饋。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToResizeColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToResizeColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToResizeColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToResizeColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeColumnsChanged : EventHandler " Usage="member this.AllowUserToResizeColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#253](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#253)]
 [!code-vb[System.Windows.Forms.EventExamples#253](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#253)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToResizeRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToResizeRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToResizeRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToResizeRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出使用者是否可以調整資料列的大小。</summary>
        <value>如果可以調整所有資料列的大小，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來防止使用者以手動方式變更的資料列高度。 這非常有用，例如，使用僅顯示控制項，其中一次載入資料，而且在該時間的資料列會調整大小。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 如需有關使用者重新調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>控制項不支援雙重緩衝。 如果<xref:System.Windows.Forms.Control.DoubleBuffered%2A>設定為`true`中衍生<xref:System.Windows.Forms.DataGridView>控制項，在調整大小時，資料列、 資料行或標頭，或重新排序資料行時，使用者不會接收視覺化回饋。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToResizeRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToResizeRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToResizeRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToResizeRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeRowsChanged : EventHandler " Usage="member this.AllowUserToResizeRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#254](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#254)]
 [!code-vb[System.Windows.Forms.EventExamples#254](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#254)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowsDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternatingRowsDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ AlternatingRowsDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowsDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定套用至 <see cref="T:System.Windows.Forms.DataGridView" /> 奇數資料列的預設儲存格樣式。</summary>
        <value>要套用至奇數資料列的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制項會顯示其使用由儲存格樣式的儲存格<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>屬性，從其他屬性的型別繼承樣式<xref:System.Windows.Forms.DataGridViewCellStyle>。 透過指定索引上的奇數資料列中的資料格，樣式<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>屬性覆寫透過指定的樣式<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>，和<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>，而且會覆寫透過指定的樣式<xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>屬性。  
  
 如需詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的儲存格樣式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
 取得這個屬性中，當<xref:System.Windows.Forms.DataGridViewCellStyle>與預設值會在建立屬性已不被存取。 取得這個屬性的多個資料列時，這會造成效能影響。 可能的話，使用單一<xref:System.Windows.Forms.DataGridViewCellStyle>設定此屬性的多個資料列。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性來建立在分類帳效果<xref:System.Windows.Forms.DataGridView>控制項。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AlternatingRowsDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AlternatingRowsDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AlternatingRowsDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AlternatingRowsDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowsDefaultCellStyleChanged : EventHandler " Usage="member this.AlternatingRowsDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何時，就會發生此事件的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>屬性設定為新的值或當<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>屬性設定為新<xref:System.Windows.Forms.DataGridViewCellStyle>具有至少一個屬性值不同於先前的儲存格樣式物件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#255](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#255)]
 [!code-vb[System.Windows.Forms.EventExamples#255](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#255)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AreAllCellsSelected">
      <MemberSignature Language="C#" Value="public bool AreAllCellsSelected (bool includeInvisibleCells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AreAllCellsSelected(bool includeInvisibleCells) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AreAllCellsSelected (includeInvisibleCells As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AreAllCellsSelected(bool includeInvisibleCells);" />
      <MemberSignature Language="F#" Value="member this.AreAllCellsSelected : bool -&gt; bool" Usage="dataGridView.AreAllCellsSelected includeInvisibleCells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInvisibleCells" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeInvisibleCells">
          <see langword="true" /> 表示加入 <see cref="P:System.Windows.Forms.DataGridViewBand.Visible" /> 屬性值為 <see langword="false" /> 的資料列和資料行；否則為 <see langword="false" />。</param>
        <summary>傳回值，指出目前是否已選取所有的 <see cref="T:System.Windows.Forms.DataGridView" /> 儲存格。</summary>
        <returns>如果已選取所有儲存格 (或所有可見儲存格)，或是如果沒有儲存格 (或沒有可見儲存格)，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A>大型的選取項目後的集合不會有效率地執行。 若要判斷是否中的所有儲存格<xref:System.Windows.Forms.DataGridView>存取的內容之前已選取<xref:System.Windows.Forms.DataGridView.SelectedCells%2A>集合中，檢查傳回值的<xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A>方法。 不過，這個方法可能會導致變成非共用的資料列。 如需詳細資訊<xref:System.Windows.Forms.DataGridView>效能，請參閱 <<c2> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個方法來避免計算涉及<xref:System.Windows.Forms.DataGridView.SelectedCells%2A>集合。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectedCells" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">縮放 Windows Form DataGridView 控制項的最佳作法</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoGenerateColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出當已設定 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 或 <see cref="P:System.Windows.Forms.DataGridView.DataMember" /> 屬性時，是否會自動建立資料行。</summary>
        <value>如果應該要自動建立資料行，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當這個屬性設定為自動產生的資料行`true`而<xref:System.Windows.Forms.DataGridView.DataSource%2A>或<xref:System.Windows.Forms.DataGridView.DataMember%2A>屬性會設定或變更。 資料行也可以自動產生時機<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>屬性已從`false`來`true`。 如果這個屬性是`true`而<xref:System.Windows.Forms.DataGridView.DataSource%2A>變更，使不符合先前的資料行的資料行<xref:System.Windows.Forms.DataGridView.DataSource%2A>值不相符的資料行中的資料會被捨棄。 如果此屬性則會忽略<xref:System.Windows.Forms.DataGridView.DataSource%2A>或<xref:System.Windows.Forms.DataGridView.DataMember%2A>沒有設定的屬性。  
  
 當<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>設定為`true`，則<xref:System.Windows.Forms.DataGridView>控制項資料來源中產生物件的每個公用屬性的一個資料行。 如果繫結的物件會實作<xref:System.ComponentModel.ICustomTypeDescriptor>介面，控制項產生一個資料行所傳回的每一個屬性<xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A>方法。 每個資料行的標頭會包含資料行代表屬性名稱的值。  
  
 如果您設定<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性，但組<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>到`false`，您必須以手動方式加入資料行。 您可以藉由設定每個加入的資料行繫結至資料來源<xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType>的繫結的物件所公開的屬性名稱的屬性。  
  
> [!NOTE]
>  設定<xref:System.Windows.Forms.DataGridView.DataSource%2A>在 Windows Form 設計工具會自動設定<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>屬性設`false`並產生程式碼來新增並繫結資料來源中每一個屬性的資料行。 在設計階段所產生的程式碼相當於下列範例所示的手動新增程式碼。 它不是在執行階段所發生的資料行自動產生相同時<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>屬性設定為`true`。  
  
   
  
## Examples  
 下列程式碼範例示範如何以手動方式加入資料行，並將其繫結至資料來源設定時<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>至`false`。 在此範例中，<xref:System.Windows.Forms.DataGridView>控制項繫結到一份`Task`商務物件。 然後，新增資料行，並繫結至`Task`屬性，透過<xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType>屬性。 這個範例是提供之較大範例的一部分[如何： 存取 Windows Form DataGridViewComboBoxCell 下拉式清單中的物件](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/vb/form1.vb#100)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoGenerateColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoGenerateColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoGenerateColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoGenerateColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumnsChanged : EventHandler " Usage="member this.AutoGenerateColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#256](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#256)]
 [!code-vb[System.Windows.Forms.EventExamples#256](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#256)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumn">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>調整指定資料行的寬度，以適合其儲存格的內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int -&gt; unit" Usage="dataGridView.AutoResizeColumn columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">要調整大小之資料行的索引。</param>
        <summary>調整指定資料行的寬度，以適合其所有儲存格的內容 (包括標題儲存格)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制資料行調整大小時。 每個方法呼叫，一次調整資料行寬度如果更新版本的資料行的內容變更，此資料行將不會自動調整。 若要調整大小的所有資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>方法。 若要設定其內容變更時自動調整大小的資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>屬性或資料行<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>屬性。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例會使用這個方法將資料行的寬度足夠大以容納新資料格的值。 這個範例是提供之較大範例的一部分[如何： 管理 Windows Forms DataGridView 控制項中的資料列](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 不在 0 到資料行數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, autoSizeColumnMode As DataGridViewAutoSizeColumnMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::DataGridViewAutoSizeColumnMode autoSizeColumnMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.DataGridViewAutoSizeColumnMode -&gt; unit" Usage="dataGridView.AutoResizeColumn (columnIndex, autoSizeColumnMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="autoSizeColumnMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnMode" />
      </Parameters>
      <Docs>
        <param name="columnIndex">要調整大小之資料行的索引。</param>
        <param name="autoSizeColumnMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 值。</param>
        <summary>使用指定的調整大小模式調整指定資料行的寬度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制資料行調整大小時。 每個方法呼叫，一次調整資料行寬度如果更新版本的資料行的內容變更，此資料行將不會自動調整。 若要調整大小的所有資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>方法。 若要設定其內容變更時自動調整大小的資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>屬性或資料行<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>屬性。  
  
 這個多載可讓您指定計算中一組有限的資料格，例如顯示資料列中的值為基礎的新寬度調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例會使用這個方法將資料行的寬度足夠大以容納新資料格的值。 這個範例是提供之較大範例的一部分[如何： 管理 Windows Forms DataGridView 控制項中的資料列](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeColumnMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" />，且 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> 為 <see langword="false" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoSizeColumnMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />、<see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 不在 0 到資料行數目減 1 的有效範圍內。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeColumnMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumn (columnIndex As Integer, autoSizeColumnMode As DataGridViewAutoSizeColumnMode, fixedHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.DataGridViewAutoSizeColumnMode * bool -&gt; unit" Usage="dataGridView.AutoResizeColumn (columnIndex, autoSizeColumnMode, fixedHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="autoSizeColumnMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnMode" />
        <Parameter Name="fixedHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">要調整大小之資料行的索引。</param>
        <param name="autoSizeColumnMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 值。</param>
        <param name="fixedHeight">
          <see langword="true" /> 表示根據目前的資料列高度來計算新的寬度；<see langword="false" /> 則表示在預期資料列高度也將會調整的情況下計算寬度。</param>
        <summary>使用指定的調整大小模式調整指定資料行的寬度，並在預期接下來將調整資料列高度的情況下，選擇性地計算寬度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制資料行調整大小時。 每個方法呼叫，一次調整資料行寬度如果更新版本的資料行的內容變更，此資料行將不會自動調整。 若要調整大小的所有資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>方法。 若要設定其內容變更時自動調整大小的資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>屬性或資料行<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>屬性。  
  
 這個多載可讓您指定計算中一組有限的資料格，例如顯示資料列中的值為基礎的新寬度調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 這個多載保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedHeight`已`false`，資料行寬度會進行計算時，多半認為您會呼叫<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>或<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>方法下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeColumnMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" />，且 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> 為 <see langword="false" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoSizeColumnMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />、<see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 不在 0 到資料行數目減 1 的有效範圍內。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeColumnMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumnHeadersHeight">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>調整資料行行首的高度，以適合行首的內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public void AutoResizeColumnHeadersHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumnHeadersHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumnHeadersHeight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumnHeadersHeight();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : unit -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>調整資料行行首的高度，以適合最大資料行行首的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制項時調整資料行行首的大小。 每個方法呼叫，一次調整資料行行首的高度如果資料行的內容標頭之後變更，資料行的標頭將不會自動調整。 若要設定資料行標頭，自動調整大小及其內容變更時，使用<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>屬性。  
  
 儲存格的內容時調整資料行行首的大小，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何調整資料行行首的大小，並按一下 [結果] 按鈕的資料列。  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public void AutoResizeColumnHeadersHeight (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumnHeadersHeight(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumnHeadersHeight (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumnHeadersHeight(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : int -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">包含已變更內容的行首之資料行的索引。</param>
        <summary>根據指定資料行中的行首內容之變更來調整資料行行首的高度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制項時調整資料行行首的大小，如果只是要繫結的資料來源中指定的資料行的標頭的內容變更使用者編輯或變更的結果。 資料行行首的高度會調整一次每個方法呼叫如果內容的變更需要它;如果資料行的內容標頭之後變更，資料行的標頭將不會自動調整。 若要設定資料行標頭，自動調整大小及其內容變更時，使用<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>屬性。  
  
 儲存格的內容時調整資料行行首的大小，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 不在 0 到資料行數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumnHeadersHeight (bool fixedRowHeadersWidth, bool fixedColumnsWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumnHeadersHeight(bool fixedRowHeadersWidth, bool fixedColumnsWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumnHeadersHeight (fixedRowHeadersWidth As Boolean, fixedColumnsWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumnHeadersHeight(bool fixedRowHeadersWidth, bool fixedColumnsWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : bool * bool -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight (fixedRowHeadersWidth, fixedColumnsWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedRowHeadersWidth" Type="System.Boolean" />
        <Parameter Name="fixedColumnsWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fixedRowHeadersWidth">
          <see langword="true" /> 表示根據目前資料列標頭的寬度來計算新的高度；<see langword="false" /> 則表示在預期資料列標頭的寬度也將會調整的情況下計算高度。</param>
        <param name="fixedColumnsWidth">
          <see langword="true" /> 表示根據目前的資料行寬度來計算新的高度；<see langword="false" /> 則表示在預期資料行寬度也將會調整的情況下計算高度。</param>
        <summary>調整資料行行首的高度以適合其內容，並在預期接下來將調整資料行和/或資料列行首寬度的情況下，選擇性地計算高度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制項時調整資料行行首的大小。 每個方法呼叫，一次調整資料行行首的高度如果資料行的內容標頭之後變更，資料行的標頭將不會自動調整。 若要設定資料行標頭，自動調整大小及其內容變更時，使用<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>屬性。  
  
 儲存格的內容時調整資料行行首的大小，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 這個多載保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedColumnsWidth`或`fixedRowHeadersWidth`參數是`false`，將這類呼叫方法預期的情況下計算資料行行首的高度<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>和<xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A>下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumnHeadersHeight (int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumnHeadersHeight(int32 columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumnHeadersHeight (columnIndex As Integer, fixedRowHeadersWidth As Boolean, fixedColumnWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumnHeadersHeight(int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : int * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight (columnIndex, fixedRowHeadersWidth, fixedColumnWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="fixedRowHeadersWidth" Type="System.Boolean" />
        <Parameter Name="fixedColumnWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">資料行行首的索引，應該使用該行首的內容來判斷新的高度。</param>
        <param name="fixedRowHeadersWidth">
          <see langword="true" /> 表示根據目前資料列標頭的寬度來計算新的高度；<see langword="false" /> 則表示在預期資料列標頭的寬度也將會調整的情況下計算高度。</param>
        <param name="fixedColumnWidth">
          <see langword="true" /> 表示根據指定資料行的目前寬度來計算新的高度；<see langword="false" /> 則表示在預期資料行寬度也將會調整的情況下計算高度。</param>
        <summary>根據指定資料行中行首內容的變更來調整資料行行首的高度，並在預期接下來將調整資料行和/或資料列行首寬度的情況下，選擇性地計算高度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制項時調整資料行行首的大小，如果只是要繫結的資料來源中指定的資料行的標頭的內容變更使用者編輯或變更的結果。 資料行行首的高度會調整一次每個方法呼叫如果內容的變更需要它;如果資料行的內容標頭之後變更，資料行的標頭將不會自動調整。 若要設定資料行標頭，自動調整大小及其內容變更時，使用<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>屬性。  
  
 儲存格的內容時調整資料行行首的大小，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 這個多載保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedColumnWidth`或`fixedRowHeadersWidth`參數是`false`，將這類呼叫方法預期的情況下計算資料行行首的高度<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>和<xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A>下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 不在 0 到資料行數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumns">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>調整所有資料行的寬度，以適合其儲存格的內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : unit -&gt; unit" Usage="dataGridView.AutoResizeColumns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>調整所有資料行的寬度，以適合其所有儲存格的內容 (包括標題儲存格)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制何時要調整大小的資料行。 資料行寬度會一次調整每個方法呼叫;如果更新版本的資料行的內容變更，資料行就不會自動調整。 若要調整大小的特定資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>方法。 若要設定其內容變更時自動調整大小的資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>屬性或資料行<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>屬性。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例會調整大小以適合資料行和資料行標頭的內容的所有資料行。 此程式碼範例是中提供之較大範例的一部分[如何： 以程式設計方式調整儲存格為 Windows Form DataGridView 控制項中的 內容符合](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#3)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (autoSizeColumnsMode As DataGridViewAutoSizeColumnsMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.DataGridViewAutoSizeColumnsMode -&gt; unit" Usage="dataGridView.AutoResizeColumns autoSizeColumnsMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeColumnsMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
      </Parameters>
      <Docs>
        <param name="autoSizeColumnsMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 值。</param>
        <summary>使用指定的調整大小模式調整所有資料行的寬度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制何時要調整大小的資料行。 資料行寬度會一次調整每個方法呼叫;如果更新版本的資料行的內容變更，資料行就不會自動調整。 若要調整大小的特定資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>方法。 若要設定其內容變更時自動調整大小的資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>屬性或資料行<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>屬性。  
  
 這個多載可讓您指定計算中一組有限的資料格，例如顯示資料列中的值為基礎的新寬度調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例會調整大小以適合資料行和資料行標頭的內容的所有資料行。 此程式碼範例是中提供之較大範例的一部分[如何： 以程式設計方式調整儲存格為 Windows Form DataGridView 控制項中的 內容符合](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#3)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeColumnsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />，且 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> 為 <see langword="false" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoSizeColumnsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeColumnsMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumns (autoSizeColumnsMode As DataGridViewAutoSizeColumnsMode, fixedHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumns(System::Windows::Forms::DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.DataGridViewAutoSizeColumnsMode * bool -&gt; unit" Usage="dataGridView.AutoResizeColumns (autoSizeColumnsMode, fixedHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeColumnsMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
        <Parameter Name="fixedHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSizeColumnsMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 值。</param>
        <param name="fixedHeight">
          <see langword="true" /> 表示根據目前的資料列高度來計算新的寬度；<see langword="false" /> 則表示在預期資料列高度也將會調整的情況下計算寬度。</param>
        <summary>使用指定的調整大小模式調整所有資料行的寬度，並在預期接下來將調整資料列高度的情況下，選擇性地計算寬度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制何時要調整大小的資料行。 資料行寬度會一次調整每個方法呼叫;如果更新版本的資料行的內容變更，資料行就不會自動調整。 若要調整大小的特定資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>方法。 若要設定其內容變更時自動調整大小的資料行，請使用<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>屬性或資料行<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>屬性。  
  
 這個多載可讓您指定計算中一組有限的資料格，例如顯示資料列中的值為基礎的新寬度調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 這個多載保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedHeight`已`false`，並預期您會呼叫的情況下計算資料行寬度<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>或<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>方法下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeColumnsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />，且 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> 為 <see langword="false" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoSizeColumnsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeColumnsMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>調整指定資料列的高度，以適合其儲存格的內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="public void AutoResizeRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int -&gt; unit" Usage="dataGridView.AutoResizeRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要調整大小之資料列的索引。</param>
        <summary>調整指定資料列的高度，以適合其所有儲存格的內容 (包括標題儲存格)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制資料列調整大小時。 每個方法呼叫，一次調整資料列高度如果更新版本的資料列的內容變更，資料列將不會自動調整。 若要調整大小的所有資料列，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>方法。 若要設定其內容變更時自動調整大小的資料列，使用<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>屬性。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例會調整大小中的第三個資料列<xref:System.Windows.Forms.DataGridView>以適合資料行內容。 此程式碼範例是中提供之較大範例的一部分[如何： 以程式設計方式調整儲存格為 Windows Form DataGridView 控制項中的 內容符合](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#4)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#4)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 不在 0 到資料列數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="public void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRow(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRow (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRow(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int * System.Windows.Forms.DataGridViewAutoSizeRowMode -&gt; unit" Usage="dataGridView.AutoResizeRow (rowIndex, autoSizeRowMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要調整大小之資料列的索引。</param>
        <param name="autoSizeRowMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 值。</param>
        <summary>使用指定的調整大小模式調整指定資料列的高度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制資料列調整大小時。 每個方法呼叫，一次調整資料列高度如果更新版本的資料列的內容變更，資料列將不會自動調整。 若要調整大小的所有資料列，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>方法。 若要設定其內容變更時自動調整大小的資料列，使用<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>屬性。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 這個多載可讓您指定的高度計算新的高度，根據一組有限的資料格，例如中顯示資料列中的值調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例會調整大小中的第三個資料列<xref:System.Windows.Forms.DataGridView>以適合資料行內容。 此程式碼範例是中提供之較大範例的一部分[如何： 以程式設計方式調整儲存格為 Windows Form DataGridView 控制項中的 內容符合](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#4)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#4)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeRowMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" />，且 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> 為 <see langword="false" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeRowMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 值。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 不在 0 到資料列數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="protected void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRow(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRow (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRow(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRow (rowIndex, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要調整大小之資料列的索引。</param>
        <param name="autoSizeRowMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 值。</param>
        <param name="fixedWidth">
          <see langword="true" /> 表示根據資料行的目前寬度來計算新的高度；<see langword="false" /> 則表示在預期資料行寬度也將會調整的情況下計算高度。</param>
        <summary>使用指定的調整大小模式調整指定資料列的高度，並在預期接下來將調整資料行寬度的情況下，選擇性地計算高度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制資料列調整大小時。 每個方法呼叫，一次調整資料列高度如果更新版本的資料列的內容變更，資料列將不會自動調整。 若要調整大小的所有資料列，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>方法。 若要設定其內容變更時自動調整大小的資料列，使用<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>屬性。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 這個多載可讓您指定的高度計算新的高度，根據一組有限的資料格，例如中顯示資料列中的值調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 這個多載保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedWidth`已`false`，資料列高度會進行計算時，多半認為您會呼叫<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>或<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>方法下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeRowMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" />，且 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> 為 <see langword="false" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeRowMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 值。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 不在 0 到資料列數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRowHeadersWidth">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>調整資料列行首的寬度，以適合行首的內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="public void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRowHeadersWidth(valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRowHeadersWidth(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth rowHeadersWidthSizeMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
      </Parameters>
      <Docs>
        <param name="rowHeadersWidthSizeMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</param>
        <summary>使用指定的調整大小模式調整資料列行首的寬度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制何時要在資料列標頭調整大小。 每個方法呼叫; 一次調整資料列行首的寬度如果資料列的內容標頭之後變更，資料列的標頭將不會自動調整。 若要設定資料列標頭，自動調整大小及其內容變更時，使用<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>屬性。  
  
 這個方法可讓您指定計算中一組有限的標頭，例如顯示資料列中的值為基礎的新寬度調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="rowHeadersWidthSizeMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> 或 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="rowHeadersWidthSizeMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="public void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRowHeadersWidth(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRowHeadersWidth (rowIndex As Integer, rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRowHeadersWidth(int rowIndex, System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : int * System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowIndex, rowHeadersWidthSizeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
      </Parameters>
      <Docs>
        <param name="rowIndex">包含已變更內容的資料列行首的索引。</param>
        <param name="rowHeadersWidthSizeMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</param>
        <summary>根據指定資料列中的行首內容之變更，以及使用指定的調整大小模式來調整資料列行首的寬度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制在資料列標頭調整大小時，如果只是要繫結的資料來源中指定的資料列的標頭的內容變更使用者編輯或變更的結果。 資料列行首的寬度會調整一次每個方法呼叫如果內容的變更需要它;如果資料列的內容標頭之後變更，資料列的標頭將不會自動調整。 若要設定資料列標頭，自動調整大小及其內容變更時，使用<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>屬性。  
  
 這個方法可讓您指定計算中一組有限的標頭，例如顯示資料列中的值為基礎的新寬度調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何根據變更的第一個資料列行首內容的標頭資料列寬度，調整大小。 此程式碼範例是中提供之較大範例的一部分[如何： 以程式設計方式調整儲存格為 Windows Form DataGridView 控制項中的 內容符合](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#5)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 不在 0 到資料列數目減 1 的有效範圍內。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="rowHeadersWidthSizeMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> 或 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="rowHeadersWidthSizeMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="protected void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRowHeadersWidth(valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode, fixedColumnHeadersHeight As Boolean, fixedRowsHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRowHeadersWidth(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode, fixedColumnHeadersHeight, fixedRowsHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
        <Parameter Name="fixedColumnHeadersHeight" Type="System.Boolean" />
        <Parameter Name="fixedRowsHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowHeadersWidthSizeMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</param>
        <param name="fixedColumnHeadersHeight">
          <see langword="true" /> 表示根據目前資料行標頭的高度計算新的寬度；<see langword="false" /> 則表示在預期資料行標頭的高度也將會調整的情況下計算寬度。</param>
        <param name="fixedRowsHeight">
          <see langword="true" /> 表示根據目前的資料列高度來計算新的寬度；<see langword="false" /> 則表示在預期資料列高度也將會調整的情況下計算寬度。</param>
        <summary>使用指定的調整大小模式調整資料列行首的寬度，並在預期接下來將調整資料列和/或資料行行首寬度的情況下，選擇性地計算寬度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制何時要在資料列標頭調整大小。 每個方法呼叫; 一次調整資料列行首的寬度如果資料列的內容標頭之後變更，資料列的標頭將不會自動調整。 若要設定資料列標頭，自動調整大小及其內容變更時，使用<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>屬性。  
  
 這個方法可讓您指定計算中一組有限的標頭，例如顯示資料列中的值為基礎的新寬度調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 這個多載保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedColumnHeadersHeight`或`fixedRowsHeight`參數是`false`，將這類呼叫方法預期的情況下計算資料列行首的寬度<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>和<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="rowHeadersWidthSizeMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> 或 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="rowHeadersWidthSizeMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="protected void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRowHeadersWidth(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRowHeadersWidth (rowIndex As Integer, rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode, fixedColumnHeadersHeight As Boolean, fixedRowHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRowHeadersWidth(int rowIndex, System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : int * System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowIndex, rowHeadersWidthSizeMode, fixedColumnHeadersHeight, fixedRowHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
        <Parameter Name="fixedColumnHeadersHeight" Type="System.Boolean" />
        <Parameter Name="fixedRowHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">包含已變更內容的行首之資料列的索引。</param>
        <param name="rowHeadersWidthSizeMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</param>
        <param name="fixedColumnHeadersHeight">
          <see langword="true" /> 表示根據目前資料行標頭的高度計算新的寬度；<see langword="false" /> 則表示在預期資料行標頭的高度也將會調整的情況下計算寬度。</param>
        <param name="fixedRowHeight">
          <see langword="true" /> 表示根據指定資料列的目前高度計算新的寬度；<see langword="false" /> 則表示在預期資料列高度也將會調整的情況下計算寬度。</param>
        <summary>根據指定資料列中行首內容的變更，以及使用指定的調整大小模式來調整資料列行首的寬度，並在預期接下來將調整資料列和/或資料行行首寬度的情況下，選擇性地計算寬度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制在資料列標頭調整大小時，如果只是要繫結的資料來源中指定的資料列的標頭的內容變更使用者編輯或變更的結果。 資料列行首的寬度會調整一次每個方法呼叫如果內容的變更需要它;如果資料列的內容標頭之後變更，資料列的標頭將不會自動調整。 若要設定資料列標頭，自動調整大小及其內容變更時，使用<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>屬性。  
  
 這個方法可讓您指定計算中一組有限的標頭，例如顯示資料列中的值為基礎的新寬度調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 這個多載已受到保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedColumnHeadersHeight`或`fixedRowHeight`參數是`false`，將這類呼叫方法預期的情況下計算資料列行首的寬度<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>和<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 不在 0 到資料列數目減 1 的有效範圍內。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="rowHeadersWidthSizeMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> 或 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="rowHeadersWidthSizeMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRows">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>調整某些或所有資料列的高度，以適合其內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="public void AutoResizeRows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRows();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : unit -&gt; unit" Usage="dataGridView.AutoResizeRows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>調整所有資料列的高度，以適合其所有儲存格的內容 (包括標題儲存格)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制何時要調整大小的資料列。 資料列高度會一次調整每個方法呼叫;如果內容的更新版本的資料列變更時，資料列將不會自動調整。 若要調整大小的特定資料列，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>方法。 若要調整大小的資料列子集，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29>多載。 若要設定其內容變更時自動調整大小的資料列，使用<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>屬性。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何調整非標頭資料格內容為基礎的所有資料列。 此程式碼範例是中提供之較大範例的一部分[如何： 以程式設計方式調整儲存格為 Windows Form DataGridView 控制項中的 內容符合](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="public void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRows(valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRows (autoSizeRowsMode As DataGridViewAutoSizeRowsMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRows(System::Windows::Forms::DataGridViewAutoSizeRowsMode autoSizeRowsMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : System.Windows.Forms.DataGridViewAutoSizeRowsMode -&gt; unit" Usage="dataGridView.AutoResizeRows autoSizeRowsMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeRowsMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
      </Parameters>
      <Docs>
        <param name="autoSizeRowsMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 值。</param>
        <summary>使用指定的調整大小模式值來調整資料列的高度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制何時要調整大小的資料列。 資料列高度會一次調整每個方法呼叫;如果內容的更新版本的資料列變更時，資料列將不會自動調整。 若要調整大小的特定資料列，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>方法。 若要調整大小的資料列子集，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29>多載。 若要設定其內容變更時自動調整大小的資料列，使用<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>屬性。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 這個多載可讓您指定計算新的高度，在一組有限的資料格，例如顯示資料列中的值為基礎的調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何調整非標頭資料格內容為基礎的所有資料列。 此程式碼範例是中提供之較大範例的一部分[如何： 以程式設計方式調整儲存格為 Windows Form DataGridView 控制項中的 內容符合](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeRowsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />，且 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> 是 <see langword="false" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeRowsMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 值。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoSizeRowsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="protected void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRows(valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRows (autoSizeRowsMode As DataGridViewAutoSizeRowsMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRows(System::Windows::Forms::DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : System.Windows.Forms.DataGridViewAutoSizeRowsMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRows (autoSizeRowsMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeRowsMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSizeRowsMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 值。</param>
        <param name="fixedWidth">
          <see langword="true" /> 表示根據目前的資料行寬度計算新的高度；<see langword="false" /> 則表示在預期資料行寬度也將會調整的情況下計算高度。</param>
        <summary>使用指定的調整大小模式調整所有資料列的高度，並在預期接下來將調整資料行寬度的情況下，選擇性地計算高度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制何時要調整大小的資料列。 資料列高度會一次調整每個方法呼叫;如果內容的更新版本的資料列變更時，資料列將不會自動調整。 若要調整大小的特定資料列，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>方法。 若要調整大小的資料列子集，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29>多載。 若要設定其內容變更時自動調整大小的資料列，使用<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>屬性。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 這個多載可讓您指定計算新的高度，在一組有限的資料格，例如顯示資料列中的值為基礎的調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 這個多載已受到保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedWidth`參數是`false`，資料列高度會進行計算時，多半認為您會呼叫<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>或<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>方法下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeRowsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />，且 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> 是 <see langword="false" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeRowsMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 值。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoSizeRowsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="protected void AutoResizeRows (int rowIndexStart, int rowsCount, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRows(int32 rowIndexStart, int32 rowsCount, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRows (rowIndexStart As Integer, rowsCount As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRows(int rowIndexStart, int rowsCount, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : int * int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRows (rowIndexStart, rowsCount, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndexStart" Type="System.Int32" />
        <Parameter Name="rowsCount" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndexStart">要調整大小之第一個資料列的索引。</param>
        <param name="rowsCount">要調整大小的資料列數目。</param>
        <param name="autoSizeRowMode">其中一個 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 值。</param>
        <param name="fixedWidth">
          <see langword="true" /> 表示根據目前的資料行寬度計算新的高度；<see langword="false" /> 則表示在預期資料行寬度也將會調整的情況下計算高度。</param>
        <summary>使用指定的調整大小模式調整指定資料列的高度，並在預期接下來將調整資料行寬度的情況下，選擇性地計算高度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，如果您想要控制資料列的大小，但您想要調整資料列，例如在已更新的繫結資料錄的範圍內的特定子集合。 針對指定的資料列的資料列高度會一次調整每個方法呼叫;如果內容的更新版本的資料列變更時，資料列將不會自動調整。 若要調整大小的特定資料列，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>方法。 若要調整大小的所有資料列，請使用 的不同多載<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>方法。 若要設定其內容變更時自動調整大小的資料列，使用<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>屬性。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 這個多載可讓您指定計算新的高度，在一組有限的資料格，例如顯示資料列中的值為基礎的調整大小模式。 當控制項包含大量的資料列時，這會改善效能。  
  
 這個多載保護，而且設計成可讓您達到理想的儲存格的高度與寬度比例中衍生<xref:System.Windows.Forms.DataGridView>類別。 如果`fixedWidth`參數是`false`，資料列高度會進行計算時，多半認為您會呼叫<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>或<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>方法下一步。  
  
 如需有關以程式設計方式調整大小的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="autoSizeRowsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />，且 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> 是 <see langword="false" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeRowsMode" /> 不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 值。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autoSizeRowsMode" /> 具有值 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndexStart" /> 小於 0。  
  
-或- 
 <paramref name="rowsCount" /> 小於 0。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.DataGridView.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性與這個類別無關。</summary>
        <value>如果已啟用，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeColumnModeChanged As DataGridViewAutoSizeColumnModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeColumnModeEventHandler ^ AutoSizeColumnModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler " Usage="member this.AutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件。 這個範例是提供之較大範例的一部分[如何： 管理 Windows Forms DataGridView 控制項中的資料行](~/docs/framework/winforms/controls/how-to-manipulate-columns-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#180)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#180)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#180)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnsMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeColumnsMode As DataGridViewAutoSizeColumnsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { System::Windows::Forms::DataGridViewAutoSizeColumnsMode get(); void set(System::Windows::Forms::DataGridViewAutoSizeColumnsMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnsMode : System.Windows.Forms.DataGridViewAutoSizeColumnsMode with get, set" Usage="System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示要如何判斷資料行的寬度。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 值。 預設值為 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可讓您設定控制項，以便填滿控制項，或調整儲存格的內容，自動調整資料行寬度。 每當控制項的寬度變更時調整大小就會發生在填滿模式。 在以內容為基礎的調整大小模式調整大小就會發生或儲存格內容變更時<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>啟用時，資料列高度變更時。 某些以內容為基礎的調整大小模式可讓您限制目前顯示的資料列的大小調整，以提升效能。  
  
 若要變更個別資料行的調整大小模式，將其<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>屬性。 這個屬性的預設值是<xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet>，指出資料行繼承它的行為及其<xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A>從控制項的屬性值。  
  
 在填滿模式資料行分割中所指定的比例的可用控制項寬度其<xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A>屬性值。 適用於填滿模式的寬度取決於減去從控制項的用戶端區域的寬度的所有資料行的寬度。 如果此寬度小於結合<xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth%2A>所有填滿模式資料行的值，會顯示水平捲軸、 最小寬度，以顯示所有填滿模式資料行和使用者資料行調整已停用。 如需有關資料行填入模式的詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的資料行填入模式](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)。  
  
 只有包含資料行<xref:System.Windows.Forms.DataGridViewColumn.Visible%2A>屬性值為`true`自動調整大小和變更資料行的可見性並不會導致發生調整大小。 此外，當資料行設定為自動調整大小，使用者將無法調整資料行寬度，使用滑鼠。  
  
 若要以程式設計方式調整資料行寬度，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>或是<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>方法或一組資料行<xref:System.Windows.Forms.DataGridViewColumn.Width%2A>屬性。  
  
 如需有關以內容為基礎的自動調整大小的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在主從式案例，其中兩個<xref:System.Windows.Forms.DataGridView>控制項會顯示父子式關聯性中的兩個資料表的資料。 在此範例中，主控制項的資料行調整大小模式是<xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None>，且資料行寬度會以程式設計方式初始化為符合已載入的值。 詳細資料控制項設為自動的資料行調整大小模式，以便每當值變更 （例如，當使用者變更父資料表中的目前資料列） 時，會自動調整 「 資料行。 這個範例是提供之較大範例的一部分[如何： 建立主版/詳細表單使用兩個 Windows Form DataGridView 控制項](~/docs/framework/winforms/controls/create-a-master-detail-form-using-two-datagridviews.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMasterDetails#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMasterDetails/CS/masterdetails.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMasterDetails#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMasterDetails/VB/masterdetails.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 值。</exception>
        <exception cref="T:System.InvalidOperationException">設定這個屬性時所指定的值是 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />，則資料行標頭會隱藏，而且至少有一個可見資料行具有 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> 屬性值。  
  
-或- 
設定這個屬性時所指定的值是 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /> 且至少有一個具有 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /> 之 <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> 屬性值的可見資料行已凍結。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.FillWeight" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnsModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeColumnsModeChanged As DataGridViewAutoSizeColumnsModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeColumnsModeEventHandler ^ AutoSizeColumnsModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler " Usage="member this.AutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#257](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#257)]
 [!code-vb[System.Windows.Forms.EventExamples#257](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#257)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeRowsMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeRowsMode As DataGridViewAutoSizeRowsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAutoSizeRowsMode AutoSizeRowsMode { System::Windows::Forms::DataGridViewAutoSizeRowsMode get(); void set(System::Windows::Forms::DataGridViewAutoSizeRowsMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeRowsMode : System.Windows.Forms.DataGridViewAutoSizeRowsMode with get, set" Usage="System.Windows.Forms.DataGridView.AutoSizeRowsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeRowsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出要如何判斷資料列的高度。</summary>
        <value>指出調整大小模式的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 值。 預設值為 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可讓您設定控制項，讓資料列高度會自動調整以符合其內容，每當內容變更時。 如果<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>已啟用，資料列高度也將進行調整的資料行寬度變更時。 某些調整大小模式可讓您限制目前顯示的資料列的大小調整，以提升效能。  
  
 只有當資料列與<xref:System.Windows.Forms.DataGridViewRow.Visible%2A>屬性值為`true`自動調整大小和變更資料列的可見性並不會導致發生調整大小。 此外，當資料列會設定為自動調整大小，使用者將無法調整資料列高度，以滑鼠。  
  
 <xref:System.Windows.Forms.DataGridViewRow.Height%2A>自動調整大小的資料列的值會重新計算期間的版面配置，會使用的字型的大小。 若要取得正確<xref:System.Windows.Forms.DataGridViewRow.Height%2A>，您應擷取的值，在表單的<xref:System.Windows.Forms.Control.Layout>而不是表單的建構函式中的事件。  
  
 若要以程式設計方式調整資料列高度，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>或是<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>方法或一組資料列<xref:System.Windows.Forms.DataGridViewRow.Height%2A>屬性。  
  
 儲存格的內容時調整大小的資料列，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 如需有關以內容為基礎的自動調整大小的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定為自動在資料列標頭和所有資料行的內容為基礎的調整大小的資料列。 此程式碼範例是中提供之較大範例的一部分[如何： 自動調整大小的資料格時的內容變更 Windows Form DataGridView 控制項中](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CPP/autosizing.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CS/autosizing.cs#9)]
 [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/VB/autosizing.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 值。</exception>
        <exception cref="T:System.InvalidOperationException">設定這個屬性時所指定的值是 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />，且資料列標頭已隱藏。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1d68934d-a04c-4b12-9e66-c856c6828131">如何：在 Windows Form DataGridView 控制項的內容變更時自動調整儲存格大小</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeRowsModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeRowsModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ AutoSizeRowsModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.AutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件。 這個範例是提供之較大範例的一部分[如何： 自動調整大小的資料格時的內容變更 Windows Form DataGridView 控制項中](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CPP/autosizing.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CS/autosizing.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/VB/autosizing.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項的背景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，代表控制項的背景色彩。 預設值為 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 屬性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性與這個控制項無關。 若要設定之部分的背景色彩<xref:System.Windows.Forms.DataGridView>控制項不會佔用儲存格，請使用<xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.BackgroundColor" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.BackColor" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.BackColorChanged>就會引發事件，如果<xref:System.Windows.Forms.DataGridView.BackColor%2A>屬性變更時以程式設計方式或透過使用者互動。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackgroundColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 的背景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示 <see cref="T:System.Windows.Forms.DataGridView" /> 的背景色彩。 預設值為 <see cref="P:System.Drawing.SystemColors.AppWorkspace" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>屬性會決定的區域的色彩<xref:System.Windows.Forms.DataGridView>，將不會填滿資料格。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>屬性。 此外，在程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定這個屬性時所指定的值是 <see cref="F:System.Drawing.Color.Empty" />。  
  
-或- 
設定這個屬性時所指定之值的 <see cref="P:System.Drawing.Color.A" /> 屬性值小於 255。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundColorChanged : EventHandler " Usage="member this.BackgroundColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.BackgroundColor" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.BackgroundColorChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.BackgroundColorChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#259](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#259)]
 [!code-vb[System.Windows.Forms.EventExamples#259](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#259)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在控制項中顯示的背景影像。</summary>
        <value>表示要在控制項背景中顯示之影像的 <see cref="T:System.Drawing.Image" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性與這個控制項無關。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.BackgroundImage" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在 <see cref="T:System.Windows.Forms.ImageLayout" /> 列舉類型中所定義的背景影像配置。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageLayout" /> 值，表示背景影像配置。 預設值為 <see cref="F:System.Windows.Forms.ImageLayout.Tile" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性與這個控制項無關。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然如所述，就會發生此事件<xref:System.Windows.Forms.DataGridView.BackgroundImageLayout%2A>屬性對這個控制項無關。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual bool BeginEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (selectAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool BeginEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; bool&#xA;override this.BeginEdit : bool -&gt; bool" Usage="dataGridView.BeginEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">
          <see langword="true" /> 表示選取所有儲存格的內容，<see langword="false" /> 則表示不選取任何內容。</param>
        <summary>將目前儲存格置於編輯模式下。</summary>
        <returns>如果目前儲存格已經處於編輯模式下，或成功進入編輯模式，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回`false`如果儲存格，就無法進入編輯模式，這種情形的多種原因所造成。 這個方法會傳回`false`如果目前的儲存格為唯讀。 它也會傳回`false`如果儲存格<xref:System.Windows.Forms.DataGridViewCell.EditType%2A>屬性是`null`（這表示儲存格無法裝載編輯控制項） 和資料格類型未實作<xref:System.Windows.Forms.IDataGridViewEditingCell>介面。  
  
 如果儲存格支援編輯，這個方法會引發<xref:System.Windows.Forms.DataGridView.CellBeginEdit>事件，它可以取消，並傳回`false`如果事件處理常式取消編輯。 如果未取消編輯，而且儲存格可以裝載編輯控制項，這個方法會初始化控制項，並顯示它。 如果初始化失敗，則這個方法會傳回`false`。  
  
 如果儲存格成功進入編輯模式<xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A>屬性會傳回`true`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個方法。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /> 未設定為有效的儲存格。  
  
-或- 
這個方法是在 <see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /> 事件的處理常式中所呼叫。</exception>
        <exception cref="T:System.InvalidCastException">儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性所表示的類型不是衍生自 <see cref="T:System.Windows.Forms.Control" /> 類型。  
  
-或- 
儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性所表示的類型未實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 介面。</exception>
        <exception cref="T:System.Exception">編輯儲存格值的初始設定失敗，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
        <altmember cref="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 的框線樣式。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.BorderStyle" /> 值。 預設值為 <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會影響其外部框線<xref:System.Windows.Forms.DataGridView>。 若要設定的儲存格框線樣式，使用<xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化簡單資料繫結<xref:System.Windows.Forms.DataGridView>。 它也會示範如何設定<xref:System.Windows.Forms.DataGridView.BorderStyle%2A>屬性。  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.BorderStyle" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.BorderStyle" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.BorderStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.BorderStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#260](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#260)]
 [!code-vb[System.Windows.Forms.EventExamples#260](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#260)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CancelEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; bool" Usage="dataGridView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>針對目前所選的儲存格取消編輯模式，並捨棄所有變更。</summary>
        <returns>如果取消成功，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例說明如何使用這個方法。 這個範例是提供之較大範例的一部分[Windows Forms DataGridView 控制項中的資料行填滿模式](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewFillColumnsDemo/CS/fillcolumns.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewFillColumnsDemo/vb/fillcolumns.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CancelRowEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QuestionEventHandler CancelRowEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QuestionEventHandler CancelRowEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CancelRowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelRowEdit As QuestionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QuestionEventHandler ^ CancelRowEdit;" />
      <MemberSignature Language="F#" Value="member this.CancelRowEdit : System.Windows.Forms.QuestionEventHandler " Usage="member this.CancelRowEdit : System.Windows.Forms.QuestionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QuestionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的 <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 屬性為 <see langword="true" />，且取消資料列中的編輯時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DataGridView>是在虛擬模式中，會認可變更，資料格層級的資料快取的預設值。 <xref:System.Windows.Forms.DataGridView.CancelRowEdit>實作資料列層級的交易時，就可以使用事件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理這個事件<xref:System.Windows.Forms.DataGridView>虛擬模式中的控制項。 當控制項處於編輯模式`rowInEdit`變數會保存正在編輯之資料列的索引和`customerInEdit`變數會保存對應至該資料列的客戶物件的參考。 當使用者取消編輯模式時，這個物件可以被捨棄。 如果使用者已編輯的資料列是新的記錄的資料列，不過，舊的客戶物件會捨棄而取代新，讓使用者可以重新開始進行編輯。 這個範例是提供之較大範例的一部分[逐步解說： 在 Windows Form DataGridView 控制項中實作虛擬模式](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CPP/virtualmode.cpp#170)]
 [!code-csharp[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CS/virtualmode.cs#170)]
 [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/VB/virtualmode.vb#170)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.DataGridView.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示 <see cref="P:System.Windows.Forms.Control.ImeMode" /> 屬性是否可以設定為使用中的值，以啟用 IME 支援。</summary>
        <value>如果有已選取的可編輯儲存格，則為 <see langword="true" />；否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBeginEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellBeginEdit As DataGridViewCellCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellCancelEventHandler ^ CellBeginEdit;" />
      <MemberSignature Language="F#" Value="member this.CellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventHandler " Usage="member this.CellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>啟動所選取儲存格的編輯模式時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理這個事件，以反映目前<xref:System.Windows.Forms.DataGridViewCell>正在編輯。 在此範例中，<xref:System.Windows.Forms.Control.Text%2A>屬性包含<xref:System.Windows.Forms.Form>會設定為反映所編輯儲存格。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，並確保其事件處理常式相關聯的所有事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#220)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellBorderStyle As DataGridViewCellBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellBorderStyle CellBorderStyle { System::Windows::Forms::DataGridViewCellBorderStyle get(); void set(System::Windows::Forms::DataGridViewCellBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyle : System.Windows.Forms.DataGridViewCellBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.CellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DataGridView" /> 的儲存格框線樣式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" />，表示包含在 <see cref="T:System.Windows.Forms.DataGridView" /> 中之儲存格的框線樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>以外的其他屬性設定為<xref:System.Windows.Forms.DataGridViewCellBorderStyle.Single>， <xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleHorizontal>，或<xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleVertical>，則<xref:System.Windows.Forms.DataGridView.GridColor%2A>屬性必須是系統色彩。  
  
 您無法將此屬性設定為<xref:System.Windows.Forms.DataGridViewCellBorderStyle.Custom>值，這唯讀的值，表示儲存格框線樣式，已透過使用的自訂<xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /> 值。</exception>
        <exception cref="T:System.ArgumentException">設定這個屬性時所指定的值是 <see cref="F:System.Windows.Forms.DataGridViewCellBorderStyle.Custom" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CellBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CellBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CellBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyleChanged : EventHandler " Usage="member this.CellBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>儲存格的框線樣式變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#261](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#261)]
 [!code-vb[System.Windows.Forms.EventExamples#261](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#261)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellClick;" />
      <MemberSignature Language="F#" Value="member this.CellClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於按一下儲存格的任何部分時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 按一下資料格的任何部分，包括框線和填補時，就會發生此事件。 當使用者按下並放開空格鍵，而按鈕儲存格或核取方塊儲存格有焦點，而且如果按下空格鍵，按一下資料格，會發生兩次針對這些資料格類型，它也會發生。  
  
 若要判斷按一下儲存格內容時，處理<xref:System.Windows.Forms.DataGridView.CellContentClick>事件。  
  
 此事件沒有收到滑鼠位置的相關資訊。 如果事件處理常式需要滑鼠位置的相關資訊，請使用<xref:System.Windows.Forms.DataGridView.CellMouseClick>事件。  
  
 在中按一下<xref:System.Windows.Forms.DataGridViewCheckBoxCell>之前的核取方塊變更值，因此如果您不想要計算預期的值根據目前的值，就會發生此事件，您通常會處理<xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType>事件改。 因為該事件發生於只有使用者指定的值在認可時，這通常發生於焦點離開儲存格，您也必須處理<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType>事件。 在該處理常式中，如果目前的儲存格是資料的核取方塊儲存格，呼叫<xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType>方法並傳入<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>值。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例所示<xref:System.Windows.Forms.DataGridView.CellClick>Tic-Tac-Toe 遊戲的實作會使用映像中的資料行中的事件處理常式<xref:System.Windows.Forms.DataGridView>控制項。 除非遊戲便會結束，或已按下儲存格的事件處理常式會將儲存格的值設定為有兩個<xref:System.Drawing.Bitmap>變數所代表的物件`x`和`o`。  
  
 此程式碼屬於較大的範例所示[如何： 使用 Windows Form DataGridView 控制項中的影像資料行](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContentClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContentClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContentClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContentClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContentClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContentClick;" />
      <MemberSignature Language="F#" Value="member this.CellContentClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContentClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>按一下儲存格內的內容時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 按一下儲存格內容時，就會發生此事件。 當使用者按下並放開空格鍵按鈕儲存格時，或核取方塊儲存格有焦點，而且如果按下空格鍵，按一下儲存格內容，會發生兩次針對這些資料格類型時，它也會發生。  
  
 使用這個事件來偵測按鈕點擊<xref:System.Windows.Forms.DataGridViewButtonCell>或按一下 連結<xref:System.Windows.Forms.DataGridViewLinkCell>。  
  
 在中按一下<xref:System.Windows.Forms.DataGridViewCheckBoxCell>之前的核取方塊變更值，因此如果您不想要計算預期的值根據目前的值，就會發生此事件，您通常會處理<xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType>事件改。 因為該事件發生於只有使用者指定的值在認可時，這通常發生於焦點離開儲存格，您也必須處理<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType>事件。 在該處理常式中，如果目前的儲存格是資料的核取方塊儲存格，呼叫<xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType>方法並傳入<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>值。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會判斷是否已按下 儲存格的連結資料格，或按鈕儲存格，並執行對應的動作，如此一來此事件提供的處理常式。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewComboBoxColumn>類別概觀主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#60)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#60)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#60)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContentDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContentDoubleClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContentDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於使用者按兩下儲存格的內容時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellContentDoubleClick>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellContentDoubleClick>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#285](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#285)]
 [!code-vb[System.Windows.Forms.EventExamples#285](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#285)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContextMenuStripChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.CellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#286](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#286)]
 [!code-vb[System.Windows.Forms.EventExamples#286](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#286)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContextMenuStripNeeded As DataGridViewCellContextMenuStripNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellContextMenuStripNeededEventHandler ^ CellContextMenuStripNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler " Usage="member this.CellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於需要儲存格的捷徑功能表時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>才會發生事件時<xref:System.Windows.Forms.DataGridView>控制<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性設定或其<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性是`true`。  
  
 當您處理<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>您指定的處理常式中的捷徑功能表會顯示事件，每當使用者按一下滑鼠右鍵的資料格。 當您想要顯示的捷徑功能表，取決於目前的狀態或儲存格的值，這非常有用。  
  
 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>也就會發生事件時的值<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A?displayProperty=nameWithType>已擷取屬性，或是以程式設計的方式，或當使用者按一下滑鼠右鍵的資料格。  
  
 您可以使用<xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType>並<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A>屬性來判斷狀態或儲存格，並使用此資訊來變更或修改<xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType>屬性。 這個屬性會使用儲存格的值初始化<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>屬性，它會覆寫的事件值。  
  
 處理<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>事件時使用大量的資料，以避免效能的負面影響的設定儲存格<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>多個資料格的值。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 您也可以指定快顯功能表，針對個別資料列，而不是個別資料格，藉由設定資料列<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>屬性或處理<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>事件。 儲存格<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>屬性設定會覆寫的資料列<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>屬性設定值，而<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>事件覆寫這兩<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>事件和資料列<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>屬性設定。 不過，您可以指定`null`的儲存格的捷徑功能表，以防止遭到覆寫的資料列的捷徑功能表。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>事件處理常式，以顯示當使用者以滑鼠右鍵按一下資料格時，使用自訂的捷徑功能表。  
  
 [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CPP/sharedrows.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CS/sharedrows.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/VB/sharedrows.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellDoubleClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者按兩下儲存格中的任何位置時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellDoubleClick>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellDoubleClick>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#288](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#288)]
 [!code-vb[System.Windows.Forms.EventExamples#288](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#288)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellEndEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellEndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellEndEdit As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellEndEdit;" />
      <MemberSignature Language="F#" Value="member this.CellEndEdit : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellEndEdit : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>目前所選取儲存格的編輯模式停止時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理這個事件來清除資料列<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType>屬性在先前設定的情況下<xref:System.Windows.Forms.DataGridView.CellValidating>事件處理常式。 <xref:System.Windows.Forms.DataGridView.CellValidating>事件處理常式可以清除錯誤文字，而當按下 ESC，使用者會還原為舊資料格的值時新儲存格的值符合驗證準則，<xref:System.Windows.Forms.DataGridView.CellValidating>事件不會發生。 這個範例是提供之較大範例的一部分[逐步解說： 驗證 Windows Form DataGridView 控制項中的資料](~/docs/framework/winforms/controls/walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellEnter;" />
      <MemberSignature Language="F#" Value="member this.CellEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項中的目前儲存格變更時，或是當控制項收到輸入焦點時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果控制項沒有輸入的焦點且按下的儲存格之前不是目前的儲存格，此事件可能會發生兩次的按一下。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理這個事件來變更<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>目前儲存格的屬性。 在此範例設定的選取項目背景色彩<xref:System.Windows.Forms.DataGridView.CellEnter>事件，然後重設<xref:System.Drawing.Color.Empty>上<xref:System.Windows.Forms.DataGridView.CellLeave>事件。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，並確保其事件處理常式相關聯的所有事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#190)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#190)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellErrorTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellErrorTextChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellErrorTextChanged;" />
      <MemberSignature Language="F#" Value="member this.CellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellErrorTextChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellErrorTextChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#291](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#291)]
 [!code-vb[System.Windows.Forms.EventExamples#291](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#291)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellErrorTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellErrorTextNeeded As DataGridViewCellErrorTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellErrorTextNeededEventHandler ^ CellErrorTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler " Usage="member this.CellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>需要儲存格的錯誤文字時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>才會發生事件時<xref:System.Windows.Forms.DataGridView>控制<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性設定或其<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性是`true`。 處理<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>事件很有用，當您想要判斷其值或狀態而定的資料格的錯誤。  
  
 當您處理<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>事件，並指定錯誤文字中的處理常式中，錯誤圖像顯示在儲存格中除非<xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A>屬性設定為`false`或儲存格處於編輯模式。 當使用者將滑鼠指標移錯誤圖像 （glyph） 時，錯誤文字會出現在工具提示中。  
  
 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>也就會發生事件時的值<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A?displayProperty=nameWithType>已擷取屬性。  
  
 您可以使用<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType>並<xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A>屬性來判斷狀態或儲存格，並使用此資訊來變更或修改<xref:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType>屬性。 這個屬性會使用儲存格的值初始化<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A>屬性，它會覆寫的事件值。  
  
 處理<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>事件時使用大量的資料，以避免效能的負面影響的設定儲存格<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A>多個資料格的值。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立儲存格的錯誤訊息，而不會取消共用資料列，或造成被複製到所有共用的儲存格的資料格錯誤。  
  
 [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CPP/sharedrows.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CS/sharedrows.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/VB/sharedrows.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellErrors" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">縮放 Windows Form DataGridView 控制項的最佳作法</related>
      </Docs>
    </Member>
    <Member MemberName="CellFormatting">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellFormatting As DataGridViewCellFormattingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellFormattingEventHandler ^ CellFormatting;" />
      <MemberSignature Language="F#" Value="member this.CellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventHandler " Usage="member this.CellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellFormattingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>需設定要顯示之儲存格內容的格式時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Windows.Forms.DataGridView>控制項將會嘗試將儲存格的值轉換成適合顯示格式。 比方說，它會將數值轉換為文字 方塊儲存格中顯示字串。 您可以指出要藉由設定使用的格式化慣例<xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>屬性所傳回的這類<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性。  
  
 如果您沒有足夠的標準格式，您可以自訂格式處理<xref:System.Windows.Forms.DataGridView.CellFormatting>事件。 此事件可讓您指出確切的顯示值，以及儲存格樣式，例如背景和前景色彩，若要使用的儲存格顯示。 這表示您可以處理任何種類的儲存格的格式，不論是否儲存格的值本身需要格式化的這個事件。  
  
 <xref:System.Windows.Forms.DataGridView.CellFormatting>每一次，每個儲存格繪製，因此您應該避免長時間處理時處理這個事件，就會發生事件。 也會發生此事件時的儲存格<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A>擷取或其<xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A>呼叫方法。  
  
 當您處理<xref:System.Windows.Forms.DataGridView.CellFormatting>事件，<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>屬性會初始化與儲存格的值。 如果您提供從儲存格的值來顯示值的自訂轉換，將<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>屬性設為已轉換的值，確保新的值儲存格所指定之型別的<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>屬性。 若要指出任何進一步的值，格式為必要，請設定<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType>屬性設`true`。  
  
 事件處理常式完成時，如果<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>是`null`或者不是正確的類型，或有<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType>屬性是`false`，則<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>使用格式化<xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>屬性所傳回的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType>屬性，使用儲存格初始化<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>屬性。  
  
 值為何<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType>屬性中，所傳回之物件的顯示屬性<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType>屬性用來呈現儲存格。  
  
 如需自訂格式化使用的詳細資訊<xref:System.Windows.Forms.DataGridView.CellFormatting>事件，請參閱 <<c2> [ 如何： 自訂格式化 Windows Form DataGridView 控制項中的資料](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)。  
  
 若要避免效能的負面影響，處理這個事件時，存取透過事件處理常式，而不是直接存取的資料格參數的儲存格。  
  
 若要自訂格式化、 使用者指定的值轉換成實際的資料格的值，處理<xref:System.Windows.Forms.DataGridView.CellParsing>事件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何處理<xref:System.Windows.Forms.DataGridView.CellFormatting>事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a6e72c70-ce18-425f-828d-d57be6f96ab6">如何：自訂 Windows Form DataGridView 控制項中的資料格式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellLeave;" />
      <MemberSignature Language="F#" Value="member this.CellLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>儲存格失去輸入焦點且不再是目前儲存格時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理這個事件來變更<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>目前儲存格的屬性。 在此範例設定的選取項目背景色彩<xref:System.Windows.Forms.DataGridView.CellEnter>事件，然後重設<xref:System.Drawing.Color.Empty>上<xref:System.Windows.Forms.DataGridView.CellLeave>事件。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，並確保其事件處理常式相關聯的所有事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#190)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#190)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseClick;" />
      <MemberSignature Language="F#" Value="member this.CellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>每當使用者以滑鼠按一下儲存格上的任何地方時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用者按一下 使用任何滑鼠按鈕時，就會發生此事件。 使用<xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType>屬性來判斷所按的按鈕。  
  
 若要偵測點選的資料格，例如按鈕或連結的資料格內的內容使用<xref:System.Windows.Forms.DataGridView.CellContentClick>事件。  
  
 這個事件處理常式會接收的資料行索引和資料列的滑鼠指標位置的索引。  
  
 在中按一下<xref:System.Windows.Forms.DataGridViewCheckBoxCell>之前的核取方塊變更值，因此如果您不想要計算預期的值根據目前的值，就會發生此事件，您通常會處理<xref:System.Windows.Forms.DataGridView.CellValueChanged>事件改。 因為該事件發生於只有使用者指定的值在認可時，這通常發生於焦點離開儲存格，您也必須處理<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged>事件。 在該處理常式中，如果目前的儲存格是資料的核取方塊儲存格，呼叫<xref:System.Windows.Forms.DataGridView.CommitEdit%2A>方法並傳入<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>值。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellMouseClick>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellMouseClick>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#295](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#295)]
 [!code-vb[System.Windows.Forms.EventExamples#295](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#295)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseEventHandler" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentClick" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 中的儲存格被按兩下時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用者按兩下使用任何滑鼠按鈕時，就會發生此事件。 使用<xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType>屬性來判斷所按的按鈕。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#296](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#296)]
 [!code-vb[System.Windows.Forms.EventExamples#296](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#296)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseDown As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseDown;" />
      <MemberSignature Language="F#" Value="member this.CellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者在滑鼠指標位於儲存格界限內且按著滑鼠按鈕時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用者按下任何滑鼠按鈕時，就會發生此事件。 使用<xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType>屬性來判斷所按的按鈕。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellMouseDown>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellMouseDown>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#297](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#297)]
 [!code-vb[System.Windows.Forms.EventExamples#297](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#297)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellMouseEnter;" />
      <MemberSignature Language="F#" Value="member this.CellMouseEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellMouseEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>滑鼠指標進入儲存格時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例所示<xref:System.Windows.Forms.DataGridView.CellMouseEnter>Tic-Tac-Toe 遊戲的實作會使用映像中的資料行中的事件處理常式<xref:System.Windows.Forms.DataGridView>控制項。 事件處理常式會使用儲存格的值來決定要顯示的工具提示與資料指標。  
  
 此程式碼屬於較大的範例所示[如何： 使用 Windows Form DataGridView 控制項中的影像資料行](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellMouseLeave;" />
      <MemberSignature Language="F#" Value="member this.CellMouseLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellMouseLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>滑鼠指標離開儲存格時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例所示<xref:System.Windows.Forms.DataGridView.CellMouseLeave>Tic-Tac-Toe 遊戲的實作會使用映像中的資料行中的事件處理常式<xref:System.Windows.Forms.DataGridView>控制項。 資料指標和工具提示中所設定，會重設的事件處理常式<xref:System.Windows.Forms.DataGridView.CellMouseEnter>事件處理常式。  
  
 此程式碼屬於較大的範例所示[如何： 使用 Windows Form DataGridView 控制項中的影像資料行](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseMove As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseMove;" />
      <MemberSignature Language="F#" Value="member this.CellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於滑鼠指標移到 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項上方時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellMouseMove>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellMouseMove>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#300)]
 [!code-vb[System.Windows.Forms.EventExamples#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#300)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseUp As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseUp;" />
      <MemberSignature Language="F#" Value="member this.CellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者在儲存格上方放開滑鼠按鈕時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用者放開任何滑鼠按鈕時，就會發生此事件。 使用<xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType>屬性來判斷所按的按鈕。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellMouseUp>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellMouseUp>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#301)]
 [!code-vb[System.Windows.Forms.EventExamples#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#301)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellPainting">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellPainting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellPainting As DataGridViewCellPaintingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellPaintingEventHandler ^ CellPainting;" />
      <MemberSignature Language="F#" Value="member this.CellPainting : System.Windows.Forms.DataGridViewCellPaintingEventHandler " Usage="member this.CellPainting : System.Windows.Forms.DataGridViewCellPaintingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellPaintingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>需要繪製儲存格時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以處理這個事件，以自訂控制項中的儲存格的外觀。 您可以繪製整個儲存格，或 [小畫家] 的資料格的特定部分，並使用<xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground%2A?displayProperty=nameWithType>或<xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent%2A?displayProperty=nameWithType>繪製其他組件的方法。 您也可以使用<xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>繪製使用目前的佈景主題的標準控制項的類別。 如需詳細資訊，請參閱 <<c0> [ 呈現具有視覺化樣式的控制項](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)。 如果您使用[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]，您也可以存取您可以搭配使用的標準映像的大型程式庫來<xref:System.Windows.Forms.DataGridView>控制項。  
  
 當處理這個事件，您應該透過事件處理常式的參數來存取該儲存格，而不是直接存取的資料格。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件來自訂特定的資料行中的所有儲存格的外觀。  
  
 此程式碼是中提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的儲存格外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCellPainting#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCellPainting/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewCellPainting#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCellPainting/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellPaintingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <related type="Article" href="https://msdn.microsoft.com/library/478b20c9-625c-4116-9c5c-5a16e6f4ec67">如何：在 Windows Form DataGridView 控制項中自訂儲存格的外觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellParsing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellParsing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellParsing As DataGridViewCellParsingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellParsingEventHandler ^ CellParsing;" />
      <MemberSignature Language="F#" Value="member this.CellParsing : System.Windows.Forms.DataGridViewCellParsingEventHandler " Usage="member this.CellParsing : System.Windows.Forms.DataGridViewCellParsingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellParsingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於已經修改儲存格值後，該儲存格離開編輯模式時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Windows.Forms.DataGridView>控制項將會嘗試將使用者指定的值，顯示在儲存格所指定的型別中的實際基礎儲存格中值的儲存格<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>屬性。 這項轉換會使用格式內容的儲存格所傳回的儲存格樣式<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>屬性。  
  
 如果標準轉換不符合您的需求，處理<xref:System.Windows.Forms.DataGridView.CellParsing>事件，以提供自訂的值轉換為要求的類型。  
  
 使用者可以輸入編輯模式中使用指定的方法<xref:System.Windows.Forms.DataGridView.EditMode%2A>屬性，並可以離開編輯模式中，移至另一個資料格，或按下 ENTER 鍵，儲存格，認可任何變更。 按下 esc 鍵將會還原為值的任何變更之前認可，而<xref:System.Windows.Forms.DataGridView.CellParsing>事件不會發生。 <xref:System.Windows.Forms.DataGridView.CellParsing>事件才會發生實際已修改資料格的值，即使最終的值會是原始的值相同。 它也會發生時<xref:System.Windows.Forms.DataGridView.CommitEdit%2A>呼叫方法。  
  
 當您處理<xref:System.Windows.Forms.DataGridView.CellParsing>事件，您可以自行轉換值，或者您可以自訂預設轉換。 比方說，您可以將值轉換使用的儲存格自行<xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>使用類型轉換器，您所選擇的方法。 或者，您可以讓預設的類型轉換器剖析的值，但修改<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，並<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>屬性所傳回的物件<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType>屬性，使用儲存格初始化<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>屬性。  
  
 當您自行轉換值時，將初始的格式化值取代<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>屬性中儲存格所指定之類型的轉換值<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>屬性。 若要指出任何進一步剖析是必要，設定<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType>屬性設`true`。  
  
 事件處理常式完成時，如果<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>是`null`或者不是正確的類型，或<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType>屬性是`false`，則<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>剖析使用的儲存格<xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>與預設型別轉換子的方法。 這個方法的預設實作會剖析值使用<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>中傳遞的儲存格樣式屬性。 如果值不等於<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>，該值剖析使用<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>中傳遞的屬性和型別轉換子。  
  
 若要自訂的資料格的值轉換成數值顯示的格式化值，處理<xref:System.Windows.Forms.DataGridView.CellFormatting>事件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何處理<xref:System.Windows.Forms.DataGridView.CellParsing>事件。 它也會示範如何使用<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs>類別。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStateChanged As DataGridViewCellStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellStateChangedEventHandler ^ CellStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventHandler " Usage="member this.CellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>儲存格狀態變更時發生，例如儲存格失去或獲得焦點時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#135](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#135)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#135](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#135)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStateChangedEventArgs.StateChanged" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStyleChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStyleChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellStyleChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何時，就會發生此事件的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>屬性設定為新的值或當<xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>屬性設定為新<xref:System.Windows.Forms.DataGridViewCellStyle>具有至少一個屬性值不同於先前的儲存格樣式物件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#305)]
 [!code-vb[System.Windows.Forms.EventExamples#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyleContentChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStyleContentChanged As DataGridViewCellStyleContentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellStyleContentChangedEventHandler ^ CellStyleContentChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler " Usage="member this.CellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>儲存格樣式的其中一個值變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged>屬性值時，就會發生事件<xref:System.Windows.Forms.DataGridViewCellStyle>其中一個下列的屬性變更所傳回的物件：  
  
-   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
 如果其中一個屬性設定為不同<xref:System.Windows.Forms.DataGridViewCellStyle>，不過相對應*PropertyName* `Changed`就會發生事件，但<xref:System.Windows.Forms.DataGridView.CellStyleContentChanged>事件不會發生。  
  
 資料列、 資料行和資料格屬性的名稱*PropertyName* `Changed`事件開頭 」`Row`"，"`Column`"，或 「`Cell`」 (比方說， <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>)。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellStyleContentChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellStyleContentChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#306](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#306)]
 [!code-vb[System.Windows.Forms.EventExamples#306](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#306)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellToolTipTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellToolTipTextChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellToolTipTextChanged;" />
      <MemberSignature Language="F#" Value="member this.CellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 中儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#307](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#307)]
 [!code-vb[System.Windows.Forms.EventExamples#307](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#307)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellToolTipTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellToolTipTextNeeded As DataGridViewCellToolTipTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellToolTipTextNeededEventHandler ^ CellToolTipTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler " Usage="member this.CellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>需要儲存格的工具提示文字時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>才會發生事件時<xref:System.Windows.Forms.DataGridView>控制<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性設定或其<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性是`true`。  
  
 當您處理<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>事件，您指定的處理常式中的工具提示文字會顯示每當滑鼠指標位在儲存格和控制項<xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A>屬性值是`true`。 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>事件很有用，當您想要顯示的目前狀態或儲存格的值所決定的工具提示。  
  
 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>也就會發生事件時的值<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A?displayProperty=nameWithType>已擷取屬性，或是以程式設計的方式，或當滑鼠指標進入儲存格。  
  
 您可以使用<xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType>並<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A>屬性來判斷狀態或儲存格，並使用此資訊來變更或修改<xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType>屬性。 這個屬性會使用儲存格的值初始化<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>屬性，它會覆寫的事件值。  
  
 處理<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>事件時使用大量的資料，以避免效能的負面影響的設定儲存格<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>多個資料格的值。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>事件處理常式，以顯示資料繫結中隱藏資料行的資訊<xref:System.Windows.Forms.DataGridView>控制項。  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellValidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValidated As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellValidated;" />
      <MemberSignature Language="F#" Value="member this.CellValidated : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellValidated : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>儲存格完成驗證之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理此事件可用於驗證後置處理的儲存格的值就行了。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.CellValidated>事件，以清除<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>屬性。 在此範例中，<xref:System.Windows.Forms.DataGridView.CellValidating>事件<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>如果使用者輸入無效，無法在資料格中的資料。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValidating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValidating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValidating As DataGridViewCellValidatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValidatingEventHandler ^ CellValidating;" />
      <MemberSignature Language="F#" Value="member this.CellValidating : System.Windows.Forms.DataGridViewCellValidatingEventHandler " Usage="member this.CellValidating : System.Windows.Forms.DataGridViewCellValidatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValidatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於儲存格失去輸入焦點、啟用內容驗證時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取消這個事件會取消目前儲存格的變更。 當資料繫結模式取消這個事件時，新的值不會推送至基礎資料來源。 此事件會在虛擬模式中，在取消時<xref:System.Windows.Forms.DataGridView.CellValuePushed>不會引發事件。  
  
 處理<xref:System.Windows.Forms.DataGridView.CellValidated>事件來執行驗證後置處理。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會處理<xref:System.Windows.Forms.DataGridView.CellValidating>事件以確保使用者所輸入的只是正整數。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>參考主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidated" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValueChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValueChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellValueChanged;" />
      <MemberSignature Language="F#" Value="member this.CellValueChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellValueChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>儲存格的值變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType>認可，使用者指定的值時，就會發生事件這通常發生於焦點離開儲存格。  
  
 如果核取方塊儲存格，不過，您通常要立即處理變更。 若要認可變更，按一下儲存格時，您必須處理<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType>事件。 在處理常式中，核取方塊儲存格的目前儲存格時，呼叫<xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType>方法並傳入<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>值。  
  
 資料格的值變更時，不會自動排序控制項中的資料列。 若要排序控制項，當使用者修改資料格時，請呼叫<xref:System.Windows.Forms.DataGridView.Sort%2A>方法中的<xref:System.Windows.Forms.DataGridView.CellValueChanged>事件處理常式。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.CellValueChanged>事件，以平衡資料行的值更新<xref:System.Windows.Forms.DataGridView>。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValueNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValueNeeded As DataGridViewCellValueEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValueEventHandler ^ CellValueNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventHandler " Usage="member this.CellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValueEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的 <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 屬性為 <see langword="true" />，且 <see cref="T:System.Windows.Forms.DataGridView" /> 需要有儲存格的值，才能格式化並顯示此儲存格時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在虛擬模式中使用這個事件，來填入資料格的自訂資料存放區中的資料，而不會造成變成非共用的資料列。 如需有關共用資料列的詳細資訊，請參閱[縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。 如需有關虛擬模式的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的虛擬模式](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)。  
  
 若要加入您的自訂資料存放區中的使用者指定的值，請處理<xref:System.Windows.Forms.DataGridView.CellValuePushed>事件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會處理<xref:System.Windows.Forms.DataGridView.CellValueNeeded>事件，以填入資料格具有正數的整數。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>參考主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">縮放 Windows Form DataGridView 控制項的最佳作法</related>
        <related type="Article" href="https://msdn.microsoft.com/library/feae5d43-2848-4b1a-8ea7-77085dc415b5">Windows Form DataGridView 控制項中的虛擬模式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValuePushed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValuePushed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValuePushed As DataGridViewCellValueEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValueEventHandler ^ CellValuePushed;" />
      <MemberSignature Language="F#" Value="member this.CellValuePushed : System.Windows.Forms.DataGridViewCellValueEventHandler " Usage="member this.CellValuePushed : System.Windows.Forms.DataGridViewCellValueEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValueEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的 <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 屬性為 <see langword="true" />，且儲存格值已變更，並需要在基礎資料來源中有儲存區時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者指定的資料更新的自訂資料存放區，在虛擬模式中使用這個事件。 處理<xref:System.Windows.Forms.DataGridView.CellValueNeeded>事件來擷取顯示在控制項中的資料存放區中的值。  
  
 如需有關虛擬模式的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的虛擬模式](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會處理<xref:System.Windows.Forms.DataGridView.CellValuePushed>更新和新的項目儲存在資料存放區物件的事件。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>參考主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/feae5d43-2848-4b1a-8ea7-77085dc415b5">Windows Form DataGridView 控制項中的虛擬模式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearSelection">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取消選取目前已選取的儲存格。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelection();" />
      <MemberSignature Language="F#" Value="member this.ClearSelection : unit -&gt; unit" Usage="dataGridView.ClearSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消選取所有選取的儲存格來清除目前的選取範圍。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫此方法時，每個資料行和資料列的<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>屬性設定為`false`。  
  
   
  
## Examples  
 下列程式碼範例會同時清除選取<xref:System.Windows.Forms.DataGridView>。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`並<xref:System.Windows.Forms.Button>名為`clearSelectionButton`，並確保其事件處理常式相關聯的所有事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#170)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#170)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="protected void ClearSelection (int columnIndexException, int rowIndexException, bool selectExceptionElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearSelection(int32 columnIndexException, int32 rowIndexException, bool selectExceptionElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearSelection (columnIndexException As Integer, rowIndexException As Integer, selectExceptionElement As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearSelection(int columnIndexException, int rowIndexException, bool selectExceptionElement);" />
      <MemberSignature Language="F#" Value="member this.ClearSelection : int * int * bool -&gt; unit" Usage="dataGridView.ClearSelection (columnIndexException, rowIndexException, selectExceptionElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndexException" Type="System.Int32" />
        <Parameter Name="rowIndexException" Type="System.Int32" />
        <Parameter Name="selectExceptionElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndexException">要排除的資料行索引。</param>
        <param name="rowIndexException">要排除的資料列索引。</param>
        <param name="selectExceptionElement">
          <see langword="true" /> 表示選取被排除的儲存格、資料列或資料行，<see langword="false" /> 則表示保留其原始狀態。</param>
        <summary>取消選取目前已選取的所有儲存格 (除了指示的儲存格以外)，並選擇性地確定所指示的儲存格已選取。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A`rowIndexException`值為-1 表示資料行標頭和`columnIndexException`值為-1 表示資料列標頭。  
  
 此方法相當實用，清除目前的選取範圍，而無需取消選取的資料格、 資料列或例外狀況的索引所指示的資料行。  
  
 如果<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性值可讓個別的儲存格選取範圍，這個方法會設定<xref:System.Windows.Forms.DataGridViewCell.Selected%2A>屬性的每個資料格`false`，但不包括中的資料列和資料行所指定的儲存格。 如果<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性值可讓完整的資料列或資料行選取項目，這個方法也集<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>每個資料列或資料行的屬性`false`，不包括資料列或資料行，內含指定的儲存格。  
  
 排除的儲存格、 資料列或資料行可能會或可能無法在選取狀態時呼叫這個方法。 這個方法會選取它若`selectExceptionElement`參數值是`true`。 根據選取模式，整個資料列或資料行也可以選取結果。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndexException" /> 大於最高的資料行索引。  
  
-或- 
 當 <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /> 為 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect" /> 時，<paramref name="columnIndexException" /> 小於 -1；否則 <paramref name="columnIndexException" /> 小於 0。  
  
-或- 
 <paramref name="rowIndexException" /> 大於最高的資料列索引。  
  
-或- 
 當 <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /> 為 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /> 時，<paramref name="rowIndexException" /> 小於 -1；否則 <paramref name="rowIndexException" /> 小於 0。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Selected" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Selected" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ClipboardCopyMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipboardCopyMode As DataGridViewClipboardCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewClipboardCopyMode ClipboardCopyMode { System::Windows::Forms::DataGridViewClipboardCopyMode get(); void set(System::Windows::Forms::DataGridViewClipboardCopyMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClipboardCopyMode : System.Windows.Forms.DataGridViewClipboardCopyMode with get, set" Usage="System.Windows.Forms.DataGridView.ClipboardCopyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewClipboardCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出使用者是否可以將儲存格文字值複製到 <see cref="T:System.Windows.Forms.Clipboard" />，以及是否會包含資料列和資料行標頭文字。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /> 值。 預設值為 <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制項複製到剪貼簿的每個選取的儲存格的文字表示。 這個值是儲存格的值轉換成字串或影像資料格，值<xref:System.Windows.Forms.DataGridViewImageCell.Description%2A>屬性。  
  
 值會複製到剪貼簿<xref:System.Windows.Forms.DataFormats.Text>， <xref:System.Windows.Forms.DataFormats.UnicodeText>， <xref:System.Windows.Forms.DataFormats.Html>，和<xref:System.Windows.Forms.DataFormats.CommaSeparatedValue>格式。 這些格式可用於將內容貼到記事本，Microsoft Excel 之類的應用程式和[!INCLUDE[ofprword](~/includes/ofprword-md.md)]。  
  
 <xref:System.Windows.Forms.DataGridView>控制項複製中包括所有選取的資料格的最小矩形所包含的資料格。 資料列和資料行不包含任何選取的儲存格不會出現在複製的資料中。 其餘的資料列和資料行中任何未選取資料格會以空白預留位置表示。 根據複製模式和選取模式，複製的資料列和資料行的標頭值可能是，一併複製。  
  
 當使用者複製內容，<xref:System.Windows.Forms.DataGridView>控制項會新增<xref:System.Windows.Forms.DataObject>到剪貼簿。 這個資料物件擷取自<xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A>方法。 當您想要以程式設計方式在剪貼簿中加入資料物件時，您可以呼叫這個方法。  
  
 <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A>方法會擷取個別資料格的值，藉由呼叫<xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType>方法。 您可以覆寫一個或兩個自訂複製的儲存格的版面配置，或以支援其他資料格式的衍生類別中的這些方法。  
  
 如需剪貼簿作業和資料格式的詳細資訊，請參閱<xref:System.Windows.Forms.Clipboard>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何啟用複製<xref:System.Windows.Forms.DataGridView>控制項。 這個範例是提供之較大範例的一部分[如何： 讓使用者複製多個儲存格至剪貼簿] 從 [Windows Form DataGridView 控制項](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.Clipboard" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
        <altmember cref="M:System.Windows.Forms.DataGridView.GetClipboardContent" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.Description" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnAdded As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnAdded;" />
      <MemberSignature Language="F#" Value="member this.ColumnAdded : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnAdded : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>資料行加入至控制項時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnAdded>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnAdded>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#314](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#314)]
 [!code-vb[System.Windows.Forms.EventExamples#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#314)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnContextMenuStripChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#315](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#315)]
 [!code-vb[System.Windows.Forms.EventExamples#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#315)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int with get, set" Usage="System.Windows.Forms.DataGridView.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 中顯示的資料行數目。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridView" /> 中顯示的資料行數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>屬性設為 0 將會移除所有的資料行從<xref:System.Windows.Forms.DataGridView>。  
  
 如果<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>重設的值小於目前的值，就移除資料行從結尾<xref:System.Windows.Forms.DataGridView.Columns%2A>集合。 如果<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>設定設為大於目前的值的值，將資料行加入至結尾<xref:System.Windows.Forms.DataGridView.Columns%2A>集合。  
  
 這個屬性可以搭配<xref:System.Windows.Forms.DataGridView.RowCount%2A>屬性來建立簡單<xref:System.Windows.Forms.DataGridView>來顯示和編輯文字。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.GridColor%2A>， <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>， <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>， <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>，以及<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性。 此外，在程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定這個屬性時所指定的值小於 0。</exception>
        <exception cref="T:System.InvalidOperationException">設定這個屬性時，已設定 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 屬性。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDataPropertyNameChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDataPropertyNameChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDataPropertyNameChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#316](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#316)]
 [!code-vb[System.Windows.Forms.EventExamples#316](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#316)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDefaultCellStyleChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何時，就會發生此事件的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A>屬性的資料行設定為新的值，或當<xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A>資料行的屬性設定為新<xref:System.Windows.Forms.DataGridViewCellStyle>具有至少一個屬性值不同於上一個儲存格的樣式物件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#317](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#317)]
 [!code-vb[System.Windows.Forms.EventExamples#317](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#317)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDisplayIndexChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDisplayIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.DisplayIndex" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#318](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#318)]
 [!code-vb[System.Windows.Forms.EventExamples#318](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#318)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDividerDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDividerDoubleClick As DataGridViewColumnDividerDoubleClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnDividerDoubleClickEventHandler ^ ColumnDividerDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler " Usage="member this.ColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者按兩下兩個資料行之間的分割線時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個事件自訂發生於使用者按兩下資料行分割線的自動調整大小行為。 比方說，您可以處理這個事件來以程式設計方式調整大小只以目前可見的資料列中的內容為基礎的資料行時使用大量的資料列，避免發生預設行為對效能產生影響。  
  
 資料行<xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>屬性不會擴充的區域，使用者可以連按兩下。 如果已經透過這個屬性使用增加的分割線的寬度，當使用者按兩下分割線與相鄰的資料行之間的界限時，就會發生此事件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#319](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#319)]
 [!code-vb[System.Windows.Forms.EventExamples#319](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#319)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDividerWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDividerWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDividerWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridViewColumn.DividerWidth" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#320](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#320)]
 [!code-vb[System.Windows.Forms.EventExamples#320](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#320)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderCellChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderCellChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnHeaderCellChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>資料行行首儲存格的內容變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#323](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#323)]
 [!code-vb[System.Windows.Forms.EventExamples#323](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#323)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ ColumnHeaderMouseClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.ColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者按一下資料行行首時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 在中按一下資料行標題時<xref:System.Windows.Forms.DataGridView>，預設行為是根據所按的資料行，為格線資料列排序，或反轉排序次序，如果已按下 資料行的已排序方格。 下列程式碼範例示範如何使用這個事件來執行模擬按一下的預設行為以程式設計方式排序<xref:System.Windows.Forms.DataGridViewColumnHeaderCell>時已停用的預設行為。 在此範例中，<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>設定為<xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect>，因此按一下<xref:System.Windows.Forms.DataGridViewColumnHeaderCell>選取資料行的內容。 以如預期般運作的範例程式碼，預設資料行標頭按一下 變更資料載入至每個階段的行為需求<xref:System.Windows.Forms.DataGridView>。 新增<xref:System.Windows.Forms.DataGridView.DataBindingComplete>提供變更的預設行為的程式碼的事件處理常式。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，並確保其事件處理常式相關聯的所有事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#160)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ ColumnHeaderMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.ColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>按兩下資料行行首時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#322](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#322)]
 [!code-vb[System.Windows.Forms.EventExamples#322](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#322)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersBorderStyle As DataGridViewHeaderBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { System::Windows::Forms::DataGridViewHeaderBorderStyle get(); void set(System::Windows::Forms::DataGridViewHeaderBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersBorderStyle : System.Windows.Forms.DataGridViewHeaderBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料行行首所套用的框線樣式。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>以外的其他屬性設定為<xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single>，則<xref:System.Windows.Forms.DataGridView.GridColor%2A>屬性必須是系統色彩。  
  
 您無法將此屬性設定為<xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom>值，這唯讀的值，表示，已使用自訂的框線樣式<xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A>屬性。  
  
> [!NOTE]
>  如果啟用視覺化樣式的應用程式，透過<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>方法和<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>屬性是`true`，資料行標頭來塗繪，使用目前的佈景主題。 在此案例中的值<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>以外的所有資料行標頭，則會都忽略屬性<xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>，未套用的佈景主題。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.GridColor%2A>， <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>， <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>， <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>，以及<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性。 此外，在程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 值。</exception>
        <exception cref="T:System.ArgumentException">設定這個屬性時所指定的值是 <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersBorderStyleChanged : EventHandler " Usage="member this.ColumnHeadersBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#262](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#262)]
 [!code-vb[System.Windows.Forms.EventExamples#262](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#262)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ ColumnHeadersDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定預設資料行行首的樣式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，表示預設資料行標頭樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設值<xref:System.Windows.Forms.DataGridViewCellStyle>傳回由這個屬性具有下列的初始屬性值：  
  
|`DataGridViewCellStyle` 屬性|預設值|  
|--------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|<xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|<xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|<xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|<xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|<xref:System.Windows.Forms.DataGridView.Font%2A> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState.True?displayProperty=nameWithType>|  
  
 這些值會自動覆寫透過設定的值<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性。 若要強制繼承的資料行標頭<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>值，您必須設定的值<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>設為預設值的物件指定<xref:System.Windows.Forms.DataGridViewCellStyle>類別。  
  
 如需有關儲存格樣式繼承的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的儲存格樣式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
 如果啟用視覺化樣式和<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>設定為`true`，以外的所有標頭資料格<xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>會使用目前的佈景主題來繪製和<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>值會被忽略。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.GridColor%2A>， <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>， <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>， <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>，以及<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性。 此外，在程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersDefaultCellStyleChanged : EventHandler " Usage="member this.ColumnHeadersDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何時，就會發生此事件的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>屬性設定為新的值或當<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>屬性設定為新<xref:System.Windows.Forms.DataGridViewCellStyle>具有至少一個屬性值不同於先前的儲存格樣式物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#263](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#263)]
 [!code-vb[System.Windows.Forms.EventExamples#263](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#263)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public int ColumnHeadersHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnHeadersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnHeadersHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeight : int with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料行行首的資料列高度 (以像素為單位)。</summary>
        <value>包含資料行行首的資料列之高度 (以像素為單位)。 預設值為 23。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定這個屬性時所指定的值小於最小高度 4 像素，或大於最大高度 32768 像素。</exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersHeightChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightChanged : EventHandler " Usage="member this.ColumnHeadersHeightChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#264](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#264)]
 [!code-vb[System.Windows.Forms.EventExamples#264](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#264)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersHeightSizeMode As DataGridViewColumnHeadersHeightSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode get(); void set(System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightSizeMode : System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出資料行標頭的高度是否可以調整，以及使用者是否可以調整此高度，或是會配合標頭內容，自動調整此高度。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /> 值，指出資料行標頭資料列的高度可以根據哪一個模式來調整。 預設值為 <see cref="F:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當這個屬性設定為<xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize>，無法由使用者調整資料行行首的高度。  
  
 若要以程式設計方式調整資料行行首的高度，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>方法或一組<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight%2A>屬性。  
  
 若要設定資料列標頭調整大小模式，使用<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>屬性。  
  
 儲存格的內容時調整資料行行首的大小，分成多行換行，必須有作用中的儲存格的儲存格樣式<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewTriState.True>。  
  
 如需標頭調整大小的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>控制項不支援雙重緩衝。 如果<xref:System.Windows.Forms.Control.DoubleBuffered%2A>設定為`true`中衍生<xref:System.Windows.Forms.DataGridView>控制項，在調整大小時，資料列、 資料行或標頭，或重新排序資料行時，使用者不會接收視覺化回饋。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightSizeModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersHeightSizeModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ ColumnHeadersHeightSizeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.ColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#265](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#265)]
 [!code-vb[System.Windows.Forms.EventExamples#265](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#265)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersVisible">
      <MemberSignature Language="C#" Value="public bool ColumnHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否顯示資料行行首的資料列。</summary>
        <value>如果會顯示資料行標頭，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>屬性是`false`，資料行其<xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A>屬性設定為`true`可以仍調整使用者介面 (UI) 中使用滑鼠游標上要調整大小的資料行的右框線的任何位置按一下。  
  
   
  
## Examples  
 下列程式碼範例會填入未繫結<xref:System.Windows.Forms.DataGridView>控制項，並將<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>屬性設`true`以確保資料行標頭會顯示。  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在設定這個屬性時的指定值是 <see langword="false" />，且一或多個資料行具有 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode" /> 屬性值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnMinimumWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnMinimumWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnMinimumWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.MinimumWidth" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#324](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#324)]
 [!code-vb[System.Windows.Forms.EventExamples#324](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#324)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnNameChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnNameChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnNameChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.Name" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnNameChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnNameChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#325](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#325)]
 [!code-vb[System.Windows.Forms.EventExamples#325](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#325)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnRemoved As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnRemoved;" />
      <MemberSignature Language="F#" Value="member this.ColumnRemoved : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnRemoved : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>從控制項移除資料行時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnRemoved>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnRemoved>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#326](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#326)]
 [!code-vb[System.Windows.Forms.EventExamples#326](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#326)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataGridViewColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumnCollection ^ Columns { System::Windows::Forms::DataGridViewColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.DataGridViewColumnCollection" Usage="System.Windows.Forms.DataGridView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewColumnCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含控制項中所有欄的集合。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />，包含 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項中的所有資料行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 藉由使用<xref:System.Windows.Forms.DataGridViewColumnCollection>傳回此屬性，您可以將資料行加入、 移除資料行，並取得中包含的資料行計數<xref:System.Windows.Forms.DataGridView>控制項。 如需詳細資訊，請參閱<xref:System.Windows.Forms.DataGridViewColumnCollection>。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立未繫結<xref:System.Windows.Forms.DataGridView>; set <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>，以及<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>屬性，並使用<xref:System.Windows.Forms.DataGridView.Rows%2A>和<xref:System.Windows.Forms.DataGridView.Columns%2A>屬性。 它也會示範如何使用新版<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>和<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>正確調整大小的資料行的標頭和資料列的方法。 若要執行此範例中，將下列程式碼貼到表單，其中包含<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`和名為按鈕`Button1`，然後呼叫`InitializeDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定所有的事件都已連接其事件處理常式。  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnCollection" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnSortModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnSortModeChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnSortModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#327](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#327)]
 [!code-vb[System.Windows.Forms.EventExamples#327](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#327)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnStateChanged As DataGridViewColumnStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnStateChangedEventHandler ^ ColumnStateChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventHandler " Usage="member this.ColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>資料行變更狀態 (例如獲得或失去焦點) 時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當其中一個下列的資料行屬性的值變更時，會引發這個事件<xref:System.Windows.Forms.DataGridViewColumn>控制項中：  
  
-   <xref:System.Windows.Forms.DataGridViewBand.Displayed%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewBand.Selected%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Visible%2A>  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnStateChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnStateChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#328](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#328)]
 [!code-vb[System.Windows.Forms.EventExamples#328](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#328)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnToolTipTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnToolTipTextChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnToolTipTextChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 中資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.ToolTipText" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#329](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#329)]
 [!code-vb[System.Windows.Forms.EventExamples#329](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#329)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.Width" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件。 這個範例是提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#18)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#18)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit (context As DataGridViewDataErrorContexts) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; bool" Usage="dataGridView.CommitEdit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的位元 (Bitwise) 組合，指定可能發生錯誤的內容。</param>
        <summary>讓資料快取認可目前儲存格中的變更，而不需要結束編輯模式。</summary>
        <returns>如果已認可變更，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會嘗試將格式化的使用者指定值轉換為基礎的資料格資料型別。 若要這樣做，便會產生<xref:System.Windows.Forms.DataGridView.CellParsing>事件，您可以處理自訂型別轉換。 否則，會使用預設型別轉換子。 轉換錯誤可能會導致例外狀況如果<xref:System.Windows.Forms.DataGridView.DataError>未以防止它處理事件。 如果成功轉換的值，它會認可至資料存放區，引發<xref:System.Windows.Forms.DataGridView.CellValuePushed>非資料繫結的事件資料格時<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性值是`true`。 如果值為成功認可，<xref:System.Windows.Forms.DataGridView.CellValueChanged>就會發生事件。  
  
   
  
## Examples  
 下列程式碼範例會呼叫<xref:System.Windows.Forms.DataGridView.CommitEdit%2A>方法內<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged>引發的事件處理常式<xref:System.Windows.Forms.DataGridView.CellValueChanged>事件。 此程式碼範例是中提供之較大範例的一部分[如何： 在 Windows Form DataGridView 控制項按鈕資料行中的 停用按鈕](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">無法認可儲存格值，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
        <altmember cref="Overload:System.Windows.Forms.DataGridView.EndEdit" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 <see cref="T:System.Windows.Forms.DataGridView" /> 建立新的可存取物件。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridView.DataGridViewAccessibleObject" /> 的新 <see cref="T:System.Windows.Forms.DataGridView" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateColumnsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateColumnsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateColumnsInstance () As DataGridViewColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewColumnCollection ^ CreateColumnsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateColumnsInstance : unit -&gt; System.Windows.Forms.DataGridViewColumnCollection&#xA;override this.CreateColumnsInstance : unit -&gt; System.Windows.Forms.DataGridViewColumnCollection" Usage="dataGridView.CreateColumnsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立及傳回新的 <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />。</summary>
        <returns>空的 <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="dataGridView.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立及傳回可以轉換成類型 <see cref="T:System.Windows.Forms.DataGridView.DataGridViewControlCollection" /> 的新 <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</summary>
        <returns>空的 <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Windows.Forms.Control.Controls%2A>屬性傳入來初始化它的值。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateRowsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRowsInstance () As DataGridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewRowCollection ^ CreateRowsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateRowsInstance : unit -&gt; System.Windows.Forms.DataGridViewRowCollection&#xA;override this.CreateRowsInstance : unit -&gt; System.Windows.Forms.DataGridViewRowCollection" Usage="dataGridView.CreateRowsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立及傳回新的 <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />。</summary>
        <returns>空的 <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell CurrentCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CurrentCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentCell" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentCell As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ CurrentCell { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCell : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.CurrentCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定目前的現用儲存格。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewCell" />，表示目前的儲存格；如果沒有目前的儲存格，則為 <see langword="null" />。 預設為第一個資料行中的第一個儲存格，如果控制項中沒有任何儲存格，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您將資料格設定為目前的儲存格時，它會捲動到檢視如果目前沒有顯示。 目前的儲存格不能標頭資料格、 已停用資料格，隱藏的資料列或資料行中。  
  
 您可以將此屬性設定為`null`暫時移除焦點矩形，但當控制項取得焦點且這個屬性的值為`null`，它會自動設定的值為<xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A>屬性。  
  
 當您變更此屬性的值<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件發生之前<xref:System.Windows.Forms.DataGridView.CurrentCellChanged>事件。 任何<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件處理常式存取<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性此時會取得先前的值。  
  
 當您繫結<xref:System.Windows.Forms.DataGridView>至外部資料來源，這個屬性會重設為其預設值。  
  
   
  
## Examples  
 下列程式碼範例說明如何確保目前的儲存格為可見，藉由設定排序後<xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A>至儲存格的屬性，透過擷取<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性。 此程式碼僅適用於未繫結<xref:System.Windows.Forms.DataGridView>控制項。 使用<xref:System.Windows.Forms.DataGridView>控制項繫結至外部資料來源，目前儲存格不會自動保存排序時。  
  
 若要執行此範例中，將下列程式碼貼到表單，其中包含<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`。 在 C# 中，您也必須連接<xref:System.Windows.Forms.DataGridView.Sorted>事件處理常式的事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">因為無法認可或取消目前儲存格的變更，所以無法設定這個屬性的值。  
  
-或- 
設定這個屬性時所指定的儲存格位於隱藏的資料列或資料行中。  
  
僅當 <see cref="T:System.Windows.Forms.DataGridView" /> 已繫結至 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 時，才允許可重新進入的呼叫。 變更基礎資料產生可重新進入的呼叫。</exception>
        <exception cref="T:System.ArgumentException">設定這個屬性時，指定的儲存格不在 <see cref="T:System.Windows.Forms.DataGridView" /> 中。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentRow" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridView.FirstDisplayedCell" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/yc4fsbf5(v=vs.110).aspx">如何：取得和設定 Windows Form DataGridView 控制項中目前的儲存格</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellAddress">
      <MemberSignature Language="C#" Value="public System.Drawing.Point CurrentCellAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point CurrentCellAddress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentCellAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCellAddress As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point CurrentCellAddress { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCellAddress : System.Drawing.Point" Usage="System.Windows.Forms.DataGridView.CurrentCellAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的現用儲存格的資料列和資料行的索引。</summary>
        <value>
          <see cref="T:System.Drawing.Point" />，表示目前作用中之儲存格的資料列和資料行索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性來判斷資料列和資料行的目前儲存格，而不需要直接存取的資料格。 此方法以避免資料列取消共用。 如需有關共用資料列的詳細資訊，請參閱[縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用<xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A>在資料列繪製的案例中的屬性。 在範例中，這個屬性用來儲存目前的儲存格的資料列索引。 當使用者變更目前的儲存格，以不同的資料列時，資料列會強制重新繪製本身。  
  
 此程式碼是中提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellChanged : EventHandler " Usage="member this.CurrentCellChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件。 這個範例是提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellDirtyStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellDirtyStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellDirtyStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellDirtyStateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellDirtyStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellDirtyStateChanged : EventHandler " Usage="member this.CurrentCellDirtyStateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當儲存格狀態變更是與儲存格內容變更有關時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 標示為修改其內容已變更，但變更尚未儲存的資料格。  
  
 當儲存格已經過編輯，但變更尚未認可至資料快取或取消編輯作業時，通常就會發生此事件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何處理<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged>事件。 在此範例中，事件處理常式會呼叫<xref:System.Windows.Forms.DataGridView.CommitEdit%2A>方法以引發<xref:System.Windows.Forms.DataGridView.CellValueChanged>事件，並判斷目前的值<xref:System.Windows.Forms.DataGridViewCheckBoxCell>。 此程式碼範例是中提供之較大範例的一部分[如何： 在 Windows Form DataGridView 控制項按鈕資料行中的 停用按鈕](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow CurrentRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow CurrentRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRow As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ CurrentRow { System::Windows::Forms::DataGridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentRow : System.Windows.Forms.DataGridViewRow" Usage="System.Windows.Forms.DataGridView.CurrentRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含目前儲存格的資料列。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewRow" />，表示包含目前儲存格的資料列；如果沒有目前儲存格，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要變更目前的資料列，您必須設定<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>所需的資料列中的資料格的屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DataBindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataBindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBindingComplete As DataGridViewBindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewBindingCompleteEventHandler ^ DataBindingComplete;" />
      <MemberSignature Language="F#" Value="member this.DataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventHandler " Usage="member this.DataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewBindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料繫結作業完成之後。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 或資料的內容來源變更時，會引發這個事件的值<xref:System.Windows.Forms.DataGridView.DataSource%2A>， <xref:System.Windows.Forms.DataGridView.DataMember%2A>，或<xref:System.Windows.Forms.Control.BindingContext%2A>屬性變更。  
  
 處理此事件會很有用，比方說，若要以程式設計方式調整大小的資料列和內容更新為基礎的資料行。 如需詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#05)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <altmember cref="P:System.Windows.Forms.Control.BindingContext" />
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ListChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As DataGridViewDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.DataGridViewDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.DataGridViewDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於外部資料剖析或驗證作業擲回例外狀況時，或是嘗試讓資料來源認可資料，但卻失敗時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.DataError>事件可讓您處理在資料處理作業期間，由控制項呼叫的程式碼中擲回的例外狀況。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A>並<xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A>屬性的<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs>通常與此事件相關聯的物件表示資料錯誤發生所在之儲存格。 當外部資料來源中發生錯誤時，不過，在資料來源可能不提供發生錯誤的資料行。 在此情況下，<xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A>屬性通常會指出目前的儲存格的資料行在發生錯誤時。  
  
   
  
## Examples  
 下列程式碼範例示範<xref:System.Windows.Forms.DataGridView.DataError>事件處理常式。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewComboBoxColumn>類別概觀主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.DataGridView.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料來源中，<see cref="T:System.Windows.Forms.DataGridView" /> 會顯示資料之清單或資料表的名稱。</summary>
        <value>
          <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 中， <see cref="T:System.Windows.Forms.DataGridView" /> 會顯示資料之資料表或清單的名稱。 預設值為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繫結至資料來源包含多個清單或資料表時，此屬性相當實用。 您不需要設定此屬性，繫結至包含單一清單或資料表的資料來源時。 例如，您可以繫結<xref:System.Windows.Forms.DataGridView>控制對<xref:System.Data.DataSet>，而不需要設定此屬性包含單一資料表。 如果<xref:System.Data.DataSet>包含多個資料表，不過，您必須設定此屬性的其中一個資料表名稱。  
  
   
  
## Examples  
 下列程式碼範例說明這個屬性的常見用法。 在範例中，<xref:System.Windows.Forms.DataGridView>控制項，名為`customersDataGridView`繫結至<xref:System.Data.DataSet>名為`customersDataSet`。 這<xref:System.Data.DataSet>包含一個名為 「 客戶 」 資料表。 <xref:System.Windows.Forms.DataGridView.DataMember%2A>屬性設定為資料表的名稱。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#020](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#020)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#020](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#020)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">資料來源發生錯誤，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="T:System.Data.DataSet" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.DataMember" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.DataMemberChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.DataMemberChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#266](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#266)]
 [!code-vb[System.Windows.Forms.EventExamples#266](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#266)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.DataGridView.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 會為其顯示資料的資料來源。</summary>
        <value>包含要供 <see cref="T:System.Windows.Forms.DataGridView" /> 顯示之資料的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>類別支援標準的 Windows Form 資料繫結模型。 這表示資料來源可以是任何類型的實作下列介面的其中一個：  
  
-   <xref:System.Collections.IList>介面，包括一維陣列。  
  
-   <xref:System.ComponentModel.IListSource>介面，例如<xref:System.Data.DataTable>和<xref:System.Data.DataSet>類別。  
  
-   <xref:System.ComponentModel.IBindingList>介面，例如<xref:System.ComponentModel.BindingList%601>類別。  
  
-   <xref:System.ComponentModel.IBindingListView>介面，例如<xref:System.Windows.Forms.BindingSource>類別。  
  
 如需特定範例，請參閱範例 > 一節和工作表結尾的這一節。  
  
 一般而言，您會繫結，來<xref:System.Windows.Forms.BindingSource>元件，並繫結<xref:System.Windows.Forms.BindingSource>元件到另一個資料來源，或商務物件以進行擴展。 <xref:System.Windows.Forms.BindingSource>元件是慣用的資料來源，因為它可以繫結至各種資料來源，而且可以自動解決許多資料繫結的問題。  
  
 當繫結至資料來源包含多個清單或資料表，您必須設定<xref:System.Windows.Forms.DataGridView.DataMember%2A>屬性設為指定的清單或繫結資料表的字串。 當繫結至<xref:System.Windows.Forms.BindingSource>包含多個清單或資料表，不過的元件，您可以設定<xref:System.Windows.Forms.BindingSource.DataMember%2A>屬性<xref:System.Windows.Forms.BindingSource>元件改。  
  
 當繫結的物件集合，而不資料庫資料，您通常會設定<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>屬性所傳回的物件<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性設`null`而不是使用預設值<xref:System.DBNull.Value?displayProperty=nameWithType>，也就是適用於資料庫的資料。  
  
 如需詳細資訊，請參閱 <<c0> [ 顯示 Windows Form DataGridView 控制項中的資料](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)。 下表提供相關的一般工作的直接連結<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性。  
  
 請參閱[逐步解說： 建立主版/詳細表單使用兩個 Windows Form DataGridView 控制項](~/docs/framework/winforms/controls/creating-a-master-detail-form-using-two-datagridviews.md)並[如何： 將物件繫結至 Windows Forms DataGridView 控制項](~/docs/framework/winforms/controls/how-to-bind-objects-to-windows-forms-datagridview-controls.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化簡單資料繫結<xref:System.Windows.Forms.DataGridView>。 它也會示範如何設定<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性。  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">資料來源發生錯誤，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingListView" />
        <altmember cref="T:System.Windows.Forms.BindingSource" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b170b52a-2ebd-4948-ac2f-e52d494cebb2">在 Windows Form DataGridView 控制項中顯示資料</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.DataSourceChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.DataSourceChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#267](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#267)]
 [!code-vb[System.Windows.Forms.EventExamples#267](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#267)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 中的儲存格所要套用的預設儲存格樣式 (前提是未設定其他儲存格樣式屬性)。</summary>
        <value>要套用為預設樣式的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制項會顯示其使用由儲存格樣式的儲存格<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>屬性，從其他屬性的型別繼承樣式<xref:System.Windows.Forms.DataGridViewCellStyle>。 透過指定的樣式<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性會影響所有的儲存格以外時覆寫透過下列屬性指定的樣式：  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>  
  
 如需詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的儲存格樣式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
 取得這個屬性中，當<xref:System.Windows.Forms.DataGridViewCellStyle>與預設值會在建立屬性已不被存取。 取得這個屬性的多個資料列時，這會造成效能影響。 可能的話，使用單一<xref:System.Windows.Forms.DataGridViewCellStyle>設定此屬性的多個資料列。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyleChanged : EventHandler " Usage="member this.DefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何時，就會發生此事件的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性設定為新的值或當<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性設定為新<xref:System.Windows.Forms.DataGridViewCellStyle>具有至少一個屬性值不同於先前的儲存格樣式物件.  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#268](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#268)]
 [!code-vb[System.Windows.Forms.EventExamples#268](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#268)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.DataGridView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項的預設初始大小。</summary>
        <value>
          <see cref="T:System.Drawing.Size" />，表示控制項的初始大小 (寬 240 像素乘以高 150 像素)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValuesNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultValuesNeeded As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ DefaultValuesNeeded;" />
      <MemberSignature Language="F#" Value="member this.DefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.DefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者在資料列中輸入新記錄以便填入預設值時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件可讓您填入新資料錄的資料列，當使用者輸入的資料列。 初始資料列的值來自<xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A>的屬性<xref:System.Windows.Forms.DataGridViewCell>每個資料行所傳回<xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A>屬性。  
  
 在資料繫結模式中，所有儲存格的資料繫結的資料行儲存在外部資料來源的值。 當使用者輸入新資料錄的資料列時，新的資料列會在資料來源中，才能建立<xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded>就會發生事件。 當您填入<xref:System.Windows.Forms.DataGridViewRowEventArgs.Row%2A?displayProperty=nameWithType>屬性在事件處理常式中，值會直接新增至資料來源。  
  
 在虛擬模式中之後會發生此事件，,<xref:System.Windows.Forms.DataGridView.CellValuePushed>事件發生在新的資料列中的每個資料格，所以您可以在您的自訂資料存放區中儲存的預設值。 然後，<xref:System.Windows.Forms.DataGridView.CellValueNeeded>每個資料格在新的資料列，就會發生事件擷取的值儲存在<xref:System.Windows.Forms.DataGridView.CellValuePushed>事件，隨即顯示。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理此事件。 在範例中，指定資料行的資料格會填入預設值。 針對`CustomerID` 欄中，值會從另一個方法 （未實作），會產生獨特的客戶識別碼。  
  
 若要執行此範例中，請以實際的資料行物件的名稱取代資料行名稱<xref:System.Windows.Forms.DataGridView>控制，並提供適當的預設值。 當指定資料行名稱，您必須使用資料行物件，而不是資料行的標頭文字的名稱。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#120)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayedColumnCount">
      <MemberSignature Language="C#" Value="public int DisplayedColumnCount (bool includePartialColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DisplayedColumnCount(bool includePartialColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayedColumnCount (includePartialColumns As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DisplayedColumnCount(bool includePartialColumns);" />
      <MemberSignature Language="F#" Value="member this.DisplayedColumnCount : bool -&gt; int" Usage="dataGridView.DisplayedColumnCount includePartialColumns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePartialColumns" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePartialColumns">
          <see langword="true" /> 表示在顯示的資料行計數中加入部分資料行；否則為 <see langword="false" />。</param>
        <summary>傳回顯示給使用者的資料行數。</summary>
        <returns>顯示給使用者的資料行數。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayedRowCount">
      <MemberSignature Language="C#" Value="public int DisplayedRowCount (bool includePartialRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DisplayedRowCount(bool includePartialRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayedRowCount (includePartialRow As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DisplayedRowCount(bool includePartialRow);" />
      <MemberSignature Language="F#" Value="member this.DisplayedRowCount : bool -&gt; int" Usage="dataGridView.DisplayedRowCount includePartialRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePartialRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePartialRow">
          <see langword="true" /> 表示在顯示的資料列計數中加入部分資料列，否則為 <see langword="false" />。</param>
        <summary>傳回顯示給使用者的資料列數。</summary>
        <returns>顯示給使用者的資料列數。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridView.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得表示控制項顯示區域的矩形。</summary>
        <value>表示控制項顯示區的 <see cref="T:System.Drawing.Rectangle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.DisplayRectangle%2A>屬性會傳回用戶端矩形的顯示區域的控制項，不包括顯示任何捲軸所佔用的區域。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" />屬性在衍生類別中，使用基底類別的<see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" />擴充的基底實作的屬性。 或者，您必須提供所有的實作。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dataGridView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 <see cref="T:System.Windows.Forms.Control" /> 所使用的 Unmanaged 資源，以及其子系的控制項，並會選擇性地釋放一些 Managed 資源。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control EditingControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control EditingControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditingControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ EditingControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.DataGridView.EditingControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果具有編輯控制項的儲存格位於編輯模式下，則取得目前儲存格所裝載的控制項。</summary>
        <value>目前儲存格所裝載的 <see cref="T:System.Windows.Forms.Control" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果儲存格不是處於編輯模式，或資料格類型無法容納編輯控制項，這個屬性會傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性中的自訂儲存格類型的覆寫方法。 在範例中，編輯控制項的參考是擷取、 轉換成自訂的編輯控制項類型，和接著填入儲存格的目前值。  
  
 這個範例是提供之較大範例的一部分[如何： 在 Windows Forms DataGridView 儲存格中的主控制項](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#210)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingControlShowing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.EditingControlShowing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingControlShowing As DataGridViewEditingControlShowingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewEditingControlShowingEventHandler ^ EditingControlShowing;" />
      <MemberSignature Language="F#" Value="member this.EditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventHandler " Usage="member this.EditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewEditingControlShowingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>顯示編輯儲存格的控制項時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以處理這個事件，儲存格進入編輯模式時執行的編輯控制項的自訂初始化。 若要自訂控制項的顯示特性，設定所傳回的物件屬性<xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=nameWithType>屬性。 若要執行其他初始化，將值轉型的<xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=nameWithType>屬性設定為特定控制項類型，並直接存取的成員。 例如，您可以在其中處理<xref:System.Windows.Forms.DataGridView.EditingControlShowing>事件，以將事件處理常式附加至編輯控制項的事件。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>控制項一次裝載一個編輯控制項，並重複使用的編輯控制項，只要編輯之間都沒有變更的資料格類型。 將事件處理常式附加至編輯控制項中，當您因此必須採取一些預防措施以避免多次附加相同的處理常式。 若要避免這個問題，請從您將處理常式附加至事件前的事件移除處理常式。 這會讓重複資料刪除，如果處理常式已經附加到事件，但否則沒有任何作用。 如需詳細資訊，請參閱中的範例程式碼<xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>類別概觀。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理這個事件來變更<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>目前儲存格的屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，並確定<xref:System.Windows.Forms.DataGridView.EditingControlShowing>事件是事件處理常式相關聯。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#210)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingPanel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Panel EditingPanel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Panel EditingPanel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditingPanel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanel As Panel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Panel ^ EditingPanel { System::Windows::Forms::Panel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanel : System.Windows.Forms.Panel" Usage="System.Windows.Forms.DataGridView.EditingPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Panel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="P:System.Windows.Forms.DataGridView.EditingControl" /> 的面板。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Panel" />，其中包含 <see cref="P:System.Windows.Forms.DataGridView.EditingControl" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不同於<xref:System.Windows.Forms.DataGridView.EditingControl%2A>屬性，亦即`null`目前的儲存格不是處於編輯模式時<xref:System.Windows.Forms.DataGridView.EditingPanel%2A>屬性一律會是可用。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用<xref:System.Windows.Forms.DataGridView.EditingPanel%2A>屬性中的<xref:System.Windows.Forms.DataGridView>控制項處於編輯模式時，以視覺化方式區分的儲存格。 在此範例中，<xref:System.Windows.Forms.Panel.BorderStyle%2A>的儲存格的編輯面板設<xref:System.Windows.Forms.BorderStyle.Fixed3D>。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#069](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#069)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#069](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#069)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="EditMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewEditMode EditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewEditMode EditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditMode As DataGridViewEditMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewEditMode EditMode { System::Windows::Forms::DataGridViewEditMode get(); void set(System::Windows::Forms::DataGridViewEditMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditMode : System.Windows.Forms.DataGridViewEditMode with get, set" Usage="System.Windows.Forms.DataGridView.EditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewEditMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示要如何開始編輯儲存格。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.DataGridViewEditMode" /> 值。 預設值為 <see cref="F:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有<xref:System.Windows.Forms.DataGridViewEditMode>值除了<xref:System.Windows.Forms.DataGridViewEditMode.EditProgrammatically>也允許使用者按兩下儲存格，以開始編輯它。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化簡單資料繫結<xref:System.Windows.Forms.DataGridView>。 它也會示範如何設定<xref:System.Windows.Forms.DataGridView.EditMode%2A>屬性。  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewEditMode" /> 值。</exception>
        <exception cref="T:System.Exception">設定這個屬性時所指定的值會讓控制項進入編輯模式，但編輯儲存格值的初始設定失敗，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="EditModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EditModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EditModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.EditModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EditModeChanged;" />
      <MemberSignature Language="F#" Value="member this.EditModeChanged : EventHandler " Usage="member this.EditModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.EditMode" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.EditModeChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.EditModeChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#269](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#269)]
 [!code-vb[System.Windows.Forms.EventExamples#269](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#269)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableHeadersVisualStyles">
      <MemberSignature Language="C#" Value="public bool EnableHeadersVisualStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHeadersVisualStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHeadersVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHeadersVisualStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHeadersVisualStyles : bool with get, set" Usage="System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出已針對應用程式啟用視覺化樣式時，資料列和資料行行首是否使用使用者的目前佈景主題的視覺化樣式。</summary>
        <value>如果已為標頭啟用視覺化樣式，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以為您的應用程式啟用視覺化樣式，藉由呼叫<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>方法之前呼叫<xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType>方法。 如果<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>設定為`true`，以外的所有標頭資料格<xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>來塗繪，使用目前的佈景主題。  
  
   
  
## Examples  
 下列程式碼範例示範如何停用視覺化樣式的資料列和資料行中的標頭啟用視覺化樣式的應用程式。 在此範例中，視覺化樣式已啟用應用程式藉由呼叫<xref:System.Windows.Forms.Application.EnableVisualStyles%2A>方法中的`Main`。 不過，視覺化樣式會套用至資料列和資料行的標頭因為<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>設為`false`。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle>類別。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="Overload:System.Windows.Forms.Application.Run" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndEdit">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>認可及結束目前儲存格上的編輯作業。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; bool" Usage="dataGridView.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>認可及結束使用預設錯誤內容的目前儲存格上的編輯作業。</summary>
        <returns>如果已經認可並結束編輯作業，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Windows.Forms.DataGridView.EndEdit%2A>多載，傳入的位元組合<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Parsing>和<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>值。  
  
 這個方法會引發<xref:System.Windows.Forms.DataGridView.CellEndEdit>事件。  
  
 這個方法可能會導致例外狀況如果錯誤不會處理與<xref:System.Windows.Forms.DataGridView.DataError>事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">無法認可儲存格值，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <altmember cref="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndEdit(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit (context As DataGridViewDataErrorContexts) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndEdit(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; bool" Usage="dataGridView.EndEdit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的位元 (Bitwise) 組合，指定可能發生錯誤的內容。</param>
        <summary>認可及結束使用指定錯誤內容的目前儲存格上的編輯作業。</summary>
        <returns>如果已經認可並結束編輯作業，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會引發<xref:System.Windows.Forms.DataGridView.CellEndEdit>事件。  
  
 這個方法可能會導致例外狀況如果錯誤不會處理與<xref:System.Windows.Forms.DataGridView.DataError>事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">無法認可儲存格值，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell FirstDisplayedCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell FirstDisplayedCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedCell" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedCell As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ FirstDisplayedCell { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedCell : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定目前顯示在 <see cref="T:System.Windows.Forms.DataGridView" /> 中的第一個儲存格；這個儲存格通常位於左上角。</summary>
        <value>目前顯示在控制項中的第一個 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來判斷哪一個儲存格是在第一個資料列和目前顯示在控制項中的資料行。 一般而言，這是在左上角，但對於從右至左的語言，它位於右上角。 您也可以設定這個屬性，以將控制項捲動至指定的資料格。  
  
   
  
## Examples  
 下列程式碼範例說明如何確保完成排序之後，目前的儲存格為可見。 此程式碼僅適用於未繫結<xref:System.Windows.Forms.DataGridView>控制項。 使用<xref:System.Windows.Forms.DataGridView>控制項繫結至外部資料來源，目前儲存格不會自動保存排序時。  
  
 若要執行此範例中，將下列程式碼貼到表單，其中包含<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`。 在 C# 中，您也必須連接<xref:System.Windows.Forms.DataGridView.Sorted>事件處理常式的事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定這個屬性時，指定的儲存格不在 <see cref="T:System.Windows.Forms.DataGridView" /> 中。</exception>
        <exception cref="T:System.InvalidOperationException">設定這個屬性時，指定儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> 或 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 屬性值為 -1，表示它是標題儲存格或共用的儲存格。  
  
-或- 
設定這個屬性時，指定儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /> 屬性值為 <see langword="false" />。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingColumnHiddenWidth">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingColumnHiddenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstDisplayedScrollingColumnHiddenWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingColumnHiddenWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingColumnHiddenWidth : int" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前捲動到檢視範圍之外的資料行部分的寬度。</summary>
        <value>捲動到檢視範圍之外的資料行部分的寬度。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingColumnIndex">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingColumnIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedScrollingColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingColumnIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingColumnIndex : int with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在 <see cref="T:System.Windows.Forms.DataGridView" /> 上之第一個資料行的索引。</summary>
        <value>顯示在 <see cref="T:System.Windows.Forms.DataGridView" /> 上之第一個資料行的索引。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定這個屬性時所指定的值小於 0 或大於控制項中的資料行數目減 1。</exception>
        <exception cref="T:System.InvalidOperationException">設定這個屬性時所指定的值表示具有 <see langword="false" /> 之 <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /> 屬性值的資料行。  
  
-或- 
設定這個屬性時所指定的值表示具有 <see langword="true" /> 之 <see cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" /> 屬性值的資料行。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingRowIndex">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedScrollingRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingRowIndex : int with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在 <see cref="T:System.Windows.Forms.DataGridView" /> 上之第一個資料列的索引。</summary>
        <value>顯示在 <see cref="T:System.Windows.Forms.DataGridView" /> 上之第一個資料列的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定這個屬性會引發<xref:System.Windows.Forms.DataGridView.Scroll>事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">當屬性值設定為小於 0 或大於控制項中的資料列數目減 1 時的指定值。</exception>
        <exception cref="T:System.InvalidOperationException">設定這個屬性會表示具有 <see langword="false" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> 屬性值之資料列時的指定值。  
  
-或- 
設定這個屬性時所指定的值表示具有 <see langword="true" /> 之 <see cref="P:System.Windows.Forms.DataGridViewRow.Frozen" /> 屬性值的資料行。</exception>
        <altmember cref="E:System.Windows.Forms.DataGridView.Scroll" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataGridView.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 顯示的文字字型。</summary>
        <value>要套用至控制項顯示之文字的 <see cref="T:System.Drawing.Font" />。 預設值為 <see cref="P:System.Windows.Forms.Control.DefaultFont" /> 屬性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.Font%2A>屬性是環境的屬性。 環境屬性是控制項屬性，如果未設定，將擷取從父控制項。 例如，<xref:System.Windows.Forms.Button>具有相同<xref:System.Windows.Forms.Control.BackColor%2A>做為其父系<xref:System.Windows.Forms.Form>預設。 如需有關環境屬性的詳細資訊，請參閱<xref:System.Windows.Forms.AmbientProperties>類別或<xref:System.Windows.Forms.Control>類別概觀。  
  
 因為<xref:System.Drawing.Font>不可變 （表示您無法調整其任一屬性），您只能指派<xref:System.Windows.Forms.Control.Font%2A>新的屬性<xref:System.Drawing.Font>物件。 不過，您可以根據現有的字型為新字型。  
  
 <xref:System.Windows.Forms.DataGridView>控制項使用的值<xref:System.Windows.Forms.DataGridView.Font%2A>屬性的預設值為<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回的物件<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>，和<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>屬性。 變更<xref:System.Windows.Forms.DataGridView.Font%2A>值會自動更新<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>，和<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>屬性，變更任何繼承值的資料格的字型。 根據預設，標頭資料格覆寫的值，您可以覆寫特定資料列、 資料行和資料格的值。 如需有關儲存格樣式繼承的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的儲存格樣式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性。 這個範例是提供之較大範例的一部分[如何： 建立未繫結的 Windows Forms DataGridView 控制項](~/docs/framework/winforms/controls/how-to-create-an-unbound-windows-forms-datagridview-control.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/CS/simpleunbound.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/VB/simpleunbound.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Font" />
        <altmember cref="T:System.Drawing.Font" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在 <see cref="P:System.Windows.Forms.DataGridView.Font" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.FontChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.FontChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#271](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#271)]
 [!code-vb[System.Windows.Forms.EventExamples#271](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#271)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Font" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 的前景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示 <see cref="T:System.Windows.Forms.DataGridView" /> 的前景色彩。 預設值為 <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> 屬性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ForeColor%2A>屬性是環境的屬性。 環境屬性是控制項屬性，如果未設定，將擷取從父控制項。 例如，<xref:System.Windows.Forms.Button>具有相同<xref:System.Windows.Forms.Control.BackColor%2A>做為其父系<xref:System.Windows.Forms.Form>預設。 如需有關環境屬性的詳細資訊，請參閱<xref:System.Windows.Forms.AmbientProperties>類別或<xref:System.Windows.Forms.Control>類別概觀。  
  
 因為<xref:System.Drawing.Font>不可變 （表示您無法調整其任一屬性），您只能指派<xref:System.Windows.Forms.Control.Font%2A>新的屬性<xref:System.Drawing.Font>物件。 不過，您可以根據現有的字型為新字型。  
  
 <xref:System.Windows.Forms.DataGridView>控制項使用的值<xref:System.Windows.Forms.DataGridView.ForeColor%2A>屬性的預設值為<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性。 變更<xref:System.Windows.Forms.DataGridView.ForeColor%2A>值會自動更新<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性，變更任何繼承值的資料格的前景文字色彩。 根據預設，標頭資料格覆寫的值，您可以覆寫特定資料列、 資料行和資料格的值。 如需有關儲存格樣式繼承的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的儲存格樣式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在 <see cref="P:System.Windows.Forms.DataGridView.ForeColor" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ForeColorChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ForeColorChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#270](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#270)]
 [!code-vb[System.Windows.Forms.EventExamples#270](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#270)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityObjectById">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject GetAccessibilityObjectById(int32 objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAccessibilityObjectById (objectId As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ GetAccessibilityObjectById(int objectId);" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridView.GetAccessibilityObjectById objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectId">
          <see langword="Int32" />，識別要擷取的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</param>
        <summary>擷取指定的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
        <returns>指定的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellCount">
      <MemberSignature Language="C#" Value="public int GetCellCount (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellCount(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellCount (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellCount(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetCellCount : System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridView.GetCellCount includeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">
          <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 值的位元 (Bitwise) 組合，可指定所要計數的儲存格。</param>
        <summary>取得滿足提供的篩選條件的儲存格數目。</summary>
        <returns>符合 <paramref name="includeFilter" /> 參數的儲存格數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可用來判斷特定狀態中的資料格數目。 若要擷取選取的資料格數目，例如，使用這個方法搭配<xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType>值。 這是通常更有效率，比使用<xref:System.Windows.Forms.DataGridView.SelectedCells%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個方法來判斷是否有任何在選取的資料格<xref:System.Windows.Forms.DataGridView>控制項。 在此範例中，如果未選取任何資料格，其值透過擷取<xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A>方法並顯示在<xref:System.Windows.Forms.TextBox>控制項。  
  
 此程式碼是用法的剪貼簿功能之較大範例的一部分<xref:System.Windows.Forms.DataGridView>控制項。 這個範例是提供之較大範例的一部分[如何： 讓使用者複製多個儲存格至剪貼簿] 從 [Windows Form DataGridView 控制項](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#16)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> 包含 <see cref="F:System.Windows.Forms.DataGridViewElementStates.ResizableSet" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="GetCellDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCellDisplayRectangle (int columnIndex, int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCellDisplayRectangle(int32 columnIndex, int32 rowIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellDisplayRectangle (columnIndex As Integer, rowIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetCellDisplayRectangle(int columnIndex, int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetCellDisplayRectangle : int * int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetCellDisplayRectangle (columnIndex, rowIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">所需儲存格的資料行索引。</param>
        <param name="rowIndex">所需儲存格的資料列索引。</param>
        <param name="cutOverflow">
          <see langword="true" /> 表示只傳回儲存格的顯示部分，而 <see langword="false" /> 表示傳回整個儲存格界限。</param>
        <summary>傳回表示儲存格的顯示區域的矩形。</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" />，表示儲存格的顯示矩形。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回整個儲存格範圍或僅顯示的部分。 若要取得儲存格界限內容，使用的儲存格<xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 小於 -1，或大於控制項中的資料行數目減 1。  
  
-或- 
 <paramref name="rowIndex" /> 小於 -1，或大於控制項中的資料列數目減 1。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="GetClipboardContent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataObject GetClipboardContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataObject GetClipboardContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetClipboardContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClipboardContent () As DataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataObject ^ GetClipboardContent();" />
      <MemberSignature Language="F#" Value="abstract member GetClipboardContent : unit -&gt; System.Windows.Forms.DataObject&#xA;override this.GetClipboardContent : unit -&gt; System.Windows.Forms.DataObject" Usage="dataGridView.GetClipboardContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取格式化的值，該值表示要複製到 <see cref="T:System.Windows.Forms.Clipboard" /> 之選定儲存格的內容。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataObject" />，表示選定儲存格的內容。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會擷取表示所選取的儲存格所定義之區域的資料。 此區域是包含所有選取的資料格的最小矩形。 在此區域中每個所選儲存格的值會擷取藉由呼叫<xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType>方法。 未選取的資料格，在此區域中，會使用空白預留位置值。 這個方法會結合這些值插入<xref:System.Windows.Forms.DataObject>包含數種格式複製到剪貼簿。 支援的剪貼簿格式包括<xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType>， <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType>， <xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType>，和<xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType>。  
  
 如需詳細資訊，請參閱 <xref:System.Windows.Forms.Clipboard> 類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何以程式設計方式加入 選取<xref:System.Windows.Forms.DataGridView>內容到剪貼簿。 這個範例是提供之較大範例的一部分[如何： 讓使用者複製多個儲存格至剪貼簿] 從 [Windows Form DataGridView 控制項](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" /> 設定為 <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.Disable" />。</exception>
        <block subset="none" type="overrides">
          <para>覆寫這個方法，以提供自訂剪貼簿 的值。 這是很有用，比方說，為了支援從自訂的資料格類型複製值。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="GetColumnDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetColumnDisplayRectangle (int columnIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetColumnDisplayRectangle(int32 columnIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnDisplayRectangle (columnIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetColumnDisplayRectangle(int columnIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetColumnDisplayRectangle : int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetColumnDisplayRectangle (columnIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">所需儲存格的資料行索引。</param>
        <param name="cutOverflow">
          <see langword="true" /> 表示傳回 <see cref="T:System.Windows.Forms.DataGridView" /> 範圍內可見的資料行矩形，<see langword="false" /> 則表示傳回整個資料行矩形。</param>
        <summary>傳回表示資料行的顯示區域的矩形，這是由資料行索引所決定。</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" />，表示資料行的顯示矩形。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 不在 0 到資料行數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="GetRowDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetRowDisplayRectangle (int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetRowDisplayRectangle(int32 rowIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowDisplayRectangle (rowIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetRowDisplayRectangle(int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetRowDisplayRectangle : int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetRowDisplayRectangle (rowIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">所需儲存格的資料列索引。</param>
        <param name="cutOverflow">
          <see langword="true" /> 表示傳回 <see cref="T:System.Windows.Forms.DataGridView" /> 範圍內可見的資料列矩形，<see langword="false" /> 則表示傳回整個資料列矩形。</param>
        <summary>傳回表示資料列的顯示區域的矩形，這是由資料列索引所決定。</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" />，表示資料列的顯示矩形。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 不在 0 到資料列數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="GridColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GridColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color GridColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.GridColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color GridColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.GridColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.GridColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定區隔 <see cref="T:System.Windows.Forms.DataGridView" /> 儲存格的格線色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 或 <see cref="T:System.Drawing.SystemColors" />，表示格線色彩。 預設值為 <see cref="F:System.Drawing.KnownColor.ControlDarkDark" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以設定<xref:System.Windows.Forms.DataGridView.GridColor%2A>屬性至任何色彩的時機使用單一框線; 與其他類型的框線，作業系統所指定的色彩。 如果啟用視覺化樣式的應用程式，透過<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>方法，<xref:System.Windows.Forms.DataGridView.GridColor%2A>屬性會被忽略，並會使用目前的佈景主題色彩。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.GridColor%2A>， <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>， <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>， <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>，以及<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性。 此外，在程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定這個屬性時所指定的值是 <see cref="F:System.Drawing.Color.Empty" />。  
  
-或- 
設定這個屬性時所指定之值的 <see cref="P:System.Drawing.Color.A" /> 屬性值小於 255。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="GridColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler GridColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GridColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.GridColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GridColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GridColorChanged;" />
      <MemberSignature Language="F#" Value="member this.GridColorChanged : EventHandler " Usage="member this.GridColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.GridColor" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.GridColorChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.GridColorChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#272](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#272)]
 [!code-vb[System.Windows.Forms.EventExamples#272](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#272)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView.HitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridView/HitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As DataGridView.HitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataGridView::HitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.DataGridView.HitTestInfo" Usage="dataGridView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">x 座標。</param>
        <param name="y">y 座標。</param>
        <summary>在給定 x 和 y 座標的情況下傳回位置資訊，例如，資料列和資料行的索引。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridView.HitTestInfo" />，包含位置資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法來判斷哪一個部分<xref:System.Windows.Forms.DataGridView>控制項位於指定的座標。 比方說，您可以呼叫這個方法 — 指定點選滑鼠座標，來判斷已按下 儲存格，或是否按下的標頭資料格或捲軸列的資料列和資料行索引。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個方法。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.Columns%2A>屬性參考主題。  
  
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView.HitTestInfo" />
        <altmember cref="T:System.Windows.Forms.DataGridViewHitTestType" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar HorizontalScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar HorizontalScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.HorizontalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HorizontalScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ HorizontalScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGridView.HorizontalScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項的水平捲軸。</summary>
        <value>表示水平捲軸的 <see cref="T:System.Windows.Forms.ScrollBar" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollingOffset">
      <MemberSignature Language="C#" Value="public int HorizontalScrollingOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalScrollingOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HorizontalScrollingOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollingOffset : int with get, set" Usage="System.Windows.Forms.DataGridView.HorizontalScrollingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項要水平捲動的像素數。</summary>
        <value>控制項要水平捲動的像素數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例說明如何使用這個屬性。 這個範例是提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定這個屬性時所指定的值小於 0。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvalidateCell">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使 <see cref="T:System.Windows.Forms.DataGridView" /> 中的儲存格失效，以強制重新繪製該儲存格。</summary>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvalidateCell">
      <MemberSignature Language="C#" Value="public void InvalidateCell (System.Windows.Forms.DataGridViewCell dataGridViewCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateCell(class System.Windows.Forms.DataGridViewCell dataGridViewCell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateCell(System::Windows::Forms::DataGridViewCell ^ dataGridViewCell);" />
      <MemberSignature Language="F#" Value="member this.InvalidateCell : System.Windows.Forms.DataGridViewCell -&gt; unit" Usage="dataGridView.InvalidateCell dataGridViewCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCell">要使其失效的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</param>
        <summary>使 <see cref="T:System.Windows.Forms.DataGridView" /> 的指定儲存格失效，以強制重新繪製該儲存格。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是以強制重新繪製儲存格，通常不會造成重新繪製儲存格的情況很有用。 例如，您可以使用這個方法會變更其外觀，因為外部事件的自訂儲存格類型。  
  
 如需繪製和失效的詳細資訊，請參閱<xref:System.Windows.Forms.Control.Invalidate%2A>。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個方法中自訂<xref:System.Windows.Forms.DataGridViewCell>，當滑鼠指標停留在其上繪製有自訂框線。 在範例中，當滑鼠指標進入或離開其失效之儲存格。  
  
 此程式碼是中提供之較大範例的一部分[如何： 自訂資料格和擴充其行為和外觀的 Windows Form DataGridView 控制項中的資料行](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewCell" /> 不屬於 <see cref="T:System.Windows.Forms.DataGridView" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewCell" /> 為 <see langword="null" />。</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCell">
      <MemberSignature Language="C#" Value="public void InvalidateCell (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateCell(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateCell (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateCell(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateCell : int * int -&gt; unit" Usage="dataGridView.InvalidateCell (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">失效的儲存格之資料行索引。</param>
        <param name="rowIndex">要使其失效之儲存格的資料列索引。</param>
        <summary>讓具有指定資料列和資料行索引的儲存格失效，強制重新繪製它。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是以強制重新繪製儲存格，通常不會造成重新繪製儲存格的情況很有用。 例如，您可以使用這個方法會變更其外觀，因為外部事件的自訂儲存格類型。  
  
 如需繪製和失效的詳細資訊，請參閱<xref:System.Windows.Forms.Control.Invalidate%2A>。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個方法中的使用者將滑鼠指標置於它時的儲存格的外觀會變更的自訂儲存格類型。 這個範例是提供之較大範例的一部分[如何： 自訂資料格和擴充其行為和外觀的 Windows Form DataGridView 控制項中的資料行](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 小於 -1，或大於控制項中的資料行數目減 1。  
  
-或- 
 <paramref name="rowIndex" /> 小於 -1，或大於控制項中的資料列數目減 1。</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateColumn">
      <MemberSignature Language="C#" Value="public void InvalidateColumn (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateColumn(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateColumn (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateColumn(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateColumn : int -&gt; unit" Usage="dataGridView.InvalidateColumn columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">要使其失效之資料行的索引。</param>
        <summary>使 <see cref="T:System.Windows.Forms.DataGridView" /> 的指定資料行失效，以強制重新繪製該資料行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需繪製和失效的詳細資訊，請參閱<xref:System.Windows.Forms.Control.Invalidate%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 不在 0 到資料行數目減 1 的有效範圍內。</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateRow">
      <MemberSignature Language="C#" Value="public void InvalidateRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateRow : int -&gt; unit" Usage="dataGridView.InvalidateRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">失效的資料列之索引。</param>
        <summary>使 <see cref="T:System.Windows.Forms.DataGridView" /> 的指定資料列失效，以強制重新繪製該資料列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要強制重新繪製它自己的資料列中使用這個方法。 這個方法是在哪裡處理主控描繪案例中有用<xref:System.Windows.Forms.DataGridView.RowPrePaint>或<xref:System.Windows.Forms.DataGridView.RowPostPaint>事件。  
  
 如需繪製和失效的詳細資訊，請參閱<xref:System.Windows.Forms.Control.Invalidate%2A>。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用<xref:System.Windows.Forms.DataGridView.InvalidateRow%2A>在資料列繪製的案例中的方法。 在範例中，資料列已經失效的目前儲存格變更時，強制重新繪製它自己的資料列。  
  
 此程式碼是中提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 不在 0 到資料列數目減 1 的有效範圍內。</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCellDirty">
      <MemberSignature Language="C#" Value="public bool IsCurrentCellDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentCellDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentCellDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentCellDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentCellDirty : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentCellDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前的儲存格是否有未認可的變更。</summary>
        <value>如果目前的儲存格有未經認可的變更，則為 <see langword="true" />；否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DataGridView>未繫結至資料，儲存格編輯視為已認可時使用者移到另一個資料格。  
  
 如果資料列標頭可見，鉛筆圖像 （glyph） 是包含具有未認可的變更的資料格的資料列有標頭中。  
  
 如果<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>已`true`目前的儲存格的裝載編輯控制項，您可以擷取透過<xref:System.Windows.Forms.DataGridView.EditingControl%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>屬性來判斷是否要認可儲存格值，並引發<xref:System.Windows.Forms.DataGridView.CellValueChanged>事件的處理常式從<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged>事件。 此程式碼範例是中提供之較大範例的一部分[如何： 在 Windows Form DataGridView 控制項按鈕資料行中的 停用按鈕](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCellInEditMode">
      <MemberSignature Language="C#" Value="public bool IsCurrentCellInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentCellInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentCellInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentCellInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentCellInEditMode : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前是否正在編輯現用儲存格。</summary>
        <value>如果正在編輯目前的儲存格，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.DataGridViewCheckBoxCell>具有焦點永遠處於編輯模式。 如果目前的儲存格的裝載編輯控制項和<xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A>已`true`，您可以擷取透過編輯控制項<xref:System.Windows.Forms.DataGridView.EditingControl%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>參考主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentRowDirty">
      <MemberSignature Language="C#" Value="public bool IsCurrentRowDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentRowDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentRowDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentRowDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentRowDirty : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentRowDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前的資料列是否有未認可的變更。</summary>
        <value>如果目前的資料列有未經認可的變更，則為 <see langword="true" />；否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會傳回`true`鉛筆圖像 （glyph） 的資料列中顯示時。 根據預設，<xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A>屬性會一律等於值<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>屬性，除非<xref:System.Windows.Forms.DataGridView>繫結至資料來源，已實作支援編輯或虛擬模式下使用資料列層級的認可範圍。 在這些情況下，<xref:System.Windows.Forms.DataGridView>將評估此資料列層級的屬性。  
  
 當使用者瀏覽離開資料列中時，控制項就會認可所有資料列變更。 使用者也可以按 CTRL + ENTER 認可資料列變更，而不需要離開資料列。 若要以程式設計方式認可資料列變更，請呼叫表單的<xref:System.Windows.Forms.ContainerControl.Validate%2A>方法。 如果您的資料來源<xref:System.Windows.Forms.BindingSource>，您也可以呼叫<xref:System.Windows.Forms.BindingSource.EndEdit%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected override bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.IsInputChar : char -&gt; bool" Usage="dataGridView.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">要測試的字元。</param>
        <summary>判斷字元是否為 <see cref="T:System.Windows.Forms.DataGridView" /> 所辨認的輸入字元。</summary>
        <returns>如果能將該字元辨認為輸入字元，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字元辨識為根據的控制項是否處於編輯模式，和目前的編輯控制項是否可以接受字元的輸入字元。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">其中一個 <see cref="T:System.Windows.Forms.Keys" /> 值。</param>
        <summary>判斷指定的按鍵是標準輸入按鍵或需要前置處理的特殊按鍵。</summary>
        <returns>如果指定的按鍵是標準輸入按鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>提供索引子以取得或設定位於指定資料列和資料行交集處的儲存格。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[int columnIndex, int rowIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer, rowIndex As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[int, int] { System::Windows::Forms::DataGridViewCell ^ get(int columnIndex, int rowIndex); void set(int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">包含儲存格的資料行之索引。</param>
        <param name="rowIndex">包含儲存格的資料列之索引。</param>
        <summary>提供索引子以取得或設定位於具有指定索引之資料行和資料列交集處的儲存格。</summary>
        <value>位於指定位置處的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個索引子是存取的儲存格至替代<xref:System.Windows.Forms.DataGridViewRow.Cells%2A>的集合<xref:System.Windows.Forms.DataGridView.Rows%2A>集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個索引子。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#230)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 小於 0，或大於控制項中的資料行數目減 1。  
  
-或- 
 <paramref name="rowIndex" /> 小於 0，或大於控制項中的資料列數目減 1。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[string columnName, int rowIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(string, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String, rowIndex As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[System::String ^, int] { System::Windows::Forms::DataGridViewCell ^ get(System::String ^ columnName, int rowIndex); void set(System::String ^ columnName, int rowIndex, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnName">包含儲存格的資料行名稱。</param>
        <param name="rowIndex">包含儲存格的資料列之索引。</param>
        <summary>提供索引子以取得或設定位於具有指定索引的資料列以及具有指定名稱的資料行二者交集處的儲存格。</summary>
        <value>位於指定位置處的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個索引子是存取的儲存格至替代<xref:System.Windows.Forms.DataGridViewRow.Cells%2A>的集合<xref:System.Windows.Forms.DataGridView.Rows%2A>集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個索引子。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#230)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#230)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.DataGridView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否允許使用者同時選取一個以上的 <see cref="T:System.Windows.Forms.DataGridView" /> 儲存格、資料列或資料行。</summary>
        <value>如果使用者可以同時選取一個以上的儲存格、資料列或資料行，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性設定為`true`中, 可選取多個項目 （資料格、 資料列或資料行）<xref:System.Windows.Forms.DataGridView>控制項。 若要選取多個項目，使用者可以按住 CTRL 鍵同時按一下來選取項目。 按一下以選取的第一個項目，然後按住 SHIFT 鍵，按一下以選取的最後一個項目，可以選取連續的項目。 選取範圍根據<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性。 例如，如果<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>設為<xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType>，使用者可以選取多個資料行。  
  
 您可以使用<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性，以允許使用者選取多個項目中的<xref:System.Windows.Forms.DataGridView>控制項，並對所有選取的項目執行作業。 例如，使用者可以選取多個資料格，然後以滑鼠右鍵按一下選取的儲存格，以顯示捷徑功能表，顯示一組選取的資料格上執行的工作。  
  
 若要判斷哪一個資料格、 資料列或資料行中選取<xref:System.Windows.Forms.DataGridView>控制項，您可以存取<xref:System.Windows.Forms.DataGridView.SelectedCells%2A>， <xref:System.Windows.Forms.DataGridView.SelectedRows%2A>，或<xref:System.Windows.Forms.DataGridView.SelectedColumns%2A>屬性。 若要判斷選取的資料格數目，請呼叫<xref:System.Windows.Forms.DataGridView.GetCellCount%2A>方法的引數值<xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType>。 使用<xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A>方法來擷取選取的資料列的數目和<xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A>方法來擷取資料行數目。 這些方法會比直接存取集合，使用大量資料時更有效率。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiSelectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultiSelectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultiSelectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.MultiSelectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultiSelectChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultiSelectChanged;" />
      <MemberSignature Language="F#" Value="member this.MultiSelectChanged : EventHandler " Usage="member this.MultiSelectChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.MultiSelect" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.MultiSelectChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.MultiSelectChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#273](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#273)]
 [!code-vb[System.Windows.Forms.EventExamples#273](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#273)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="NewRowIndex">
      <MemberSignature Language="C#" Value="public int NewRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NewRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.NewRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NewRowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NewRowIndex : int" Usage="System.Windows.Forms.DataGridView.NewRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得新記錄的資料列之索引。</summary>
        <value>新記錄之資料列的索引；如果 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> 為 <see langword="false" />，則為 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除非<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>是`false`，這個屬性的值等於資料列數目減 1 控制項中。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="NewRowNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.NewRowNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NewRowNeeded As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ NewRowNeeded;" />
      <MemberSignature Language="F#" Value="member this.NewRowNeeded : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.NewRowNeeded : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 的 <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 屬性為 <see langword="true" />，且使用者巡覽至 <see cref="T:System.Windows.Forms.DataGridView" /> 底端的新資料列時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DataGridView>是在虛擬模式中，此事件可讓在新的資料列的資料存放區中建立新的項目，而且它也允許資料列填入預設值。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Windows.Forms.DataGridView.NewRowNeeded>事件來追蹤新的資料列在新增時，在邏輯<xref:System.Windows.Forms.DataGridView.CellValueNeeded>事件處理常式可以初始化為初始值的新資料列的資料格。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>參考主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="NotifyCurrentCellDirty">
      <MemberSignature Language="C#" Value="public virtual void NotifyCurrentCellDirty (bool dirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyCurrentCellDirty(bool dirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyCurrentCellDirty (dirty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyCurrentCellDirty(bool dirty);" />
      <MemberSignature Language="F#" Value="abstract member NotifyCurrentCellDirty : bool -&gt; unit&#xA;override this.NotifyCurrentCellDirty : bool -&gt; unit" Usage="dataGridView.NotifyCurrentCellDirty dirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dirty">
          <see langword="true" /> 表示儲存格有未經認可的變更；否則為 <see langword="false" />。</param>
        <summary>通知 <see cref="T:System.Windows.Forms.DataGridView" /> 目前的儲存格有未認可的變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可用來允許通知的自訂儲存格類型<xref:System.Windows.Forms.DataGridView>當有未認可的變更。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用自訂的資料格的案例中，這個方法。 在範例中，<xref:System.Windows.Forms.IDataGridViewEditingControl>實作衍生自<xref:System.Windows.Forms.DateTimePicker>類別會覆寫<xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A>方法，並使用<xref:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty%2A>方法，以表示變更<xref:System.Windows.Forms.DataGridView>控制項。  
  
 這個範例屬於較大的範例所示[如何： 在 Windows Forms DataGridView 儲存格中的主控制項](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#310](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#310)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#310](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#310)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToAddRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToAddRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToAddRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToAddRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToAddRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToAddRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToAddRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToAddRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToDeleteRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToDeleteRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToDeleteRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToDeleteRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToDeleteRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToDeleteRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToDeleteRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToDeleteRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToOrderColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToOrderColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToOrderColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToOrderColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToOrderColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToOrderColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToOrderColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToOrderColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToResizeColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToResizeColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToResizeColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToResizeColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToResizeColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToResizeColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToResizeColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToResizeColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToResizeRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToResizeRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToResizeRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToResizeRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToResizeRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToResizeRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToResizeRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToResizeRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAlternatingRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAlternatingRowsDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAlternatingRowsDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAlternatingRowsDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAlternatingRowsDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAlternatingRowsDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnAlternatingRowsDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAlternatingRowsDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoGenerateColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoGenerateColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoGenerateColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoGenerateColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoGenerateColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoGenerateColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAutoGenerateColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAutoGenerateColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeColumnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeColumnModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeColumnModeChanged(class System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeColumnModeChanged (e As DataGridViewAutoSizeColumnModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeColumnModeChanged(System::Windows::Forms::DataGridViewAutoSizeColumnModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeColumnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column" /> 屬性值為 null。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeColumnsModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeColumnsModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeColumnsModeChanged(class System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeColumnsModeChanged (e As DataGridViewAutoSizeColumnsModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeColumnsModeChanged(System::Windows::Forms::DataGridViewAutoSizeColumnsModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeColumnsModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /> 屬性值是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /> 屬性所傳回的陣列中項目數不等於控制項中的資料行數目。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeRowsModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeRowsModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeRowsModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeRowsModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeRowsModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeRowsModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBackgroundColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnBackgroundColorChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnBindingContextChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.BorderStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnBorderStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCancelRowEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelRowEdit (System.Windows.Forms.QuestionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelRowEdit(class System.Windows.Forms.QuestionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelRowEdit (e As QuestionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelRowEdit(System::Windows::Forms::QuestionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelRowEdit : System.Windows.Forms.QuestionEventArgs -&gt; unit&#xA;override this.OnCancelRowEdit : System.Windows.Forms.QuestionEventArgs -&gt; unit" Usage="dataGridView.OnCancelRowEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QuestionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.QuestionEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CancelRowEdit" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCancelRowEdit%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellBeginEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCellBeginEdit (System.Windows.Forms.DataGridViewCellCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellBeginEdit(class System.Windows.Forms.DataGridViewCellCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellBeginEdit (e As DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellBeginEdit(System::Windows::Forms::DataGridViewCellCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit&#xA;override this.OnCellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit" Usage="dataGridView.OnCellBeginEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellBeginEdit%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnCellBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCellBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContentClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContentClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContentClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContentClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContentClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含內容被按一下之儲存格的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellContentClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContentDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContentDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContentDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContentDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContentDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContextMenuStripChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContextMenuStripChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContextMenuStripChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContextMenuStripChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContextMenuStripNeeded (System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContextMenuStripNeeded(class System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContextMenuStripNeeded (e As DataGridViewCellContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContextMenuStripNeeded(System::Windows::Forms::DataGridViewCellContextMenuStripNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs -&gt; unit&#xA;override this.OnCellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellContextMenuStripNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellEndEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEndEdit (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEndEdit(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellEndEdit (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellEndEdit(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellEndEdit : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellEndEdit : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellEndEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellEndEdit" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellEndEdit%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellEnter" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellEnter%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellErrorTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellErrorTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellErrorTextChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellErrorTextChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellErrorTextChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellErrorTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellErrorTextChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值小於 -1 或大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值小於 -1 或大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellErrorTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellErrorTextNeeded (System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellErrorTextNeeded(class System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellErrorTextNeeded (e As DataGridViewCellErrorTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellErrorTextNeeded(System::Windows::Forms::DataGridViewCellErrorTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs -&gt; unit&#xA;override this.OnCellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellErrorTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellFormatting">
      <MemberSignature Language="C#" Value="protected virtual void OnCellFormatting (System.Windows.Forms.DataGridViewCellFormattingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellFormatting(class System.Windows.Forms.DataGridViewCellFormattingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellFormatting (e As DataGridViewCellFormattingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellFormatting(System::Windows::Forms::DataGridViewCellFormattingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventArgs -&gt; unit&#xA;override this.OnCellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventArgs -&gt; unit" Usage="dataGridView.OnCellFormatting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellFormatting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellFormatting%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnCellLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellLeave" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellLeave%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellMouseClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，按兩下資料格將儲存格置於編輯模式。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellMouseDown" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellMouseEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellMouseLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellMouseMove" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellMouseUp" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellPainting">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCellPainting (System.Windows.Forms.DataGridViewCellPaintingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCellPainting(class System.Windows.Forms.DataGridViewCellPaintingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCellPainting (e As DataGridViewCellPaintingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCellPainting(System::Windows::Forms::DataGridViewCellPaintingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellPainting : System.Windows.Forms.DataGridViewCellPaintingEventArgs -&gt; unit&#xA;override this.OnCellPainting : System.Windows.Forms.DataGridViewCellPaintingEventArgs -&gt; unit" Usage="dataGridView.OnCellPainting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellPaintingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellPainting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellPainting%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellParsing">
      <MemberSignature Language="C#" Value="protected virtual void OnCellParsing (System.Windows.Forms.DataGridViewCellParsingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellParsing(class System.Windows.Forms.DataGridViewCellParsingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellParsing (e As DataGridViewCellParsingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellParsing(System::Windows::Forms::DataGridViewCellParsingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellParsing : System.Windows.Forms.DataGridViewCellParsingEventArgs -&gt; unit&#xA;override this.OnCellParsing : System.Windows.Forms.DataGridViewCellParsingEventArgs -&gt; unit" Usage="dataGridView.OnCellParsing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellParsingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellParsing%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStateChanged (System.Windows.Forms.DataGridViewCellStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStateChanged(class System.Windows.Forms.DataGridViewCellStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStateChanged (e As DataGridViewCellStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStateChanged(System::Windows::Forms::DataGridViewCellStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventArgs -&gt; unit&#xA;override this.OnCellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnCellStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellStateChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellStateChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStyleChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStyleChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStyleChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStyleChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStyleChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellStyleChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStyleContentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStyleContentChanged (System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStyleContentChanged(class System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStyleContentChanged (e As DataGridViewCellStyleContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStyleContentChanged(System::Windows::Forms::DataGridViewCellStyleContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs -&gt; unit&#xA;override this.OnCellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs -&gt; unit" Usage="dataGridView.OnCellStyleContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellStyleContentChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellToolTipTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellToolTipTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellToolTipTextChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellToolTipTextChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellToolTipTextChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellToolTipTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含儲存格的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellToolTipTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellToolTipTextNeeded (System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellToolTipTextNeeded(class System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellToolTipTextNeeded (e As DataGridViewCellToolTipTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellToolTipTextNeeded(System::Windows::Forms::DataGridViewCellToolTipTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs -&gt; unit&#xA;override this.OnCellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellToolTipTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValidated (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValidated(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValidated (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValidated(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellValidated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValidated%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValidating (System.Windows.Forms.DataGridViewCellValidatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValidating(class System.Windows.Forms.DataGridViewCellValidatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValidating (e As DataGridViewCellValidatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValidating(System::Windows::Forms::DataGridViewCellValidatingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValidating : System.Windows.Forms.DataGridViewCellValidatingEventArgs -&gt; unit&#xA;override this.OnCellValidating : System.Windows.Forms.DataGridViewCellValidatingEventArgs -&gt; unit" Usage="dataGridView.OnCellValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellValidating" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValidating%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValueChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValueChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValueChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValueChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValueChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellValueChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellValueChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValueChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 屬性值大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 屬性值大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValueNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValueNeeded (System.Windows.Forms.DataGridViewCellValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValueNeeded(class System.Windows.Forms.DataGridViewCellValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValueNeeded (e As DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValueNeeded(System::Windows::Forms::DataGridViewCellValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit&#xA;override this.OnCellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit" Usage="dataGridView.OnCellValueNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValueNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /> 屬性值小於零或大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /> 屬性值小於零或大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValuePushed">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValuePushed (System.Windows.Forms.DataGridViewCellValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValuePushed(class System.Windows.Forms.DataGridViewCellValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValuePushed (e As DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValuePushed(System::Windows::Forms::DataGridViewCellValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValuePushed : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit&#xA;override this.OnCellValuePushed : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit" Usage="dataGridView.OnCellValuePushed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CellValuePushed" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValuePushed%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /> 屬性值小於零或大於控制項中的資料行數目減一。  
  
-或- 
<paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /> 屬性值小於零或大於控制項中的資料列數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnAdded (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnAdded(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnAdded (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnAdded(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnAdded : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnAdded : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnAdded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnAdded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnContextMenuStripChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnContextMenuStripChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnContextMenuStripChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnContextMenuStripChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDataPropertyNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDataPropertyNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDataPropertyNameChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDataPropertyNameChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDataPropertyNameChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDataPropertyNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDefaultCellStyleChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDefaultCellStyleChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDefaultCellStyleChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDefaultCellStyleChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDisplayIndexChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDisplayIndexChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDisplayIndexChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDisplayIndexChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDisplayIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDividerDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDividerDoubleClick (System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDividerDoubleClick(class System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDividerDoubleClick (e As DataGridViewColumnDividerDoubleClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDividerDoubleClick(System::Windows::Forms::DataGridViewColumnDividerDoubleClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs -&gt; unit&#xA;override this.OnColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs -&gt; unit" Usage="dataGridView.OnColumnDividerDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDividerWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDividerWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDividerWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDividerWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDividerWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDividerWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderCellChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderCellChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderCellChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderCellChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 屬性值小於零或大於控制項中的資料行數目減一。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含儲存格和滑鼠指標位置的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersHeightChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersHeightChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersHeightChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersHeightChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersHeightChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersHeightChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersHeightSizeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersHeightSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersHeightSizeModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersHeightSizeModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersHeightSizeModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersHeightSizeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnMinimumWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnMinimumWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnMinimumWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnMinimumWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnMinimumWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnMinimumWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnNameChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnNameChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnNameChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnNameChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnNameChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnRemoved (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnRemoved(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnRemoved (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnRemoved(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnRemoved : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnRemoved : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnRemoved" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnRemoved%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnSortModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnSortModeChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnSortModeChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnSortModeChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnSortModeChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnSortModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnSortModeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnStateChanged (System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnStateChanged(class System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnStateChanged (e As DataGridViewColumnStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnStateChanged(System::Windows::Forms::DataGridViewColumnStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventArgs -&gt; unit&#xA;override this.OnColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnColumnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnStateChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">資料行從唯讀變更成讀/寫，讓目前的儲存格進入編輯模式，但是目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性並未指出衍生自 <see cref="T:System.Windows.Forms.Control" />  的類別及實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnToolTipTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnToolTipTextChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnToolTipTextChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnToolTipTextChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnToolTipTextChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnToolTipTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含資料行的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnWidthChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 屬性所表示的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCurrentCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCurrentCellChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellDirtyStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellDirtyStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellDirtyStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellDirtyStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellDirtyStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellDirtyStateChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellDirtyStateChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCurrentCellDirtyStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected override void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCursorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>如果在使用者程式碼中變更游標，則引發 <see cref="E:System.Windows.Forms.Control.CursorChanged" /> 事件，並更新 <see cref="P:System.Windows.Forms.DataGridView.UserSetCursor" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制項變更<xref:System.Windows.Forms.Control.Cursor%2A>根據的滑鼠指標位置的屬性值。 <xref:System.Windows.Forms.DataGridView.UserSetCursor%2A>屬性會儲存的一般值<xref:System.Windows.Forms.Control.Cursor%2A>屬性並略過控制項的變更。 這個方法時，會呼叫<xref:System.Windows.Forms.Control.CursorChanged>就會發生事件，並更新<xref:System.Windows.Forms.DataGridView.UserSetCursor%2A>屬性，如有必要，除了叫用任何事件處理常式。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnCursorChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.DataGridView.UserSetCursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <altmember cref="E:System.Windows.Forms.Control.CursorChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindingComplete (System.Windows.Forms.DataGridViewBindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindingComplete(class System.Windows.Forms.DataGridViewBindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindingComplete (e As DataGridViewBindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindingComplete(System::Windows::Forms::DataGridViewBindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventArgs -&gt; unit&#xA;override this.OnDataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventArgs -&gt; unit" Usage="dataGridView.OnDataBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在資料變更時，就會發生繫結作業時<xref:System.Windows.Forms.CurrencyManager>正在使用中。 例如，如果<xref:System.Windows.Forms.CurrencyManager.ListChanged>事件發生時，<xref:System.Windows.Forms.DataGridView>會更新它的檢視，並引發<xref:System.Windows.Forms.DataGridView.DataBindingComplete>事件完成時。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (bool displayErrorDialogIfNoHandler, System.Windows.Forms.DataGridViewDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(bool displayErrorDialogIfNoHandler, class System.Windows.Forms.DataGridViewDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (displayErrorDialogIfNoHandler As Boolean, e As DataGridViewDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(bool displayErrorDialogIfNoHandler, System::Windows::Forms::DataGridViewDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : bool * System.Windows.Forms.DataGridViewDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : bool * System.Windows.Forms.DataGridViewDataErrorEventArgs -&gt; unit" Usage="dataGridView.OnDataError (displayErrorDialogIfNoHandler, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayErrorDialogIfNoHandler" Type="System.Boolean" />
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="displayErrorDialogIfNoHandler">
          <see langword="true" /> 表示如果沒有 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件的處理常式，則顯示錯誤對話方塊。</param>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnDataError%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.DataMemberChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnDataMemberChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.DataSourceChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnDataSourceChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultValuesNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultValuesNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultValuesNeeded(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultValuesNeeded (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultValuesNeeded(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnDefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnDefaultValuesNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDoubleClick : EventArgs -&gt; unit" Usage="dataGridView.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.DoubleClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnDoubleClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEditingControlShowing">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingControlShowing (System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingControlShowing(class System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingControlShowing (e As DataGridViewEditingControlShowingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingControlShowing(System::Windows::Forms::DataGridViewEditingControlShowingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventArgs -&gt; unit&#xA;override this.OnEditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventArgs -&gt; unit" Usage="dataGridView.OnEditingControlShowing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />，其中包含編輯控制項的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.EditingControlShowing" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnEditingControlShowing%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEditModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditModeChanged : EventArgs -&gt; unit&#xA;override this.OnEditModeChanged : EventArgs -&gt; unit" Usage="dataGridView.OnEditModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.EditModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.EditModeChanged>就會引發事件時<xref:System.Windows.Forms.DataGridView.EditMode%2A>屬性變更。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnEditModeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">進入編輯模式時，目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 的類別。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="dataGridView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="dataGridView.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.Enter" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnEnter%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">這個控制項設定成在收到焦點時進入編輯模式，但在進入焦點時，目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個控制項設定成在收到焦點時進入編輯模式，但編輯儲存格值的初始設定失敗，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="dataGridView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.FontChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除了引發<xref:System.Windows.Forms.DataGridView.FontChanged>事件，這個方法會使用新的值<xref:System.Windows.Forms.DataGridView.Font%2A>屬性來更新<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回的物件<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>，和<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>屬性。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnFontChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ForeColorChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除了引發<xref:System.Windows.Forms.DataGridView.FontChanged>事件，這個方法會使用新的值<xref:System.Windows.Forms.DataGridView.ForeColor%2A>屬性來更新<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnForeColorChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="dataGridView.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.GotFocus" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGridColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGridColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGridColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGridColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGridColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGridColorChanged : EventArgs -&gt; unit&#xA;override this.OnGridColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnGridColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.GridColorChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnGridColorChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="dataGridView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnHandleCreated%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="dataGridView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGridView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.KeyEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnKeyDown%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">這個動作可能會讓控制項進入編輯模式，但編輯儲存格值的初始設定失敗，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="dataGridView.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.KeyPressEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnKeyPress%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGridView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.KeyEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnKeyUp%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="dataGridView.OnLayout e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.LayoutEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnLayout%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLeave : EventArgs -&gt; unit" Usage="dataGridView.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.Leave" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnLeave%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="dataGridView.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.LostFocus" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.MouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.MouseClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個方法。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">這個控制項設定成在收到焦點時進入編輯模式，但編輯儲存格值的初始設定失敗，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.MouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.MouseDown" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseDown%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">這個控制項設定成在收到焦點時進入編輯模式，但編輯儲存格值的初始設定失敗，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="dataGridView.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="dataGridView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.MouseLeave" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseLeave%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個方法。 這個範例是提供之較大範例的一部分[如何： 自訂資料格和擴充其行為和外觀的 Windows Form DataGridView 控制項中的資料行](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.MouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.MouseMove" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseMove%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.MouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.MouseUp" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseUp%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.MouseEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.MouseWheel" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMultiSelectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultiSelectChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultiSelectChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultiSelectChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultiSelectChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultiSelectChanged : EventArgs -&gt; unit&#xA;override this.OnMultiSelectChanged : EventArgs -&gt; unit" Usage="dataGridView.OnMultiSelectChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.MultiSelectChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnMultiSelectChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnNewRowNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnNewRowNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewRowNeeded(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewRowNeeded (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewRowNeeded(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNewRowNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnNewRowNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnNewRowNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.NewRowNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnNewRowNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="dataGridView.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.PaintEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.Paint" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnPaint%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">在這個方法期間發生的任何例外狀況都會忽略，除非是下列其中一種： 
-   <see cref="T:System.NullReferenceException" />  
  
-   <see cref="T:System.StackOverflowException" />  
  
-   <see cref="T:System.OutOfMemoryException" />  
  
-   <see cref="T:System.Threading.ThreadAbortException" />  
  
-   <see cref="T:System.ExecutionEngineException" />  
  
-   <see cref="T:System.IndexOutOfRangeException" />  
  
-   <see cref="T:System.AccessViolationException" /></exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="dataGridView.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnReadOnlyChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">控制項從唯讀變更成讀/寫，讓目前的儲存格進入編輯模式，但是目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性並未指出衍生自 <see cref="T:System.Windows.Forms.Control" />  的類別及實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="dataGridView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.Resize" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnResize%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowContextMenuStripChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowContextMenuStripChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowContextMenuStripChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowContextMenuStripChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowContextMenuStripNeeded (System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowContextMenuStripNeeded(class System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowContextMenuStripNeeded (e As DataGridViewRowContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowContextMenuStripNeeded(System::Windows::Forms::DataGridViewRowContextMenuStripNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs -&gt; unit&#xA;override this.OnRowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowContextMenuStripNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDefaultCellStyleChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDefaultCellStyleChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDefaultCellStyleChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDefaultCellStyleChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDirtyStateNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDirtyStateNeeded (System.Windows.Forms.QuestionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDirtyStateNeeded(class System.Windows.Forms.QuestionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDirtyStateNeeded (e As QuestionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDirtyStateNeeded(System::Windows::Forms::QuestionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDirtyStateNeeded : System.Windows.Forms.QuestionEventArgs -&gt; unit&#xA;override this.OnRowDirtyStateNeeded : System.Windows.Forms.QuestionEventArgs -&gt; unit" Usage="dataGridView.OnRowDirtyStateNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QuestionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.QuestionEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDividerDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDividerDoubleClick (System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDividerDoubleClick(class System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDividerDoubleClick (e As DataGridViewRowDividerDoubleClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDividerDoubleClick(System::Windows::Forms::DataGridViewRowDividerDoubleClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs -&gt; unit&#xA;override this.OnRowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs -&gt; unit" Usage="dataGridView.OnRowDividerDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDividerHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDividerHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDividerHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDividerHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDividerHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowDividerHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowEnter" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowEnter%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowErrorTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowErrorTextChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowErrorTextChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowErrorTextChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowErrorTextChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowErrorTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowErrorTextChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowErrorTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowErrorTextNeeded (System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowErrorTextNeeded(class System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowErrorTextNeeded (e As DataGridViewRowErrorTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowErrorTextNeeded(System::Windows::Forms::DataGridViewRowErrorTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs -&gt; unit&#xA;override this.OnRowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowErrorTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderCellChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderCellChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderCellChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderCellChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnRowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含滑鼠以及被按一下之標頭儲存格的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnRowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />，其中包含滑鼠和被按兩下之標頭儲存格的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersWidthChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersWidthChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersWidthChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersWidthChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersWidthChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersWidthChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersWidthSizeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersWidthSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersWidthSizeModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersWidthSizeModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersWidthSizeModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnRowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersWidthSizeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeightChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeightChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightInfoNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightInfoNeeded (System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightInfoNeeded(class System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightInfoNeeded (e As DataGridViewRowHeightInfoNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightInfoNeeded(System::Windows::Forms::DataGridViewRowHeightInfoNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs -&gt; unit&#xA;override this.OnRowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightInfoNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightInfoPushed">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightInfoPushed (System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightInfoPushed(class System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightInfoPushed (e As DataGridViewRowHeightInfoPushedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightInfoPushed(System::Windows::Forms::DataGridViewRowHeightInfoPushedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs -&gt; unit&#xA;override this.OnRowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightInfoPushed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnRowLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowLeave" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowLeave%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowMinimumHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowMinimumHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowMinimumHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowMinimumHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowMinimumHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowMinimumHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowPostPaint">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRowPostPaint (System.Windows.Forms.DataGridViewRowPostPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowPostPaint(class System.Windows.Forms.DataGridViewRowPostPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRowPostPaint (e As DataGridViewRowPostPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRowPostPaint(System::Windows::Forms::DataGridViewRowPostPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventArgs -&gt; unit&#xA;override this.OnRowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventArgs -&gt; unit" Usage="dataGridView.OnRowPostPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowPostPaint" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowPostPaint%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowPrePaint">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRowPrePaint (System.Windows.Forms.DataGridViewRowPrePaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowPrePaint(class System.Windows.Forms.DataGridViewRowPrePaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRowPrePaint (e As DataGridViewRowPrePaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRowPrePaint(System::Windows::Forms::DataGridViewRowPrePaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventArgs -&gt; unit&#xA;override this.OnRowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventArgs -&gt; unit" Usage="dataGridView.OnRowPrePaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowPrePaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowPrePaint" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowPrePaint%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsAdded (System.Windows.Forms.DataGridViewRowsAddedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsAdded(class System.Windows.Forms.DataGridViewRowsAddedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsAdded (e As DataGridViewRowsAddedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsAdded(System::Windows::Forms::DataGridViewRowsAddedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventArgs -&gt; unit&#xA;override this.OnRowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventArgs -&gt; unit" Usage="dataGridView.OnRowsAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowsAddedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" />，其中包含加入之資料列的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowsAdded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowsAdded%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowsDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowsDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsRemoved (System.Windows.Forms.DataGridViewRowsRemovedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsRemoved(class System.Windows.Forms.DataGridViewRowsRemovedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsRemoved (e As DataGridViewRowsRemovedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsRemoved(System::Windows::Forms::DataGridViewRowsRemovedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventArgs -&gt; unit&#xA;override this.OnRowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventArgs -&gt; unit" Usage="dataGridView.OnRowsRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />，其中包含刪除之資料列的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowsRemoved" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowsRemoved%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowStateChanged (int rowIndex, System.Windows.Forms.DataGridViewRowStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowStateChanged(int32 rowIndex, class System.Windows.Forms.DataGridViewRowStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowStateChanged (rowIndex As Integer, e As DataGridViewRowStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowStateChanged(int rowIndex, System::Windows::Forms::DataGridViewRowStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowStateChanged : int * System.Windows.Forms.DataGridViewRowStateChangedEventArgs -&gt; unit&#xA;override this.OnRowStateChanged : int * System.Windows.Forms.DataGridViewRowStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnRowStateChanged (rowIndex, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowIndex">變更狀態的資料列之索引。</param>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowStateChangedEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowStateChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowStateChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">資料列從唯讀變更成讀/寫，讓目前的儲存格進入編輯模式，但是目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性並未指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別及實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUnshared">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUnshared (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUnshared(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUnshared (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUnshared(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUnshared : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowUnshared : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowUnshared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowUnshared" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowUnshared%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowValidated (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowValidated(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowValidated (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowValidated(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowValidated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowValidated%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowValidating (System.Windows.Forms.DataGridViewCellCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowValidating(class System.Windows.Forms.DataGridViewCellCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowValidating (e As DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowValidating(System::Windows::Forms::DataGridViewCellCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowValidating : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit&#xA;override this.OnRowValidating : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit" Usage="dataGridView.OnRowValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowValidating%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnScroll (System.Windows.Forms.ScrollEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScroll(class System.Windows.Forms.ScrollEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnScroll (e As ScrollEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnScroll(System::Windows::Forms::ScrollEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit&#xA;override this.OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit" Usage="dataGridView.OnScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.ScrollEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.Scroll" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnScroll%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="dataGridView.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" />，包含事件的相關資訊。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.SelectionChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnSelectionChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSortCompare">
      <MemberSignature Language="C#" Value="protected virtual void OnSortCompare (System.Windows.Forms.DataGridViewSortCompareEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSortCompare(class System.Windows.Forms.DataGridViewSortCompareEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSortCompare (e As DataGridViewSortCompareEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSortCompare(System::Windows::Forms::DataGridViewSortCompareEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSortCompare : System.Windows.Forms.DataGridViewSortCompareEventArgs -&gt; unit&#xA;override this.OnSortCompare : System.Windows.Forms.DataGridViewSortCompareEventArgs -&gt; unit" Usage="dataGridView.OnSortCompare e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewSortCompareEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.SortCompare" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnSortCompare%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSorted : EventArgs -&gt; unit&#xA;override this.OnSorted : EventArgs -&gt; unit" Usage="dataGridView.OnSorted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.Sorted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnSorted%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserAddedRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserAddedRow (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserAddedRow(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserAddedRow (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserAddedRow(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserAddedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnUserAddedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnUserAddedRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.UserAddedRow" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnUserAddedRow%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 的 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 屬性所指出的資料列不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserDeletedRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserDeletedRow (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserDeletedRow(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserDeletedRow (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserDeletedRow(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserDeletedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnUserDeletedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnUserDeletedRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.UserDeletedRow" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnUserDeletedRow%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserDeletingRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserDeletingRow (System.Windows.Forms.DataGridViewRowCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserDeletingRow(class System.Windows.Forms.DataGridViewRowCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserDeletingRow (e As DataGridViewRowCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserDeletingRow(System::Windows::Forms::DataGridViewRowCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventArgs -&gt; unit&#xA;override this.OnUserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventArgs -&gt; unit" Usage="dataGridView.OnUserDeletingRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DataGridViewRowCancelEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.DataGridView.UserDeletingRow" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnUserDeletingRow%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="dataGridView.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.ComponentModel.CancelEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.Validating" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除了引發<xref:System.Windows.Forms.Control.Validating>事件，這個方法會結束目前的儲存格編輯，並驗證的儲存格和資料列的值。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.DataGridView.OnValidating%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">驗證失敗，<see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式，或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.DataGridView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性與這個控制項無關。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Padding" /> 執行個體。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性與這個控制項無關。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.Padding" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.Padding%2A>屬性不是與這個控制項，但您可以將其值變更，並藉由處理這個事件來回應這類變更。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Padding" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="PaintBackground">
      <MemberSignature Language="C#" Value="protected virtual void PaintBackground (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle gridBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintBackground(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle gridBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintBackground(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle gridBounds);" />
      <MemberSignature Language="F#" Value="abstract member PaintBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit&#xA;override this.PaintBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit" Usage="dataGridView.PaintBackground (graphics, clipBounds, gridBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="gridBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">用來繪製背景的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="clipBounds">
          <see cref="T:System.Drawing.Rectangle" />，表示需要繪製的 <see cref="T:System.Windows.Forms.DataGridView" /> 區域。</param>
        <param name="gridBounds">
          <see cref="T:System.Drawing.Rectangle" />，表示描繪儲存格的區域。</param>
        <summary>繪製 <see cref="T:System.Windows.Forms.DataGridView" /> 的背景。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `clipBounds`參數表示的區域<xref:System.Windows.Forms.DataGridView>，需要重新繪製。 例如，如果使用者涵蓋整個<xref:System.Windows.Forms.DataGridView>另一個視窗，然後能夠抓出它，然後`clipBounds`代表整個<xref:System.Windows.Forms.DataGridView>。 如果使用者涵蓋的範圍縮小<xref:System.Windows.Forms.DataGridView>，然後發現，`clipBounds`表示所涵蓋的範圍縮小。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessAKey">
      <MemberSignature Language="C#" Value="protected bool ProcessAKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessAKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessAKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessAKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessAKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessAKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 A 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回`true`當使用者按下 CTRL + A 和<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性是`true`。 根據預設，這會選取所有儲存格控制項中。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDataGridViewKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDataGridViewKey (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDataGridViewKey(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDataGridViewKey (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDataGridViewKey(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDataGridViewKey : System.Windows.Forms.KeyEventArgs -&gt; bool&#xA;override this.ProcessDataGridViewKey : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGridView.ProcessDataGridViewKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含所按下的按鍵之相關資訊。</param>
        <summary>處理用來在 <see cref="T:System.Windows.Forms.DataGridView" /> 中巡覽的按鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫的金鑰處理方法適用於按鍵 (例如<xref:System.Windows.Forms.DataGridView.ProcessF2Key%2A>方法在按下 F2 時)，並傳回該方法的傳回值。  
  
   
  
## Examples  
 下列程式碼範例示範如何變更在 ENTER 鍵行為<xref:System.Windows.Forms.DataGridView>藉由覆寫子類別<xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A>和<xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A>方法。 在範例中，ENTER 鍵會具有相同的行為，向右箭號的索引鍵，方便使用者無法編輯資料的單一資料列中的多個資料格。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">按下按鍵會讓控制項進入編輯模式，但目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性未指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 的類別。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。  
  
-或- 
DELETE 鍵可能會刪除一或多個資料列，但是資料來源中的錯誤會阻止這個刪除，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>當覆寫此方法時，應該會傳回控制項<see langword="true" />指出它已處理的索引鍵。 對於不會處理控制項的索引鍵，會傳回這個方法的基底版本的結果。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDeleteKey">
      <MemberSignature Language="C#" Value="protected bool ProcessDeleteKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessDeleteKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessDeleteKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessDeleteKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessDeleteKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDeleteKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 DELETE 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回`true`當使用者按下刪除 以刪除控制項中的資料列。 使用者可以刪除資料列，如果<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性設定為<xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect>或<xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect>並<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性設定為`true`。 如果<xref:System.Windows.Forms.DataGridView>繫結至資料<xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType>資料來源的屬性也必須設定為`true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">DELETE 鍵可能會刪除一或多個資料列，但是資料來源中的錯誤會阻止這個刪除，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理用來控制對話方塊的按鍵，例如 TAB、ESCAPE、ENTER 和方向鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處於編輯模式，來處理不會處理裝載之編輯控制項的鍵盤輸入，會呼叫這個方法。  
  
 如果按鍵被判定為不是輸入的按鍵，便會傳送要處理的基底類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何變更在 ENTER 鍵行為<xref:System.Windows.Forms.DataGridView>藉由覆寫子類別<xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A>和<xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A>方法。 在範例中，ENTER 鍵會具有相同的行為，向右箭號的索引鍵，方便使用者無法編輯資料的單一資料列中的多個資料格。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">按下按鍵會讓控制項進入編輯模式，但目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性未指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 的類別。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">所有 windows 和使用者事件在按下 TAB 鍵時使用。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 權限的值：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <block subset="none" type="overrides">
          <para>當覆寫此方法時，應該會傳回控制項<see langword="true" />指出它已處理的索引鍵。 對於不會處理控制項的索引鍵，會傳回這個方法的基底版本的結果。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDownKey">
      <MemberSignature Language="C#" Value="protected bool ProcessDownKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessDownKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessDownKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessDownKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessDownKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDownKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理向下鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">向下鍵會讓控制項進入編輯模式，但新的目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEndKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEndKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEndKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEndKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEndKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEndKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEndKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 END 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">END 鍵會讓控制項進入編輯模式，但新的目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEnterKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEnterKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEnterKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEnterKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEnterKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEnterKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEnterKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 ENTER 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">ENTER 鍵會讓控制項進入編輯模式，但新的目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEscapeKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEscapeKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEscapeKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEscapeKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEscapeKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEscapeKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEscapeKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 ESC 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessF2Key">
      <MemberSignature Language="C#" Value="protected bool ProcessF2Key (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessF2Key(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessF2Key (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessF2Key(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessF2Key : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessF2Key keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 F2 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">F2 鍵會讓控制項進入編輯模式，但目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性未指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 的類別。</exception>
        <exception cref="T:System.Exception">F2 鍵可能導致此控制項進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessF3Key">
      <MemberSignature Language="C#" Value="protected bool ProcessF3Key (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessF3Key(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessF3Key (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessF3Key(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessF3Key : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessF3Key keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">值的位元組合，表示要處理的按鍵。</param>
        <summary>排序目前的資料行，以處理 F3 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessHomeKey">
      <MemberSignature Language="C#" Value="protected bool ProcessHomeKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessHomeKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessHomeKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessHomeKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessHomeKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessHomeKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">按下的按鍵。</param>
        <summary>處理 HOME 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">HOME 鍵會讓控制項進入編輯模式，但新的目前儲存格 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並會實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessInsertKey">
      <MemberSignature Language="C#" Value="protected bool ProcessInsertKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessInsertKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessInsertKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessInsertKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessInsertKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessInsertKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">其中一個 <see cref="T:System.Windows.Forms.Keys" /> 值，表示要處理的按鍵。</param>
        <summary>處理 INSERT 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyEventArgs :  -&gt; bool" Usage="dataGridView.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">由參考所傳遞的 <see cref="T:System.Windows.Forms.Message" />，代表要處理的視窗訊息。</param>
        <summary>處理按鍵訊息，並產生適當的控制項事件。</summary>
        <returns>如果訊息已經過處理，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A?displayProperty=nameWithType>基底類別的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">按下按鍵會讓控制項進入編輯模式，但目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性未指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 的類別。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>當覆寫此方法時，應該會傳回控制項<see langword="true" />指出它已處理訊息。 對於不會處理控制項的訊息，傳回這個方法的基底版本的結果。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview :  -&gt; bool" Usage="dataGridView.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">由參考所傳遞的 <see cref="T:System.Windows.Forms.Message" />，代表要處理的視窗訊息。</param>
        <summary>預覽鍵盤訊息。</summary>
        <returns>如果訊息已經過處理，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Forms.Control.ProcessKeyPreview%2A?displayProperty=nameWithType>基底類別的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">按下按鍵會讓控制項進入編輯模式，但目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性未指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 的類別。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>當覆寫此方法時，應該會傳回控制項<see langword="true" />指出它已處理訊息。 對於不會處理控制項的訊息，傳回這個方法的基底版本的結果。</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessLeftKey">
      <MemberSignature Language="C#" Value="protected bool ProcessLeftKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessLeftKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessLeftKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessLeftKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessLeftKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessLeftKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理向左鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">向左鍵會讓控制項進入編輯模式，但新的目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessNextKey">
      <MemberSignature Language="C#" Value="protected bool ProcessNextKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessNextKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessNextKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessNextKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessNextKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessNextKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 PAGE DOWN 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">PAGE DOWN 鍵會讓控制項進入編輯模式，但新的目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessPriorKey">
      <MemberSignature Language="C#" Value="protected bool ProcessPriorKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessPriorKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessPriorKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessPriorKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessPriorKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessPriorKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 PAGE UP 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">PAGE UP 鍵會讓控制項進入編輯模式，但新的目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別，並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessRightKey">
      <MemberSignature Language="C#" Value="protected bool ProcessRightKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessRightKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessRightKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessRightKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessRightKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessRightKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理向右鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何變更在 ENTER 鍵行為<xref:System.Windows.Forms.DataGridView>藉由覆寫子類別<xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A>和<xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A>方法。 在範例中，ENTER 鍵會具有相同的行為，向右箭號的索引鍵，方便使用者無法編輯資料的單一資料列中的多個資料格。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">向右鍵會讓控制項進入編輯模式，但新的目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessSpaceKey">
      <MemberSignature Language="C#" Value="protected bool ProcessSpaceKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessSpaceKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessSpaceKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessSpaceKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessSpaceKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessSpaceKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">其中一個 <see cref="T:System.Windows.Forms.Keys" /> 值，表示要處理的按鍵。</param>
        <summary>處理空格鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected bool ProcessTabKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessTabKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessTabKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessTabKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessTabKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessTabKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 TAB 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">TAB 鍵會讓控制項進入編輯模式，但目前之新儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">使用所有視窗和使用者事件。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessUpKey">
      <MemberSignature Language="C#" Value="protected bool ProcessUpKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessUpKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessUpKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessUpKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessUpKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessUpKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理向上鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">向上鍵會讓控制項進入編輯模式，但新的目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性不會指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 的類別並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />。</exception>
        <exception cref="T:System.Exception">這個動作會認可儲存格值或進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessZeroKey">
      <MemberSignature Language="C#" Value="protected bool ProcessZeroKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessZeroKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessZeroKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessZeroKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessZeroKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessZeroKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 值的位元 (Bitwise) 組合，表示要處理的按鍵。</param>
        <summary>處理 0 鍵。</summary>
        <returns>如果已處理按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">0 鍵會讓控制項進入編輯模式，但目前儲存格的 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性未指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 的類別。</exception>
        <exception cref="T:System.Exception">這個動作可能導致此控制項進入編輯模式，但是資料來源中的錯誤會阻止這個動作，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridView.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出使用者是否可以編輯 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的儲存格。</summary>
        <value>如果使用者不能編輯 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的儲存格，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 儲存格為唯讀如果的值<xref:System.Windows.Forms.DataGridView.ReadOnly%2A>屬性是`true`儲存格、 儲存格的資料列儲存格的資料行，或<xref:System.Windows.Forms.DataGridView>。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當設定這個屬性為 <see langword="true" />、目前的儲存格處於編輯模式，以及目前的儲存格包含無法認可的變更時所指定的值。</exception>
        <exception cref="T:System.Exception">設定這個屬性時所指定的值會讓控制項進入編輯模式，但編輯儲存格值的初始設定失敗，而且 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件沒有處理常式或處理常式已將 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 屬性設定為 <see langword="true" />。 例外狀況物件通常可轉換成 <see cref="T:System.FormatException" /> 類型。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.ReadOnly" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.ReadOnlyChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.ReadOnlyChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#274](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#274)]
 [!code-vb[System.Windows.Forms.EventExamples#274](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#274)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RefreshEdit">
      <MemberSignature Language="C#" Value="public bool RefreshEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RefreshEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.RefreshEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RefreshEdit();" />
      <MemberSignature Language="F#" Value="member this.RefreshEdit : unit -&gt; bool" Usage="dataGridView.RefreshEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存格在編輯模式下時，使用基礎儲存格值重新整理目前儲存格的值，並捨棄先前的任何值。</summary>
        <returns>如果成功，則為 <see langword="true" />；如果發生 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件，則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法，以強制更新在編輯模式中的顯示值的資料格。 當外部處理序會修改儲存格的值，而且您想要的變更，使用者甚至變更時通知使用者指定遺失如此一來，這非常有用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public override void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetText();" />
      <MemberSignature Language="F#" Value="override this.ResetText : unit -&gt; unit" Usage="dataGridView.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="P:System.Windows.Forms.DataGridView.Text" /> 屬性重設為其預設值 (<see cref="F:System.String.Empty" />)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然這個方法的行為如所述，<xref:System.Windows.Forms.DataGridView.Text%2A>屬性對這個控制項無關。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Text" />
      </Docs>
    </Member>
    <Member MemberName="RowContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowContextMenuStripChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.RowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#338](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#338)]
 [!code-vb[System.Windows.Forms.EventExamples#338](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#338)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowContextMenuStripNeeded As DataGridViewRowContextMenuStripNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowContextMenuStripNeededEventHandler ^ RowContextMenuStripNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler " Usage="member this.RowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於需要資料列的捷徑功能表時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>才會發生事件時<xref:System.Windows.Forms.DataGridView>控制<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性設定或其<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性是`true`。 處理<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>事件很有用，當您想要顯示的捷徑功能表，取決於資料列的目前狀態或它所包含的值。  
  
 當您處理<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>事件，您指定的處理常式中的捷徑功能表會顯示每次使用者以滑鼠右鍵按一下資料列除非<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>覆寫已按下的特定資料格的捷徑功能表。  
  
 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>也就會發生事件時的值<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType>已擷取屬性，或是以程式設計的方式，或當使用者按一下滑鼠右鍵的資料列。  
  
 您可以使用<xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.RowIndex%2A?displayProperty=nameWithType>屬性來判斷、 包含的值或資料列的狀態，並使用此資訊來變更或修改<xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType>屬性。 這個屬性會使用資料列的值初始化<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>屬性，它會覆寫的事件值。  
  
 處理<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>事件時使用大量的資料，以避免效能的負面影響的設定資料列<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>多個資料列的值。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會處理<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>事件來提供<xref:System.Windows.Forms.ContextMenuStrip>根據員工的職稱。 在此範例中，有兩個快顯功能表，一個為管理員，一個用於所有其他員工。  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowCount : int with get, set" Usage="System.Windows.Forms.DataGridView.RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 中顯示的資料列數目。</summary>
        <value>要顯示在 <see cref="T:System.Windows.Forms.DataGridView" /> 中的資料列數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView.RowCount%2A>設定的值小於目前的值，資料列會移除從結尾<xref:System.Windows.Forms.DataGridView.Rows%2A>集合。 如果<xref:System.Windows.Forms.DataGridView.RowCount%2A>設定為大於目前的值的值，資料列會加入結尾<xref:System.Windows.Forms.DataGridView.Rows%2A>集合。 額外的資料列會根據在指定的資料列<xref:System.Windows.Forms.DataGridView.RowTemplate%2A>屬性。  
  
 如果您設定<xref:System.Windows.Forms.DataGridView.RowCount%2A>屬性設為 0，所有資料列會移除<xref:System.Windows.Forms.DataGridView>。 這就相當於呼叫<xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType>方法。  
  
> [!NOTE]
>  如果<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>已`true`，您不能設定<xref:System.Windows.Forms.DataGridView.RowCount%2A>設為 0。 在此情況下，呼叫<xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType>方法來移除新記錄的資料列以外的所有資料列。 呼叫<xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A>具有相同的結果，作為設定<xref:System.Windows.Forms.DataGridView.RowCount%2A>為 1，在此情況下，但速度會更快。  
  
 <xref:System.Windows.Forms.DataGridView.RowCount%2A>屬性可以搭配<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>屬性來建立簡單<xref:System.Windows.Forms.DataGridView>來顯示和編輯文字。 如果您設定<xref:System.Windows.Forms.DataGridView.RowCount%2A>屬性設為大於 0 的值<xref:System.Windows.Forms.DataGridView>沒有資料行，控制<xref:System.Windows.Forms.DataGridViewTextBoxColumn>會自動新增。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Windows.Forms.DataGridView.RowCount%2A>屬性。 在此範例中，這個屬性用來追蹤中的項目數<xref:System.Windows.Forms.DataGridView>。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定這個屬性時所指定的值小於 0。  
  
-或- 
指定的值小於 1 且 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> 設為 <see langword="true" />。</exception>
        <exception cref="T:System.InvalidOperationException">在設定這個屬性時，已設定了 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 屬性。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDefaultCellStyleChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料列的 <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何時，就會發生此事件屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A>屬性的資料列設定為新的值，或當<xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A>的資料列的屬性設定為新<xref:System.Windows.Forms.DataGridViewCellStyle>具有至少一個屬性值不同於上一個儲存格樣式物件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#340](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#340)]
 [!code-vb[System.Windows.Forms.EventExamples#340](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#340)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDirtyStateNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDirtyStateNeeded As QuestionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QuestionEventHandler ^ RowDirtyStateNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowDirtyStateNeeded : System.Windows.Forms.QuestionEventHandler " Usage="member this.RowDirtyStateNeeded : System.Windows.Forms.QuestionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QuestionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的 <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 屬性為 <see langword="true" />，且 <see cref="T:System.Windows.Forms.DataGridView" /> 需要判斷目前的資料列是否有未認可的變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，此事件設定<xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType>屬性設`true`如果目前的資料列中的任何資料格已經被修改。 這會導致<xref:System.Windows.Forms.DataGridView.CancelRowEdit>事件發生時使用者會還原到資料列的編輯。 使用者可以按下 esc 鍵，儲存格處於編輯模式或一次之外編輯模式時，兩次還原的資料列的編輯。 此事件可用於自訂設定的虛擬模式中的認可範圍<xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType>屬性設為正確的值，視所選的認可範圍而定。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何處理這個事件來提供資料格層級認可範圍內，這表示使用者可以還原到目前的儲存格的變更。 在資料格層級認可範圍內，資料列會被視為具有未認可變更時，才目前儲存格有未經認可的變更，而不是當資料列中的任何資料格有未經認可的變更。 這個範例是提供之較大範例的一部分[逐步解說： 在 Windows Form DataGridView 控制項中實作虛擬模式](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CPP/virtualmode.cpp#160)]
 [!code-csharp[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CS/virtualmode.cs#160)]
 [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/VB/virtualmode.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDividerDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDividerDoubleClick As DataGridViewRowDividerDoubleClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowDividerDoubleClickEventHandler ^ RowDividerDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.RowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler " Usage="member this.RowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者按兩下兩列資料列之間的分割線時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個事件自訂發生於使用者按兩下資料列分割線的自動調整大小行為。  
  
 資料列<xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>屬性不會擴充的區域，使用者可以連按兩下。 如果已經透過這個屬性使用增加的分割線的高度，當使用者按兩下分割線與相鄰的資料行之間的界限時，就會發生此事件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#342](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#342)]
 [!code-vb[System.Windows.Forms.EventExamples#342](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#342)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDividerHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDividerHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowDividerHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridViewRow.DividerHeight" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 藉由設定修改分割線高度<xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A>屬性。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#343](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#343)]
 [!code-vb[System.Windows.Forms.EventExamples#343](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#343)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowEnter;" />
      <MemberSignature Language="F#" Value="member this.RowEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料列收到輸入焦點，但尚未變成目前的資料列之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個事件發生時<xref:System.Windows.Forms.DataGridView>初始載入，以及當使用者選取目前的資料列以外的資料列。  
  
 這個事件發生之前<xref:System.Windows.Forms.DataGridView.CurrentRow%2A>屬性更新。 若要擷取的新輸入資料列的索引，請使用<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType>事件處理常式內的屬性。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理這個事件來變更<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>中目前資料列的資料格的屬性。 在此範例中，設定的背景色彩<xref:System.Windows.Forms.DataGridView.RowEnter>事件，然後重設<xref:System.Drawing.Color.Empty>上<xref:System.Windows.Forms.DataGridView.RowLeave>事件。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，並確保其事件處理常式相關聯的所有事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowErrorTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowErrorTextChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowErrorTextChanged;" />
      <MemberSignature Language="F#" Value="member this.RowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料列的 <see cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowErrorTextChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowErrorTextChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#345](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#345)]
 [!code-vb[System.Windows.Forms.EventExamples#345](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#345)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowErrorTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowErrorTextNeeded As DataGridViewRowErrorTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowErrorTextNeededEventHandler ^ RowErrorTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler " Usage="member this.RowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於需要資料列的錯誤文字時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>才會發生事件時<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性<xref:System.Windows.Forms.DataGridView>控制項設定或其<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性是`true`。 處理<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件很有用，當您想要判斷根據其狀態和它包含值的資料列的錯誤。  
  
 當您處理<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件，並指定錯誤文字中處理常式中，資料列標題會顯示錯誤圖像 （glyph） 除非<xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A>屬性設定為`false`。 當使用者將滑鼠指標移錯誤圖像 （glyph） 時，錯誤文字會出現在工具提示中。  
  
 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>也就會發生事件時的值<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType>已擷取屬性。  
  
 您可以使用<xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.RowIndex%2A?displayProperty=nameWithType>屬性來判斷、 包含的值或資料列的狀態，並使用此資訊來變更或修改<xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType>屬性。 這個屬性會使用資料列的值初始化<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>屬性，它會覆寫的事件值。  
  
 處理<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件時使用大量的資料，以避免效能的負面影響的設定資料列<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>多個資料列的值。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#346](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#346)]
 [!code-vb[System.Windows.Forms.EventExamples#346](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#346)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowRowErrors" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderCellChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderCellChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowHeaderCellChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者變更資料列行首儲存格的內容時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#349](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#349)]
 [!code-vb[System.Windows.Forms.EventExamples#349](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#349)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ RowHeaderMouseClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.RowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者在資料列行首的界限內按一下時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#05)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ RowHeaderMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.RowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>按兩下資料列行首時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#348](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#348)]
 [!code-vb[System.Windows.Forms.EventExamples#348](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#348)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersBorderStyle As DataGridViewHeaderBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderBorderStyle RowHeadersBorderStyle { System::Windows::Forms::DataGridViewHeaderBorderStyle get(); void set(System::Windows::Forms::DataGridViewHeaderBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersBorderStyle : System.Windows.Forms.DataGridViewHeaderBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料列行首儲存格的框線樣式。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A>以外的其他屬性設定為<xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single>，則<xref:System.Windows.Forms.DataGridView.GridColor%2A>屬性必須是系統色彩。  
  
 您無法將此屬性設定為<xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom>值，這唯讀的值，表示，已使用自訂的框線樣式<xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A>屬性。  
  
> [!NOTE]
>  如果啟用視覺化樣式的應用程式，透過<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>方法和<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>屬性是`true`，資料列標頭會使用目前的佈景主題來繪製。 在此案例中的值<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A>的所有資料列以外的標頭，則會忽略屬性<xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>，未套用的佈景主題。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#030](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#030)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#030](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#030)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 值。</exception>
        <exception cref="T:System.ArgumentException">設定這個屬性時所指定的值是 <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersBorderStyleChanged : EventHandler " Usage="member this.RowHeadersBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#275](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#275)]
 [!code-vb[System.Windows.Forms.EventExamples#275](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#275)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ RowHeadersDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料列行首儲存格所套用的預設樣式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，表示資料列標頭儲存格所套用的預設樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設值<xref:System.Windows.Forms.DataGridViewCellStyle>傳回由這個屬性具有下列的初始屬性值。  
  
|DataGridViewCellStyle 屬性|預設值|  
|------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|<xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|<xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|<xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|<xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|<xref:System.Windows.Forms.DataGridView.Font%2A> 屬性的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState.True?displayProperty=nameWithType>|  
  
 這些值會自動覆寫透過設定的值<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>屬性。 若要強制繼承的資料列行首<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>值，您必須設定的值<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>設為預設值的物件指定<xref:System.Windows.Forms.DataGridViewCellStyle>類別。  
  
 如需有關儲存格樣式繼承的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的儲存格樣式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>使用自訂色彩。 請注意如何<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A?displayProperty=nameWithType>屬性設定為<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>以便值繼承自<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>物件。  
  
 這個範例屬於較大的範例中所提供的<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersDefaultCellStyleChanged : EventHandler " Usage="member this.RowHeadersDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個事件發生時的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>屬性設定為新的值或當<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>屬性設定為新<xref:System.Windows.Forms.DataGridViewCellStyle>具有至少一個屬性值不同於先前的儲存格樣式物件。  
  
 如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#276](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#276)]
 [!code-vb[System.Windows.Forms.EventExamples#276](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#276)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersVisible">
      <MemberSignature Language="C#" Value="public bool RowHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否顯示包含資料列行首的資料行。</summary>
        <value>如果顯示包含資料列標頭的資料行，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>屬性是`false`，資料列的<xref:System.Windows.Forms.DataGridViewBand.Resizable%2A>屬性設定為`true`可以仍調整使用者介面 (UI) 中按一下滑鼠資料指標上要調整大小的資料列的下框線的任何位置。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.GridColor%2A>， <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>， <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>， <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>，以及<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性。 此外，在程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當設定這個屬性為 <see langword="false" /> 且 <see cref="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" /> 屬性設定為 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 或 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /> 時指定的值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidth">
      <MemberSignature Language="C#" Value="public int RowHeadersWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowHeadersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowHeadersWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidth : int with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定包含資料列行首的資料行寬度 (以像素為單位)。</summary>
        <value>包含資料列行首的資料行之寬度 (以像素為單位)。 預設值為 43。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A>屬性可用來調整資料列的標頭資料行，為指定的寬度。 若要調整此欄位至最適大小的資料列的標頭儲存格內容的寬度，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用<xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A>在資料列繪製的案例中的屬性。 在範例中，這個屬性的值用來計算在其中繪製自訂背景的界限。  
  
 此程式碼是中提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定這個屬性時所指定的值小於最小寬度 4 像素，或大於最大寬度 32768 像素。</exception>
        <altmember cref="Overload:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersWidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthChanged : EventHandler " Usage="member this.RowHeadersWidthChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidth" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#277](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#277)]
 [!code-vb[System.Windows.Forms.EventExamples#277](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#277)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode get(); void set(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthSizeMode : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出資料列標頭的寬度是否可以調整，以及使用者是否可以調整此寬度，或是會配合標頭內容，自動調整此寬度。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值，指出資料列標頭的寬度可以根據哪一個模式來調整。 預設值為 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當這個屬性設定為自動調整大小模式時，無法由使用者調整資料列行首的寬度。  
  
 若要以程式設計方式調整資料列行首的高度，請使用<xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A>方法或一組<xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A>屬性。  
  
 若要設定資料行行首的調整大小模式，使用<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>屬性。  
  
 如需標頭調整大小的詳細資訊，請參閱[Windows Forms DataGridView 控制項中的調整大小選項](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>控制項不支援雙重緩衝。 如果<xref:System.Windows.Forms.Control.DoubleBuffered%2A>設定為`true`中衍生<xref:System.Windows.Forms.DataGridView>控制項，在調整大小時，資料列、 資料行或標頭，或重新排序資料行時，使用者不會接收視覺化回饋。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性在<xref:System.Windows.Forms.DataGridView>主要用於顯示的控制項。 在此範例中，以數種方式自訂控制項的視覺外觀，控制項設定了有限的互動性。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthSizeModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersWidthSizeModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ RowHeadersWidthSizeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.RowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#278](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#278)]
 [!code-vb[System.Windows.Forms.EventExamples#278](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#278)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料列的 <see cref="P:System.Windows.Forms.DataGridViewRow.Height" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用此事件。 這個範例是提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#40)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightInfoNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightInfoNeeded As DataGridViewRowHeightInfoNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowHeightInfoNeededEventHandler ^ RowHeightInfoNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler " Usage="member this.RowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求有關資料列高度的資訊時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件可用於排序作業之後保留自訂的資料列的高度。 這是必要的因為排序作業通常會由資料來源，不會不追蹤的資料列與控制項中的資料列之間的對應。 只會發生此事件時<xref:System.Windows.Forms.DataGridView.DataSource%2A>已經設定屬性或當<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性是`true`。 在後者的情況下，您可以提供您自己的資料存放區和排序作業。 處理<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>事件，以儲存更新的高度資訊，當使用者變更資料列高度。 使用<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>需要它的控制項時，擷取預存的高度資訊。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#351](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#351)]
 [!code-vb[System.Windows.Forms.EventExamples#351](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#351)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightInfoPushed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightInfoPushed As DataGridViewRowHeightInfoPushedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowHeightInfoPushedEventHandler ^ RowHeightInfoPushed;" />
      <MemberSignature Language="F#" Value="member this.RowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler " Usage="member this.RowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者變更資料列的高度時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會引發這個事件時<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性設定為`true`或<xref:System.Windows.Forms.DataGridView.DataSource%2A>以外的其他屬性設定為值`null`。 此事件用來追蹤和儲存資料列高度的資訊，以便它可以在排序作業之後還原。 若要還原高度資訊，請處理<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>事件。 請注意，只有當使用者變更資料列的高度時，才發生此事件。 如果您以程式設計方式變更資料列的高度，您必須儲存在同一時間的新高度資訊。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#352](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#352)]
 [!code-vb[System.Windows.Forms.EventExamples#352](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#352)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowLeave;" />
      <MemberSignature Language="F#" Value="member this.RowLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>資料列失去輸入焦點且不再是目前資料列時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何處理這個事件來變更<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>中目前資料列的資料格的屬性。 在此範例中，設定的背景色彩<xref:System.Windows.Forms.DataGridView.RowEnter>事件，然後重設<xref:System.Drawing.Color.Empty>上<xref:System.Windows.Forms.DataGridView.RowLeave>事件。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，並確保其事件處理常式相關聯的所有事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowMinimumHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowMinimumHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowMinimumHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於資料列的 <see cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" /> 屬性值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#354](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#354)]
 [!code-vb[System.Windows.Forms.EventExamples#354](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#354)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowPostPaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowPostPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowPostPaint As DataGridViewRowPostPaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowPostPaintEventHandler ^ RowPostPaint;" />
      <MemberSignature Language="F#" Value="member this.RowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventHandler " Usage="member this.RowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowPostPaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在繪製 <see cref="T:System.Windows.Forms.DataGridViewRow" /> 之後。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以處理這個事件，單獨使用或搭配<xref:System.Windows.Forms.DataGridView.RowPrePaint>事件，以自訂控制項中的資料列的外觀。 您可以繪製整個資料列，或 [小畫家] 的資料列的特定部分，並使用下列方法<xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs>繪製其他組件的類別：  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader%2A>  
  
 您也可以使用<xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>繪製使用目前的佈景主題的標準控制項的類別。 如需詳細資訊，請參閱 <<c0> [ 呈現具有視覺化樣式的控制項](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)。 如果您使用[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]，您也可以存取您可以搭配使用的標準映像的大型程式庫來<xref:System.Windows.Forms.DataGridView>控制項。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用的處理常式<xref:System.Windows.Forms.DataGridView.RowPostPaint>事件來繪製文字的內容跨越整個資料列，低於一般的儲存格的值。 這個範例是提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#30)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowPrePaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowPrePaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowPrePaint As DataGridViewRowPrePaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowPrePaintEventHandler ^ RowPrePaint;" />
      <MemberSignature Language="F#" Value="member this.RowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventHandler " Usage="member this.RowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowPrePaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在繪製 <see cref="T:System.Windows.Forms.DataGridViewRow" /> 之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以處理這個事件，單獨使用或搭配<xref:System.Windows.Forms.DataGridView.RowPostPaint>事件，以自訂控制項中的資料列的外觀。 您可以繪製整個資料列，或 [小畫家] 的資料列的特定部分，並使用下列方法<xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs>繪製其他組件的類別：  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.DrawFocus%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCells%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsBackground%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsContent%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintHeader%2A>  
  
 您也可以使用<xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>繪製使用目前的佈景主題的標準控制項的類別。 如需詳細資訊，請參閱 <<c0> [ 呈現具有視覺化樣式的控制項](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)。 如果您使用[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]，您也可以存取您可以搭配使用的標準映像的大型程式庫來<xref:System.Windows.Forms.DataGridView>控制項。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用的處理常式<xref:System.Windows.Forms.DataGridView.RowPrePaint>事件來繪製漸層的資料列的背景，如果在選取的資料列。 這個範例是提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中的資料列外觀](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataGridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowCollection ^ Rows { System::Windows::Forms::DataGridViewRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Windows.Forms.DataGridViewRowCollection" Usage="System.Windows.Forms.DataGridView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得集合，其中包含 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項中的所有資料列。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />，包含 <see cref="T:System.Windows.Forms.DataGridView" /> 中的所有資料列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Windows.Forms.DataGridView.Rows%2A>集合來手動填入<xref:System.Windows.Forms.DataGridView>而不是繫結至資料來源的控制項。 下列範例會示範如何手動新增，並插入資料列。 這個範例假設您已新增四個<xref:System.Windows.Forms.DataGridViewTextBoxColumn>控制項的執行個體<xref:System.Windows.Forms.DataGridView.Columns%2A>集合。  
  
```vb  
Me.dataGridView1.Rows.Add("five", "six", "seven", "eight")  
Me.dataGridView1.Rows.Insert(0, "one", "two", "three", "four")  
```  
  
```csharp  
this.dataGridView1.Rows.Add("five", "six", "seven", "eight");this.dataGridView1.Rows.Insert(0, "one", "two", "three", "four");  
```  
  
 如需詳細的範例，以程式設計方式填入 解除繫結<xref:System.Windows.Forms.DataGridView>控制項，請參閱 < 範例 > 一節。  
  
 資料列包含資料格的值以外的樣式資訊。 基於這個理由，您可能想要新增或將根據您已設定樣式的現有資料列的資料列插入。 您可以使用<xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A>， <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A>， <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A>，和<xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A>方法。  
  
 您也可以使用<xref:System.Windows.Forms.DataGridView.Rows%2A>修改控制項中的值，或移除資料列的集合。 您可以修改值，或移除資料列，不論控制項是否繫結至外部資料來源。 如果沒有資料來源，所做的變更會對直接資料來源。 此外，您可能仍然需要將資料來源更新推送至遠端資料庫，不過。 如需詳細資訊，請參閱 <<c0> [ 如何： 將資料繫結至 Windows Form DataGridView 控制項](~/docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)。  
  
 下列範例會示範如何以程式設計方式修改資料格的值。  
  
```vb  
' Modify the value in the first cell of the second row.  
Me.dataGridView1.Rows[1].Cells[0].Value = "new value"  
  
' The previous line is equivalent to the following line.  
Me.dataGridView1[0, 1].Value = "new value"  
```  
  
```csharp  
// Modify the value in the first cell of the second row.  
this.dataGridView1.Rows[1].Cells[0].Value = "new value";  
  
// The previous line is equivalent to the following line.  
this.dataGridView1[0, 1].Value = "new value";  
```  
  
 除了標準集合的功能，您可以使用<xref:System.Windows.Forms.DataGridView.Rows%2A>擷取資料列的相關資訊的集合。 使用<xref:System.Windows.Forms.DataGridViewRowCollection.GetRowState%2A>方法，以判斷特定的資料列的狀態。 使用<xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A>和<xref:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight%2A>方法來判斷資料列數目或特定狀態中的資料列結合的高度。 若要擷取具有特定狀態的資料列的索引，請使用<xref:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow%2A>， <xref:System.Windows.Forms.DataGridViewRowCollection.GetLastRow%2A>， <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%2A>，和<xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%2A>方法。  
  
 下列範例會示範如何擷取的第一個選取的資料列中，索引，然後用它來以程式設計方式刪除資料列。  
  
```vb  
Dim rowToDelete As Int32 = Me.dataGridView1.Rows.GetFirstRow( _  
    DataGridViewElementStates.Selected)  
If rowToDelete > -1 Then  
    Me.dataGridView1.Rows.RemoveAt(rowToDelete)  
End If  
```  
  
```csharp  
Int32 rowToDelete = this.dataGridView1.Rows.GetFirstRow(  
    DataGridViewElementStates.Selected);  
if (rowToDelete > -1)  
{  
    this.dataGridView1.Rows.RemoveAt(rowToDelete);  
}  
```  
  
 為了改善效能，<xref:System.Windows.Forms.DataGridViewRowCollection>所傳回<xref:System.Windows.Forms.DataGridView.Rows%2A>屬性可包含共用和非共用的資料列。 共用的資料列共用記憶體，以減少大型的記錄集的成本。 如果您的資料錄集非常大，您應該小心存取時保持共用的資料列是盡量<xref:System.Windows.Forms.DataGridView.Rows%2A>屬性。  
  
 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立未繫結<xref:System.Windows.Forms.DataGridView>; set <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>，以及<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>屬性，並使用<xref:System.Windows.Forms.DataGridView.Rows%2A>和<xref:System.Windows.Forms.DataGridView.Columns%2A>屬性。 它也會示範如何使用新版<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>和<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>正確調整大小的資料行的標頭和資料列的方法。 若要執行此範例中，將下列程式碼貼到表單，其中包含<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`和名為按鈕`Button1`，然後呼叫`InitializeDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定所有的事件都已連接其事件處理常式。  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowsAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsAdded As DataGridViewRowsAddedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowsAddedEventHandler ^ RowsAdded;" />
      <MemberSignature Language="F#" Value="member this.RowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventHandler " Usage="member this.RowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowsAddedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於新的資料列加入 <see cref="T:System.Windows.Forms.DataGridView" /> 之後。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 加入新的資料列時，不會自動排序控制項中的資料列。 若要排序新的資料列至其正確的位置，請呼叫<xref:System.Windows.Forms.DataGridView.Sort%2A>方法中的<xref:System.Windows.Forms.DataGridView.RowsAdded>事件處理常式。  
  
 當使用者將新的記錄，使用的資料列的新資料列<xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A?displayProperty=nameWithType>值的處理常式中這個事件是相等的新記錄，資料列的新位置的索引是其中一種大於剛才加入的資料列。 當您將加入資料列以程式設計的方式，不過，<xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A>值是第一個加入的資料列的索引。  
  
 在虛擬模式中，會發生此事件之前<xref:System.Windows.Forms.DataGridView.CellValuePushed>事件，可用來建立新的記錄，然後您可以在填入您的資料存放區中<xref:System.Windows.Forms.DataGridView.CellValuePushed>事件處理常式。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會處理<xref:System.Windows.Forms.DataGridView.RowsAdded>事件，以在虛擬機器中的資料列數目增加<xref:System.Windows.Forms.DataGridView>。 資料列數目會在<xref:System.Windows.Forms.DataGridView.CellValueNeeded>處理常式，讓它知道何時要顯示與新的資料列的初始化資料格的空白儲存格。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>參考主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsAddedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowsDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowsDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ RowsDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowsDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 的資料列儲存格所套用的預設樣式。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridView" /> 的資料列儲存格所要套用的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制項會顯示其使用由儲存格樣式的儲存格<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>屬性，從其他屬性的型別繼承樣式<xref:System.Windows.Forms.DataGridViewCellStyle>。 所有資料列中的資料格，但不包括標頭資料格，透過指定的樣式<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>屬性覆寫透過指定的樣式<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>和<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>屬性，並透過指定的樣式會覆寫<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>，和<xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>屬性。  
  
 如需詳細資訊，請參閱 < [Windows Forms DataGridView 控制項中的儲存格樣式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
 取得這個屬性中，當<xref:System.Windows.Forms.DataGridViewCellStyle>與預設值會在建立屬性已不被存取。 取得這個屬性的多個資料列時，這會造成效能影響。 可能的話，使用單一<xref:System.Windows.Forms.DataGridViewCellStyle>設定此屬性的多個資料列。 如需詳細資訊，請參閱 <<c0> [ 縮放 Windows Form DataGridView 控制項的最佳作法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用這個屬性來建立在分類帳效果<xref:System.Windows.Forms.DataGridView>控制項。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewCellStyle>類別概觀。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="RowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowsDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowsDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowsDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowsDefaultCellStyleChanged : EventHandler " Usage="member this.RowsDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個事件發生時的屬性<xref:System.Windows.Forms.DataGridViewCellStyle>所傳回<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>屬性設定為新的值或當<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>屬性設定為新<xref:System.Windows.Forms.DataGridViewCellStyle>具有至少一個屬性值不同於先前的儲存格樣式物件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#279](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#279)]
 [!code-vb[System.Windows.Forms.EventExamples#279](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#279)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Windows Form DataGridView 控制項中的儲存格樣式</related>
      </Docs>
    </Member>
    <Member MemberName="RowsRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsRemoved As DataGridViewRowsRemovedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowsRemovedEventHandler ^ RowsRemoved;" />
      <MemberSignature Language="F#" Value="member this.RowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventHandler " Usage="member this.RowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowsRemovedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於從 <see cref="T:System.Windows.Forms.DataGridView" /> 中刪除資料列時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當從刪除資料列<xref:System.Windows.Forms.DataGridView>控制項，後續的資料列的索引編號來彌補較低的環境。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個事件來平衡之資料行的值更新<xref:System.Windows.Forms.DataGridView>。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowStateChanged As DataGridViewRowStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowStateChangedEventHandler ^ RowStateChanged;" />
      <MemberSignature Language="F#" Value="member this.RowStateChanged : System.Windows.Forms.DataGridViewRowStateChangedEventHandler " Usage="member this.RowStateChanged : System.Windows.Forms.DataGridViewRowStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>資料列變更狀態 (例如失去或獲得輸入焦點) 時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowStateChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowStateChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#359](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#359)]
 [!code-vb[System.Windows.Forms.EventExamples#359](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#359)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow RowTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow RowTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property RowTemplate As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ RowTemplate { System::Windows::Forms::DataGridViewRow ^ get(); void set(System::Windows::Forms::DataGridViewRow ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowTemplate : System.Windows.Forms.DataGridViewRow with get, set" Usage="System.Windows.Forms.DataGridView.RowTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定表示控制項中所有資料列之樣板的資料列。</summary>
        <value>表示資料列範本的 <see cref="T:System.Windows.Forms.DataGridViewRow" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有時候您想進一步控制的外觀<xref:System.Windows.Forms.DataGridView>資料列比所提供的各種<xref:System.Windows.Forms.DataGridView>儲存格樣式屬性。 <xref:System.Windows.Forms.DataGridView.RowTemplate%2A>屬性可讓您建立和初始化<xref:System.Windows.Forms.DataGridViewRow>用於做為範本的所有資料列的資訊，包括新的記錄的資料列如果<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>是`true`。  
  
 當您設定的屬性，例如資料列高度預設值，這非常有用。 例如，您可以增加預設的資料列高度，以便可以提供額外的空間，一般的儲存格內容下方顯示跨越多個資料行的內容。  
  
 設定資料列範本時，需要外部的資料會顯示使用自訂的型別衍生自<xref:System.Windows.Forms.DataGridViewRow>類別。 使用未繫結<xref:System.Windows.Forms.DataGridView>控制項，您可以以程式設計方式填入<xref:System.Windows.Forms.DataGridView.Rows%2A>您自訂的資料列型別的執行個體的集合。 顯示外部資料時，不過，資料列會自動產生，但它們基礎資料列範本，您可以設定為您自訂的資料列型別的執行個體。  
  
 如果這個屬性尚未設定擷取其值的第一次新<xref:System.Windows.Forms.DataGridViewRow>會建立並傳回。  
  
   
  
## Examples  
 下列程式碼範例說明如何使用資料列 範本來指定初始的資料列高度和資料列最低高度。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/CPP/datagridviewrowtemplate.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/CS/datagridviewrowtemplate.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/VB/datagridviewrowtemplate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">設定這個屬性時所指定的資料列已設定其 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 屬性。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowUnshared">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowUnshared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowUnshared" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowUnshared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUnshared As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowUnshared;" />
      <MemberSignature Language="F#" Value="member this.RowUnshared : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowUnshared : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>資料列狀態從共用變成不共用時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以開發和測試期間使用這個事件，以協助識別導致從共用變更為非共用狀態的資料列的程式碼。 縮放控制項來顯示大量資料時，這非常有用。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.RowUnshared>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.RowUnshared>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#360](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#360)]
 [!code-vb[System.Windows.Forms.EventExamples#360](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#360)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowValidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowValidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowValidated As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowValidated;" />
      <MemberSignature Language="F#" Value="member this.RowValidated : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowValidated : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>資料列完成驗證後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個事件是類似於<xref:System.Windows.Forms.Control.Validated>事件。 您可以使用這個事件值的資料列上執行的後續處理。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會使用此事件，清除可能留下驗證資料列之後的任何錯誤註釋。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.RowOperations#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/CS/rowoperations.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.RowOperations#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/VB/rowoperations.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="RowValidating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowValidating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowValidating As DataGridViewCellCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellCancelEventHandler ^ RowValidating;" />
      <MemberSignature Language="F#" Value="member this.RowValidating : System.Windows.Forms.DataGridViewCellCancelEventHandler " Usage="member this.RowValidating : System.Windows.Forms.DataGridViewCellCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>正在驗證資料列時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個事件是類似於<xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>事件。 您可以使用這個事件的資料列的所有值上執行驗證。 如果資料列未通過驗證，設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType>屬性設`true`。 取消這個事件會防止<xref:System.Windows.Forms.DataGridView.RowValidated>， <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>，和<xref:System.Windows.Forms.Control.Validated?displayProperty=nameWithType>事件發生時，也會防止使用者離開無效的資料列並防止資料列儲存至外部資料來源中資料繫結模式。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Windows.Forms.DataGridView.RowValidating>檢查如果輸入有效的追蹤和發行日期。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.RowOperations#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/CS/rowoperations.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.RowOperations#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/VB/rowoperations.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ScrollEventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ScrollEventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.Scroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Scroll As ScrollEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ScrollEventHandler ^ Scroll;" />
      <MemberSignature Language="F#" Value="member this.Scroll : System.Windows.Forms.ScrollEventHandler " Usage="member this.Scroll : System.Windows.Forms.ScrollEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於使用者在控制項內容中捲動時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.Scroll>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.Scroll>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#363](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#363)]
 [!code-vb[System.Windows.Forms.EventExamples#363](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#363)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ScrollBars ScrollBars { System::Windows::Forms::ScrollBars get(); void set(System::Windows::Forms::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.ScrollBars with get, set" Usage="System.Windows.Forms.DataGridView.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項中要顯示的捲軸類型。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.ScrollBars" /> 值。 預設值為 <see cref="F:System.Windows.Forms.ScrollBars.Both" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不論這個屬性的值，只在需要時才顯示捲軸。 您可以使用這個屬性來防止捲軸出現。 例如，當您想要提供替代的使用者介面 (UI) 捲動時，這非常有用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.ScrollBars" /> 值。</exception>
        <exception cref="T:System.InvalidOperationException">因為無法認可或取消的儲存格變更造成 <see cref="T:System.Windows.Forms.DataGridView" /> 無法捲動，所以無法設定這個屬性的值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="dataGridView.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選取 <see cref="T:System.Windows.Forms.DataGridView" /> 中的所有儲存格。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.DataGridView>是在資料行選取模式和這個方法中呼叫時，每個資料行<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>屬性設定為`true`，和每個資料列<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>屬性設定為`false`。  
  
 相反地，當<xref:System.Windows.Forms.DataGridView>是在資料列選取範圍模式和這個方法中呼叫時，每個資料列<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>屬性設定為`true`，和每個資料行<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>屬性設定為`false`。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Windows.Forms.DataGridView.SelectAll%2A>方法。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`並<xref:System.Windows.Forms.Button>名為`selectAllButton`，並確保其事件處理常式相關聯的所有事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#180](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#180)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#180](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#180)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedCells">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedCells As DataGridViewSelectedCellCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedCellCollection ^ SelectedCells { System::Windows::Forms::DataGridViewSelectedCellCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedCells : System.Windows.Forms.DataGridViewSelectedCellCollection" Usage="System.Windows.Forms.DataGridView.SelectedCells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得使用者所選的儲存格集合。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewSelectedCellCollection" />，表示使用者選取的儲存格。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A>屬性一律會填入不論<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性值。  
  
 此屬性包含在其被參考的時間選取範圍的唯讀快照集。 如果您保留此集合的複本，它可能不同於實際後續<xref:System.Windows.Forms.DataGridView>所在使用者可能已變更選取範圍的狀態。 因此，您不應該對集合的複本。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.SelectedCells%2A>集合選取範圍中尋找值的總和。 在範例中，這個集合會逐一查看並有效的值會加入至顯示在標籤的總和。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedColumns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedColumns As DataGridViewSelectedColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedColumnCollection ^ SelectedColumns { System::Windows::Forms::DataGridViewSelectedColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedColumns : System.Windows.Forms.DataGridViewSelectedColumnCollection" Usage="System.Windows.Forms.DataGridView.SelectedColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得使用者所選的資料行集合。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewSelectedColumnCollection" />，表示使用者選取的資料行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性必須設為<xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType>或是<xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect?displayProperty=nameWithType>如<xref:System.Windows.Forms.DataGridView.SelectedColumns%2A>屬性來填入選取的資料行。  
  
 此屬性包含在其被參考的時間選取範圍的唯讀快照集。 如果您保留此集合的複本，它可能不同於實際後續<xref:System.Windows.Forms.DataGridView>所在使用者可能已變更選取範圍的狀態。 因此，您不應該對集合的複本。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.SelectedColumns%2A>屬性來取得所選資料行中以程式設計方式排序。 在此範例中，這個屬性用於<xref:System.Windows.Forms.DataGridView.Sort%2A>方法，以判斷排序方向。  
  
 [!code-csharp[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedRows">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedRows As DataGridViewSelectedRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedRowCollection ^ SelectedRows { System::Windows::Forms::DataGridViewSelectedRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRows : System.Windows.Forms.DataGridViewSelectedRowCollection" Usage="System.Windows.Forms.DataGridView.SelectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得使用者所選的資料列集合。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewSelectedRowCollection" />，包含使用者選取的資料列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性必須設為<xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect>或是<xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect>如<xref:System.Windows.Forms.DataGridView.SelectedRows%2A>屬性來填入選取的資料列。  
  
 此屬性包含在其被參考的時間選取範圍的唯讀快照集。 如果您保留此集合的複本，它可能不同於實際後續<xref:System.Windows.Forms.DataGridView>所在使用者可能已變更選取範圍的狀態。 您因此不應該作業集合的複本上。  
  
 若要以程式設計方式選取的資料列，將其<xref:System.Windows.Forms.DataGridViewRow.Selected%2A>屬性設`true`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.SelectedRows%2A>屬性中的<xref:System.Windows.Forms.DataGridView.UserDeletingRow>事件。 在此範例中，如果第一個資料列包含在<xref:System.Windows.Forms.DataGridView.SelectedRows%2A>集合中，則刪除已取消。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Selected" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>目前選取範圍變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會選取資料格，或取消選取項目，以程式設計方式或由使用者動作時，就會發生此事件。 例如，此事件很有用，當您想要顯示目前選取的資料格的總和。  
  
 當您變更的值<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性，<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件發生之前<xref:System.Windows.Forms.DataGridView.CurrentCellChanged>事件。 任何<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件處理常式存取<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性此時會取得先前的值。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用此事件。 在範例中，此表單會顯示選取的資料格的值的總和，並選取項目變更時更新總和。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#00)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#00)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As DataGridViewSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectionMode SelectionMode { System::Windows::Forms::DataGridViewSelectionMode get(); void set(System::Windows::Forms::DataGridViewSelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Forms.DataGridViewSelectionMode with get, set" Usage="System.Windows.Forms.DataGridView.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出要如何選取 <see cref="T:System.Windows.Forms.DataGridView" /> 的儲存格。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> 值。 預設值為 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值變更<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性清除目前的選取項目。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>， <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>， <xref:System.Windows.Forms.DataGridView.GridColor%2A>， <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>， <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>， <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>， <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>，以及<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>屬性。 此外，在程式碼範例示範如何設定<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>屬性。 若要執行此範例中，貼上程式碼包含表單的表單<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`，然後呼叫`SetUpDataGridView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理常式。 請確定其事件處理常式相關聯的所有事件。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定這個屬性時所指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> 值。</exception>
        <exception cref="T:System.InvalidOperationException">設定這個屬性時，指定的值是 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /> 或 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect" />，而一或多行資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /> 屬性設為 <see cref="F:System.Windows.Forms.DataGridViewColumnSortMode.Automatic" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="dataGridView.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">控制項的新 <see cref="P:System.Windows.Forms.Control.Left" /> 屬性值。</param>
        <param name="y">控制項的新 <see cref="P:System.Windows.Forms.Control.Top" /> 屬性值。</param>
        <param name="width">控制項的新 <see cref="P:System.Windows.Forms.Control.Width" /> 屬性值。</param>
        <param name="height">控制項的新 <see cref="P:System.Windows.Forms.Control.Height" /> 屬性值。</param>
        <param name="specified">
          <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值的位元組合。</param>
        <summary>這個成員會覆寫 <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">寬度及 (或) 高度值超過最大值 8,388,607。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentCellAddressCore">
      <MemberSignature Language="C#" Value="protected virtual bool SetCurrentCellAddressCore (int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetCurrentCellAddressCore(int32 columnIndex, int32 rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetCurrentCellAddressCore (columnIndex As Integer, rowIndex As Integer, setAnchorCellAddress As Boolean, validateCurrentCell As Boolean, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SetCurrentCellAddressCore(int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member SetCurrentCellAddressCore : int * int * bool * bool * bool -&gt; bool&#xA;override this.SetCurrentCellAddressCore : int * int * bool * bool * bool -&gt; bool" Usage="dataGridView.SetCurrentCellAddressCore (columnIndex, rowIndex, setAnchorCellAddress, validateCurrentCell, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="setAnchorCellAddress" Type="System.Boolean" />
        <Parameter Name="validateCurrentCell" Type="System.Boolean" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">包含儲存格的資料行之索引。</param>
        <param name="rowIndex">包含儲存格的資料列之索引。</param>
        <param name="setAnchorCellAddress">
          <see langword="true" /> 表示讓新的目前儲存格變成後續使用 SHIFT 鍵之多儲存格選取範圍的錨定 (Anchor) 儲存格；否則為 <see langword="false" />。</param>
        <param name="validateCurrentCell">
          <see langword="true" /> 表示驗證目前的舊儲存格中的值，並在驗證失敗時取消變更；否則為 <see langword="false" />。</param>
        <param name="throughMouseClick">如果目前的儲存格是設為按一下滑鼠的結果，則為 <see langword="true" />；否則為 <see langword="false" />。</param>
        <summary>設定目前的現用儲存格。</summary>
        <returns>如果目前的儲存格已設定成功，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制會變更目前的儲存格時，會使用這個方法。 這個方法會變更目前的儲存格，而不需要變更選取項目，並選擇性地而不驗證上一個儲存格，或變更選取範圍的錨定儲存格。 錨定儲存格是第一個資料格區塊的使用者可以選取按住 SHIFT 鍵並按一下區塊的最後一個儲存格的多個資料格。  
  
 如果`rowIndex`並`columnIndex`是這兩種-1，<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性會傳回`null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 小於 0，或大於控制項中的資料行數目減 1，且 <paramref name="rowIndex" /> 不是 -1。  
  
-或- 
 <paramref name="rowIndex" /> 小於 0，或大於控制項中的資料列數目減 1，且 <paramref name="columnIndex" /> 不是 -1。</exception>
        <exception cref="T:System.InvalidOperationException">指定的儲存格具有 <see langword="false" /> 的 <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /> 屬性值。  
  
-或- 
基於重設基礎資料來源以外的原因而呼叫這個方法，且另一個執行緒目前正在執行此方法。</exception>
        <exception cref="T:System.InvalidCastException">新的目前儲存格嘗試進入編輯模式，但其 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 屬性未指出衍生自 <see cref="T:System.Windows.Forms.Control" /> 並實作 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 的類別。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedCellCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedCellCore (int columnIndex, int rowIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedCellCore(int32 columnIndex, int32 rowIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedCellCore (columnIndex As Integer, rowIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedCellCore(int columnIndex, int rowIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedCellCore : int * int * bool -&gt; unit&#xA;override this.SetSelectedCellCore : int * int * bool -&gt; unit" Usage="dataGridView.SetSelectedCellCore (columnIndex, rowIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">包含儲存格的資料行之索引。</param>
        <param name="rowIndex">包含儲存格的資料列之索引。</param>
        <param name="selected">
          <see langword="true" /> 表示選取儲存格，<see langword="false" /> 則表示取消選取儲存格。</param>
        <summary>變更具有指定資料列和資料行索引之儲存格的選取狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制會變更儲存格的選取狀態時，會使用這個方法。 選擇項目的狀態變更，而不考慮目前<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性值，而且不需要變更<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性值。 當您想要實作您自己的選取模式時，這非常有用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 小於 0，或大於控制項中的資料行數目減 1。  
  
-或- 
 <paramref name="rowIndex" /> 小於 0，或大於控制項中的資料列數目減 1。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedColumnCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedColumnCore (int columnIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedColumnCore(int32 columnIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedColumnCore (columnIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedColumnCore(int columnIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedColumnCore : int * bool -&gt; unit&#xA;override this.SetSelectedColumnCore : int * bool -&gt; unit" Usage="dataGridView.SetSelectedColumnCore (columnIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">資料行的索引。</param>
        <param name="selected">
          <see langword="true" /> 表示選取資料行，<see langword="false" /> 則表示取消選取資料行。</param>
        <summary>變更具有指定索引的資料行之選取狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制變更資料行的選取狀態時，請使用這個方法。 選擇項目的狀態變更，而不考慮目前<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性值，而且不需要變更<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性值。 當您想要實作您自己的選取模式時，這非常有用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 小於 0，或大於控制項中的資料行數目減 1。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRowCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedRowCore (int rowIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedRowCore(int32 rowIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedRowCore (rowIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedRowCore(int rowIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedRowCore : int * bool -&gt; unit&#xA;override this.SetSelectedRowCore : int * bool -&gt; unit" Usage="dataGridView.SetSelectedRowCore (rowIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">資料列的索引。</param>
        <param name="selected">
          <see langword="true" /> 表示選取資料列，<see langword="false" /> 則表示取消選取資料列。</param>
        <summary>變更具有指定索引的資料列之選取狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控制變更資料列的選取狀態時，請使用這個方法。 選擇項目的狀態變更，而不考慮目前<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>屬性值，而且不需要變更<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性值。 當您想要實作您自己的選取模式時，這非常有用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 小於 0，或大於控制項中的資料列數目減 1。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCellErrors">
      <MemberSignature Language="C#" Value="public bool ShowCellErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowCellErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCellErrors : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowCellErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否要顯示儲存格錯誤。</summary>
        <value>如果驗證失敗的儲存格中將出現紅色圖像 (Glyph)，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCellToolTips">
      <MemberSignature Language="C#" Value="public bool ShowCellToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCellToolTips : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowCellToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出當滑鼠指標在儲存格上暫停時，是否會顯示工具提示。</summary>
        <value>如果已啟用儲存格的工具提示，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當這個屬性的值是`true`和滑鼠指標位於儲存格上方儲存格時，會顯示工具提示其中下列條件成立：  
  
-   值<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性不是`null`或值<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性是`true`，以及處理常式<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>事件集<xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType>以外的值的屬性<xref:System.String.Empty?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>資料格的屬性具有值以外的其他<xref:System.String.Empty?displayProperty=nameWithType>。 設定這個屬性沒有任何作用，當有<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>事件處理常式會自動取得屬性的值因為引發事件並傳回的工具提示文字指定在事件處理常式。  
  
-   儲存格的值會截斷資料格顯示中。 當儲存格的值<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>屬性值是<xref:System.String.Empty?displayProperty=nameWithType>，截斷的資料格的值的完整值會顯示在工具提示。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowEditingIcon">
      <MemberSignature Language="C#" Value="public bool ShowEditingIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEditingIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowEditingIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowEditingIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowEditingIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowEditingIcon : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowEditingIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出正在編輯的儲存格之資料列行首中是否可以看到編輯圖像 (Glyph)。</summary>
        <value>如果可以看到編輯圖像，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料列標頭會顯示目前儲存格處於編輯模式，以及使用者對其進行變更的資料格時，看起來像鉛筆的編輯字符。 編輯字符著色使用<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>資料列的標頭資料格的屬性。 如果沒有足夠的空間可以完整顯示，則不會呈現圖像 （glyph）。 例如，如果資料列的標頭儲存格有其<xref:System.Windows.Forms.DataGridViewCell.Value%2A>屬性集，圖像 （glyph） 會移除，如果沒有足夠的空間為文字和圖像 （glyph）。  
  
 值所控制的編輯字符顯示<xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A>虛擬模式中的屬性。 否則，它由控制<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>屬性。  
  
 標準的圖像 （glyph） 的格式不公開。 若要自訂圖像 （glyph），您可以建立自訂<xref:System.Windows.Forms.DataGridViewRowHeaderCell>類別。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowRowErrors">
      <MemberSignature Language="C#" Value="public bool ShowRowErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRowErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowRowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRowErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRowErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRowErrors : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowRowErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出針對包含資料項目錯誤的每一個資料列，是否會在資料列標頭顯示錯誤圖像。</summary>
        <value>如果 <see cref="T:System.Windows.Forms.DataGridViewRow" /> 指出有錯誤發生，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>屬性會指出是否在資料列中的資料格的其中一個錯誤。 如果<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>以外的其他設定的值<xref:System.String.Empty>，然後錯誤圖像 (![ErrorProvider 圖示](~/add/media/vberrorprovidericon.gif "ErrorProvider 圖示")) 顯示資料列標頭。  
  
 資料列標頭的預設寬度會包含足夠的空間，以顯示錯誤圖像 （glyph），會顯示圖像 （glyph）。 如果資料列的標頭大小會調整，讓沒有足夠的空間顯示完整的圖像，則不會呈現圖像 （glyph）。  
  
 文字和圖像 （glyph），可顯示資料列標頭，因為標頭內容會顯示依優先順序，如下：  
  
1.  中的資料列標題儲存格所顯示的文字。  
  
2.  編輯字符。  
  
3.  錯誤圖像 （glyph)。  
  
 比方說，如果資料列寬度就會減少，錯誤圖像 （glyph） 會消失第一次，然後標準字符，則文字。  
  
 進階的使用者可以開發自訂的自訂錯誤字符<xref:System.Windows.Forms.DataGridViewRowHeaderCell>或<xref:System.Windows.Forms.DataGridViewCell>類別。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的內容排序。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="dataGridView.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">執行自訂排序作業的 <see cref="T:System.Collections.IComparer" /> 實作。</param>
        <summary>使用 <see cref="T:System.Collections.IComparer" /> 介面的實作，將 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的內容排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可讓排序功能的進階的自訂<xref:System.Windows.Forms.DataGridView>類別。 若要實作高度自訂的排序作業，您可以撰寫事件處理常式<xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick>事件和呼叫這個方法會實作類別的執行個體時<xref:System.Collections.IComparer?displayProperty=nameWithType>做為參數的介面。 在此情況下，您通常會設定<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=nameWithType>屬性設<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>停用自動排序，以及保留用於排序圖像的空間。 排序時設定為以程式設計方式排序模式資料行，您必須顯示排序圖像 （glyph） 自行設定<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType>屬性。  
  
 這個方法適用於只有當<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性未設定。 當您繫結<xref:System.Windows.Forms.DataGridView>控制項至外部資料來源，您必須使用該資料來源所提供的排序作業。 當您提供您自己的資料來源的方式實作虛擬模式時，您也必須處理排序作業自己。  
  
 呼叫這個方法會自動設定<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>屬性設`null`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.Sort%2A>在多個資料行排序案例的方法多載。 在此範例中，<xref:System.Collections.IComparer>介面實作在`RowComparer`類別。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewIComparerSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewIComparerSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewIComparerSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewIComparerSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="comparer" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 設定為 <see langword="true" />。  
  
-或- 
 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 不是 <see langword="null" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Windows.Forms.DataGridViewColumn dataGridViewColumn, System.ComponentModel.ListSortDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn, valuetype System.ComponentModel.ListSortDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Windows::Forms::DataGridViewColumn ^ dataGridViewColumn, System::ComponentModel::ListSortDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Windows.Forms.DataGridViewColumn * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.Sort : System.Windows.Forms.DataGridViewColumn * System.ComponentModel.ListSortDirection -&gt; unit" Usage="dataGridView.Sort (dataGridViewColumn, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn">將 <see cref="T:System.Windows.Forms.DataGridView" /> 內容排序時，所依據的資料行。</param>
        <param name="direction">其中一個 <see cref="T:System.ComponentModel.ListSortDirection" /> 值。</param>
        <summary>根據指定資料行的內容，以遞增或遞減順序將 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項的內容排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法的內容排序<xref:System.Windows.Forms.DataGridView>藉由比較指定的資料行中的值。 根據預設，排序作業將會使用<xref:System.Collections.Comparer.Compare%2A>方法，在資料行中使用的儲存格的成對比較<xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType>屬性。  
  
 對於具有資料行<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性設定為<xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType>，則<xref:System.Windows.Forms.DataGridView.SortedColumn%2A>和<xref:System.Windows.Forms.DataGridView.SortOrder%2A>屬性會自動設定，並顯示適當的排序圖像。 對於具有資料行<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性設定為<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>，您必須顯示排序圖像 （glyph） 自行透過<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType>屬性。  
  
 您可以自訂用這個方法所處理的排序作業<xref:System.Windows.Forms.DataGridView.SortCompare>事件。 只會發生此事件時<xref:System.Windows.Forms.DataGridView.DataSource%2A>屬性尚未設定。  
  
 當<xref:System.Windows.Forms.DataGridView.DataSource%2A>已設定屬性，這個方法適用於僅限繫結的資料欄。 資料繫結資料行有其<xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType>屬性集。 這會導致<xref:System.Windows.Forms.DataGridViewColumn.IsDataBound%2A?displayProperty=nameWithType>屬性，以傳回`true`。  
  
 如果您<xref:System.Windows.Forms.DataGridView>控制項包含繫結和解除繫結資料行，您必須實作虛擬模式，以維護未繫結的資料行的值，當控制項所繫結的資料行排序時。 您可以藉由設定<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性，以`true`和處理<xref:System.Windows.Forms.DataGridView.CellValueNeeded>事件。 如果資料行是可編輯的您也應該處理<xref:System.Windows.Forms.DataGridView.CellValuePushed>事件。 如需有關虛擬模式的詳細資訊，請參閱[如何： 在 Windows Form DataGridView 控制項中實作虛擬模式](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)。 不支援資料繫結控制項時，未繫結的資料行排序。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.Sort%2A>中以程式設計方式排序。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的資料行不屬於這個 <see cref="T:System.Windows.Forms.DataGridView" />。  
  
-或- 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 屬性已設定，且指定資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /> 屬性傳回 <see langword="false" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewColumn" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 屬性已設定為 <see langword="true" />，且指定資料行的 <see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /> 屬性傳回 <see langword="false" />。  
  
-或- 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 屬性所指定的物件未實作 <see cref="T:System.ComponentModel.IBindingList" /> 介面。  
  
-或- 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 屬性所指定的物件具有 <see langword="false" /> 的 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> 屬性值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SortCompare">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.SortCompare" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SortCompare As DataGridViewSortCompareEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewSortCompareEventHandler ^ SortCompare;" />
      <MemberSignature Language="F#" Value="member this.SortCompare : System.Windows.Forms.DataGridViewSortCompareEventHandler " Usage="member this.SortCompare : System.Windows.Forms.DataGridViewSortCompareEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSortCompareEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在 <see cref="T:System.Windows.Forms.DataGridView" /> 比較兩個儲存格值來執行排序作業時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只會發生此事件時<xref:System.Windows.Forms.DataGridView.DataSource%2A>未設定屬性和<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性值是`false`。  
  
 這個事件會比較組排序的資料行中的資料格。 只有當使用者按一下資料行的標頭時，才發生<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性值<xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic>，或當您呼叫<xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29>多載。 當此事件發生時的資料行<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性值<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic>，您必須顯示排序圖像 （glyph） 自行透過<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType>屬性。  
  
 您可以使用這個事件來排序資料列或多個資料行中有一個資料行使用資料格的值。 使用<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A>並<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A>屬性，以比較儲存格的值，指定在資料行中<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A>屬性。 使用<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A>並<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A>屬性來存取其他資料行中的值<xref:System.Windows.Forms.DataGridView.Rows%2A>集合。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.SortCompare>在多個資料行排序。 這個範例是中提供之較大範例的一部分[如何： 自訂 Windows Form DataGridView 控制項中排序](~/docs/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/92fb5c14-afab-4cf5-a97e-924fd9cb99f5">如何：自訂 Windows Forms DataGridView 控制項的排序</related>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Sorted;" />
      <MemberSignature Language="F#" Value="member this.Sorted : EventHandler " Usage="member this.Sorted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項完成排序作業時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會發生此事件時<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性設定為`true`和控制項所繫結的資料行排序。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例說明如何確保完成排序之後，目前的儲存格為可見。 此程式碼僅適用於未繫結<xref:System.Windows.Forms.DataGridView>控制項。 使用<xref:System.Windows.Forms.DataGridView>控制項繫結至外部資料來源，目前儲存格不會自動保存排序時。  
  
 若要執行此範例中，將下列程式碼貼到表單，其中包含<xref:System.Windows.Forms.DataGridView>名為`dataGridView1`。 在 C# 中，您也必須連接<xref:System.Windows.Forms.DataGridView.Sorted>事件處理常式的事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SortedColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn SortedColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn SortedColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SortedColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedColumn As DataGridViewColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumn ^ SortedColumn { System::Windows::Forms::DataGridViewColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortedColumn : System.Windows.Forms.DataGridViewColumn" Usage="System.Windows.Forms.DataGridView.SortedColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.DataGridView" /> 內容目前排序所依據的資料行。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridView" /> 內容目前排序所依據的 <see cref="T:System.Windows.Forms.DataGridViewColumn" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridView>未排序，這個屬性會傳回`null`。  
  
 當這個屬性所表示的資料行具有<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性值<xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType>，它會顯示排序圖像 （glyph） 的值為基礎<xref:System.Windows.Forms.DataGridView.SortOrder%2A>屬性。  
  
 當資料行具有<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性值<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>，您必須顯示排序圖像 （glyph） 自行透過<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType>屬性。  
  
> [!NOTE]
>  當您排序控制項使用的自訂排序時，這個屬性的值不具意義。 如需有關自訂排序的詳細資訊，請參閱 <<c0> <xref:System.Windows.Forms.DataGridView.Sort%28System.Collections.IComparer%29> 方法和<xref:System.Windows.Forms.DataGridView.SortCompare>事件。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.SortedColumn%2A>中以程式設計方式排序的屬性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="SortOrder">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder SortOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder SortOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SortOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortOrder As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder SortOrder { System::Windows::Forms::SortOrder get(); };" />
      <MemberSignature Language="F#" Value="member this.SortOrder : System.Windows.Forms.SortOrder" Usage="System.Windows.Forms.DataGridView.SortOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項中的項目是以遞增或遞減順序排序，或者根本不排序。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.SortOrder" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性用來判斷所指定的資料行時，會出現哪一個排序圖像<xref:System.Windows.Forms.DataGridView.SortedColumn%2A>屬性具有<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic>。 當資料行具有<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性值<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic>，您必須顯示並自行隱藏排序圖像 （glyph），透過<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A>屬性。 當資料行具有<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>屬性值為<xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable>，您可以顯示排序圖像 （glyph），但不是會保留空間，如果資料行自動調整大小。  
  
> [!NOTE]
>  當您排序控制項使用的自訂排序時，這個屬性的值不具意義。 如需有關自訂排序的詳細資訊，請參閱 <<c0> <xref:System.Windows.Forms.DataGridView.Sort%2A> 方法和<xref:System.Windows.Forms.DataGridView.SortCompare>事件。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.SortOrder%2A>中以程式設計方式排序的屬性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="StandardTab">
      <MemberSignature Language="C#" Value="public bool StandardTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StandardTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.StandardTab" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StandardTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StandardTab : bool with get, set" Usage="System.Windows.Forms.DataGridView.StandardTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 TAB 鍵是否會將焦點移到定位順序中的下一個控制項，而不是將焦點移到控制項中的下一個儲存格。</summary>
        <value>如果 TAB 鍵會將焦點移到定位順序中的下一個控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將此屬性設定為`false`允許 TAB 鍵將焦點移到透過資料方格。 下表描述如何儲存格的焦點變更時按下的指定索引標籤組合。  
  
|按鍵組合|結果|  
|---------------------|------------|  
|TAB|如果<xref:System.Windows.Forms.DataGridView.StandardTab%2A>屬性是`false`，則焦點會移至下一步 的資料格的資料列中。 如果焦點是在資料列的最後一個資料格中，焦點會移至下一個資料列的第一個儲存格。 如果焦點是在中的最後一個資料格<xref:System.Windows.Forms.DataGridView>，焦點會移至定位順序中的下一個控制項。|  
|SHIFT+TAB|如果<xref:System.Windows.Forms.DataGridView.StandardTab%2A>是`false`，則焦點會移至資料列的上一個儲存格。 如果焦點是在資料列的第一個資料格中，焦點會移到最後一個先前的資料列中的資料格。 如果焦點是在第一個資料格中<xref:System.Windows.Forms.DataGridView>，焦點會移至定位順序中的前一個控制項。|  
|CTRL+TAB|焦點移至定位順序中的下一個控制項。|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於控制項樣式變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件與這個控制項無關。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它可用時，才<xref:System.Windows.Forms.DataGridView>執行個體轉換成<xref:System.ComponentModel.ISupportInitialize>執行個體。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已經對此控制項呼叫這個方法。</exception>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它可用時，才<xref:System.Windows.Forms.DataGridView>執行個體轉換成<xref:System.ComponentModel.ISupportInitialize>執行個體。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.DataGridView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與控制項相關的文字。</summary>
        <value>與控制項關聯的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性對這個控制項來說不具意義。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.DataGridView.Text" /> 屬性的值變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然<xref:System.Windows.Forms.DataGridView.Text%2A>屬性不是有意義，此控制項，其值可以變更，因而導致發生此事件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="TopLeftHeaderCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLeftHeaderCell As DataGridViewHeaderCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderCell ^ TopLeftHeaderCell { System::Windows::Forms::DataGridViewHeaderCell ^ get(); void set(System::Windows::Forms::DataGridViewHeaderCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopLeftHeaderCell : System.Windows.Forms.DataGridViewHeaderCell with get, set" Usage="System.Windows.Forms.DataGridView.TopLeftHeaderCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定位於 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項左上角的標頭儲存格。</summary>
        <value>位於 <see cref="T:System.Windows.Forms.DataGridView" /> 左上角的 <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定這個屬性可讓您設定儲存格的值、 關聯的捷徑功能表，或執行任何其他您可以針對執行的作業<xref:System.Windows.Forms.DataGridViewHeaderCell>。  
  
 在設計為從右至左的語言搭配使用的應用程式，這個屬性所表示儲存格通常是在右上角。  
  
   
  
## Examples  
 下列程式碼範例會使用這個屬性來顯示值的左上角<xref:System.Windows.Forms.DataGridView>控制項。 此值標籤的主從式案例中的子資料表。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridViewComboBoxColumn>類別概觀主題。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#80)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#80)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#80)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCellErrorText">
      <MemberSignature Language="C#" Value="public void UpdateCellErrorText (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCellErrorText(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCellErrorText (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCellErrorText(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateCellErrorText : int * int -&gt; unit" Usage="dataGridView.UpdateCellErrorText (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">要更新之儲存格的資料行索引，-1 則表示資料列行首儲存格。</param>
        <param name="rowIndex">要更新之儲存格的資料列索引，-1 則表示資料行行首儲存格。</param>
        <summary>強制位於指定位置的儲存格更新其錯誤文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法，當您儲存格錯誤文字自行維護藉由處理<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>事件。 當您變更指定的儲存格的預存的錯誤文字時，請呼叫這個方法。 這會使失效的資料格，強迫<xref:System.Windows.Forms.DataGridView>控制項來擷取更新的錯誤文字透過<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>事件處理常式。  
  
 雖然您可以使用這個方法來更新標題儲存格的錯誤，則資料行的標頭資料格將不會顯示錯誤圖像 （glyph）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 小於 -1，或大於控制項中的資料行數目減 1。  
  
-或- 
 <paramref name="rowIndex" /> 小於 -1，或大於控制項中的資料列數目減 1。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCellValue">
      <MemberSignature Language="C#" Value="public void UpdateCellValue (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCellValue(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCellValue (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCellValue(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateCellValue : int * int -&gt; unit" Usage="dataGridView.UpdateCellValue (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">具有新值之儲存格的以零起始的資料行索引。</param>
        <param name="rowIndex">具有新值之儲存格的以零起始的資料列索引。</param>
        <summary>強制控制項根據其新值更新指定位置的儲存格顯示，並套用目前有效的任何自動調整大小模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法，當您維持虛擬模式中的資料格的值，然後在您的自訂資料快取之外的更新值<xref:System.Windows.Forms.DataGridView.CellValuePushed>事件處理常式。  
  
 這個方法會導致無效的資料格中，強制要擷取新的值，透過控制項<xref:System.Windows.Forms.DataGridView.CellValueNeeded>事件處理常式，並套用任何作用中的自動調整大小模式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> 小於零，或大於控制項中的資料行數目減一。  
  
-或- 
 <paramref name="rowIndex" /> 小於零，或大於控制項中的資料列數目減一。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateRowErrorText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>強制一個或多個資料列更新其錯誤文字。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateRowErrorText">
      <MemberSignature Language="C#" Value="public void UpdateRowErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowErrorText (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowErrorText : int -&gt; unit" Usage="dataGridView.UpdateRowErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要更新之資料列的以零起始的索引。</param>
        <summary>強制位於指定資料列索引上的資料列更新其錯誤文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，當您維護資料列的錯誤文字自行處理<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件。 當您變更指定的資料列的預存的錯誤文字時，請呼叫這個方法。 這會強制<xref:System.Windows.Forms.DataGridView>要擷取透過更新的文字控制項<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件處理常式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 不在 0 到控制項中的資料列數目減 1 的有效範圍內。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateRowErrorText">
      <MemberSignature Language="C#" Value="public void UpdateRowErrorText (int rowIndexStart, int rowIndexEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowErrorText(int32 rowIndexStart, int32 rowIndexEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowErrorText (rowIndexStart As Integer, rowIndexEnd As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowErrorText(int rowIndexStart, int rowIndexEnd);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowErrorText : int * int -&gt; unit" Usage="dataGridView.UpdateRowErrorText (rowIndexStart, rowIndexEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndexStart" Type="System.Int32" />
        <Parameter Name="rowIndexEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndexStart">要更新的資料列集合中第一個資料列之以零起始的索引。</param>
        <param name="rowIndexEnd">要更新的資料列集合中最後一個資料列之以零起始的索引。</param>
        <summary>強制指定範圍內的資料列更新其錯誤文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，當您維護資料列的錯誤文字自行處理<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件。 當您變更指定的資料列的預存的錯誤文字時，請呼叫這個方法。 這會強制<xref:System.Windows.Forms.DataGridView>要擷取透過更新的文字控制項<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>事件處理常式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndexStart" /> 不在 0 到控制項中的資料列數目減 1 的有效範圍內。  
  
-或- 
 <paramref name="rowIndexEnd" /> 不在 0 到控制項中的資料列數目減 1 的有效範圍內。  
  
-或- 
 <paramref name="rowIndexEnd" /> 小於 <paramref name="rowIndexStart" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateRowHeightInfo">
      <MemberSignature Language="C#" Value="public void UpdateRowHeightInfo (int rowIndex, bool updateToEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowHeightInfo(int32 rowIndex, bool updateToEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowHeightInfo (rowIndex As Integer, updateToEnd As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowHeightInfo(int rowIndex, bool updateToEnd);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowHeightInfo : int * bool -&gt; unit" Usage="dataGridView.UpdateRowHeightInfo (rowIndex, updateToEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="updateToEnd" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要更新之第一個資料列的以零起始的索引。</param>
        <param name="updateToEnd">
          <see langword="true" /> 表示要更新指定的資料列和所有後續的資料列。</param>
        <summary>強制指定的資料列更新其高度資訊。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法很有用，當您維護的資料列高度使用的處理常式自行<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>和<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>事件。 呼叫這個方法，每當您變更外部預存的資料列高度<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>事件處理常式。 這會強制<xref:System.Windows.Forms.DataGridView>控制項來擷取更新的高度資訊透過<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>事件處理常式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 小於 0 且 <paramref name="updateToEnd" /> 是 <see langword="true" />。  
  
-或- 
 <paramref name="rowIndex" /> 小於 -1 且 <paramref name="updateToEnd" /> 是 <see langword="false" />。  
  
-或- 
 <paramref name="rowIndex" /> 大於 <see cref="P:System.Windows.Forms.DataGridView.Rows" /> 集合中最高的資料列索引。</exception>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="UserAddedRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserAddedRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserAddedRow As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ UserAddedRow;" />
      <MemberSignature Language="F#" Value="member this.UserAddedRow : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.UserAddedRow : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在使用者完成將資料列加入 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.UserAddedRow>事件，以更新標籤，顯示中的項目總數<xref:System.Windows.Forms.DataGridView>。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="UserDeletedRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserDeletedRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserDeletedRow As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ UserDeletedRow;" />
      <MemberSignature Language="F#" Value="member this.UserDeletedRow : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.UserDeletedRow : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在使用者完成從 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項刪除資料列時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.DataGridView.UserDeletedRow>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.DataGridView>名為`DataGridView1`。 請確定 與關聯的事件處理常式<xref:System.Windows.Forms.DataGridView.UserDeletedRow>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#368](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#368)]
 [!code-vb[System.Windows.Forms.EventExamples#368](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#368)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="UserDeletingRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserDeletingRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserDeletingRow As DataGridViewRowCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowCancelEventHandler ^ UserDeletingRow;" />
      <MemberSignature Language="F#" Value="member this.UserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventHandler " Usage="member this.UserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生在使用者從 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項刪除資料列時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要防止資料列刪除，無法完成，就可以取消這個事件。  
  
 如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.DataGridView.UserDeletingRow>事件，以取消刪除的資料列從<xref:System.Windows.Forms.DataGridView>如果起始平衡資料列包含在選取項目。 這個範例是提供之較大範例的一部分<xref:System.Windows.Forms.DataGridView.SelectionChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="UserSetCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor UserSetCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor UserSetCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.UserSetCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSetCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ UserSetCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserSetCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.DataGridView.UserSetCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="P:System.Windows.Forms.Control.Cursor" /> 屬性的預設值或使用者指定的值。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Cursor" />，表示 <see cref="P:System.Windows.Forms.Control.Cursor" /> 屬性的一般值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然您可以設定的值<xref:System.Windows.Forms.Control.Cursor%2A>屬性，根據滑鼠指標的位置，可以變更其值。 使用這個屬性來擷取值的<xref:System.Windows.Forms.Control.Cursor%2A>正常狀態，也就是預設值或在程式碼中指定的值中的屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar VerticalScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar VerticalScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VerticalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VerticalScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ VerticalScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGridView.VerticalScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項的垂直捲軸。</summary>
        <value>表示垂直捲軸的 <see cref="T:System.Windows.Forms.ScrollBar" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollingOffset">
      <MemberSignature Language="C#" Value="public int VerticalScrollingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerticalScrollingOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VerticalScrollingOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalScrollingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VerticalScrollingOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollingOffset : int" Usage="System.Windows.Forms.DataGridView.VerticalScrollingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項要垂直捲動的像素數。</summary>
        <value>控制項要垂直捲動的像素數。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.DataGridView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出您是否已經為 <see cref="T:System.Windows.Forms.DataGridView" /> 控制項提供您自己的資料管理作業。</summary>
        <value>如果 <see cref="T:System.Windows.Forms.DataGridView" /> 使用您提供的資料管理作業，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虛擬模式被設計用於超大型存放庫資料。 當<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>屬性是`true`，您建立<xref:System.Windows.Forms.DataGridView>使用固定數目的資料列和資料行然後的控制代碼<xref:System.Windows.Forms.DataGridView.CellValueNeeded>事件，以填入儲存格。 虛擬模式必須實作以處理母體擴展、 編輯和刪除基礎資料快取<xref:System.Windows.Forms.DataGridView>資料格會根據使用者的動作。 如需有關實作虛擬模式的詳細資訊，請參閱[如何： 在 Windows Form DataGridView 控制項中實作虛擬模式](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)。  
  
 您必須使用虛擬模式來維護未繫結的資料行的值時<xref:System.Windows.Forms.DataGridView>控制項是繫結模式。 不支援未繫結中繫結模式的資料行排序。  
  
   
  
## Examples  
 下列程式碼範例程式碼會使用虛擬模式，來建立資料表的正整數。  
  
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#0)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="dataGridView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">由參考所傳遞的 <see cref="T:System.Windows.Forms.Message" />，代表要處理的視窗訊息。</param>
        <summary>處理視窗訊息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType>基底類別的方法。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/dbee73f2-bba6-4874-9389-cd21d44309be">DataGridView 控制項 (Windows Form)</related>
      </Docs>
    </Member>
  </Members>
</Type>