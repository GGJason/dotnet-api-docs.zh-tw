<Type Name="NumericUpDown" FullName="System.Windows.Forms.NumericUpDown">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65315312ef940ead113d34456222868f98395a2d" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694785" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NumericUpDown : System.Windows.Forms.UpDownBase, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NumericUpDown extends System.Windows.Forms.UpDownBase implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NumericUpDown" />
  <TypeSignature Language="VB.NET" Value="Public Class NumericUpDown&#xA;Inherits UpDownBase&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumericUpDown : System::Windows::Forms::UpDownBase, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UpDownBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表可顯示數值的 Windows 微調方塊 (也稱為上下按鈕控制項)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.NumericUpDown>控制項包含單一數值可以遞增或遞減按一下向上或向下按鈕的控制項。 除非使用者也可以在 [值] 輸入<xref:System.Windows.Forms.UpDownBase.ReadOnly%2A>屬性設定為`true`。  
  
 可以藉由設定格式化的數字顯示<xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>，或<xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>屬性。 若要顯示在控制項中的十六進位值，設定<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性`true`。 若要顯示千分位分隔符號十進位數字在適當的情況下，設定<xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>屬性`true`。 指定顯示的數字的小數符號之後，請設定<xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>要顯示的小數位數的屬性。  
  
 指定之控制項的值的容許範圍，請設定<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>屬性。 設定<xref:System.Windows.Forms.NumericUpDown.Increment%2A>值，以指定的值會遞增或遞減至<xref:System.Windows.Forms.NumericUpDown.Value%2A>屬性當使用者按一下向上或向下箭號按鈕。 您可以增加控制項移動透過數字時，使用者持續按下向上或向下箭號設定的速度<xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>屬性。  
  
 當<xref:System.Windows.Forms.NumericUpDown.UpButton%2A>或<xref:System.Windows.Forms.NumericUpDown.DownButton%2A>方法會呼叫、 程式碼中或按一下向上或向下按鈕，驗證新值和控制項也會更新以新的值，以適當的格式。 具體來說，如果<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>屬性設定為`true`、<xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>方法呼叫之前驗證或更新值。 然後確認值介於<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值，而<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>方法呼叫。  
  
 從.NET Framework 4.6 開始<xref:System.Windows.Forms.NumericUpDown>將會根據系統 DPI 設定時的 app.config 檔案包含下列項目調整控制項的大小：  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
   
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.UpDownBase" />
    <altmember cref="T:System.ComponentModel.ISupportInitialize" />
    <altmember cref="T:System.Windows.Forms.DomainUpDown" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumericUpDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumericUpDown();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.NumericUpDown" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="Accelerations">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Accelerations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accelerations As NumericUpDownAccelerationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::NumericUpDownAccelerationCollection ^ Accelerations { System::Windows::Forms::NumericUpDownAccelerationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NumericUpDownAccelerationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控制項的排序加速物件之集合。</summary>
        <value>
          <see cref="T:System.Windows.Forms.NumericUpDownAccelerationCollection" />，包含 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控制項的排序加速物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>屬性可以用來增加的速度<xref:System.Windows.Forms.NumericUpDown>透過大量數字在使用者保留向上或向下箭號，使用鍵盤或滑鼠移動。 設定這個屬性會減少數<xref:System.Windows.Forms.NumericUpDown.ValueChanged>取決於所發生的事件<xref:System.Windows.Forms.NumericUpDownAcceleration.Increment%2A>和<xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A>針對每個指定的屬性值<xref:System.Windows.Forms.NumericUpDownAcceleration>集合中的物件。 <xref:System.Windows.Forms.NumericUpDownAcceleration>集合中包含的物件會依照其<xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A?displayProperty=nameWithType>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>屬性。 若要執行此範例中，將下列程式碼貼到表單，並呼叫`InitializeAcceleratedUpDown`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理方法。 執行程式碼時，按下並按住向上或向下箭號，若要查看發生的加速。  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.NumericUpDownAcceleration" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>開始初始化用於表單或為另一個元件所使用的 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控制項。 初始化發生於執行階段。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為控制項建立新的可及性物件。</summary>
        <returns>控制項新的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="DecimalPlaces">
      <MemberSignature Language="C#" Value="public int DecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在微調方塊 (也稱為上下按鈕控制項) 中顯示的小數位數。</summary>
        <value>在微調方塊中顯示的小數位數。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>設定屬性，則<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>呼叫方法來更新微調方塊顯示成新格式。  
  
 適當的小數符號取決於使用者的作業系統的地區設定。  
  
   
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指派的值小於 0。  
  
 -或-  
  
 指派的值大於 99。</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="DownButton">
      <MemberSignature Language="C#" Value="public override void DownButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DownButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.DownButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DownButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DownButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>減少微調方塊 (也稱為上下按鈕控制項) 的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.NumericUpDown.DownButton%2A>方法呼叫、 程式碼中或按向下按鈕，驗證新值和控制項也會更新以新的值，以適當的格式。 具體來說，如果<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>屬性設定為`true`、<xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>方法呼叫之前驗證或更新值。 然後驗證的值必須介於<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值，而<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>方法呼叫。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>結束初始化用於表單或為另一個元件所使用的 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控制項。 初始化發生於執行階段。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hexadecimal">
      <MemberSignature Language="C#" Value="public bool Hexadecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hexadecimal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property Hexadecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Hexadecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出微調方塊 (也稱為上下按鈕控制項) 是否應顯示包含在十六進位格式中的值。</summary>
        <value>
          如果微調方塊應在十六進位格式中顯示它的值則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>設定屬性，則<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>呼叫方法來更新微調方塊顯示成新格式。  
  
 當<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性設定為`true`、<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>屬性應該設定為<xref:System.Int32.MaxValue?displayProperty=nameWithType>和<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>屬性應該設定為<xref:System.Int32.MinValue?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public decimal Increment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Increment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Property Increment As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Increment { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當按一下向上或向下按鈕時，會遞增或遞減微調方塊 (也稱為上下按鈕控制項) 的數值。</summary>
        <value>當按一下微調方塊的向上或向下按鈕時，會遞增或遞減 <see cref="P:System.Windows.Forms.NumericUpDown.Value" /> 屬性的數值。 預設值為 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 按一下向上按鈕會導致<xref:System.Windows.Forms.NumericUpDown.Value%2A>屬性所指定的數量遞增<xref:System.Windows.Forms.NumericUpDown.Increment%2A>屬性和方法<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>屬性。 按一下向下按鈕會導致<xref:System.Windows.Forms.NumericUpDown.Value%2A>屬性會依指定的數量減少<xref:System.Windows.Forms.NumericUpDown.Increment%2A>屬性和方法<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值不大於或等於零。</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public decimal Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public Property Maximum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Maximum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定微調方塊 (也稱為上下按鈕控制項) 的最大值。</summary>
        <value>微調方塊的最大值。 預設值為 100。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>設定屬性，則<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>會評估屬性和<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>方法呼叫。 如果<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>屬性大於新<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>屬性，<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>屬性值設為等於<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值。 如果目前<xref:System.Windows.Forms.NumericUpDown.Value%2A>大於新<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值。 <xref:System.Windows.Forms.NumericUpDown.Value%2A>屬性值設為等於<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值。  
  
   
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public decimal Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public Property Minimum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Minimum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定微調方塊 (也稱為上下按鈕控制項) 的最小許可值。</summary>
        <value>微調方塊的最小許可值。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>設定屬性，則<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>會評估屬性和<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>方法呼叫。 如果新<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>屬性值大於<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>屬性值<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值設為等於<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>值。 如果<xref:System.Windows.Forms.NumericUpDown.Value%2A>小於新<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>值<xref:System.Windows.Forms.NumericUpDown.Value%2A>屬性也設為等於<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>值。  
  
   
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.NumericUpDown.OnKeyDown%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.NumericUpDown.OnKeyUp%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.LostFocus" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.NumericUpDown.OnLostFocus%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTextBoxKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnTextBoxKeyPress (object source, System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextBoxKeyPress(object source, class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextBoxKeyPress (source As Object, e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextBoxKeyPress(System::Object ^ source, System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件的來源。</param>
        <param name="e">包含事件資料的 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown>控制項接受只有數字、 負號、 小數點和編輯按鍵，例如退格鍵。 如果<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性設定為`true`，<xref:System.Windows.Forms.NumericUpDown>接受十六進位數字。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.NumericUpDown.ValueChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.NumericUpDown.OnValueChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定介於 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控制項邊緣與其內容之間的空格。</summary>
        <value>
          所有情況下都是 <see cref="F:System.Windows.Forms.Padding.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Windows.Forms.NumericUpDown.Padding%2A>屬性不會影響的外觀<xref:System.Windows.Forms.NumericUpDown>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>會在 <see cref="P:System.Windows.Forms.NumericUpDown.Padding" /> 屬性的值變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseEditText">
      <MemberSignature Language="C#" Value="protected void ParseEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ParseEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ParseEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ParseEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將微調方塊 (也稱為上下按鈕控制項) 中所顯示的文字轉換為數值，並加以評估。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>屬性設定為`true`，顯示的文字會轉換為數值，讓它可以驗證必須介於<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>屬性值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.UpDownBase.UserEdit" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控制項中顯示的文字。</summary>
        <value>
          <see langword="Null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.Text%2A>的外觀會有任何作用<xref:System.Windows.Forms.NumericUpDown>控制; 因此，它隱藏在設計工具，以及從 IntelliSense。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>會在 <see cref="P:System.Windows.Forms.NumericUpDown.Text" /> 屬性的值變更時發生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public bool ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThousandsSeparator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出在適當的時候是否在微調方塊 (也稱為上下按鈕控制項) 顯示千位分隔符號。</summary>
        <value>
          如果在適當的時候於微調方塊顯示千位分隔符號則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>設定屬性，則<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>呼叫方法來更新微調方塊顯示成新格式。  
  
 適當的千位分隔符號取決於使用者的作業系統的地區設定。  
  
   
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回表示 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控制項的字串。</summary>
        <returns>字串，表示目前 <see cref="T:System.Windows.Forms.NumericUpDown" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回字串包含類型和值<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpButton">
      <MemberSignature Language="C#" Value="public override void UpButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>增加微調方塊 (也稱為上下按鈕控制項) 的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.NumericUpDown.UpButton%2A>方法呼叫、 程式碼中或按一下向上按鈕，驗證新值和控制項也會更新以新的值，以適當的格式。 具體來說，如果<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>設`true`，<xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>在驗證或更新值之前呼叫。 然後驗證的值必須介於<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值和<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>方法呼叫。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.DownButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="UpdateEditText">
      <MemberSignature Language="C#" Value="protected override void UpdateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以適當的格式顯示微調方塊 (也稱為上下按鈕控制項) 的目前值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未初始化的微調方塊，目前的值會驗證介於<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值，並且會轉換成控制項中顯示正確的格式。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEditText">
      <MemberSignature Language="C#" Value="protected override void ValidateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ValidateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>驗證和更新微調方塊 (也稱為上下按鈕控制項) 所顯示的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.ValidateEditText%2A>方法呼叫<xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>和<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>方法來驗證和更新微調方塊的顯示。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public decimal Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Value { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定指定給微調方塊 (也稱為上下按鈕控制項) 的數值。</summary>
        <value>
          <see cref="T:System.Windows.Forms.NumericUpDown" /> 控制項的數值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.NumericUpDown.Value%2A>屬性設定，驗證新值必須介於<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值。 接著，<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>呼叫方法來更新微調方塊顯示使用新的值以適當的格式。  
  
   
  
## Examples  
 下列程式碼範例會建立並初始化<xref:System.Windows.Forms.NumericUpDown>控制設定的某些常見的屬性和可讓使用者在執行階段變更其中一些屬性。 此程式碼假設三個<xref:System.Windows.Forms.CheckBox>控制項放置在表單和處理常式，如其<xref:System.Windows.Forms.Control.Click>事件具現化。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>屬性會設<xref:System.Windows.Forms.Control.Click>事件的每個核取方塊。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指派的值小於 <see cref="P:System.Windows.Forms.NumericUpDown.Minimum" /> 屬性值。  
  
 -或-  
  
 指派的值大於 <see cref="P:System.Windows.Forms.NumericUpDown.Maximum" /> 屬性值。</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Forms.NumericUpDown.Value" /> 屬性已經以某種方式變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如<xref:System.Windows.Forms.NumericUpDown.ValueChanged>事件發生，<xref:System.Windows.Forms.NumericUpDown.Value%2A>屬性可以變更程式碼中，依序按一下向上或向下按鈕，或由使用者輸入新值，這個控制項所讀取的值。 當使用者按 ENTER 鍵，或移動離開該控制項時，會讀取新的值。 如果使用者輸入新值，然後按一下 向上或向下按鈕，<xref:System.Windows.Forms.NumericUpDown.ValueChanged>事件就會發生兩次。  
  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.NumericUpDown.ValueChanged>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>與<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.NumericUpDown>名為`NumericUpDown1`。 請確定事件處理常式關聯<xref:System.Windows.Forms.NumericUpDown.ValueChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#515](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#515)]
 [!code-vb[System.Windows.Forms.EventExamples#515](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#515)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
      </Docs>
    </Member>
  </Members>
</Type>