<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Application.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523cf5709c7b9981a55cf02267bf0f36cec7fa6ac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23cf5709c7b9981a55cf02267bf0f36cec7fa6ac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Provides <ph id="ph1">&lt;see langword="static" /&gt;</ph> methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see langword="static" /&gt;</ph> 方法和屬性以管理應用程式，例如使用方法啟動或停止應用程式、處理 Windows 訊息，以及使用屬性取得有關應用程式的資訊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has methods to start and stop applications and threads, and to process Windows messages, as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph>類別具有啟動和停止應用程式和執行緒，以及處理 Windows 訊息，如下所示的方法：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> starts an application message loop on the current thread and, optionally, makes a form visible.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 目前的執行緒上啟動應用程式訊息迴圈，並選擇性地讓表單成為可見。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> stops a message loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 或<ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>停止訊息迴圈。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> processes messages while your program is in a loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 您的程式時在迴圈中處理訊息。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt;</ph> adds a message filter to the application message pump to monitor Windows messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt;</ph> 將訊息篩選條件加入至應用程式訊息幫浦來監視 Windows 訊息。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> lets you stop an event from being raised or perform special operations before invoking an event handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> 可讓您停止引發事件或執行特殊作業之前叫用事件處理常式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>This class has <ph id="ph1">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt;</ph> properties to get or set culture information for the current thread.</source>
          <target state="translated">這個類別具有<ph id="ph1">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt;</ph>屬性來取得或設定文化特性的目前執行緒的資訊。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>You cannot create an instance of this class.</source>
          <target state="translated">您無法建立此類別的執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">下列程式碼範例會列出在表單上的清單方塊中的數字。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">每次您按一下<ph id="ph1">`button1`</ph>，應用程式會將另一個數字加入至清單。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph> and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>啟動應用程式，會建立表單，<ph id="ph3">`listBox1`</ph>和<ph id="ph4">`button1`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">當使用者按一下<ph id="ph1">`button1`</ph>、<ph id="ph2">`button1_Click`</ph>方法顯示<ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>If the user clicks <ph id="ph1">`No`</ph> on the <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph3">`button1_Click`</ph> method adds a number to the list.</source>
          <target state="translated">如果使用者按一下<ph id="ph1">`No`</ph>上<ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>、<ph id="ph3">`button1_Click`</ph>方法會將數字加入至清單。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>If the user clicks <ph id="ph1">`Yes`</ph>, the application calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">如果使用者按一下<ph id="ph1">`Yes`</ph>，應用程式會呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>處理所有剩餘的訊息佇列中，然後結束。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The call to <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> will fail in partial trust.</source>
          <target state="translated">若要呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>在部分信任中將會失敗。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> interface you want to install.</source>
          <target state="translated">您想要安裝的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> 介面實作。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Adds a message filter to monitor Windows messages as they are routed to their destinations.</source>
          <target state="translated">加入訊息篩選器，以在 Windows 訊息被傳送到它們的目的地時加以監視。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler.</source>
          <target state="translated">若要避免引發特定事件或執行特殊作業之前它會傳遞至事件處理常式的事件，請使用訊息篩選條件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Message filters are unique to a specific thread.</source>
          <target state="translated">訊息篩選條件均是獨一無二特定執行緒。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>To prevent a message from being dispatched, the <ph id="ph1">`value`</ph> parameter instance that you pass to this method must override the <ph id="ph2">&lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A&gt;</ph> method with the code to handle the message.</source>
          <target state="translated">若要防止訊息分派，<ph id="ph1">`value`</ph>傳遞給這個方法的參數執行個體必須覆寫<ph id="ph2">&lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A&gt;</ph>方法的程式碼，以處理訊息。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The method must return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">此方法必須傳回 <ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Adding message filters to the message pump for an application can degrade performance.</source>
          <target state="translated">將訊息篩選條件加入至應用程式的訊息幫浦，可能會降低效能。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The following code example creates a message filter called <ph id="ph1">`TestMessageFilter`</ph>.</source>
          <target state="translated">下列程式碼範例會建立訊息篩選條件呼叫<ph id="ph1">`TestMessageFilter`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>This filter blocks all messages relating to the left mouse button.</source>
          <target state="translated">此篩選條件區塊與滑鼠左的按鈕相關的所有訊息。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Before you can use a message filter, you must provide an implementation for the <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> interface.</source>
          <target state="translated">您可以使用訊息篩選條件之前，您必須提供實作<ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">立即呼叫者呼叫 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>Gets a value indicating whether the caller can quit this application.</source>
          <target state="translated">取得值，表示呼叫端是否可以終止這個應用程式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the caller can quit this application; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果呼叫端可以終止這個應用程式，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>This property returns <ph id="ph1">`false`</ph> if it is called from a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> being hosted within a Web browser.</source>
          <target state="translated">這個屬性會傳回<ph id="ph1">`false`</ph>如果它從呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>裝載 Web 瀏覽器中。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>Thus, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> cannot quit the <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph>.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>無法結束<ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>Occurs when the application is about to shut down.</source>
          <target state="translated">發生在應用程式即將關閉時。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>You must attach the event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> event to perform unhandled, required tasks before the application stops running.</source>
          <target state="translated">您必須將附加事件處理常式，<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>事件以執行未處理，應用程式停止執行之前的必要工作。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.</source>
          <target state="translated">您可以關閉此應用程式或處置的物件記憶體回收沒有收回所開啟的檔案。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>Because this is a static event, you must detach any event handlers attached to this event in the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event handler itself.</source>
          <target state="translated">因為這是靜態事件，您必須中斷連結附加至這個事件中任何事件處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph>本身的事件處理常式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>If you do not detach these handlers, they will remain attached to the event and continue to consume memory.</source>
          <target state="translated">如果您不是這些處理常式的中斷連結，它們會維持附加至事件，並繼續消耗記憶體。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">下列程式碼範例會顯示兩種形式，並結束應用程式，這兩個表單關閉時。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">當應用程式啟動，並結束時，會記住每個表單的位置。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>This example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event to know when the form positions should be persisted to the file, and when the <ph id="ph2">`FileStream`</ph> should be closed.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph>事件，以瞭解當表單位置應該保存至檔案，以及當<ph id="ph2">`FileStream`</ph>應該關閉。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track of when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">類別<ph id="ph1">`MyApplicationContext`</ph>繼承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>並追蹤每個表單會關閉，而在這兩個時結束目前的執行緒時。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The class remembers the position of each form when it is closed.</source>
          <target state="translated">類別在它關閉時，會記住每個表單的位置。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event occurs, the class writes the positions of each for the user to the file.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph>事件發生時，類別會寫入檔案中的每個使用者的位置。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The form position data is stored in a file titled <ph id="ph1">`appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">表單位置的資料儲存在檔案標題為<ph id="ph1">`appdata.txt`</ph>位置取決於建立<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法呼叫<ph id="ph2">`Application.Run(context)`</ph>啟動應用程式指定<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">此程式碼是摘錄自中顯示的範例<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>類別概觀。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>整個程式碼清單。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>Gets the path for the application data that is shared among all users.</source>
          <target state="translated">取得所有使用者之間共用之應用程式資料的路徑。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>The path for the application data that is shared among all users.</source>
          <target state="translated">所有使用者之間共用之應用程式資料的路徑。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">如果路徑不存在，會以下列格式建立一個：</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>基底路徑<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> first looks to see if the assembly containing the main executable has the <ph id="ph2">`AssemblyInformationalVersion`</ph> attribute on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> 第一個查詢，包含主要可執行檔的組件是否具有<ph id="ph2">`AssemblyInformationalVersion`</ph>在其上的屬性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If this attribute exists, it is used for both <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">如果這個屬性存在，它同時用於<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If this attribute does not exist, both properties use the version of the executable file instead.</source>
          <target state="translated">如果這個屬性不存在，這兩個屬性改為使用可執行檔的版本。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>The path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">路徑會根據在 Windows Forms 應用程式是否部署使用不同<ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 應用程式會儲存在 C:\Documents and Settings 中的每個使用者應用程式快取<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>目錄。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>存取本機和 ClickOnce 應用程式中的遠端資料<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>Gets the registry key for the application data that is shared among all users.</source>
          <target state="translated">取得所有使用者之間共用之應用程式資料的登錄機碼。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> representing the registry key of the application data that is shared among all users.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph>，代表所有使用者之間共用之應用程式資料的登錄機碼。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>If the key does not exist, it is created in the following format:</source>
          <target state="translated">如果索引鍵不存在，就會建立以下列格式：</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>LocalMachine\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated">LocalMachine\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>Gets the company name associated with the application.</source>
          <target state="translated">取得與應用程式關聯的公司名稱。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The company name.</source>
          <target state="translated">公司名稱。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下列程式碼範例會取得這個屬性和其值顯示在文字方塊中。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">這個範例需要<ph id="ph1">`textBox1`</ph>已放在表單上。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>Gets or sets the culture information for the current thread.</source>
          <target state="translated">取得或設定目前執行緒的文化特性資訊。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> representing the culture information for the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>，代表目前執行緒的文化特性資訊。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下列程式碼範例會取得這個屬性和其值顯示在文字方塊中。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">這個範例需要<ph id="ph1">`textBox1`</ph>已放在表單上。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>for all windows to set this property.</source>
          <target state="translated">若要設定此屬性的所有視窗。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>Gets or sets the current input language for the current thread.</source>
          <target state="translated">取得或設定目前執行緒的目前輸入語言。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguage" /&gt;</ph> representing the current input language for the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguage" /&gt;</ph>，代表目前執行緒的目前輸入語言。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下列程式碼範例會取得這個屬性和其值顯示在文字方塊中。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">這個範例需要<ph id="ph1">`textBox1`</ph>已放在表單上。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">立即呼叫者呼叫 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Processes all Windows messages currently in the message queue.</source>
          <target state="translated">處理目前在訊息佇列中的所有 Windows 訊息。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When you run a Windows Form, it creates the new form, which then waits for events to handle.</source>
          <target state="translated">當您執行 Windows Form 時，它會建立新的表單中，然後等候處理的事件。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Each time the form handles an event, it processes all the code associated with that event.</source>
          <target state="translated">表單處理事件時，每次它處理與該事件相關聯的所有程式碼。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>All other events wait in the queue.</source>
          <target state="translated">在佇列中等候所有其他事件。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>While your code handles the event, your application does not respond.</source>
          <target state="translated">當您的程式碼處理事件時，您的應用程式沒有回應。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For example, the window does not repaint if another window is dragged on top.</source>
          <target state="translated">例如，視窗不會重新繪製如果拖曳至另一個視窗頂端。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> in your code, your application can handle the other events.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>程式碼，在您的應用程式可以處理其他事件。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For example, if you have a form that adds data to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> and add <ph id="ph2">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> to your code, your form repaints when another window is dragged over it.</source>
          <target state="translated">例如，如果您有將資料加入至表單<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>並加入<ph id="ph2">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>至程式碼，您的表單會重新繪製其拖曳至另一個視窗時。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you remove <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> from your code, your form will not repaint until the click event handler of the button is finished executing.</source>
          <target state="translated">如果您移除<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>從程式碼中，您的表單將不重新繪製按鈕的 click 事件處理常式完成之前執行。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For more information on messaging, see <bpt id="p1">[</bpt>User Input in Windows Forms<ept id="p1">](~/docs/framework/winforms/user-input-in-windows-forms.md)</ept>.</source>
          <target state="translated">如需有關訊息的詳細資訊，請參閱<bpt id="p1">[</bpt>Windows Form 中的使用者輸入<ept id="p1">](~/docs/framework/winforms/user-input-in-windows-forms.md)</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Unlike Visual Basic 6.0, the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method does not call the <ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">與不同的是 Visual Basic 6.0<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>方法不會呼叫<ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Typically, you use this method in a loop to process messages.</source>
          <target state="translated">一般而言，您可以使用這個方法來處理訊息迴圈中。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Calling this method causes the current thread to be suspended while all waiting window messages are processed.</source>
          <target state="translated">呼叫這個方法會導致所有等候的視窗訊息都處理時，暫止目前的執行緒。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If a message causes an event to be triggered, then other areas of your application code may execute.</source>
          <target state="translated">如果訊息導致觸發事件，可能會執行的應用程式程式碼其他區域。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>This can cause your application to exhibit unexpected behaviors that are difficult to debug.</source>
          <target state="translated">這會造成您的應用程式發生非預期的行為很難進行偵錯。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread.</source>
          <target state="translated">如果您執行作業或需要長時間的計算，通常最好是執行新的執行緒上的那些作業。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For more information about asynchronous programming, see <bpt id="p1">[</bpt>Asynchronous Programming Model (APM)<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)</ept>.</source>
          <target state="translated">如需有關非同步程式設計的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步程式設計模型 (APM)<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)</ept>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When the example runs, a user can select graphics files from an <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>.</source>
          <target state="translated">此範例執行時，使用者可以選取從圖形檔<ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The selected files are displayed in the form.</source>
          <target state="translated">選取的檔案會顯示在表單中。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method forces a repaint of the form for each graphics file opened.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>方法會強制重新繪製的每個圖形開啟的檔案格式。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>To run this example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> named <ph id="ph2">`PictureBox1`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> named <ph id="ph4">`OpenFileDialog1`</ph>, and a button named <ph id="ph5">`fileButton`</ph>.</source>
          <target state="translated">若要執行此範例中，貼上下列程式碼中表單，其中包含<ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>名為<ph id="ph2">`PictureBox1`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>名為<ph id="ph4">`OpenFileDialog1`</ph>，和名為按鈕<ph id="ph5">`fileButton`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Call the <ph id="ph1">`InitializePictureBox`</ph> and <ph id="ph2">`InitializeOpenFileDialog`</ph> methods from the form's constructor or <ph id="ph3">`Load`</ph> method.</source>
          <target state="translated">呼叫<ph id="ph1">`InitializePictureBox`</ph>和<ph id="ph2">`InitializeOpenFileDialog`</ph>從表單的建構函式的方法或<ph id="ph3">`Load`</ph>方法。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>In <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, if you add an <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> to your form by using a drag operation, you will have to modify the following <ph id="ph3">`InitializeOpenFileDialog`</ph> method by removing the line that creates a new instance of <ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>，如果您將新增<ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>至您使用拖放作業的表單，您就必須修改下列<ph id="ph3">`InitializeOpenFileDialog`</ph>方法藉由移除建立的新執行個體的行<ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The example also requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control and the <ph id="ph3">&lt;xref:System.Windows.Forms.FileDialog.FileOk&gt;</ph> event of the <ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> are connected to the event handlers defined in the example.</source>
          <target state="translated">這個範例也需要<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項和<ph id="ph3">&lt;xref:System.Windows.Forms.FileDialog.FileOk&gt;</ph>事件<ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>連線到範例中定義的事件處理常式。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When the example is running, display the dialog box by clicking the button.</source>
          <target state="translated">執行範例時，請按一下按鈕顯示對話方塊。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Enables visual styles for the application.</source>
          <target state="translated">為應用程式啟用視覺化樣式。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>This method enables visual styles for the application.</source>
          <target state="translated">這個方法可讓應用程式的視覺化樣式。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Visual styles are the colors, fonts, and other visual elements that form an operating system theme.</source>
          <target state="translated">視覺化樣式，則色彩、 字型和其他視覺化項目形成作業系統佈景主題。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Controls will draw with visual styles if the control and the operating system support it.</source>
          <target state="translated">如果控制項與作業系統支援，會使用視覺化樣式繪製控制項。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>To have an effect, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> must be called before creating any controls in the application; typically, <ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> is the first line in the <ph id="ph3">`Main`</ph> function.</source>
          <target state="translated">產生的效果，<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>必須先呼叫才能建立應用程式; 中的任何控制項通常<ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>中的第一行<ph id="ph3">`Main`</ph>函式。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>A separate manifest is not required to enable visual styles when calling <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>.</source>
          <target state="translated">不需要個別的資訊清單呼叫時，啟用視覺化樣式<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Prior to the .NET Framework 2.0, the <ph id="ph1">`FlatStyle`</ph> property of some controls, such as controls that derive from <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>, had to be set to <ph id="ph3">&lt;xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType&gt;</ph> in order for the controls to be drawn with visual styles.</source>
          <target state="translated">在.NET Framework 2.0 中前,<ph id="ph1">`FlatStyle`</ph>部分控制項，例如衍生自控制項的屬性<ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>，必須設定為<ph id="ph3">&lt;xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType&gt;</ph>若要使用視覺化樣式繪製控制項的順序。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>In applications written with the .NET Framework 2.0, this is no longer necessary.</source>
          <target state="translated">在以.NET Framework 2.0 撰寫的應用程式，這是不再需要。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>This method will have no effect for controls hosted in Internet Explorer.</source>
          <target state="translated">這個方法不會影響的控制項裝載於 Internet Explorer。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>The following code example demonstrates calling <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph> in the <ph id="ph2">`Main`</ph> function to enable visual styles for the application.</source>
          <target state="translated">下列程式碼範例示範呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph>中<ph id="ph2">`Main`</ph>函式來啟用應用程式的視覺化樣式。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Occurs when the application is about to enter a modal state.</source>
          <target state="translated">在應用程式即將進入強制回應狀態時發生。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph> event.</source>
          <target state="translated">若要執行範例程式碼，將它貼到 Windows Form 並確認事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Requires <ph id="ph1">&lt;see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /&gt;</ph> permission to listen to the event.</source>
          <target state="translated">需要<ph id="ph1">&lt;see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /&gt;</ph>接聽事件的權限。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>Gets the path for the executable file that started the application, including the executable name.</source>
          <target state="translated">取得啟動應用程式的可執行檔路徑，包括檔名。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>The path and executable name for the executable file that started the application.</source>
          <target state="translated">啟動應用程式的可執行檔路徑和檔名。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>This path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">這個路徑會依據是否使用 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 來部署 Windows Forms 應用程式而有所不同。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 應用程式會儲存在 C:\Documents and Settings 中的每個使用者應用程式快取<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>目錄。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>存取本機和 ClickOnce 應用程式中的遠端資料<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>for getting the path.</source>
          <target state="translated">取得路徑。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">通知所有必須結束的訊息幫浦，接著在訊息處理完成之後關閉所有應用程式視窗。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">通知所有必須結束的訊息幫浦，接著在訊息處理完成之後關閉所有應用程式視窗。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method stops all running message loops on all threads and closes all windows of the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法會停止所有執行緒上的所有執行訊息迴圈，並關閉應用程式的所有視窗。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>This method does not necessarily force the application to exit.</source>
          <target state="translated">這個方法不一定會強制結束應用程式。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method is typically called from within a message loop, and forces <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to return.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法通常從呼叫內的訊息迴圈，並強制<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>傳回。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>To exit a message loop for the current thread only, call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>.</source>
          <target state="translated">若要結束目前執行緒的訊息迴圈，請呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> raises the following events and performs the associated conditional actions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 會引發下列事件，並執行相關聯的條件動作：</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised for every form represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> property.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>引發由每個表單<ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>This event can be canceled by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of their <ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> parameter to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">這個事件可以藉由設定取消<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性其<ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph>參數<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If one of more of the handlers cancels the event, then <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> returns without further action.</source>
          <target state="translated">如果一或多個處理常式會取消事件，然後<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>傳回不需要進一步動作。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Otherwise, a <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event is raised for every open form, then all running message loops and forms are closed.</source>
          <target state="translated">否則，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>就會引發事件，每個開啟的表單，則會關閉所有正在執行訊息迴圈和表單。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method does not raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events, which are obsolete as of <ph id="ph4">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法不會引發<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>事件，也就是過時的<ph id="ph4">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">下列程式碼範例會列出在表單上的清單方塊中的數字。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">每次您按一下<ph id="ph1">`button1`</ph>，應用程式會將另一個數字加入至清單。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph>, and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>啟動應用程式，會建立表單， <ph id="ph3">`listBox1`</ph>，和<ph id="ph4">`button1`</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method adds numbers one to three to the list box, and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">當使用者按一下<ph id="ph1">`button1`</ph>、<ph id="ph2">`button1_Click`</ph>方法將數字一到三個清單方塊中，並顯示<ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If the user clicks <bpt id="p1">**</bpt>No<ept id="p1">**</ept> on the <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph2">`button1_Click`</ph> method adds another number to the list.</source>
          <target state="translated">如果使用者按一下<bpt id="p1">**</bpt>否<ept id="p1">**</ept>上<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>、<ph id="ph2">`button1_Click`</ph>方法會將另一個數字加入至清單。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If the user clicks <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>, the application calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>, to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">如果使用者按一下<bpt id="p1">**</bpt>是<ept id="p1">**</ept>，應用程式會呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>，來處理所有剩餘的訊息佇列中，然後結束。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The example requires that <ph id="ph1">`listBox1`</ph> and <ph id="ph2">`button1`</ph> have been instantiated and placed on a form.</source>
          <target state="translated">這個範例需要<ph id="ph1">`listBox1`</ph>和<ph id="ph2">`button1`</ph>具現化並放置在表單上。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">立即呼叫者呼叫 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Returns whether any <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> within the application cancelled the exit.</source>
          <target state="translated">傳回在應用程式內是否有任何 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 取消結束。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">通知所有必須結束的訊息幫浦，接著在訊息處理完成之後關閉所有應用程式視窗。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>For permission to terminate a running application thread.</source>
          <target state="translated">結束正在執行的權限的應用程式執行緒。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Exits the message loop on the current thread and closes all windows on the thread.</source>
          <target state="translated">結束目前執行緒的訊息迴圈，並關閉執行緒上的所有視窗。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Use this method to exit the message loop of the current thread.</source>
          <target state="translated">您可以使用這個方法來結束目前執行緒的訊息迴圈。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>This method causes the call to <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> for the current thread to return.</source>
          <target state="translated">這個方法會導致呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>傳回目前的執行緒。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>To exit the entire application, call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>.</source>
          <target state="translated">若要結束整個應用程式，請呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">立即呼叫者呼叫 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source>The Windows event message to filter.</source>
          <target state="translated">要篩選的 Windows 事件訊息。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source>Runs any filters against a window message, and returns a copy of the modified message.</source>
          <target state="translated">針對視窗訊息執行任何篩選條件，並傳回已修改訊息的複本。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the filters were processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已處理篩選，則為 <ph id="ph1">&lt;see langword="True" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.Idle">
          <source>Occurs when the application finishes processing and is about to enter the idle state.</source>
          <target state="translated">發生在應用程式處理完畢並即將進入閒置 (Idle) 狀態時。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>If you have tasks that you must perform before the thread becomes idle, attach them to this event.</source>
          <target state="translated">如果您有必須執行的工作在執行緒閒置之前，將它們附加至這個事件。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>To run the example code, paste it into a Windows Form and make sure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph> event.</source>
          <target state="translated">若要執行範例程式碼，將它貼到 Windows Form，並確定事件處理常式都與<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>Occurs when the application is about to leave a modal state.</source>
          <target state="translated">在應用程式即將離開強制回應狀態時發生。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph> event.</source>
          <target state="translated">若要執行範例程式碼，將它貼到 Windows Form 並確認事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Gets the path for the application data of a local, non-roaming user.</source>
          <target state="translated">取得本機非漫遊使用者的應用程式資料路徑。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The path for the application data of a local, non-roaming user.</source>
          <target state="translated">本機非漫遊使用者的應用程式資料路徑。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>A local user is one whose user profile is stored on the system on which the user logged on.</source>
          <target state="translated">本機使用者，是其使用者設定檔儲存在使用者登入所在系統上。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">如果路徑不存在，會以下列格式建立一個：</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>基底路徑<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>A typical base path is C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Local Settings\Application Data.</source>
          <target state="translated">典型的基底路徑是 C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Local Settings\Application 資料。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>This path will be different, however, if the Windows Forms application is deployed by using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">這個路徑可能會不同，不過，如果在 Windows Forms 應用程式部署使用<ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> creates its own application data directory that is isolated from all other applications.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 建立自己的應用程式資料目錄，且與所有其他應用程式隔離。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>存取本機和 ClickOnce 應用程式中的遠端資料<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">下列程式碼範例會顯示兩種形式，並結束應用程式，這兩個表單關閉時。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">當應用程式啟動，並結束時，會記住每個表單的位置。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Although this example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph> property to store application data for the user, the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph> can be used instead.</source>
          <target state="translated">雖然此範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>屬性來儲存使用者的應用程式資料<ph id="ph2">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph>可改為使用。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The <ph id="ph1">`MyApplicationContext`</ph> class inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated"><ph id="ph1">`MyApplicationContext`</ph>類別繼承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>和會持續追蹤每個表單會關閉，而在這兩個時結束目前的執行緒時。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">類別會儲存使用者的每個表單的位置。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">表單位置的資料儲存在檔案標題為<ph id="ph1">`Appdata.txt`</ph>位置取決於建立<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法呼叫<ph id="ph2">`Application.Run(context)`</ph>啟動應用程式指定<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">此程式碼是摘錄自中顯示的範例<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>類別概觀。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">為了簡潔起見，不會顯示一些程式碼。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>整個程式碼清單。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>Gets a value indicating whether a message loop exists on this thread.</source>
          <target state="translated">取得值，表示訊息迴圈是否存在於這個執行緒。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a message loop exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果訊息迴圈存在，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">在其他環境，例如未受管理的應用程式中裝載 Windows Form 時一律會傳回這個屬性<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RegisterMessageLoop%2A&gt;</ph> to instruct Windows Forms if the hosting environment still has an active message loop.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.RegisterMessageLoop%2A&gt;</ph>指示 Windows Form 裝載環境如果仍有作用中的訊息迴圈。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Initializes OLE on the current thread.</source>
          <target state="translated">初始化目前執行緒上的 OLE。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Threading.ApartmentState" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Threading.ApartmentState" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Call this method before calling any <ph id="ph1">`Microsoft.Win32`</ph> method that requires OLE.</source>
          <target state="translated">呼叫這個方法之前呼叫任何<ph id="ph1">`Microsoft.Win32`</ph>需要 OLE 的方法。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OleRequired%2A&gt;</ph> first checks to see if OLE has been initialized on the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OleRequired%2A&gt;</ph> 第一次檢查目前的執行緒上的 OLE 是否尚未初始化。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>If not, it initializes the thread for OLE.</source>
          <target state="translated">如果沒有，它會在執行緒初始化 ole。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Unless a thread calls OLE methods directly, you do not need to call this method.</source>
          <target state="translated">執行緒會直接呼叫 OLE 方法，除非您不需要呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the exception that was thrown.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>，代表擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ThreadException" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ThreadException" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> to raise an exception that will halt processing of the application.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph>引發例外狀況，將會暫止處理的應用程式。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has a <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph>類別具有<ph id="ph2">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions.</source>
          <target state="translated">您可以將事件處理常式附加至這個事件，進行任何自訂處理，您需要的未處理例外狀況。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>If you do not attach an event handler, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.</source>
          <target state="translated">如果您不要附加事件處理常式，<ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph>會執行預設行為，這牽涉到顯示對話方塊通知使用者已經發生錯誤。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> 只會在 Windows Form 所擁有的執行緒上實作，會發生未處理例外狀況的預設例外狀況行為。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Unhandled exceptions on other threads are handled by the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event.</source>
          <target state="translated">在其他執行緒的未處理例外狀況會由<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>Gets a collection of open forms owned by the application.</source>
          <target state="translated">取得應用程式所擁有之開啟表單的集合。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormCollection" /&gt;</ph> containing all the currently open forms owned by this application.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormCollection" /&gt;</ph>，包含所有由這個應用程式所擁有而目前已開啟的表單。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> property represents a read-only collection of forms owned by the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph>屬性表示應用程式所擁有之表單的唯讀集合。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>This collection can be searched by index position or by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">此集合可供搜尋，依索引位置，或由<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>Caller must have permission to access all windows, as defined by the <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> value of the <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph> enumeration.</source>
          <target state="translated">呼叫端必須具有存取所有的 windows 權限所定義<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ProductName">
          <source>Gets the product name associated with this application.</source>
          <target state="translated">取得與這個應用程式關聯的產品名稱。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The product name.</source>
          <target state="translated">產品名稱。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source><ph id="ph1">`ProductName`</ph> is taken from the metadata of the assembly containing the main form of the current application.</source>
          <target state="translated"><ph id="ph1">`ProductName`</ph> 取自包含目前應用程式的主要表單的組件的中繼資料。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>You can set it by setting <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph> inside of your assembly manifest.</source>
          <target state="translated">您可以設定來設定<ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>內組件資訊清單。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>For more information, see <bpt id="p1">[</bpt>Assembly Manifest<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>組件資訊清單<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下列程式碼範例會取得這個屬性和其值顯示在文字方塊中。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">這個範例需要<ph id="ph1">`textBox1`</ph>已放在表單上。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>Gets the product version associated with this application.</source>
          <target state="translated">取得與這個應用程式關聯的產品版本。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The product version.</source>
          <target state="translated">產品版本。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>Typically, a version number displays as <bpt id="p1">*</bpt>major number<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor number<ept id="p2">*</ept>.<bpt id="p3">*</bpt>build number<ept id="p3">*</ept>.<bpt id="p4">*</bpt>private part number<ept id="p4">*</ept>.</source>
          <target state="translated">一般而言，版本號碼會顯示為<bpt id="p1">*</bpt>主要號碼<ept id="p1">*</ept>。<bpt id="p2">*</bpt>次要號碼<ept id="p2">*</ept>。<bpt id="p3">*</bpt>組建編號<ept id="p3">*</ept>。<bpt id="p4">*</bpt>私用部分號碼<ept id="p4">*</ept>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>You can set it explicitly by setting the assembly version within your assembly manifest.</source>
          <target state="translated">您可以將其明確地設定您的組件資訊清單中的組件版本。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>For more information, see <bpt id="p1">[</bpt>Assembly Manifest<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>組件資訊清單<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> first looks to see if the assembly containing the main executable has the <ph id="ph2">`AssemblyInformationalVersion`</ph> attribute on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> 第一個查詢，包含主要可執行檔的組件是否具有<ph id="ph2">`AssemblyInformationalVersion`</ph>在其上的屬性。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>If this attribute exists, it is used for both <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">如果這個屬性存在，它同時用於<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>If this attribute does not exist, both properties use the version of the executable file instead.</source>
          <target state="translated">如果這個屬性不存在，這兩個屬性改為使用可執行檔的版本。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下列程式碼範例會取得這個屬性和其值顯示在文字方塊中。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">這個範例需要<ph id="ph1">`textBox1`</ph>已放在表單上。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> objects to pass to the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> event.</source>
          <target state="translated">傳遞至 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> event in hosted scenarios.</source>
          <target state="translated">引發裝載案例中的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>This method is used when hosting Windows Forms in another environment, such as an unmanaged application.</source>
          <target state="translated">裝載 Windows Form 中另一個環境，例如 unmanaged 應用程式時，會使用這個方法。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>You should call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RaiseIdle%2A&gt;</ph> when the hosting application enters an idle state.</source>
          <target state="translated">您應該呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.RaiseIdle%2A&gt;</ph>裝載的應用程式時進入閒置狀態。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.</source>
          <target state="translated">這可讓某些 Windows Form 控制項和元件來執行重要的背景工作，而不在使用者與應用程式互動。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>The method to call when Windows Forms needs to check if the hosting environment is still sending messages.</source>
          <target state="translated">方法，用於在 Windows Form 需要檢查裝載環境是否仍在傳送訊息時呼叫。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>Registers a callback for checking whether the message loop is running in hosted environments.</source>
          <target state="translated">註冊回呼 (Callback)，以檢查訊息迴圈是否在裝載環境中執行。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>This method is used when hosting Windows Forms in another environment, such as an unmanaged application.</source>
          <target state="translated">裝載 Windows Form 中另一個環境，例如 unmanaged 應用程式時，會使用這個方法。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>In hosted environments, the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.MessageLoop%2A&gt;</ph> property will always return false if Windows Forms is not processing messages.</source>
          <target state="translated">在裝載環境中，<ph id="ph1">&lt;xref:System.Windows.Forms.Application.MessageLoop%2A&gt;</ph>屬性永遠會傳回 false，如果不在 Windows Form 處理訊息。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>Use this callback to tell Windows Forms if the hosting environment is still processing messages.</source>
          <target state="translated">使用這個回呼來告訴 Windows Form 是否裝載環境仍在處理訊息。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> to remove from the application.</source>
          <target state="translated">要從應用程式中移除之 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> 的實作。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Removes a message filter from the message pump of the application.</source>
          <target state="translated">從應用程式的訊息幫浦移除訊息篩選器。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>You can remove a message filter when you no longer want to capture Windows messages before they are dispatched.</source>
          <target state="translated">當您不再想要再分派這些擷取 Windows 訊息時，您可以移除訊息篩選條件。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Before you can use a message filter, you must provide an implementation for the <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> interface.</source>
          <target state="translated">您可以使用訊息篩選條件之前，您必須提供實作<ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The following class creates a message filter called <ph id="ph1">`TestMessageFilter`</ph>.</source>
          <target state="translated">下列類別會建立訊息篩選條件呼叫<ph id="ph1">`TestMessageFilter`</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>This filter blocks all messages relating to the left mouse button.</source>
          <target state="translated">此篩選條件區塊與滑鼠左的按鈕相關的所有訊息。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Gets a value specifying whether the current application is drawing controls with visual styles.</source>
          <target state="translated">取得值，設定目前的應用程式是否以視覺化樣式繪製控制項。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if visual styles are enabled for controls in the client area of application windows; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已在應用程式視窗的工作區中為控制項啟用視覺化樣式，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>If you are drawing a custom control, use this property to decide whether to draw the control with or without visual styles, so that its appearance is consistent with other controls in the application.</source>
          <target state="translated">如果您要繪製的自訂控制項，請使用這個屬性來決定是否要繪製的控制項，不論視覺化樣式，使其外觀與應用程式中其他控制項一致。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The following table shows the four conditions that must exist for <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A&gt;</ph> to return <ph id="ph2">`true`</ph>.</source>
          <target state="translated">下表顯示四個條件必須存在<ph id="ph1">&lt;xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A&gt;</ph>傳回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Condition</source>
          <target state="translated">條件</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The operating system supports visual styles</source>
          <target state="translated">作業系統支援視覺化樣式</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> class.</source>
          <target state="translated">若要個別驗證這個條件，請使用 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A&gt;</ph> 類別的 <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The user has enabled visual styles in the operating system</source>
          <target state="translated">使用者已啟用作業系統中的視覺化樣式</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> class.</source>
          <target state="translated">若要個別驗證這個條件，請使用 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A&gt;</ph> 類別的 <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles are enabled in the application</source>
          <target state="translated">應用程式中啟用視覺化樣式</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles can be enabled in an application by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls.</source>
          <target state="translated">您可以呼叫 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> 方法或使用應用程式資訊清單 (其中指定使用 ComCtl32.dll 6 (含) 以後版本來繪製控制項)，以啟用應用程式中的視覺化樣式。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles are being used to draw the client area of application windows</source>
          <target state="translated">視覺化樣式正被用來繪製的應用程式視窗的工作區</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph> class and verify that it has the value <ph id="ph3">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要個別驗證這個條件，請使用 <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph> 類別的 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> 屬性，並驗證該屬性具有 <ph id="ph3">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType&gt;</ph> 或 <ph id="ph4">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>Shuts down the application and starts a new instance immediately.</source>
          <target state="translated">關閉應用程式並立即啟動新的執行個體。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>The most common reason for calling <ph id="ph1">`Restart`</ph> is to start a new version of the application that you have downloaded through <ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> using the <ph id="ph3">`Update`</ph> or <ph id="ph4">`UpdateAsync`</ph> method.</source>
          <target state="translated">最常見的原因，用於呼叫<ph id="ph1">`Restart`</ph>是啟動新版本的應用程式，您已透過下載<ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>使用<ph id="ph3">`Update`</ph>或<ph id="ph4">`UpdateAsync`</ph>方法。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>Applications are restarted in the context in which they were initially run.</source>
          <target state="translated">應用程式會在其中在最初執行的內容中重新啟動。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application was started using a URL pointing directly to the application's main executable file, it will be restarted using the same URL.</source>
          <target state="translated">使用直接指向應用程式的主要可執行檔的 URL 來啟動您的應用程式時，它會重新啟動使用相同的 URL。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application is a <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> application, it will be restarted using <ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">如果您的應用程式是<ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>應用程式，它將會重新啟動使用<ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application was originally supplied command-line options when it first executed, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Restart%2A&gt;</ph> will launch the application again with the same options.</source>
          <target state="translated">如果當它第一次執行時，您的應用程式原本提供的命令列選項<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Restart%2A&gt;</ph>將會啟動應用程式，再次以相同的選項。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>Your code is not a Windows Forms application.</source>
          <target state="translated">您的程式碼不是 Windows Form 應用程式。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>You cannot call this method in this context.</source>
          <target state="translated">您不能在這個內容中呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>Requires <ph id="ph1">&lt;see cref="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" /&gt;</ph> permission.</source>
          <target state="translated">需要<ph id="ph1">&lt;see cref="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" /&gt;</ph>權限。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Begins running a standard application message loop on the current thread.</source>
          <target state="translated">開始執行目前執行緒的標準應用程式訊息迴圈。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run">
          <source>Begins running a standard application message loop on the current thread, without a form.</source>
          <target state="translated">開始執行目前執行緒的標準應用程式訊息迴圈，而不需表單。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes.</source>
          <target state="translated">在 win32 或 Windows Form 應用程式訊息迴圈是處理使用者事件，例如按一下滑鼠和鍵盤按鍵的程式碼中的常式。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>Every running Windows-based application requires an active message loop, called the main message loop.</source>
          <target state="translated">每個執行的 Windows 架構應用程式需要使用中的訊息迴圈，稱為主要訊息迴圈。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>When the main message loop is closed, the application exits.</source>
          <target state="translated">當關閉主要訊息迴圈時，就會結束應用程式。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>In Windows Forms, this loop is closed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method is called, or when the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> method is called on the thread that is running the main message loop.</source>
          <target state="translated">在 Windows Form 中此迴圈時是否關閉<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>呼叫方法時，或當<ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>正在執行主要訊息迴圈的執行緒上呼叫方法。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>Most Windows Forms developers will not need to use this version of the method.</source>
          <target state="translated">大部分的 Windows Form 開發人員就不需要使用這個版本的方法。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>You should use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29&gt;</ph> overload to start an application with a main form, so that the application terminates when the main form is closed.</source>
          <target state="translated">您應該使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29&gt;</ph>，讓應用程式終止主要表單關閉時，主要表單，以啟動應用程式的多載。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>For all other situations, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29&gt;</ph> overload, which supports supplying an <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> object for better control over the lifetime of the application.</source>
          <target state="translated">對於所有其他情況下，使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29&gt;</ph>多載，可支援提供<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>以便更有效控制應用程式的存留期的物件。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run">
          <source>A main message loop is already running on this thread.</source>
          <target state="translated">主訊息迴圈已經在這個執行緒上執行。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> in which the application is run.</source>
          <target state="translated">執行應用程式的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>Begins running a standard application message loop on the current thread, with an <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> 開始執行目前執行緒的標準應用程式訊息迴圈。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The message loop runs until <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> is called or the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event is raised on the context object.</source>
          <target state="translated">訊息迴圈會執行直到<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>稱為或<ph id="ph3">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>物件上引發事件。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">此範例會顯示兩種形式，這兩個表單關閉時，請結束應用程式。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">當應用程式啟動，並結束時，會記住每個表單的位置。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>This example demonstrates how to use an <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>, along with the <ph id="ph2">`Application.Run(context)`</ph> method, to display multiple forms when the application starts.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>，連同<ph id="ph2">`Application.Run(context)`</ph>方法，以在應用程式啟動時顯示多個表單。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">類別<ph id="ph1">`MyApplicationContext`</ph>繼承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>和會持續追蹤每個表單會關閉，而在這兩個時結束目前的執行緒時。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">類別會儲存使用者的每個表單的位置。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">表單位置的資料儲存在檔案標題為<ph id="ph1">`Appdata.txt`</ph>位置取決於建立<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法呼叫<ph id="ph2">`Application.Run(context)`</ph>啟動應用程式指定<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The code for the <ph id="ph1">`AppForm1`</ph> and <ph id="ph2">`AppForm2`</ph> forms is not shown for the purpose of brevity.</source>
          <target state="translated">程式碼<ph id="ph1">`AppForm1`</ph>和<ph id="ph2">`AppForm2`</ph>表單不會顯示為了簡潔起見。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview for the whole code listing.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>在整個程式碼清單的類別概觀。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>A main message loop is already running on this thread.</source>
          <target state="translated">主訊息迴圈已經在這個執行緒上執行。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the form to make visible.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>，代表要成為可見的表單。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Begins running a standard application message loop on the current thread, and makes the specified form visible.</source>
          <target state="translated">開始執行目前執行緒上的標準應用程式訊息迴圈，並顯示指定的表單。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Typically, the main function of an application calls this method and passes to it the main window of the application.</source>
          <target state="translated">一般而言，應用程式的 main 函式會呼叫這個方法，並將主視窗的應用程式傳遞給它。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>This method adds an event handler to the <ph id="ph1">`mainForm`</ph> parameter for the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event.</source>
          <target state="translated">這個方法會加入事件處理常式<ph id="ph1">`mainForm`</ph>參數<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The event handler calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> to clean up the application.</source>
          <target state="translated">事件處理常式呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>清除應用程式。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> class will be called prior to the return of this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別會呼叫這個方法傳回之前。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">下列程式碼範例會列出在表單上的清單方塊中的數字。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">每次您按一下<ph id="ph1">`button1`</ph>，應用程式會將另一個數字加入至清單。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph>, and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>啟動應用程式，會建立表單， <ph id="ph3">`listBox1`</ph>，和<ph id="ph4">`button1`</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method adds numbers one to three to the list box, and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">當使用者按一下<ph id="ph1">`button1`</ph>、<ph id="ph2">`button1_Click`</ph>方法將數字一到三個清單方塊中，並顯示<ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>If the user clicks <bpt id="p1">**</bpt>No<ept id="p1">**</ept> on the <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph2">`button1_Click`</ph> method adds another number to the list.</source>
          <target state="translated">如果使用者按一下<bpt id="p1">**</bpt>否<ept id="p1">**</ept>上<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>、<ph id="ph2">`button1_Click`</ph>方法會將另一個數字加入至清單。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>If the user clicks <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>, the application calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">如果使用者按一下<bpt id="p1">**</bpt>是<ept id="p1">**</ept>，應用程式會呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>處理所有剩餘的訊息佇列中，然後結束。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The example requires that <ph id="ph1">`listBox1`</ph> and <ph id="ph2">`button1`</ph> have been created and placed on a form.</source>
          <target state="translated">這個範例需要<ph id="ph1">`listBox1`</ph>和<ph id="ph2">`button1`</ph>已建立並在表單上。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>A main message loop is already running on the current thread.</source>
          <target state="translated">主訊息迴圈已經正在目前執行緒中執行。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.</source>
          <target state="translated">當它們以警告橫幅顯示時，取得或設定格式字串以套用至最上層視窗標題。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>The format string to apply to top-level window captions.</source>
          <target state="translated">套用至最上層視窗標題的格式字串。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>for all windows to set this property.</source>
          <target state="translated">若要設定此屬性的所有視窗。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The default value to use for new controls.</source>
          <target state="translated">用於新控制項的預設值。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, new controls that support <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> use the <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> class for text rendering; if <ph id="ph4">&lt;see langword="false" /&gt;</ph>, new controls use the <ph id="ph5">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id="ph6">&lt;see cref="T:System.Windows.Forms.TextRenderer" /&gt;</ph> class.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則支援 <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> 的新控制項會使用以 <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 為基礎的 <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 類別來呈現文字，如果為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，則新控制項會使用以 <ph id="ph5">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 為基礎的 <ph id="ph6">&lt;see cref="T:System.Windows.Forms.TextRenderer" /&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Sets the application-wide default for the <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> property defined on certain controls.</source>
          <target state="translated">為部分控制項上定義的 <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> 屬性設定應用程式範圍的預設值。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Certain Windows Forms controls can render their text using either the <ph id="ph1">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class, which is based on the <ph id="ph2">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> graphics library, or the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> class, which is based on the <ph id="ph4">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> graphics library.</source>
          <target state="translated">特定的 Windows Form 控制項，可以使用其文字呈現<ph id="ph1">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph>類別，根據<ph id="ph2">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph>圖形文件庫，或<ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>類別，根據<ph id="ph4">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>圖形文件庫。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>This change was made in the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> because of performance and localization issues with <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.</source>
          <target state="translated">此變更為了<ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>因為發生效能和當地語系化問題而<ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> to set the default value of the <ph id="ph2">`UseCompatibleTextRendering`</ph> property for controls that support it.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph>設定的預設值<ph id="ph2">`UseCompatibleTextRendering`</ph>支援它的控制項屬性。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The <ph id="ph1">`UseCompatibleTextRendering`</ph> property is intended to provide visual compatibility between Windows Forms controls that render text using the <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class and <ph id="ph3">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> and <ph id="ph4">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> applications that perform custom text rendering using the <ph id="ph5">&lt;xref:System.Drawing.Graphics&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`UseCompatibleTextRendering`</ph>屬性為了提供 visual Windows Form 控制項之間的相容性呈現文字使用<ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph>類別和<ph id="ph3">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph>和<ph id="ph4">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>應用程式，執行自訂文字轉譯使用<ph id="ph5">&lt;xref:System.Drawing.Graphics&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In most cases, if your application is not being upgraded from <ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> or <ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>, it is recommended that you leave <ph id="ph3">`UseCompatibleTextRendering`</ph> set to the default value of <ph id="ph4">`false`</ph>.</source>
          <target state="translated">在大部分情況下，如果您的應用程式未從升級<ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph>或<ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>，建議您保持<ph id="ph3">`UseCompatibleTextRendering`</ph>設定的預設值為<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class was introduced in the <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> to improve performance, make text look better, and improve support for international fonts.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph>基礎<ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph>類別中引進了<ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>為了提升效能，讓文字看起來比較好，並改善的國際字型支援。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> class was used to perform all text rendering.</source>
          <target state="translated">在舊版的<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>、<ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>基礎<ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>類別用來執行所有的文字轉譯。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> calculates character spacing and word wrapping differently from <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 計算字元間距和自動換行以不同的方式從<ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In a Windows Forms application that uses the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> class to render text, this could cause the text for controls that use <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> to appear different from the other text in the application.</source>
          <target state="translated">在 Windows Form 應用程式中使用<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>類別來呈現文字中，這可能會導致使用的控制項的文字<ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph>出現不同的應用程式中的其他文字。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To resolve this incompatibility, you can set the <ph id="ph1">`UseCompatibleTextRendering`</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要解決此不相容，您可以設定<ph id="ph1">`UseCompatibleTextRendering`</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To set <ph id="ph1">`UseCompatibleTextRendering`</ph> to <ph id="ph2">`true`</ph> for all supported controls in the application, call the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> method with a parameter of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">若要設定<ph id="ph1">`UseCompatibleTextRendering`</ph>至<ph id="ph2">`true`</ph>應用程式中所有支援的控制項，呼叫<ph id="ph3">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph>具有參數的方法<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer.</source>
          <target state="translated">如果您的 Windows Form 程式碼裝載在另一個應用程式，例如 Internet Explorer 中，您應該永遠不會呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Only call this method in stand-alone Windows Forms applications.</source>
          <target state="translated">只能在獨立的 Windows Form 應用程式中呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To set the default value for <ph id="ph1">`UseCompatibleTextRendering`</ph> in <ph id="ph2">[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]</ph> or later, see <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要設定的預設值為<ph id="ph1">`UseCompatibleTextRendering`</ph>中<ph id="ph2">[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]</ph>或更新版本中，請參閱<ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In <ph id="ph1">[!INCLUDE[csprcslong](~/includes/csprcslong-md.md)]</ph> or later, a call to <ph id="ph2">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> is automatically generated in the Program.cs file.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[csprcslong](~/includes/csprcslong-md.md)]</ph>或更新版本中，呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph>會自動產生的 Program.cs 檔案中。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To change the text rendering default, modify the generated code.</source>
          <target state="translated">若要變更文字轉譯預設值，修改產生的程式碼。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>You can only call this method before the first window is created by your Windows Forms application.</source>
          <target state="translated">您只可以在 Windows Form 應用程式建立第一個視窗之前呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PowerState" /&gt;</ph> indicating the power activity mode to which to transition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PowerState" /&gt;</ph>，表示要轉換至的電源啟動模式。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to force the suspended mode immediately; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to cause Windows to send a suspend request to every application.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要立即強制執行暫止模式；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示要讓 Windows 向每一個應用程式傳送暫止要求。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to disable restoring the system's power status to active on a wake event, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to enable restoring the system's power status to active on a wake event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要在喚醒事件上停用將系統的電源狀態還原為作用中；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示要在喚醒事件上啟用將系統的電源狀態還原為作用中。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>Suspends or hibernates the system, or requests that the system be suspended or hibernated.</source>
          <target state="translated">讓系統暫止或休眠，或要求讓系統暫止或休眠。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the system is being suspended, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果系統正處於暫止狀態，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated.</source>
          <target state="translated">如果應用程式不會在 20 秒內回應暫停要求，則 Windows 會判斷它處於非回應狀態，和應用程式可能已設定進入睡眠狀態或已結束。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.</source>
          <target state="translated">一旦應用程式回應暫停要求，不過，可能需要清除資源，並關閉使用中處理序需要的間隔時間。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Instructs the application how to respond to unhandled exceptions.</source>
          <target state="translated">指示應用程式如何回應未處理的例外狀況。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">下列程式碼範例會設定 Windows Form 執行緒和其他執行緒上發生的例外狀況發生的例外狀況的事件處理常式。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">它會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>，讓應用程式，不論應用程式的使用者設定檔中的設定會處理所有例外狀況。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">它會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件，以處理 UI 執行緒例外狀況，而<ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>處理非 UI 執行緒的例外狀況的事件。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>無法防止應用程式終止，則只記錄錯誤終止之前在應用程式事件記錄檔。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">這個範例假設您已經定義了兩個<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項<ph id="ph2">`button1`</ph>和<ph id="ph3">`button2`</ph>上您<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> value describing how the application should behave if an exception is thrown without being caught.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> 值，描述如果未攔截到擲回的例外狀況時，應用程式的行為方式。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Instructs the application how to respond to unhandled exceptions.</source>
          <target state="translated">指示應用程式如何回應未處理的例外狀況。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It is often not feasible to catch all of the exceptions thrown by Windows Forms.</source>
          <target state="translated">通常不是可攔截所有的 Windows Form 所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.</source>
          <target state="translated">使用此方法，您可以指示您的應用程式應該攔截所有未處理的 Windows Form 元件所擲回的例外狀況並繼續作業，還是應該將它們公開給使用者並暫止執行。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> before you instantiate the main form of your application using the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> method.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>您具現化您的應用程式使用的主要表單之前<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">攔截無法建立執行緒中發生例外狀況，並擁有的 Windows Form 使用<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件處理常式。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">下列程式碼範例會設定 Windows Form 執行緒和其他執行緒上發生的例外狀況發生的例外狀況的事件處理常式。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">它會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>，讓應用程式，不論應用程式的使用者設定檔中的設定會處理所有例外狀況。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">它會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件，以處理 UI 執行緒例外狀況，而<ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>處理非 UI 執行緒的例外狀況的事件。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>無法防止應用程式終止，則只記錄錯誤終止之前在應用程式事件記錄檔。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">這個範例假設您已經定義了兩個<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項<ph id="ph2">`button1`</ph>和<ph id="ph3">`button2`</ph>上您<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>You cannot set the exception mode after the application has created its first window.</source>
          <target state="translated">您不能在應用程式建立了第一個視窗之後，再設定例外狀況模式。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> value describing how the application should behave if an exception is thrown without being caught.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> 值，描述如果未攔截到擲回的例外狀況時，應用程式的行為方式。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the thread exception mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則會設定執行緒例外狀況模式，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.</source>
          <target state="translated">指示應用程式如何回應未處理例外狀況，並選擇性地套用執行緒專屬的行為。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It is often not feasible to catch all of the exceptions thrown by Windows Forms.</source>
          <target state="translated">通常不是可攔截所有的 Windows Form 所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.</source>
          <target state="translated">使用此方法，您可以指示您的應用程式應該攔截所有未處理的 Windows Form 元件所擲回的例外狀況並繼續作業，還是應該將它們公開給使用者並暫止執行。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> before you instantiate the main form of your application using the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> method.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>您具現化您的應用程式使用的主要表單之前<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>When <ph id="ph1">`threadScope`</ph> is <ph id="ph2">`true`</ph>, the thread exception mode is set.</source>
          <target state="translated">當<ph id="ph1">`threadScope`</ph>是<ph id="ph2">`true`</ph>，設定執行緒例外狀況模式。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The thread exception mode overrides the application exception mode if <ph id="ph1">`mode`</ph> is not set to <ph id="ph2">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>.</source>
          <target state="translated">如果執行緒例外狀況模式覆寫應用程式例外狀況模式<ph id="ph1">`mode`</ph>未設定為<ph id="ph2">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>When <ph id="ph1">`threadScope`</ph> is <ph id="ph2">`false`</ph>, the application exception mode is set.</source>
          <target state="translated">當<ph id="ph1">`threadScope`</ph>是<ph id="ph2">`false`</ph>，應用程式例外狀況模式設定。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The application exception mode is used for all threads that have the <ph id="ph1">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph> mode.</source>
          <target state="translated">應用程式例外狀況模式用於具有的所有執行緒<ph id="ph1">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>模式。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Setting the application exception mode does not affect the setting of the current thread.</source>
          <target state="translated">設定應用程式例外狀況模式不會影響目前執行緒的設定。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">攔截無法建立執行緒中發生例外狀況，並擁有的 Windows Form 使用<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件處理常式。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">下列程式碼範例會設定 Windows Form 執行緒和其他執行緒上發生的例外狀況發生的例外狀況的事件處理常式。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">它會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>，讓應用程式，不論應用程式的使用者設定檔中的設定會處理所有例外狀況。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">它會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件，以處理 UI 執行緒例外狀況，而<ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>處理非 UI 執行緒的例外狀況的事件。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>無法防止應用程式終止，則只記錄錯誤終止之前在應用程式事件記錄檔。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">這個範例假設您已經定義了兩個<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項<ph id="ph2">`button1`</ph>和<ph id="ph3">`button2`</ph>上您<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>You cannot set the exception mode after the application has created its first window.</source>
          <target state="translated">您不能在應用程式建立了第一個視窗之後，再設定例外狀況模式。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>Gets the path for the executable file that started the application, not including the executable name.</source>
          <target state="translated">取得啟動應用程式的可執行檔路徑，不包括檔名。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The path for the executable file that started the application.</source>
          <target state="translated">啟動應用程式的可執行檔路徑。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>This path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">這個路徑會依據是否使用 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 來部署 Windows Forms 應用程式而有所不同。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 應用程式會儲存在 C:\Documents and Settings 中的每個使用者應用程式快取<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>目錄。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>存取本機和 ClickOnce 應用程式中的遠端資料<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下列程式碼範例會取得這個屬性和其值顯示在文字方塊中。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">這個範例需要<ph id="ph1">`textBox1`</ph>已放在表單上。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>for getting the path.</source>
          <target state="translated">取得路徑。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Occurs when an untrapped thread exception is thrown.</source>
          <target state="translated">發生於未被截取的執行緒擲回例外狀況 (Exception) 時。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads.</source>
          <target state="translated">此事件可讓 Windows Forms 應用程式至 Windows Form 執行緒中發生的控制代碼為未處理的例外狀況。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Attach your event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to deal with these exceptions, which will leave your application in an unknown state.</source>
          <target state="translated">附加至事件處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件，以處理這些例外狀況會保留您的應用程式處於未知狀態。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Where possible, exceptions should be handled by a structured exception handling block.</source>
          <target state="translated">可能的話，應該由結構化例外狀況處理區塊中處理例外狀況。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>.</source>
          <target state="translated">您可以變更此回呼由未處理的 Windows Forms 執行緒例外狀況設定是否<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">攔截無法建立執行緒中發生例外狀況，並擁有的 Windows Form 使用<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件處理常式。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>To guarantee that no activations of this event are missed, you must attach a handler before you call <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要保證沒有啟用此事件會遺失，您必須將附加的處理常式呼叫之前<ph id="ph1">&lt;xref:System.Windows.Application.Run%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">下列程式碼範例會設定 Windows Form 執行緒和其他執行緒上發生的例外狀況發生的例外狀況的事件處理常式。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">它會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>，讓應用程式，不論應用程式的使用者設定檔中的設定會處理所有例外狀況。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">它會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件，以處理 UI 執行緒例外狀況，而<ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>處理非 UI 執行緒的例外狀況的事件。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>無法防止應用程式終止，則只記錄錯誤終止之前在應用程式事件記錄檔。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">這個範例假設您已經定義了兩個<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項<ph id="ph2">`button1`</ph>和<ph id="ph3">`button2`</ph>上您<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>for the immediate caller to call unmanaged code when adding a handler to this event.</source>
          <target state="translated">呼叫 unmanaged 程式碼加入此事件處理常式時立即呼叫者。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Occurs when a thread is about to shut down.</source>
          <target state="translated">發生在執行緒即將關閉時。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>When the main thread for an application is about to be shut down, this event is raised first, followed by an <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ApplicationExit" /&gt;</ph> event.</source>
          <target state="translated">當應用程式的主執行緒即將關閉時，會先引發這個事件，接著是 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ApplicationExit" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>You must attach the event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event to perform any unhandled, required tasks before the thread stops running.</source>
          <target state="translated">您必須將附加事件處理常式，<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>事件以執行任何未處理、 執行緒停止執行之前的必要工作。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.</source>
          <target state="translated">關閉這個執行緒或處置的記憶體回收行程未回收的物件所開啟的檔案。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event.</source>
          <target state="translated">若要執行範例程式碼，將它貼到 Windows Form 並確認事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.UnregisterMessageLoop">
          <source>Unregisters the message loop callback made with <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" /&gt;</ph>.</source>
          <target state="translated">移除註冊 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" /&gt;</ph> 所進行的訊息迴圈回呼。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Gets the path for the application data of a user.</source>
          <target state="translated">取得使用者的應用程式資料路徑。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The path for the application data of a user.</source>
          <target state="translated">使用者的應用程式資料路徑。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">如果路徑不存在，會以下列格式建立一個：</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>基底路徑<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Data stored in this path is part of user profile that is enabled for roaming.</source>
          <target state="translated">資料儲存在這個路徑是啟用漫遊使用者設定檔的一部分。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>A roaming user works on more than one computer in a network.</source>
          <target state="translated">漫遊使用者適用於在網路中的多部電腦。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.</source>
          <target state="translated">漫遊使用者的使用者設定檔會保留在網路上的伺服器上時，則載入系統在使用者登入。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.</source>
          <target state="translated">考量漫遊使用者設定檔的作業系統必須支援漫遊設定檔，必須啟用。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>A typical base path is C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Application Data.</source>
          <target state="translated">典型的基底路徑是 C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Application 資料。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This path will be different, however, if the Windows Forms application is deployed by using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">這個路徑可能會不同，不過，如果在 Windows Forms 應用程式部署使用<ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> creates its own application data directory that is isolated from all other applications.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 建立自己的應用程式資料目錄，且與所有其他應用程式隔離。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>存取本機和 ClickOnce 應用程式中的遠端資料<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">下列程式碼範例會顯示兩種形式，並結束應用程式，這兩個表單關閉時。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">當應用程式啟動，並結束時，會記住每個表單的位置。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph> property to store application data for the user.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>屬性來儲存使用者的應用程式資料。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">類別<ph id="ph1">`MyApplicationContext`</ph>繼承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>和會持續追蹤每個表單會關閉，而在這兩個時結束目前的執行緒時。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">類別會儲存使用者的每個表單的位置。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">表單位置的資料儲存在檔案標題為<ph id="ph1">`Appdata.txt`</ph>位置取決於建立<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法呼叫<ph id="ph2">`Application.Run(context)`</ph>啟動應用程式指定<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">此程式碼是摘錄自中顯示的範例<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>類別概觀。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">為了簡潔起見，不會顯示一些程式碼。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>整個程式碼清單。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>Gets the registry key for the application data of a user.</source>
          <target state="translated">取得使用者之應用程式資料的登錄機碼。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> representing the registry key for the application data specific to the user.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> 代表使用者專用之應用程式資料的登錄機碼。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>If the key does not exist, it is created in the following format:</source>
          <target state="translated">如果索引鍵不存在，就會建立以下列格式：</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>CurrentUser\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated">CurrentUser\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>Data stored in this key is part of user profile that is enabled for roaming.</source>
          <target state="translated">資料儲存在這個索引鍵是已啟用漫遊使用者設定檔的一部分。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>A roaming user works on more than one computer in a network.</source>
          <target state="translated">漫遊使用者適用於在網路中的多部電腦。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.</source>
          <target state="translated">漫遊使用者的使用者設定檔會保留在網路上的伺服器上時，則載入系統在使用者登入。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.</source>
          <target state="translated">考量漫遊使用者設定檔的作業系統必須支援漫遊設定檔，必須啟用。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>Gets or sets whether the wait cursor is used for all open forms of the application.</source>
          <target state="translated">取得或設定應用程式的所有開啟表單是否都要使用等待游標。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> is the wait cursor is used for all open forms; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果所有已開啟表單都使用等待游標，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UseWaitCursor%2A&gt;</ph> property of all open forms in the application will be set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">當這個屬性設定為<ph id="ph1">`true`</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.UseWaitCursor%2A&gt;</ph>的應用程式中的所有開啟表單的屬性會設定為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>This call will not return until this property has been set on all forms.</source>
          <target state="translated">直到所有表單上已設定這個屬性，將不會傳回此呼叫。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>Use this property when you have a long-running operation, and want to indicate in all application forms that the operation is still processing.</source>
          <target state="translated">當您有長時間執行的作業，而且想要在所有應用程式表單表示作業仍在處理時，請使用這個屬性。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>Gets a value that specifies how visual styles are applied to application windows.</source>
          <target state="translated">取得值，指定視覺化樣式套用至應用程式視窗的方式。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" /&gt;</ph> 值的位元組合。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>This <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property determines whether visual styles are enabled in client areas or nonclient areas of application windows.</source>
          <target state="translated">這<ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph>屬性會決定用戶端區域或應用程式視窗的非工作區中是否已啟用視覺化樣式。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>Generally, this property should be set within the main form's constructor or <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">一般而言，應該設定這個屬性主要表單的建構函式內或<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>事件處理常式。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property to one of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph> values within the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for a <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">下列程式碼範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph>屬性設為其中的<ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph>值內<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>事件處理常式<ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph>列舉型別。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>