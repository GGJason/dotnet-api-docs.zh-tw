<Type Name="ToolStripLabel" FullName="System.Windows.Forms.ToolStripLabel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3397e6c005dea5d681b2aaf243450c6af532f70e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37563807" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolStripLabel : System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripLabel extends System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripLabel" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStripLabel&#xA;Inherits ToolStripItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripLabel : System::Windows::Forms::ToolStripItem" />
  <TypeSignature Language="F#" Value="type ToolStripLabel = class&#xA;    inherit ToolStripItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Forms.Design.ToolStripItemDesignerAvailability(System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ToolStrip)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示無法選取的 <see cref="T:System.Windows.Forms.ToolStripItem" />，其可呈現文字和影像，並可顯示超連結。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ToolStripLabel>類別來建立的標籤，可呈現文字和影像可實作<xref:System.Windows.Forms.ToolStripItem.TextAlign%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A?displayProperty=nameWithType>屬性。 <xref:System.Windows.Forms.ToolStripLabel>也有許多屬性，讓它顯示一或多個超連結和其他屬性，修改的外觀和行為的超連結。  
  
 <xref:System.Windows.Forms.ToolStripLabel>就像是<xref:System.Windows.Forms.ToolStripButton>，不會根據預設取得焦點並，不會轉譯為推入或反白顯示。  
  
 <xref:System.Windows.Forms.ToolStripLabel> 做為裝載的項目支援 存取金鑰。  
  
 使用<xref:System.Windows.Forms.LinkLabel.LinkColor%2A>， <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A>，並<xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>上的屬性<xref:System.Windows.Forms.ToolStripLabel>若要支援中的連結控制<xref:System.Windows.Forms.ToolStrip>。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ToolStripLabel>藉由設定包含連結<xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>， <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>，<xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A>並<xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A>屬性。  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : System.Drawing.Image -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel image" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">要顯示在 <see cref="T:System.Drawing.Image" /> 上的 <see cref="T:System.Windows.Forms.ToolStripLabel" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 類別的新執行個體，以便指定要顯示的影像。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要顯示在 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 上的文字。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 類別的新執行個體，以便指定要顯示的文字。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text, System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String,System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text, System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string * System.Drawing.Image -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel (text, image)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="text">要顯示在 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 上的文字。</param>
        <param name="image">要顯示在 <see cref="T:System.Drawing.Image" /> 上的 <see cref="T:System.Windows.Forms.ToolStripLabel" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 類別的新執行個體，以便指定要顯示的文字和影像。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text, System.Drawing.Image image, bool isLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, bool isLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String,System.Drawing.Image,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text, System::Drawing::Image ^ image, bool isLink);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string * System.Drawing.Image * bool -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel (text, image, isLink)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="isLink" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">要顯示在 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 上的文字。</param>
        <param name="image">要顯示在 <see cref="T:System.Drawing.Image" /> 上的 <see cref="T:System.Windows.Forms.ToolStripLabel" />。</param>
        <param name="isLink">如果 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 做為連結，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 類別的新執行個體，以便指定要顯示的文字和影像，並指定 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 是否做為連結。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text, System.Drawing.Image image, bool isLink, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, bool isLink, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String,System.Drawing.Image,System.Boolean,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text, System::Drawing::Image ^ image, bool isLink, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string * System.Drawing.Image * bool * EventHandler -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel (text, image, isLink, onClick)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="isLink" Type="System.Boolean" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text">要顯示在 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 上的文字。</param>
        <param name="image">要顯示在 <see cref="T:System.Drawing.Image" /> 上的 <see cref="T:System.Windows.Forms.ToolStripLabel" />。</param>
        <param name="isLink">如果 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 做為連結，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="onClick">
          <see cref="E:System.Windows.Forms.ToolStripItem.Click" /> 事件處理常式。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 類別的新執行個體，以便指定要顯示的文字和影像，指定 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 是否做為連結，並提供 <see cref="E:System.Windows.Forms.ToolStripItem.Click" /> 事件處理常式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text, System.Drawing.Image image, bool isLink, EventHandler onClick, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, bool isLink, class System.EventHandler onClick, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String,System.Drawing.Image,System.Boolean,System.EventHandler,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text, System::Drawing::Image ^ image, bool isLink, EventHandler ^ onClick, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string * System.Drawing.Image * bool * EventHandler * string -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel (text, image, isLink, onClick, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="isLink" Type="System.Boolean" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要顯示在 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 上的文字。</param>
        <param name="image">要顯示在 <see cref="T:System.Drawing.Image" /> 上的 <see cref="T:System.Windows.Forms.ToolStripLabel" />。</param>
        <param name="isLink">如果 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 做為連結，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="onClick">
          <see cref="E:System.Windows.Forms.ToolStripItem.Click" /> 事件處理常式。</param>
        <param name="name">
          <see cref="T:System.Windows.Forms.ToolStripLabel" /> 的名稱。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 類別的新執行個體，以便指定要顯示的文字和影像、指定 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 是否做為連結，並提供 <see cref="E:System.Windows.Forms.ToolStripItem.Click" /> 的 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 事件處理常式和名稱。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ActiveLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ActiveLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.ActiveLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ActiveLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripLabel.ActiveLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示作用中連結的色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示作用中連結顯示的色彩。 預設色彩是由系統所指定。 一般來說，此色彩為 <see langword="Color.Red" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作用中連結會是正在被按下的連結。 這是類似於使用的狀態的<xref:System.Windows.Forms.Button>控制項。 您可以使用這個屬性來指定程序被按下連結時，將會顯示在的連結的色彩。  
  
 沒有與連結相關聯的色彩數目。 <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>指定在顯示的所有連結的色彩<xref:System.Windows.Forms.LinkLabel>控制項。 <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>屬性可讓您指定之連結的色彩之後使用者已瀏覽。  
  
> [!NOTE]
>  設定這個屬性時，請確定所設定要與控制項的背景色彩的不衝突的屬性，或無法正確顯示文字。 例如，如果控制項的背景色彩`Color.Red`和此屬性設定為`Color.Red`，文字不會顯示正確連結正在被按下。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ToolStripLabel>藉由設定包含連結<xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>， <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>，<xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A>並<xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A>屬性。  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public override bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSelect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelect : bool" Usage="System.Windows.Forms.ToolStripLabel.CanSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 的可選取狀態。</summary>
        <value>所有情況下都是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.ToolStripLabel>是無法<xref:System.Windows.Forms.ToolStripItem>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="toolStripLabel.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 <see cref="T:System.Windows.Forms.ToolStripItem" /> 建立新的協助工具物件。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> 的新 <see cref="T:System.Windows.Forms.ToolStripItem" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="IsLink">
      <MemberSignature Language="C#" Value="public bool IsLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLink" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.IsLink" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLink As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLink { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsLink : bool with get, set" Usage="System.Windows.Forms.ToolStripLabel.IsLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 是否為超連結。</summary>
        <value>如果 <see cref="T:System.Windows.Forms.ToolStripLabel" /> 為超連結，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ToolStripLabel>藉由設定包含連結<xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>， <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>，<xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A>並<xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A>屬性。  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkBehavior LinkBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LinkBehavior LinkBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.LinkBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkBehavior As LinkBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkBehavior LinkBehavior { System::Windows::Forms::LinkBehavior get(); void set(System::Windows::Forms::LinkBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.LinkBehavior : System.Windows.Forms.LinkBehavior with get, set" Usage="System.Windows.Forms.ToolStripLabel.LinkBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示連結的行為。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.LinkBehavior" /> 值。 預設值為 <see langword="LinkBehavior.SystemDefault" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可讓您在控制項中顯示時，指定連結的行為。 比方說，如果您想將滑鼠指標位於連結上方時，才顯示底線的連結，您可以設定這個屬性為`LinkBehavior.HoverUnderline`。 更多的類型可以是與連結相關聯的行為的詳細資訊，請參閱<xref:System.Windows.Forms.LinkBehavior>。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ToolStripLabel>藉由設定包含連結<xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>， <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>，<xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A>並<xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A>屬性。  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripLabel.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來顯示一般連結的色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示用來顯示一般連結的色彩。 預設色彩是由系統所指定。 一般來說，此色彩為 <see langword="Color.Blue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ToolStripLabel>藉由設定包含連結<xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>， <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>，<xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A>並<xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A>屬性。  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkVisited">
      <MemberSignature Language="C#" Value="public bool LinkVisited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinkVisited" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.LinkVisited" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkVisited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LinkVisited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LinkVisited : bool with get, set" Usage="System.Windows.Forms.ToolStripLabel.LinkVisited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示是否應該將連結顯示為已瀏覽。</summary>
        <value>如果連結應顯示為已瀏覽則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.LinkLabel>控制項並不會自動代表的已瀏覽的連結的連結。 若要將連結顯示為已瀏覽的連結，您可以設定此屬性的值`true`中的 click 事件的事件處理常式<xref:System.Windows.Forms.LinkLabel>。 已瀏覽的連結會顯示使用中指定的色彩<xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>屬性<xref:System.Windows.Forms.ToolStripLabel>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ToolStripLabel>藉由設定包含連結<xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>， <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>，<xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A>並<xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A>屬性。  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="toolStripLabel.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.ToolStripLabel.OnFontChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.ToolStripLabel.OnFontChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.ToolStripLabel.OnFontChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="toolStripLabel.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.ToolStripLabel.OnMouseEnter%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.ToolStripLabel.OnMouseEnter(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.ToolStripLabel.OnMouseEnter(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="toolStripLabel.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.ToolStripLabel.OnMouseLeave%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.ToolStripLabel.OnMouseLeave(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.ToolStripLabel.OnMouseLeave(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="toolStripLabel.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.ToolStripItem.Paint" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.ToolStripLabel.OnPaint%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Forms.ToolStripLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.ToolStripLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="toolStripLabel.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">要處理的字元。</param>
        <summary>處理助憶鍵字元。</summary>
        <returns>如果控制項已將字元當成助憶鍵處理，為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要讓項目有機會處理助憶鍵字元，會呼叫這個方法。 方法應該判斷此項目是在處理助憶鍵的狀態，而且是否指定的字元是否代表助憶鍵。 如果因此，此方法應該執行的助憶鍵和傳回相關聯的動作`true`。 如果不是，這個方法應傳回`false`。  
  
 <xref:System.Windows.Forms.ToolStripLabel>實作依賴主機<xref:System.Windows.Forms.ToolStrip>控制項以呼叫<xref:System.Windows.Forms.Control.IsMnemonic%2A>方法，以判斷指定的字元是否符合的項目文字的助憶鍵。 此方法在此情況下，選取項目相關聯的標籤，或引發<xref:System.Windows.Forms.ToolStripItem.Click>事件，如果無法選取項目。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">繼承類別呼叫這個方法的所有視窗。 相關聯的列舉型別：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="VisitedLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color VisitedLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color VisitedLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.VisitedLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property VisitedLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color VisitedLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.VisitedLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripLabel.VisitedLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來顯示先前已瀏覽連結的色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示用來顯示已瀏覽連結的色彩。 預設色彩是由系統所指定。 一般來說，此色彩為 <see langword="Color.Purple" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可讓您指定的顯示中的所有連結的色彩<xref:System.Windows.Forms.ToolStripLabel>，已由使用者瀏覽。  
  
> [!NOTE]
>  設定這個屬性時，請確定所設定要與控制項的背景色彩的不衝突的屬性，或無法正確顯示文字。 比方說，如果控制項的背景色彩為`Color.Red`和此屬性設定為`Color.Red`，文字不會顯示正常時連結會顯示為已瀏覽的連結。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ToolStripLabel>藉由設定包含連結<xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>， <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>， <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>，<xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A>並<xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A>屬性。  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>