<Type Name="ListViewItem" FullName="System.Windows.Forms.ListViewItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f352095351e05bb495b176809a03baea5548075b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650942" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItem : ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ListViewItem extends System.Object implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewItem : ICloneable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListViewItemConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.ListView" /> 控制項中的項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView>控制項是類似於<xref:System.Windows.Forms.ListBox>，它會顯示項目清單。 主要差異是<xref:System.Windows.Forms.ListView>控制項提供的使用者可以檢視不同的方式項目數目。 <xref:System.Windows.Forms.ListViewItem>外觀、 行為以及顯示在項目相關聯的資料類別會定義<xref:System.Windows.Forms.ListView>控制項。 <xref:System.Windows.Forms.ListViewItem> 物件可以顯示在<xref:System.Windows.Forms.ListView>中四種不同檢視的其中一個控制項。 可為大型或小型圖示或以垂直清單中的小圖示顯示項目。 項目也可以有子項目，包含與父項目相關的資訊。 第四個檢視的樣式，詳細資料檢視，可讓您以具有資料行標頭可以用來識別顯示子項目中的資訊的方格中顯示項目及其子項目。  
  
 大部分的屬性<xref:System.Windows.Forms.ListViewItem>類別提供的方式，來變更中之項目的顯示<xref:System.Windows.Forms.ListView>相關聯的控制項。 <xref:System.Windows.Forms.ListViewItem.BackColor%2A>， <xref:System.Windows.Forms.ListViewItem.ForeColor%2A>，和<xref:System.Windows.Forms.ListViewItem.Font%2A>屬性可讓您變更項目的文字中的顯示方式<xref:System.Windows.Forms.ListView>控制項。 <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>屬性可讓您指定的映像以從載入<xref:System.Windows.Forms.ImageList>，指派給<xref:System.Windows.Forms.ListView>控制項 (藉由設定<xref:System.Windows.Forms.ListView.LargeImageList%2A>或<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性<xref:System.Windows.Forms.ListView>)。 項目可以顯示核取方塊，以便在使用者的方式類似於中取得項目選擇<xref:System.Windows.Forms.CheckedListBox>控制項。 您可以使用<xref:System.Windows.Forms.ListViewItem.Checked%2A>屬性來判斷是否會檢查項目，或選取或清除核取方塊，在執行階段。 項目可以顯示任何數目的 subitems 時<xref:System.Windows.Forms.ListView.View%2A>屬性相關聯的<xref:System.Windows.Forms.ListView>控制設為 <xref:System.Windows.Forms.View.Details>且資料行已定義在<xref:System.Windows.Forms.ListView.ColumnHeaderCollection>的<xref:System.Windows.Forms.ListView>控制項。 您可以將子項目加入項目藉由呼叫<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A>方法<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>類別。 <xref:System.Windows.Forms.ListViewItem.SubItems%2A>屬性可讓您存取<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>類別和其成員。  
  
 某些屬性和方法<xref:System.Windows.Forms.ListViewItem>類別是屬性和方法中的項目特定版本<xref:System.Windows.Forms.ListView>控制項。 例如，<xref:System.Windows.Forms.ListViewItem.EnsureVisible%2A>方法很類似<xref:System.Windows.Forms.ListView>版本的方法，但<xref:System.Windows.Forms.ListViewItem>版本會影響目前項目。  
  
 <xref:System.Windows.Forms.ListViewItem>類別也提供方法，不是版本<xref:System.Windows.Forms.ListView>方法。 <xref:System.Windows.Forms.ListViewItem.BeginEdit%2A>方法會將置於編輯模式項目的文字，讓使用者可以變更項目的文字 (當<xref:System.Windows.Forms.ListView.LabelEdit%2A>屬性<xref:System.Windows.Forms.ListView>控制設為  `true`)。 <xref:System.Windows.Forms.ListViewItem.Clone%2A>方法可讓您建立的現有複本<xref:System.Windows.Forms.ListViewItem>物件重複使用其他<xref:System.Windows.Forms.ListView>控制項。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.ListView>控制項具有三個<xref:System.Windows.Forms.ListViewItem>所指定的物件和三個<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>針對每個項目指定的物件。 此範例也會建立<xref:System.Windows.Forms.ColumnHeader>物件詳細資料檢視中顯示子項目。 兩個<xref:System.Windows.Forms.ImageList>物件也會建立在程式碼範例中提供的映像<xref:System.Windows.Forms.ListViewItem>物件。 這些<xref:System.Windows.Forms.ImageList>物件加入至<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性。 此範例會使用下列屬性建立<xref:System.Windows.Forms.ListView>控制項：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 您需要將程式碼加入<xref:System.Windows.Forms.Form>並呼叫從建構函式或在表單上的另一個方法範例中所建立的方法。 這個範例需要映像命名為`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位於 c 磁碟機的根目錄  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用預設值，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.ListView>控制項具有三個<xref:System.Windows.Forms.ListViewItem>所指定的物件和三個<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>針對每個項目指定的物件。 此範例也會建立<xref:System.Windows.Forms.ColumnHeader>物件詳細資料檢視中顯示子項目。 兩個<xref:System.Windows.Forms.ImageList>物件也會建立在程式碼範例中提供的映像<xref:System.Windows.Forms.ListViewItem>物件。 這些<xref:System.Windows.Forms.ImageList>物件加入至<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性。 此範例會使用下列屬性建立<xref:System.Windows.Forms.ListView>控制項：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 您需要將程式碼加入<xref:System.Windows.Forms.Form>並呼叫從建構函式或在表單上的另一個方法範例中所建立的方法。 這個範例需要映像命名為`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位於 c 磁碟機的根目錄  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要顯示的項目文字。 這個文字不應該超過 259 個字元。</param>
        <summary>使用指定的項目文字，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字<xref:System.Windows.Forms.ListViewItem>不應超過 259 個字元，或發生未預期的行為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="items">字串陣列，代表新項目的子項目。</param>
        <summary>使用代表子項目的字串陣列，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體，並將它指派給指定的群組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ListViewItem (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ListViewItem(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，其中包含要序列化之 <see cref="T:System.Windows.Forms.ListViewItem" /> 的相關資訊。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，表示序列化資料流的來源目的端和內容資訊。</param>
        <summary>使用指定的序列化資訊和資料流內容，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">要顯示的項目文字。 這個文字不應該超過 259 個字元。</param>
        <param name="imageIndex">
          <see cref="T:System.Windows.Forms.ImageList" /> 內的影像之以零起始的索引，此清單與包含此項目之 <see cref="T:System.Windows.Forms.ListView" /> 有關聯。</param>
        <summary>使用指定的項目文字和項目圖示的影像索引位置，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字<xref:System.Windows.Forms.ListViewItem>不應超過 259 個字元，或發生未預期的行為。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要顯示的項目文字。 這個文字不應該超過 259 個字元。</param>
        <param name="imageKey">要顯示在 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 中主控 <see cref="T:System.Windows.Forms.ListView" /> 之 <see cref="T:System.Windows.Forms.ListViewItem" /> 內的影像名稱。</param>
        <summary>使用指定的文字和影像，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey`參數指定的影像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>相關聯的擁有<xref:System.Windows.Forms.ListView>控制項，可以使用存取<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。  
  
 文字<xref:System.Windows.Forms.ListViewItem>不應超過 259 個字元，或發生未預期的行為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">要顯示的項目文字。 這個文字不應該超過 259 個字元。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用指定的項目文字，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體，並將它指派給指定的群組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 文字<xref:System.Windows.Forms.ListViewItem>不應超過 259 個字元，或發生未預期的行為。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">字串陣列，代表新項目的子項目。</param>
        <param name="imageIndex">
          <see cref="T:System.Windows.Forms.ImageList" /> 內的影像之以零起始的索引，此清單與包含此項目之 <see cref="T:System.Windows.Forms.ListView" /> 有關聯。</param>
        <summary>使用項目圖示的影像索引位置和表示子項目的字串陣列，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="items">含有 <see cref="T:System.Windows.Forms.ListViewItem" /> 之子項目文字的陣列。</param>
        <param name="imageKey">要顯示在 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 中主控 <see cref="T:System.Windows.Forms.ListView" /> 之 <see cref="T:System.Windows.Forms.ListViewItem" /> 內的影像名稱。</param>
        <summary>使用指定的項目和子項目文字及影像，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey`參數指定的影像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>相關聯的擁有<xref:System.Windows.Forms.ListView>控制項，可以使用存取<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">字串陣列，代表新項目的子項目。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用表示子項目的字串陣列，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體，並將此項目指派給指定的群組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, int imageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="subItems">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 型別的陣列，表示項目的子項目。</param>
        <param name="imageIndex">
          <see cref="T:System.Windows.Forms.ImageList" /> 內的影像之以零起始的索引，此清單與包含此項目之 <see cref="T:System.Windows.Forms.ListView" /> 有關聯。</param>
        <summary>使用項目圖示的影像索引位置和 <see cref="T:System.Windows.Forms.ListViewItem" /> 物件的陣列，初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式時，您建立<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件之前將其新增至<xref:System.Windows.Forms.ListViewItem>（例如，表示將特殊格式或多個項目使用子項目）。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, System::String ^ imageKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subItems">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 物件的陣列。</param>
        <param name="imageKey">要顯示在 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 中主控 <see cref="T:System.Windows.Forms.ListView" /> 之 <see cref="T:System.Windows.Forms.ListViewItem" /> 內的影像名稱。</param>
        <summary>使用指定的子項目和影像，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey`參數指定的影像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>相關聯的擁有<xref:System.Windows.Forms.ListView>控制項，可以使用存取<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">要顯示的項目文字。 這個文字不應該超過 259 個字元。</param>
        <param name="imageIndex">
          <see cref="T:System.Windows.Forms.ImageList" /> 內的影像之以零起始的索引，此清單與包含此項目之 <see cref="T:System.Windows.Forms.ListView" /> 有關聯。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用指定的項目文字和項目圖示的影像索引位置，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體，並將此項目指派給指定的群組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 文字<xref:System.Windows.Forms.ListViewItem>不應超過 259 個字元，或發生未預期的行為。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string text, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String,System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(System::String ^ text, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="text">要顯示的項目文字。 這個文字不應該超過 259 個字元。</param>
        <param name="imageKey">要顯示在項目中的主控 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 內之影像名稱。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用指定的文字、影像和群組，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
 `imageKey`參數指定的影像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>相關聯的擁有<xref:System.Windows.Forms.ListView>控制項，可以使用存取<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 文字<xref:System.Windows.Forms.ListViewItem>不應超過 259 個字元，或發生未預期的行為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">字串陣列，代表新項目的子項目。</param>
        <param name="imageIndex">
          <see cref="T:System.Windows.Forms.ImageList" /> 內的影像之以零起始的索引，此清單與包含此項目之 <see cref="T:System.Windows.Forms.ListView" /> 有關聯。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用項目圖示的影像索引位置和表示子項目的字串陣列，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體，並將此項目指派給指定的群組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As String(), imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">字串的陣列，表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 之子項目的文字。</param>
        <param name="imageKey">要顯示在項目中的主控 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 內之影像名稱。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用包含指定之文字、影像和群組的子項目，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
 `imageKey`參數指定的影像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>相關聯的擁有<xref:System.Windows.Forms.ListView>控制項，可以使用存取<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, int imageIndex, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, int32 imageIndex, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageIndex As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, int imageIndex, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="subItems">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 型別的陣列，表示項目的子項目。</param>
        <param name="imageIndex">
          <see cref="T:System.Windows.Forms.ImageList" /> 內的影像之以零起始的索引，此清單與包含此項目之 <see cref="T:System.Windows.Forms.ListView" /> 有關聯。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用項目圖示的影像索引位置和 <see cref="T:System.Windows.Forms.ListViewItem" /> 物件的陣列，初始化 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 類別的新執行個體，並將此項目指派給指定的群組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式時，您建立<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件之前將其新增至<xref:System.Windows.Forms.ListViewItem>物件 （例如，表示將特殊格式或多個項目使用子項目）。 它也可讓您指定的項目所屬的群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Windows.Forms.ListViewItem.ListViewSubItem[] subItems, string imageKey, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem/ListViewSubItem[] subItems, string imageKey, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.Windows.Forms.ListViewItem.ListViewSubItem[],System.String,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subItems As ListViewItem.ListViewSubItem(), imageKey As String, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ subItems, System::String ^ imageKey, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subItems" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="subItems">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 物件的陣列，表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子項目。</param>
        <param name="imageKey">要顯示在項目中的主控 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 內之影像名稱。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用指定的子項目、影像和群組，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式時，您建立<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件之前將其新增至<xref:System.Windows.Forms.ListViewItem>（例如，表示將特殊格式或多個項目使用子項目）。 它也可讓您指定的項目所屬的群組。  
  
 `imageKey`參數指定的影像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>相關聯的擁有<xref:System.Windows.Forms.ListView>控制項，可以使用存取<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">字串陣列，代表新項目的子項目。</param>
        <param name="imageIndex">
          <see cref="T:System.Windows.Forms.ImageList" /> 內的影像之以零起始的索引，此清單與包含此項目之 <see cref="T:System.Windows.Forms.ListView" /> 有關聯。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示項目的前景色彩。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示項目的背景色彩。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，表示顯示項目文字所用的字型。</param>
        <summary>使用項目圖示的影像索引位置、項目的前景色彩、背景色彩與字型以及表示子項目的字串陣列，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立包含表單的<xref:System.Windows.Forms.ListView>手動排序項目中的資料行時的控制項<xref:System.Windows.Forms.ListView>按一下控制項時。 此範例會定義一種類別稱為`ListViewItemComparer`實作<xref:System.Collections.IComparer?displayProperty=nameWithType>介面執行<xref:System.Windows.Forms.ListViewItem>比較。 此範例會建立的執行個體`ListViewItemComparer`並使用它來設定<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>屬性<xref:System.Windows.Forms.ListView>控制項。 <xref:System.Windows.Forms.ListView.Sort%2A>方法呼叫中<xref:System.Windows.Forms.ListView.ColumnClick>事件處理常式的使用中定義的方法`ListViewItemComparer`來執行的項目，根據按下的資料行排序。  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">字串的陣列，表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 之子項目的文字。</param>
        <param name="imageKey">要顯示在項目中的主控 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 內之影像名稱。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示項目的前景色彩。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示項目的背景色彩。</param>
        <param name="font">要套用到項目文字的 <see cref="T:System.Drawing.Font" />。</param>
        <summary>使用包含指定之文字、影像、色彩和字型的子項目，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `imageKey`參數指定的影像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>相關聯的擁有<xref:System.Windows.Forms.ListView>控制項，可以使用存取<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, int imageIndex, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, int32 imageIndex, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, int imageIndex, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">字串陣列，代表新項目的子項目。</param>
        <param name="imageIndex">
          <see cref="T:System.Windows.Forms.ImageList" /> 內的影像之以零起始的索引，此清單與包含此項目之 <see cref="T:System.Windows.Forms.ListView" /> 有關聯。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示項目的前景色彩。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示項目的背景色彩。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />，表示顯示項目文字所用的字型。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用項目圖示的影像索引位置、項目的前景色彩、背景色彩與字型以及表示子項目的字串陣列，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。 此外，將此項目指派給指定的群組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (string[] items, string imageKey, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items, string imageKey, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.#ctor(System.String[],System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItem(cli::array &lt;System::String ^&gt; ^ items, System::String ^ imageKey, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="imageKey" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="items">字串的陣列，表示 <see cref="T:System.Windows.Forms.ListViewItem" /> 之子項目的文字。</param>
        <param name="imageKey">要顯示在項目中的主控 <see cref="P:System.Windows.Forms.ListViewItem.ImageList" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 內之影像名稱。</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />，表示項目的前景色彩。</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />，表示項目的背景色彩。</param>
        <param name="font">要套用到項目文字的 <see cref="T:System.Drawing.Font" />。</param>
        <param name="group">要指派項目的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>使用包含指定之文字、影像、色彩、字型和群組的子項目，初始化 <see cref="T:System.Windows.Forms.ListViewItem" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的建構函式可讓您指定的項目所屬的群組。  
  
 `imageKey`參數指定的影像<xref:System.Windows.Forms.ListViewItem.ImageList%2A>相關聯的擁有<xref:System.Windows.Forms.ListView>控制項，可以使用存取<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定項目文字的背景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示項目文字的背景色彩。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Windows.Forms.ListViewItem.BackColor%2A>屬性來變更顯示在後面的項目文字的色彩。 如果您想要使用不同的背景和前景色彩組合，可以使用這個屬性 (使用<xref:System.Windows.Forms.ListViewItem.ForeColor%2A>設定前景色彩屬性) 來區分不同的一個項目。 例如，您可以設定<xref:System.Windows.Forms.ListViewItem.BackColor%2A>屬性<xref:System.Drawing.Color.Red%2A>識別的驗證失敗或遺失子項目資訊項目。  
  
 如果您想要針對項目的所有子項目使用相同的背景色彩，設定<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>屬性`true`。 這會導致的色彩和字型的項目指定要用於所有子項目的文字。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將項目文字放入編輯模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性是有效才<xref:System.Windows.Forms.ListView.LabelEdit%2A>屬性<xref:System.Windows.Forms.ListView>控制項內含項目設為`true`。 若要強制項目的文字來顯示處於編輯模式下，您可以在執行階段使用這個方法。 例如，如果您要驗證使用者，編輯的項目文字，而且驗證失敗的項目，您無法選取的項目<xref:System.Windows.Forms.ListView>控制項，並呼叫<xref:System.Windows.Forms.ListViewItem.BeginEdit%2A>方法，以強制使用者變更 驗證失敗的文字。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">相關 <see cref="P:System.Windows.Forms.ListView.LabelEdit" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 屬性不是設定為 <see langword="true" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得項目、包括子項目的週框。</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" />，表示項目的週框。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法來取得整個項目的週框矩形。 如果您想要取得整個項目之一部分的週框，使用<xref:System.Windows.Forms.ListViewItem.GetBounds%2A>方法。 <xref:System.Windows.Forms.ListView>類別提供<xref:System.Windows.Forms.ListView.GetItemRect%2A>位於控制項內的方法，可讓您取得的任何項目的週框。  
  
 傳回的週框矩形會使用用戶端控制項座標相對於包含目前可見區域的左上角， <xref:System.Windows.Forms.ListBox>。 如果<xref:System.Windows.Forms.ListBox>是可捲動和定位以便<xref:System.Windows.Forms.ListViewItem>不是可見，座標傳回可以是負數。  
  
 當<xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType>屬性的值為<xref:System.Windows.Forms.View.List>，這個周框的寬度是資料行，內含項目，而不在項目中文字的寬度的寬度。 如果<xref:System.Windows.Forms.ListView.Columns%2A?displayProperty=nameWithType>集合未包含任何資料行，會使用 60 像素為單位的預設資料行寬度。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出項目是否已選取。</summary>
        <value>
          如果項目已經核取，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性相當實用才<xref:System.Windows.Forms.ListView.CheckBoxes%2A>屬性<xref:System.Windows.Forms.ListView>控制項中包含的項目設為`true`。 您可以使用這個屬性來判斷是否項目已檢查使用者或是透過程式碼在執行階段。 若要判斷已簽入的所有項目<xref:System.Windows.Forms.ListView>控制項，您可以使用<xref:System.Windows.Forms.ListView.CheckedItems%2A>屬性。 要採取的動作已核取項目，您可以建立事件處理常式<xref:System.Windows.Forms.ListView.ItemCheck>屬性<xref:System.Windows.Forms.ListView>控制項。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.ListView>控制項具有三個<xref:System.Windows.Forms.ListViewItem>所指定的物件和三個<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>針對每個項目指定的物件。 此範例也會建立<xref:System.Windows.Forms.ColumnHeader>物件詳細資料檢視中顯示子項目。 兩個<xref:System.Windows.Forms.ImageList>物件也會建立在程式碼範例中提供的映像<xref:System.Windows.Forms.ListViewItem>物件。 這些<xref:System.Windows.Forms.ImageList>物件加入至<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性。 此範例會使用下列屬性建立<xref:System.Windows.Forms.ListView>控制項：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 您需要將程式碼加入<xref:System.Windows.Forms.Form>並呼叫從建構函式或在表單上的另一個方法範例中所建立的方法。 這個範例需要映像命名為`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位於 c 磁碟機的根目錄  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立項目的相同複本。</summary>
        <returns>代表項目的物件，這個項目具有相關的相同文字、影像和子項目做為複製項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法建立的新執行個體<xref:System.Windows.Forms.ListViewItem>類別，根據現有的項目。 即使被複製之項目的子項目會指定為新版本。 如果您想要重複使用此功能十分有用<xref:System.Windows.Forms.ListViewItem>中一個以上的<xref:System.Windows.Forms.ListView>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Deserialize (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">擁有項目還原序列化所需之資料的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，代表正被還原序列化中之資料流的來源和目的端。</param>
        <summary>可將項目還原序列化。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>應該覆寫這個方法，如果您要序列化和還原序列化這個類別的衍生的版本，而且您的衍生的類別包含您想要進行序列化和還原序列化的狀態資訊。 您必須呼叫這個方法的基底類別實作，以確保您的項目會序列化並正確還原序列化。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.ListViewItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public virtual void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnsureVisible();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>可確定項目在控制項中為可見，必要時捲動控制項的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法，以確保項目是在內為可見<xref:System.Windows.Forms.ListView>控制項。 項目上執行驗證時，可以使用這個方法。 您可以呼叫<xref:System.Windows.Forms.ListViewItem.EnsureVisible%2A>方法，以確保此項目會顯示在<xref:System.Windows.Forms.ListView>控制如果它無法驗證，以允許使用者執行的項目上的變更。  
  
 這個方法是類似於<xref:System.Windows.Forms.ListView.EnsureVisible%2A>方法<xref:System.Windows.Forms.ListView>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.FindNearestItem(System.Windows.Forms.SearchDirectionHint)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" />
      </Parameters>
      <Docs>
        <param name="searchDirection">其中一個 <see cref="T:System.Windows.Forms.SearchDirectionHint" /> 值。</param>
        <summary>從 <see cref="T:System.Windows.Forms.ListViewItem" /> 中尋找下一個項目 (朝指定的方向搜尋)。</summary>
        <returns>最接近指定座標的 <see cref="T:System.Windows.Forms.ListViewItem" /> (朝指定的方向搜尋)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A>方法會傳回`null`如果不找到任何項目以指定的方向。  
  
 找出最接近的項目作業系統執行應用程式而有所不同，並會影響結果的<xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A>。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.ListViewItem.FindNearestItem%2A> 方法。 若要執行此範例中，貼上下列程式碼包含在 Windows Form<xref:System.Windows.Forms.ListView>名為`findListView`。 請確認<xref:System.Windows.Forms.ListView.View%2A>屬性設定為圖示檢視且<xref:System.Windows.Forms.ListView>會填入項目。 關聯<xref:System.Windows.Forms.Control.MouseDown>事件`findListView`與`findListView_MouseDown`在此範例中的方法。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">包含之 <see cref="P:System.Windows.Forms.ListView.View" /> 的 <see cref="T:System.Windows.Forms.ListView" /> 屬性設定為 <see cref="F:System.Windows.Forms.View.SmallIcon" /> 或 <see cref="F:System.Windows.Forms.View.LargeIcon" /> 以外的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public bool Focused { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focused { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Windows.Forms.ListView" /> 控制項中的項目是否具有焦點。</summary>
        <value>
          如果項目擁有焦點，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Windows.Forms.ListView>控制項沒有直接編輯區域 — 只有中所包含的項目<xref:System.Windows.Forms.ListView>可以編輯 — 中的項目文字<xref:System.Windows.Forms.ListView>將顯示焦點 reticle 時<xref:System.Windows.Forms.ListView>具有焦點。 通常，最後選取項目中的<xref:System.Windows.Forms.ListView>控制項是具有焦點的項目。 雖然項目可能顯示焦點 reticle，但它實際上不會在選取的項目<xref:System.Windows.Forms.ListView>。 您可以使用<xref:System.Windows.Forms.ListViewItem.Focused%2A>屬性來決定項目目前為焦點的項目中<xref:System.Windows.Forms.ListView>包含它的控制項。 如果<xref:System.Windows.Forms.ListViewItem>不與相關聯<xref:System.Windows.Forms.ListView>控制項，此屬性會傳回`false`。  
  
 <xref:System.Windows.Forms.ListView>控制項提供<xref:System.Windows.Forms.ListView.FocusedItem%2A>屬性可讓您判斷哪些<xref:System.Windows.Forms.ListViewItem>中<xref:System.Windows.Forms.ListView>具有焦點。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.FocusedItem" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定項目顯示之文字字型。</summary>
        <value>要套用至控制項顯示之文字的 <see cref="T:System.Drawing.Font" />。 如果 <see cref="P:System.Windows.Forms.Control.DefaultFont" /> 和 <see cref="T:System.Windows.Forms.ListViewItem" /> 控制項無關，則預設值為 <see cref="T:System.Windows.Forms.ListView" /> 屬性的值，否則就會使用 <see cref="P:System.Windows.Forms.Control.Font" /> 控制項之 <see cref="T:System.Windows.Forms.ListView" /> 屬性中指定的字型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法來變更套用至項目的文字的字型樣式。 因為<xref:System.Drawing.Font>是不變 （您不能調整的任何屬性），您只能指派<xref:System.Windows.Forms.Control.Font%2A>新屬性<xref:System.Drawing.Font>。 不過，您可以根據現有的字型為新字型。  
  
   
  
## Examples  
 下列程式碼範例示範如何調整現有的字型，讓它變成粗體。  
  
```csharp  
listViewItem1.Font = new Font(listViewItem1.Font,   
    listViewItem1.Font.Style | FontStyle.Bold);  
```  
  
```vb  
ListViewItem1.Font = New Font(ListViewItem1.Font, _   
    ListViewItem1.Font.Style Or FontStyle.Bold)  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定項目文字的前景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，表示項目文字的前景色彩。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Windows.Forms.ListViewItem.ForeColor%2A>屬性來變更項目文字的色彩。 如果您想要使用不同的背景和前景色彩組合，可以使用這個屬性 (使用<xref:System.Windows.Forms.ListViewItem.BackColor%2A>屬性來設定背景色彩) 區分不同的一個項目。 例如，您可以設定<xref:System.Windows.Forms.ListViewItem.ForeColor%2A>屬性<xref:System.Drawing.Color.Red%2A>來識別具有負數與其相關聯的項目或項目驗證失敗。  
  
 如果您想要使用相同的前景色彩的項目的所有子項目，設定<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>屬性`true`。 這會導致的色彩和字型的項目指定要用於所有子項目的文字。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds (System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds(valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds(System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="portion">其中一個 <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> 值，代表要擷取週框的部分項目。</param>
        <summary>可擷取項目週框的指定部分。</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" />，表示項目特定部分的週框。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回之周框<xref:System.Windows.Forms.ListViewItem.GetBounds%2A>方法表示只有 > 一節中所指定的項目`portion`參數。 您也可以呼叫<xref:System.Windows.Forms.ListView.GetItemRect%2A>方法<xref:System.Windows.Forms.ListView>類別來取得任何項目中的週框矩形<xref:System.Windows.Forms.ListView>控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSubItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem GetSubItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem GetSubItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.GetSubItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubItemAt (x As Integer, y As Integer) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ GetSubItemAt(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">x 座標。</param>
        <param name="y">y 座標。</param>
        <summary>傳回位於指定座標之 <see cref="T:System.Windows.Forms.ListViewItem" /> 的子項目。</summary>
        <returns>位於指定之 X 和 Y 座標的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.GetSubItemAt%2A>方法會傳回`null`如果<xref:System.Windows.Forms.ListView>不在<xref:System.Windows.Forms.View.Details> 檢視中，或者沒有<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>位於指定點。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.ListViewItem.GetSubItemAt%2A> 方法。 若要執行此程式碼，將它貼到 Windows Form 並呼叫`InitializeListView1`從表單的建構函式或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Group { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Group" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Group" />
      <MemberSignature Language="VB.NET" Value="Public Property Group As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ Group { System::Windows::Forms::ListViewGroup ^ get(); void set(System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定指派此項目至其中的群組。</summary>
        <value>指派此項目至其中的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性來設定項目所屬的群組。 您也可以設定群組<xref:System.Windows.Forms.ListViewItem.%23ctor%2A>建構函式，或者您可以使用這個屬性在執行階段修改的群組成員資格。 如果您將此屬性設定為`null`中的群組而<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合中，項目會出現在預設群組中，有標頭標籤"DefaultGroupSystem.Windows.Forms"。 預設群組未包含在<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>集合，且無法變更。 它主要是用於偵錯，以確保所有項目有已正確新增至群組。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView> 群組只是適用於 Windows XP 和 Windows Server 2003 系列 ([!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)])。 如需詳細資訊，請參閱 <xref:System.Windows.Forms.ListViewGroup> 概觀主題。  
  
   
  
## Examples  
 下列程式碼範例示範如何<xref:System.Windows.Forms.ListViewItem.Group%2A>將組織的應用程式中可用屬性<xref:System.Windows.Forms.ListView>詳細資料檢視中的子項目值的項目。 這種形式是群組的類似於 Windows 檔案總管 中使用的群組。 在範例中，會動態建立的群組。 每一個子項目資料行中，針對每個唯一的子項目值建立一個群組。 父項目資料行，建立一個群組的每個唯一的首字母。 針對每個資料行建立的群組會儲存在雜湊表，連同子項目的文字或首字母。 按一下資料行標頭時，會擷取對應於該資料行的雜湊資料表。 接下來，該資料行的子項目的文字值可用做為雜湊資料表索引鍵來擷取正確的群組，每個項目。 項目接著會指派給群組使用<xref:System.Windows.Forms.ListViewItem.Group%2A>屬性。  
  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>屬性。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定為項目顯示的影像索引。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> 中為項目顯示之影像的以零起始的索引。 預設值為 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的值取決於值<xref:System.Windows.Forms.ListViewItem.ImageList%2A>屬性。 根據目前的值<xref:System.Windows.Forms.ListView.View%2A>屬性<xref:System.Windows.Forms.ListView>項目，與相關聯控制項<xref:System.Windows.Forms.ImageList>可其中一個指定之項目所使用<xref:System.Windows.Forms.ListView.LargeImageList%2A>屬性或<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性<xref:System.Windows.Forms.ListView>控制項。 如果<xref:System.Windows.Forms.ListView.View%2A>屬性設定為<xref:System.Windows.Forms.View.LargeIcon>、<xref:System.Windows.Forms.ImageList>中所指定<xref:System.Windows.Forms.ListView.LargeImageList%2A>屬性是用，否則<xref:System.Windows.Forms.ImageList>中所指定<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性使用。 中所定義的映像<xref:System.Windows.Forms.ImageList>中所指定<xref:System.Windows.Forms.ListView.SmallImageList%2A>應有中影像相同的索引位置<xref:System.Windows.Forms.ImageList>中所指定<xref:System.Windows.Forms.ListView.LargeImageList%2A>屬性。 如果是兩個相同的索引位置<xref:System.Windows.Forms.ImageList>控制項，您可以設定的單一索引值<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>的值為何，則會顯示屬性和適當的映像<xref:System.Windows.Forms.ListView.View%2A>屬性<xref:System.Windows.Forms.ListView>控制項。 <xref:System.Windows.Forms.ListViewItem.ImageKey%2A>和<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>屬性是互斥的這表示另一個設定，如果會忽略。 此外，如果您設定<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>屬性，<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>屬性會自動設定為-1。 或者，如果您設定<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>屬性，<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>會自動設定為空字串 ("")。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的值小於 -1。</exception>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定為項目顯示之影像的索引鍵。</summary>
        <value>為 <see cref="T:System.Windows.Forms.ListViewItem" /> 顯示之影像的索引鍵。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ImageKey%2A>屬性會傳回空字串 ("") 時<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>未設定<xref:System.Windows.Forms.ListViewItem>。 <xref:System.Windows.Forms.ListViewItem.ImageKey%2A>和<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>屬性是互斥的這表示另一個設定，如果會忽略。 如果您設定<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>屬性，<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>屬性會自動設定為-1。 或者，如果您設定<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>屬性，<xref:System.Windows.Forms.ListViewItem.ImageKey%2A>會自動設定為空字串 ("")。  
  
> [!NOTE]
>  如果您使用多個映像清單，針對小型和大型圖示檢視中，與<xref:System.Windows.Forms.ListView>控制項，您應該將放置小型和大型版本在相同的影像索引中其各自的影像清單的位置。 檢視之間切換時，一份清單中的映像的索引位置用來找出影像中的其他清單中，不論所指定的金鑰值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Forms.ImageList" />，包含隨項目顯示的影像。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> 控制項使用的 <see cref="T:System.Windows.Forms.ListView" />，包含隨項目顯示的影像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據目前的值<xref:System.Windows.Forms.ListView.View%2A>屬性<xref:System.Windows.Forms.ListView>項目，與相關聯控制項<xref:System.Windows.Forms.ImageList>可其中一個指定之項目所使用<xref:System.Windows.Forms.ListView.LargeImageList%2A>屬性或<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性<xref:System.Windows.Forms.ListView>控制項。 如果<xref:System.Windows.Forms.ListView.View%2A>屬性設定為<xref:System.Windows.Forms.View.LargeIcon>、<xref:System.Windows.Forms.ImageList>中所指定<xref:System.Windows.Forms.ListView.LargeImageList%2A>屬性是用，否則<xref:System.Windows.Forms.ImageList>中所指定<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性使用。 您可以使用這個屬性來判斷哪一個<xref:System.Windows.Forms.ImageList>控制項的項目提供影像。 若要判斷中的索引位置<xref:System.Windows.Forms.ImageList>其中包含要顯示的項目，使用的映像<xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="IndentCount">
      <MemberSignature Language="C#" Value="public int IndentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.IndentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用以縮排 <see cref="T:System.Windows.Forms.ListViewItem" /> 之小型影像寬度的數目。</summary>
        <value>用以縮排 <see cref="T:System.Windows.Forms.ListViewItem" /> 之小型影像寬度的數字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.IndentCount%2A>屬性可用時，才<xref:System.Windows.Forms.ListView.View%2A>屬性包含<xref:System.Windows.Forms.ListView>設<xref:System.Windows.Forms.View.Details>，而<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性<xref:System.Windows.Forms.ListView>設定。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.ListViewItem.IndentCount%2A>屬性。 若要執行此範例中，將下列程式碼貼到 Windows Form 並呼叫`InitializeIndentedListViewItems`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定 <see cref="P:System.Windows.Forms.ListViewItem.IndentCount" /> 時，指定的數字小於 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得項目在 <see cref="T:System.Windows.Forms.ListView" /> 控制項中之以零起始的索引。</summary>
        <value>在 <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 控制項的 <see cref="T:System.Windows.Forms.ListView" /> 中，項目之以零起始的索引，但如果項目與 <see cref="T:System.Windows.Forms.ListView" /> 控制項無關，則為 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來判斷項目是否與相關聯<xref:System.Windows.Forms.ListView>控制項也以判斷其位置內<xref:System.Windows.Forms.ListView.ListViewItemCollection>的<xref:System.Windows.Forms.ListView>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView ListView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView ListView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListView As ListView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView ^ ListView { System::Windows::Forms::ListView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含項目的 <see cref="T:System.Windows.Forms.ListView" /> 控制項。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListView" />，其中包含 <see cref="T:System.Windows.Forms.ListViewItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來存取<xref:System.Windows.Forms.ListView>控制項擁有<xref:System.Windows.Forms.ListViewItem>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個 <see cref="T:System.Windows.Forms.ListViewItem" /> 相關聯的名稱。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem" /> 的名稱。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Forms.ListViewItem.Name%2A>屬性也是索引鍵<xref:System.Windows.Forms.ListViewItem>時存取集合中的項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Position { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.ListViewItem" /> 左上角的位置。</summary>
        <value>位於 <see cref="T:System.Drawing.Point" /> 左上角的 <see cref="T:System.Windows.Forms.ListViewItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Position%2A>屬性應該設定之後<xref:System.Windows.Forms.ListViewItem>和包含<xref:System.Windows.Forms.ListView>建構。 變更<xref:System.Windows.Forms.ListViewItem.Position%2A>屬性時包含<xref:System.Windows.Forms.ListView>處於<xref:System.Windows.Forms.View.Details>或<xref:System.Windows.Forms.View.List>檢視不會影響項目的位置。 此外，<xref:System.Windows.Forms.ListViewItem.Position%2A>屬性將會自動變更時<xref:System.Windows.Forms.ListView.View%2A>屬性包含<xref:System.Windows.Forms.ListView>已從<xref:System.Windows.Forms.View.SmallIcon>， <xref:System.Windows.Forms.View.LargeIcon>，或<xref:System.Windows.Forms.View.Tile>檢視<xref:System.Windows.Forms.View.List>或<xref:System.Windows.Forms.View.Details>。 當<xref:System.Windows.Forms.ListView>處於<xref:System.Windows.Forms.View.SmallIcon>， <xref:System.Windows.Forms.View.LargeIcon>，或<xref:System.Windows.Forms.View.Tile> 檢視中，設定<xref:System.Windows.Forms.ListViewItem.Position%2A>某項目的屬性會導致中所包含的其他項目<xref:System.Windows.Forms.ListView>被重新配置。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.ListViewItem.Position%2A>屬性<xref:System.Windows.Forms.ListViewItem>。 若要執行此範例中，將下列程式碼貼到 Windows Form 並呼叫`InitializePositionedListViewItems`從表單的<xref:System.Windows.Forms.Form.Load>事件處理方法。 按一下按鈕即可查看重新定位的項目。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListViewItem.Position" /> 是在包含的 <see cref="T:System.Windows.Forms.ListView" /> 處於虛擬模式時設定的。</exception>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將項目從關聯的 <see cref="T:System.Windows.Forms.ListView" /> 控制項中移除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是類似於<xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A>方法<xref:System.Windows.Forms.ListView.ListViewItemCollection>中<xref:System.Windows.Forms.ListView>控制項，其中包含項目。 您可以使用<xref:System.Windows.Forms.ListViewItem.Remove%2A>方法，以移除項目從其<xref:System.Windows.Forms.ListView>控制項。 這項功能很有用，如果您想要將項目移到不同<xref:System.Windows.Forms.ListView>控制或需要移除的項目，根據使用者要求將從您的應用程式內的項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示是否選取項目。</summary>
        <value>
          如果選取項目，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.ListView.MultiSelect%2A>屬性<xref:System.Windows.Forms.ListView>控制項中包含的項目設為`true`，設定這個屬性的值加入或移除選取的項目集的項目。 如果<xref:System.Windows.Forms.ListView.MultiSelect%2A>屬性設定為`false`，設定這個屬性會自動選取的項目值取消選取範圍中的任何其他項目的<xref:System.Windows.Forms.ListView>控制項。 您可以使用這個屬性來判斷是否選取項目，或在執行階段選取的項目。 您可以存取所有項目中所選<xref:System.Windows.Forms.ListView>控制項使用<xref:System.Windows.Forms.ListView.SelectedItems%2A?displayProperty=nameWithType>屬性。  
  
> [!NOTE]
>  項目選取的時才會顯示<xref:System.Windows.Forms.ListView>控制項有焦點。 若要選取項目以回應使用者動作例如按一下按鈕，請確定呼叫<xref:System.Windows.Forms.Control.Focus%2A>除了設定這個屬性的方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.ListView.Clear%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ListViewItem.Selected%2A>成員。 若要執行此範例，下列程式碼置於表單，其中包含<xref:System.Windows.Forms.ListView>名為`ListView1`和<xref:System.Windows.Forms.Button>位於名為表單底部`Button1`。 呼叫`InitializeListView`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，擁有序列化項目所需的資料。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，代表正在序列化中之資料流的來源和目的端。</param>
        <summary>序列化項目。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>應該覆寫這個方法，如果您要序列化和還原序列化這個類別的衍生的版本，而且您的衍生的類別包含您想要進行序列化和還原序列化的狀態資訊。 您必須呼叫這個方法的基底類別實作，以確保您的項目會序列化並正確還原序列化。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.ListViewItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ListView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定為項目顯示之狀態影像的索引 (例如已選取或已清除核取方塊的影像，表示項目的狀態)。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> 中為項目顯示之狀態影像的以零起始索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可讓您指定的索引<xref:System.Windows.Forms.ImageList>指派給<xref:System.Windows.Forms.ListView.StateImageList%2A>屬性相關聯的<xref:System.Windows.Forms.ListView>控制項，儲存的項目左邊顯示的狀態影像。 通常，狀態影像是選取或清除核取方塊，或是用來表示的映像選取或清除項目的狀態。 如果未不指定任何值，如<xref:System.Windows.Forms.ListView.StateImageList%2A>屬性，<xref:System.Windows.Forms.ListView>控制項顯示的預設選取或清除核取方塊時<xref:System.Windows.Forms.ListView.CheckBoxes%2A>控制項的屬性設定為`true`。  
  
> [!NOTE]
>  雖然<xref:System.Windows.Forms.ImageList>中所指定<xref:System.Windows.Forms.ListView.StateImageList%2A>屬性可包含任意數目的映像，而<xref:System.Windows.Forms.ListViewItem.StateImageIndex%2A>屬性可以設定為任何值等於或低於 14、 在 0 和 1 的索引位置上的影像會顯示狀態影像。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">這個屬性的指定值小於 -1。  
  
 -或-  
  
 這個屬性的指定值大於 14。</exception>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="SubItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItemCollection SubItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItemCollection SubItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.SubItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubItems As ListViewItem.ListViewSubItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItemCollection ^ SubItems { System::Windows::Forms::ListViewItem::ListViewSubItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewSubItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得集合，其中包含項目所有的子項目。</summary>
        <value>包含子項目的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>，您可以將子項目加入、 移除子項目，並取得子項目的計數。 更多可以有子項目集合中執行的工作的詳細資訊，請參閱<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>類別參考主題。  
  
> [!NOTE]
>  中的第一個子項目<xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>永遠是擁有子項目的項目。 對執行作業時的子項目集合中，請務必參考而不是 0 到第一個子項目進行變更的索引位置 1。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.ListView>控制項具有三個<xref:System.Windows.Forms.ListViewItem>所指定的物件和三個<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>針對每個項目指定的物件。 此範例也會建立<xref:System.Windows.Forms.ColumnHeader>物件詳細資料檢視中顯示子項目。 兩個<xref:System.Windows.Forms.ImageList>物件也會建立在程式碼範例中提供的映像<xref:System.Windows.Forms.ListViewItem>物件。 這些<xref:System.Windows.Forms.ImageList>物件加入至<xref:System.Windows.Forms.ListView.LargeImageList%2A>和<xref:System.Windows.Forms.ListView.SmallImageList%2A>屬性。 此範例會使用下列屬性建立<xref:System.Windows.Forms.ListView>控制項：  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 您需要將程式碼加入<xref:System.Windows.Forms.Form>並呼叫從建構函式或在表單上的另一個方法範例中所建立的方法。 這個範例需要映像命名為`MySmallImage1`， `MySmallImage2`， `MyLargeImage1`，和`MyLargeImage2`位於 c 磁碟機的根目錄  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />，擁有序列化項目所需的資料。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，代表正在序列化中之資料流的來源和目的端。</param>
        <summary>序列化項目。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件，其中包含與項目相關的資料。</summary>
        <value>物件，包含與項目相關的資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Tag%2A>屬性可用來儲存您想要使用的項目關聯的任何物件。 雖然您可以儲存任何項目，<xref:System.Windows.Forms.ListViewItem.Tag%2A>屬性通常用來儲存項目，例如唯一識別碼或在資料庫中的項目資料的索引位置的字串資訊。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ListViewItem>並設定<xref:System.Windows.Forms.ListViewItem.Tag%2A>和<xref:System.Windows.Forms.ListViewItem.Text%2A>屬性。 若要執行此範例中，下列程式碼置於表單，其中包含<xref:System.Windows.Forms.ListView>名為`ListView1`，並呼叫`InitializeListViewItems`從表單的建構函式或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定項目文字。</summary>
        <value>要顯示的項目文字。 這個文字不應該超過 259 個字元。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.Text%2A>屬性可讓您變更項目所顯示的文字。 文字<xref:System.Windows.Forms.ListViewItem>不應超過 259 個字元，或發生未預期的行為。  
  
 您可以使用<xref:System.Windows.Forms.ListViewItem.BackColor%2A>， <xref:System.Windows.Forms.ListViewItem.ForeColor%2A>，和<xref:System.Windows.Forms.ListViewItem.Font%2A>屬性來指定文字的顯示方式。 <xref:System.Windows.Forms.ListView>類別提供<xref:System.Windows.Forms.ListView.LabelWrap%2A>判斷文字是否換行至下一行，或顯示在單一行的屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何初始化<xref:System.Windows.Forms.ListViewItem>並設定<xref:System.Windows.Forms.ListViewItem.Tag%2A>和<xref:System.Windows.Forms.ListViewItem.Text%2A>屬性。 若要執行此範例中，下列程式碼置於表單，其中包含<xref:System.Windows.Forms.ListView>名為`ListView1`，並呼叫`InitializeListViewItems`從表單的建構函式或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelWrap" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當滑鼠指標停留在 <see cref="T:System.Windows.Forms.ListViewItem" /> 上時所顯示的文字。</summary>
        <value>當滑鼠指標停留在 <see cref="T:System.Windows.Forms.ListViewItem" /> 上時所顯示的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果兩個<xref:System.Windows.Forms.ListViewItem>以及其包含<xref:System.Windows.Forms.ListView>工具提示設定之後，只有的工具提示<xref:System.Windows.Forms.ListViewItem>將會顯示。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.ListView.ShowItemToolTips%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.ListViewItem.ToolTipText%2A>屬性。 若要執行此範例中，貼上程式碼的 Windows Form 和呼叫`InitializeItemsWithToolTips`從表單的建構函式或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回代表目前物件的字串。</summary>
        <returns>表示目前物件的字串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="UseItemStyleForSubItems">
      <MemberSignature Language="C#" Value="public bool UseItemStyleForSubItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseItemStyleForSubItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
      <MemberSignature Language="VB.NET" Value="Public Property UseItemStyleForSubItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseItemStyleForSubItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出項目的 <see cref="P:System.Windows.Forms.ListViewItem.Font" />、<see cref="P:System.Windows.Forms.ListViewItem.ForeColor" /> 和 <see cref="P:System.Windows.Forms.ListViewItem.BackColor" /> 屬性是否要用在項目所有的子項目中。</summary>
        <value>
          如果所有子項目都使用項目的字型、前景色彩和背景色彩設定，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您不希望有統一的背景色彩、 前景色彩和字型，用於所有項目，且在 subitems 您<xref:System.Windows.Forms.ListView>控制項，您可以設定這個屬性為`false`。 當這個屬性設定為`true`，子項目所做的變更<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType>，和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A?displayProperty=nameWithType>屬性會被忽略，並指派之項目的值來取代。 您可以使用這個屬性，如果您需要指定不同的文字色彩、 背景色彩或字型，才能用於時子項目會顯示在項目反白顯示子項目<xref:System.Windows.Forms.ListView>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>屬性`false`來定義的自訂樣式<xref:System.Windows.Forms.ListViewItem.ListViewSubItem>物件。 此範例也示範如何設定<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>和<xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A>屬性。 要執行此範例，請將下列程式碼貼到表單，並呼叫`InitializeListView`表單的建構函式中的方法或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
      </Docs>
    </Member>
  </Members>
</Type>