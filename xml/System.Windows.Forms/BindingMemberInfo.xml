<Type Name="BindingMemberInfo" FullName="System.Windows.Forms.BindingMemberInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58cbdf574a587349c9d1433228fb39c4bece1f2c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30639122" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct BindingMemberInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BindingMemberInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingMemberInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure BindingMemberInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class BindingMemberInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含資訊以啟用 <see cref="T:System.Windows.Forms.Binding" /> 解析資料繫結 (Data Binding) 至物件的屬性，或者至物件清單中目前物件的屬性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingMemberInfo>傳回<xref:System.Windows.Forms.Binding.BindingMemberInfo%2A>屬性<xref:System.Windows.Forms.Binding>類別。  
  
 <xref:System.Windows.Forms.BindingMemberInfo>從傳入的字串建立<xref:System.Windows.Forms.BindingMemberInfo.%23ctor%2A>建構函式。  
  
   
  
## Examples  
 下列程式碼範例會列印<xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>， <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>，<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>每個控制項在表單上。  
  
 [!code-cpp[Classic BindingMemberInfo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingMemberInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingMemberInfo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingMemberInfo Example/CS/source.cs#1)]
 [!code-vb[Classic BindingMemberInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingMemberInfo Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="M:System.Windows.Forms.BindingMemberInfo.#ctor(System.String)" />
    <altmember cref="P:System.Windows.Forms.Binding.DataSource" />
    <altmember cref="P:System.Windows.Forms.Binding.PropertyName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingMemberInfo (string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingMemberInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingMemberInfo(System::String ^ dataMember);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataMember">解析至物件屬性或至物件清單中目前物件屬性的巡覽路徑。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.BindingMemberInfo" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.BindingMemberInfo>呼叫時自動建立<xref:System.Windows.Forms.BindingMemberInfo.%23ctor%2A>建構函式使用的控制項屬性名稱、 資料來源，以及導覽路徑。 `dataMember`參數包含<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>字串。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingMemberInfo.#ctor(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BindingField">
      <MemberSignature Language="C#" Value="public string BindingField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingField" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingMemberInfo.BindingField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingField { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料繫結物件的屬性名稱。</summary>
        <value>資料繫結物件的屬性名稱。 這個值不能是空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>是所傳回的導覽路徑中找到的最後一個項目<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>屬性。 比方說，如果新<xref:System.Windows.Forms.Binding>會建立具有`dataMember`"Customers.custToOrders.OrderDate"，參數<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>會傳回 「 訂單 」。  
  
   
  
## Examples  
 下列程式碼範例取得<xref:System.Windows.Forms.BindingMemberInfo>每個<xref:System.Windows.Forms.Binding>上表單，並將列印<xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>， <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>，和<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>屬性值<xref:System.Windows.Forms.BindingMemberInfo>。  
  
 [!code-cpp[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/CS/source.cs#1)]
 [!code-vb[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="P:System.Windows.Forms.BindingMemberInfo.BindingPath" />
        <altmember cref="P:System.Windows.Forms.BindingMemberInfo.BindingMember" />
      </Docs>
    </Member>
    <Member MemberName="BindingMember">
      <MemberSignature Language="C#" Value="public string BindingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingMemberInfo.BindingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingMember { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資訊，用於指定資料繫結物件的屬性名稱。</summary>
        <value>空字串 ("")、單一屬性名稱或句號分隔的屬性名稱階層架構，解析為最終資料繫結物件的屬性名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.BindingMemberInfo>呼叫時自動建立<xref:System.Windows.Forms.BindingMemberInfo.%23ctor%2A>建構函式使用的控制項屬性名稱、 資料來源，以及導覽路徑。 `dataMember`參數包含<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>字串。  
  
 <xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>是句號字元分隔的組合<xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>和<xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>值。 例如，當新<xref:System.Windows.Forms.Binding>建立使用`dataMember`"Customers.custToOrders.OrderDate"，參數<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>會傳回"Customers.custToOrders.OrderDate"。  
  
   
  
## Examples  
 下列程式碼範例取得<xref:System.Windows.Forms.BindingMemberInfo>每個物件<xref:System.Windows.Forms.Binding>上表單，並將列印<xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>， <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>，和<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>屬性值<xref:System.Windows.Forms.BindingMemberInfo>。  
  
 [!code-cpp[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/CS/source.cs#1)]
 [!code-vb[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="P:System.Windows.Forms.BindingMemberInfo.BindingField" />
        <altmember cref="P:System.Windows.Forms.BindingMemberInfo.BindingPath" />
      </Docs>
    </Member>
    <Member MemberName="BindingPath">
      <MemberSignature Language="C#" Value="public string BindingPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingMemberInfo.BindingPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得屬性名稱，或位在資料繫結物件之屬性名稱前以句號分隔的屬性名稱階層架構。</summary>
        <value>屬性名稱，或位在資料繫結物件屬性名稱前以句號分隔的屬性名稱階層架構。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>是的句號字元分隔的組合的屬性名稱前面<xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>所傳回的導覽路徑中<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>屬性。 例如，當新<xref:System.Windows.Forms.Binding>會建立具有`dataMember`"Customers.custToOrders.OrderDate"，參數<xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>會傳回"Customers.custToOrders"。  
  
   
  
## Examples  
 下列程式碼範例取得<xref:System.Windows.Forms.BindingMemberInfo>每個<xref:System.Windows.Forms.Binding>上表單，並將列印<xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>， <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>，和<xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>屬性值<xref:System.Windows.Forms.BindingMemberInfo>。  
  
 [!code-cpp[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/CS/source.cs#1)]
 [!code-vb[Classic BindingMemberInfo.BindingPath Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingMemberInfo.BindingPath Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="P:System.Windows.Forms.BindingMemberInfo.BindingField" />
        <altmember cref="P:System.Windows.Forms.BindingMemberInfo.BindingMember" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object otherObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object otherObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingMemberInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (otherObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ otherObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="otherObject">要比較是否相等的物件。</param>
        <summary>判斷指定的物件是否等於這個 <see cref="T:System.Windows.Forms.BindingMemberInfo" />。</summary>
        <returns>
          如果 <paramref name="otherObject" /> 為 <see cref="T:System.Windows.Forms.BindingMemberInfo" /> 且兩個 <see cref="P:System.Windows.Forms.BindingMemberInfo.BindingMember" /> 字串相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A>文化特性設定為比較字串<xref:System.Globalization.CultureInfo.InvariantCulture%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingMemberInfo.op_Equality(System.Windows.Forms.BindingMemberInfo,System.Windows.Forms.BindingMemberInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingMemberInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個 <see cref="T:System.Windows.Forms.BindingMemberInfo" /> 的雜湊程式碼。</summary>
        <returns>這個 <see cref="T:System.Windows.Forms.BindingMemberInfo" /> 的雜湊碼。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.BindingMemberInfo a, System.Windows.Forms.BindingMemberInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Forms.BindingMemberInfo a, valuetype System.Windows.Forms.BindingMemberInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingMemberInfo.op_Equality(System.Windows.Forms.BindingMemberInfo,System.Windows.Forms.BindingMemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As BindingMemberInfo, b As BindingMemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::BindingMemberInfo a, System::Windows::Forms::BindingMemberInfo b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Forms.BindingMemberInfo" />
        <Parameter Name="b" Type="System.Windows.Forms.BindingMemberInfo" />
      </Parameters>
      <Docs>
        <param name="a">要比較是否相等的第一個 <see cref="T:System.Windows.Forms.BindingMemberInfo" />。</param>
        <param name="b">要比較是否相等的第二個 <see cref="T:System.Windows.Forms.BindingMemberInfo" />。</param>
        <summary>判斷兩個 <see cref="T:System.Windows.Forms.BindingMemberInfo" /> 物件是否相等。</summary>
        <returns>
          如果 <paramref name="a" /> 和 <paramref name="b" /> 的 <see cref="P:System.Windows.Forms.BindingMemberInfo.BindingMember" /> 字串相等則為<see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[這個運算子的對等方法是 <xref:System.Windows.Forms.BindingMemberInfo.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.BindingMemberInfo a, System.Windows.Forms.BindingMemberInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Forms.BindingMemberInfo a, valuetype System.Windows.Forms.BindingMemberInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingMemberInfo.op_Inequality(System.Windows.Forms.BindingMemberInfo,System.Windows.Forms.BindingMemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As BindingMemberInfo, b As BindingMemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::BindingMemberInfo a, System::Windows::Forms::BindingMemberInfo b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Forms.BindingMemberInfo" />
        <Parameter Name="b" Type="System.Windows.Forms.BindingMemberInfo" />
      </Parameters>
      <Docs>
        <param name="a">要進行是否不相等之比較的第一個 <see cref="T:System.Windows.Forms.BindingMemberInfo" />。</param>
        <param name="b">要進行是否不相等之比較的第二個 <see cref="T:System.Windows.Forms.BindingMemberInfo" />。</param>
        <summary>判斷兩個 <see cref="T:System.Windows.Forms.BindingMemberInfo" /> 物件是否不相等。</summary>
        <returns>
          如果 <paramref name="a" /> 和 <paramref name="b" /> 的 <see cref="P:System.Windows.Forms.BindingMemberInfo.BindingMember" /> 不相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[這個運算子的對等方法是 <xref:System.Windows.Forms.BindingMemberInfo.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>