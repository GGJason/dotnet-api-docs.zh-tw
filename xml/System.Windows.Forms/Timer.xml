<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Timer.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5edf81ff72ec14a0a499608d1879749fafd6f668b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edf81ff72ec14a0a499608d1879749fafd6f668b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>Implements a timer that raises an event at user-defined intervals.</source>
          <target state="translated">實作一個在使用者定義的間隔引發事件的計時器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>This timer is optimized for use in Windows Forms applications and must be used in a window.</source>
          <target state="translated">最佳化這個計時器以用於 Windows Forms 應用程式，並且必須用於視窗中。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> is used to raise an event at user-defined intervals.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>用於使用者定義的間隔引發事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</source>
          <target state="translated">這個 Windows 計時器專為單一執行緒的環境，UI 執行緒會用於執行處理。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</source>
          <target state="translated">它需要，使用者程式碼 UI 訊息幫浦可用和永遠無法從相同的執行緒，或封送處理到另一個執行緒呼叫。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>When you use this timer, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event to perform a polling operation or to display a splash screen for a specified period of time.</source>
          <target state="translated">當您使用這個計時器時，使用<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>事件進行輪詢作業，或顯示一段指定時間啟動顯示畫面。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>Whenever the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property is greater than zero, the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event is raised at intervals based on the <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property setting.</source>
          <target state="translated">每當<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>屬性設定為<ph id="ph2">`true`</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>屬性大於零，<ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>間隔為基礎，就會引發事件<ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>屬性設定。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>This class provides methods to set the interval, and to start and stop the timer.</source>
          <target state="translated">這個類別會提供方法設定的時間間隔，並啟動或停止計時器。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</source>
          <target state="translated">Windows Form Timer 元件是單一執行緒，且僅限於 55 毫秒精確度。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>If you require a multithreaded timer with greater accuracy, use the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> class in the <ph id="ph2">&lt;xref:System.Timers&gt;</ph> namespace.</source>
          <target state="translated">如果您以更好的精確度需要多執行緒的計時器，請使用<ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph>類別<ph id="ph2">&lt;xref:System.Timers&gt;</ph>命名空間。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>The following example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下列範例會實作簡單的間隔計時器，發出警示設定每五秒。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</source>
          <target state="translated">發生警示時，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>顯示的警示已啟動並提示使用者計時器是否應該繼續執行的次數計數。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>When a new timer is created, it is disabled; that is, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">建立新的計時器時，就會停用;也就是說，<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>設<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>To enable the timer, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method or set <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要啟用計時器，請呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>方法或一組<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>至<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</source>
          <target state="translated">如果計時器已停用計時器不在範圍內，記憶體回收發生時，就會被配置計時器。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</source>
          <target state="translated">如果啟用計時器時，即使它不在範圍內，則不受記憶體回收限制。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that represents the container for the timer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>，表示計時器的容器。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class together with the specified container.</source>
          <target state="translated">使用指定的容器，初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> constructor enables you to associate a <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> with any <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>建構函式可讓您將<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>與任何<ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>By associating the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> like this, you hand over control of the lifetime of the <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">透過建立關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>像這樣，您手動控制的存留期<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>至<ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</source>
          <target state="translated">如果您在您的應用程式中使用多個元件，而且想要同時處置所有元件，這可能會很有用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>For example, if you associate a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, an <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> with a <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>, calling <ph id="ph5">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> on the <ph id="ph6">&lt;xref:System.ComponentModel.Container&gt;</ph> will force disposal of all of these components as well.</source>
          <target state="translated">比方說，如果您建立的關聯<ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>與<ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>，則呼叫<ph id="ph5">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>上<ph id="ph6">&lt;xref:System.ComponentModel.Container&gt;</ph>會強制所有這些元件以及處置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>When a new timer is created, it is disabled; that is, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">建立新的計時器時，就會停用;也就是說，<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>設<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>To enable the timer, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method or set <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要啟用計時器，請呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>方法或一組<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>至<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>This instance will exist until its container releases it to garbage collection.</source>
          <target state="translated">它的容器釋放回收之前，將會存在此執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要釋放 Managed 和 Unmanaged 兩種資源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to release only the unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> 表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Disposes of the resources, other than memory, used by the timer.</source>
          <target state="translated">處置計時器所使用記憶體之外的資源。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> when you are finished using the timer.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>當您完成使用計時器。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> method leaves the timer in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>方法會使計時器處於不穩定的狀態。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>After you call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">在您呼叫後<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>，您必須釋放計時器的所有參考，讓它所佔用的記憶體可由記憶體回收收回。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> before you release your last reference to the timer.</source>
          <target state="translated">請務必呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>發行您對計時器的最後一個參考之前。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</source>
          <target state="translated">否則，計時器所使用的資源將不會釋放回收呼叫計時器物件的解構函式之前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Gets or sets whether the timer is running.</source>
          <target state="translated">取得或設定計時器是否正在執行。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the timer is currently enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果計時器目前是啟用狀態，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The timer is not subject to garbage collection when the value is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">計時器不受記憶體回收限制的值時<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method is the same as setting <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>方法相當於設定<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>至<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Likewise, calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> method is the same as setting <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">同樣地，呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>方法相當於設定<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>至<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The following example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下列範例會實作簡單的間隔計時器，發出警示設定每五秒。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">發生警示時，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>顯示的警示已啟動並提示使用者，是否應該繼續執行計時器的次數計數。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Interval">
          <source>Gets or sets the time, in milliseconds, before the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event is raised relative to the last occurrence of the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件相對於上一次發生 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件而引發之前，取得或設定時間 (以毫秒為單位)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> specifying the number of milliseconds before the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event is raised relative to the last occurrence of the <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 會在 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件相對於上次發生 <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件而引發之前指定毫秒數。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>The value cannot be less than one.</source>
          <target state="translated">這個值不能小於 1。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>To get the number of seconds in the interval, divide this number by 1,000.</source>
          <target state="translated">若要取得的秒數間隔中，請將這個數字除以 1000。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下列程式碼範例會實作簡單的間隔計時器，發出警示設定每五秒。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">發生警示時，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>顯示的警示已啟動並提示使用者，是否應該繼續執行計時器的次數計數。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>This is always <ph id="ph1">&lt;see cref="F:System.EventArgs.Empty" /&gt;</ph>.</source>
          <target state="translated">這個一定是 <ph id="ph1">&lt;see cref="F:System.EventArgs.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>This method is called for each timer tick.</source>
          <target state="translated">每個計時器刻度會呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>It calls any methods that are added through <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>.</source>
          <target state="translated">它會呼叫任何方法，會透過加入<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>If you are inheriting from <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, you can override this method.</source>
          <target state="translated">如果您繼承自<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>，您可以覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> in a derived class, make sure that you call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph>在衍生類別中，請確定呼叫基底類別的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Start">
          <source>Starts the timer.</source>
          <target state="translated">啟動計時器。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>You can also start the timer by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">您也可以藉由設定啟動計時器<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下列程式碼範例會實作簡單的間隔計時器，發出警示設定每五秒。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">發生警示時，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>顯示的警示已啟動並提示使用者，是否應該繼續執行計時器的次數計數。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Stops the timer.</source>
          <target state="translated">停止計時器。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>You can also stop the timer by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">您也可以藉由設定停止計時器<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>屬性<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> object may be enabled and disabled multiple times within the same application session.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>物件可能已啟用和停用相同的應用程式工作階段內多次。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> after you have disabled a <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to restart the interrupted interval.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>已停用之後<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>藉由呼叫<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>會導致<ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph>重新啟動中斷的時間間隔。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> is set for a 5000-millisecond interval, and you call <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> at around 3000 milliseconds, calling <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to wait 5000 milliseconds before raising the <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event.</source>
          <target state="translated">如果您<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>設定在 5000 毫秒間隔內，而且您呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>大約 3000 毫秒，呼叫在<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>會導致<ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph>之前要等待 5000 毫秒引發<ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Calling Stop on any <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> within a Windows Forms application can cause messages from other <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components in the application to be processed immediately, because all <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components operate on the main application thread.</source>
          <target state="translated">任何呼叫停止<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>內 Windows Form 應用程式可能會導致訊息從其他<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>元件來處理，因為應用程式中的所有<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>主應用程式執行緒上運作的元件。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If you have two <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> on the first <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, your application may receive an event callback for the second component first.</source>
          <target state="translated">如果您有兩個<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>元件，其中一個設定為 700 毫秒且設為 500 毫秒，一組，而且您呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>在第一個<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>，您的應用程式可能會先收到第二個元件的事件回呼。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If this proves problematic, consider using the <ph id="ph1">&lt;xref:System.Threading.Timer&gt;</ph> class in the <ph id="ph2">&lt;xref:System.Threading&gt;</ph> namespace instead.</source>
          <target state="translated">如果這證明有問題，請考慮使用<ph id="ph1">&lt;xref:System.Threading.Timer&gt;</ph>類別<ph id="ph2">&lt;xref:System.Threading&gt;</ph>命名空間改為。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下列程式碼範例會實作簡單的間隔計時器，發出警示設定每五秒。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">發生警示時，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>顯示的警示已啟動並提示使用者，是否應該繼續執行計時器的次數計數。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Tag">
          <source>Gets or sets an arbitrary string representing some type of user state.</source>
          <target state="translated">取得或設定表示部分類型使用者狀態的任意字串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Tag">
          <source>An arbitrary string representing some type of user state.</source>
          <target state="translated">表示部分類型使用者狀態的任意字串。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Timer.Tick">
          <source>Occurs when the specified timer interval has elapsed and the timer is enabled.</source>
          <target state="translated">發生於指定的計時器間隔已耗用，且計時器被啟用時。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>Calling the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> class from within the <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event repeatedly.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>類別從<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>事件可能無法如預期般運作，以顯示 [判斷提示] 對話方塊方塊可能會造成引發 Windows<ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>事件重複。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>We recommend that you refrain from testing assertions within this event, and use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph> methods instead.</source>
          <target state="translated">我們建議您避免測試判斷提示中這個事件，並使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">下列程式碼範例會實作簡單的間隔計時器，發出警示設定每五秒。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">發生警示時，<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>顯示的警示已啟動並提示使用者，是否應該繼續執行計時器的次數計數。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</source>
          <target state="translated">傳回表示 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> 的字串。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</source>
          <target state="translated">字串，代表目前的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.ToString%2A&gt;</ph> method returns a string that includes the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer.ToString%2A&gt;</ph>方法會傳回字串，其中包含的值<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>