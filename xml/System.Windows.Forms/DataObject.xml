<Type Name="DataObject" FullName="System.Windows.Forms.DataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="790d5db450a5067dabf16b0d3e9d67a55cd0e1ef" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48730693" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.Forms.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::Forms::IDataObject" />
  <TypeSignature Language="F#" Value="type DataObject = class&#xA;    interface IDataObject&#xA;    interface IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>實作基本資料傳輸機制。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataObject> 實作<xref:System.Windows.Forms.IDataObject>介面，其方法提供的資料傳輸格式無關的機制。  
  
 A<xref:System.Windows.Forms.DataObject>一般會搭配使用<xref:System.Windows.Forms.Clipboard>和拖放作業中。 <xref:System.Windows.Forms.DataObject>類別提供的建議的實作<xref:System.Windows.Forms.IDataObject>介面。 建議您改用<xref:System.Windows.Forms.DataObject>類別，而不是實作<xref:System.Windows.Forms.IDataObject>自己。  
  
 許多不同格式的資料可以儲存在<xref:System.Windows.Forms.DataObject>。 資料擷取自<xref:System.Windows.Forms.DataObject>其相關聯的格式。 因為不可能知道目標應用程式，您可以增加資料加上中的資料時，會以適當的格式，為應用程式的可能性<xref:System.Windows.Forms.DataObject>多種格式。 請參閱<xref:System.Windows.Forms.DataFormats>之預先定義的格式。 您可以實作自己的格式建立的執行個體<xref:System.Windows.Forms.DataFormats.Format>類別。  
  
 若要將資料儲存在<xref:System.Windows.Forms.DataObject>，將資料傳遞至建構函式或呼叫<xref:System.Windows.Forms.DataObject.SetData%2A>。 您可以在多種格式將資料加入相同<xref:System.Windows.Forms.DataObject>。 如果您想要的資料將在其原生格式，呼叫中擷取<xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29>具有`autoConvert`參數設為`false`。  
  
 可以從擷取資料<xref:System.Windows.Forms.DataObject>適用於任何格式<xref:System.Windows.Forms.DataObject.GetData%2A>。 例如，文字可以轉換成 Unicode。 若要擷取儲存所在之格式的資料，請呼叫<xref:System.Windows.Forms.DataObject.GetData%2A>具有`autoConvert`參數設為`false`。  
  
 若要判斷資料會儲存在何種格式，請呼叫<xref:System.Windows.Forms.DataObject.GetFormats%2A>。 若要判斷是否可以使用一種格式，請呼叫<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>與所需的格式。  
  
 在  [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]，則<xref:System.Windows.Forms.DataObject>類別會提供額外的方法，讓您更輕鬆地使用資料共通格式。 若要新增以特定格式的資料<xref:System.Windows.Forms.DataObject>，使用適當`Set`*格式*方法，例如<xref:System.Windows.Forms.DataObject.SetText%2A>。 若要擷取從特定格式的資料<xref:System.Windows.Forms.DataObject>，第一次呼叫 適當`Contains`*格式*方法 (例如<xref:System.Windows.Forms.DataObject.ContainsText%2A>) 來判斷是否<xref:System.Windows.Forms.DataObject>包含資料格式，然後呼叫適當`Get`*格式*方法 (例如<xref:System.Windows.Forms.DataObject.GetText%2A>) 來擷取資料，如果<xref:System.Windows.Forms.DataObject>包含它。  
  
> [!NOTE]
>  使用剪貼簿的中繼檔格式時，可能需要特殊考量。 由於目前的實作限制<xref:System.Windows.Forms.DataObject>類別，.NET Framework 所使用的中繼檔格式可能無法辨識的應用程式使用較舊的中繼檔格式。 在此情況下，您必須使用 Win32 剪貼簿應用程式開發介面 (Api) 在互通。 如需詳細資訊，請參閱知識庫文件 323530，「 中繼檔上剪貼簿是不可見到所有應用程式，」 Microsoft 在http://support.microsoft.com。  
>   
>  物件必須可序列化，才能放在剪貼簿。 請參閱<xref:System.Runtime.Serialization>如需有關序列化。 如果您的目標應用程式需要非常特定的資料格式，在序列化程序中的資料加入標頭可能會導致應用程式無法辨識您的資料。 若要保留您的資料格式，將資料做為<xref:System.Byte>陣列<xref:System.IO.MemoryStream>，並傳遞<xref:System.IO.MemoryStream>到<xref:System.Windows.Forms.DataObject.SetData%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會將資料<xref:System.Windows.Forms.DataObject>。 首先，新<xref:System.Windows.Forms.DataObject>建立和元件都會儲存在它。 然後，它會檢查適當的型別中的資料是否存在於<xref:System.Windows.Forms.DataObject>。 結果會顯示在文字方塊中。 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 下一個範例擷取的資料儲存在<xref:System.Windows.Forms.DataObject>。 首先，新<xref:System.Windows.Forms.DataObject>建立文字資料。 然後，擷取的資料，指定其格式為字串，並顯示在文字方塊中。 資料格式會自動從文字轉換為字串。 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DataObject Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#2)]
 [!code-vb[Classic DataObject Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataObject" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataObject" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.DataObject>，將資料加入其中。 此範例會擷取並顯示資料。 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">要儲存的資料。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataObject" /> 類別的新執行個體，並在其中加入指定的物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以將資料新增至任何格式<xref:System.Windows.Forms.DataObject>當您使用這個建構函式，或您可以將資料作為<xref:System.Windows.Forms.IDataObject>提供多個格式一次。 如果您已熟悉使用 COM 程式設計，您也可以加入資料物件實作 COM`IDataObject`介面。 如需詳細資訊，請參閱 <<c0> `IDataObject` 位於 MSDN library， http://msdn.microsoft.com/library。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.DataObject>，其中包含字串。 使用其資料格式來擷取的資料。 結果會顯示在文字方塊中。 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=150123">IDataObject</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : string * obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject (format, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">指定的資料格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <param name="data">要儲存的資料。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataObject" /> 類別的新執行個體，並以指定之格式加入至指定的物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.DataObject>類別使用的字串，指定為字串類型。 從擷取的資料<xref:System.Windows.Forms.DataObject>藉由指定其格式為文字。 結果會顯示在文字方塊中。 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public virtual bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="abstract member ContainsAudio : unit -&gt; bool&#xA;override this.ContainsAudio : unit -&gt; bool" Usage="dataObject.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出資料物件是否包含 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式的資料。</summary>
        <returns>如果資料物件包含音訊資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來判斷資料物件是否包含音訊資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetAudioStream%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public virtual bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member ContainsFileDropList : unit -&gt; bool&#xA;override this.ContainsFileDropList : unit -&gt; bool" Usage="dataObject.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出資料物件上是否包含 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 格式的資料，或是可以轉換為該格式的資料。</summary>
        <returns>如果資料物件包含檔案下拉清單，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檔案下拉清單是包含檔案的路徑資訊的字串集合。  
  
 使用此方法來判斷資料物件是否包含檔案下拉清單，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetFileDropList%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public virtual bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsImage();" />
      <MemberSignature Language="F#" Value="abstract member ContainsImage : unit -&gt; bool&#xA;override this.ContainsImage : unit -&gt; bool" Usage="dataObject.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出資料物件上是否包含 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 格式的資料，或是可以轉換為該格式的資料。</summary>
        <returns>如果資料物件包含影像資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來判斷資料物件是否包含影像資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetImage%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指出資料物件是否包含文字資料。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText();" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : unit -&gt; bool&#xA;override this.ContainsText : unit -&gt; bool" Usage="dataObject.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出資料物件是否包含 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的資料。</summary>
        <returns>如果資料物件包含文字資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來判斷資料物件是否包含文字資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetText%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool&#xA;override this.ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="dataObject.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">其中一個 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</param>
        <summary>指出資料物件是否包含由所指定 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值表示之格式的文字資料。</summary>
        <returns>如果資料物件包含指定之格式的文字資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來判斷資料物件是否包含文字資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetText%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="abstract member GetAudioStream : unit -&gt; System.IO.Stream&#xA;override this.GetAudioStream : unit -&gt; System.IO.Stream" Usage="dataObject.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從資料物件擷取音效串流。</summary>
        <returns>如果資料物件不包含任何 <see cref="T:System.IO.Stream" /> 格式的資料，則為包含音訊資料或 <see langword="null" /> 的 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataObject.ContainsAudio%2A>方法，以判斷資料物件是否包含音訊資料，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.DataObject.SetAudio%2A>音訊資料加入資料物件的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回與所指定之資料格式相關的資料。</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj&#xA;override this.GetData : string -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">要擷取的資料格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <summary>傳回與所指定之資料格式相關的資料。</summary>
        <returns>與指定之格式或 <see langword="null" /> 產生關聯的資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果這個方法在指定的格式中找不到資料，它會嘗試將資料轉換成格式。 如果資料無法轉換成指定的格式，或是儲存資料時自動轉換設定為`false`，這個方法會傳回`null`。  
  
 若要判斷資料是否相關，或可以轉換成該格式，請呼叫<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>再呼叫<xref:System.Windows.Forms.DataObject.GetData%2A>。 呼叫<xref:System.Windows.Forms.DataObject.GetFormats%2A>取得一份有效的格式資料儲存在這個<xref:System.Windows.Forms.DataObject>。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果儲存時指定，允許的轉換，而且如果所要求的格式與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
>   
>  當`format`是<xref:System.Windows.Forms.DataFormats.Html>，這個方法會傳回在.NET 4.5 或更高版本為目標的應用程式中的 utf-8 編碼字串和 ANSI 編碼的應用程式中的字串如果要對目標為.NET 4.0 或更低。  
  
   
  
## Examples  
 下列程式碼範例會擷取儲存在資料<xref:System.Windows.Forms.DataObject>。 首先，新<xref:System.Windows.Forms.DataObject>建立文字資料。 然後，擷取的資料，指定其格式為字串，並顯示在文字方塊中。  
  
 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[classic dataobject example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[classic dataobject example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[classic dataobject example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj&#xA;override this.GetData : Type -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" />，表示要擷取的資料的格式。</param>
        <summary>傳回與指定的類別類型格式相關的資料。</summary>
        <returns>與指定之格式或 <see langword="null" /> 產生關聯的資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果這個方法在指定的格式中找不到資料，它會嘗試將資料轉換成格式。 如果資料無法轉換成指定的格式，或是儲存資料時自動轉換設定為`false`，這個方法會傳回`null`。  
  
 若要判斷資料是否相關，或可以轉換成該格式，請呼叫<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>再呼叫<xref:System.Windows.Forms.DataObject.GetData%2A>。 呼叫<xref:System.Windows.Forms.DataObject.GetFormats%2A>取得一份有效的格式資料儲存在這個<xref:System.Windows.Forms.DataObject>。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果儲存時指定，允許的轉換，而且如果所要求的格式與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
  
   
  
## Examples  
 下列程式碼範例會擷取儲存在資料<xref:System.Windows.Forms.DataObject>。 首先，新<xref:System.Windows.Forms.DataObject>建立與元件。 然後，會擷取資料，指定其型別。 擷取的資料類型會顯示在文字方塊中。  
  
 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.GetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj&#xA;override this.GetData : string * bool -&gt; obj" Usage="dataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">要擷取的資料格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <param name="autoConvert">若要將資料轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>傳回與所指定之資料格式相關的資料，使用自動轉換參數來決定是否要將資料轉換成格式。</summary>
        <returns>與指定之格式或 <see langword="null" /> 產生關聯的資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`autoConvert`參數是`true`和這個方法在指定的格式中找不到資料，它會嘗試將資料轉換成格式。 如果資料無法轉換成指定的格式，或是儲存資料時自動轉換設定為`false`，這個方法會傳回`null`。  
  
 如果`autoConvert`參數是`false`，這個方法會傳回資料中指定的格式，或`null`如果找不到任何資料格式如下。  
  
 若要判斷資料是否相關，或可以轉換成該格式，請呼叫<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>再呼叫<xref:System.Windows.Forms.DataObject.GetData%2A>。 呼叫<xref:System.Windows.Forms.DataObject.GetFormats%2A>取得一份有效的格式資料儲存在這個<xref:System.Windows.Forms.DataObject>。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果儲存時指定，允許的轉換，而且如果所要求的格式與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
>   
>  當`format`是<xref:System.Windows.Forms.DataFormats.Html>，這個方法會傳回在.NET 4.5 或更高版本為目標的應用程式中的 utf-8 編碼字串和 ANSI 編碼的應用程式中的字串如果要對目標為.NET 4.0 或更低。  
  
   
  
## Examples  
 下列程式碼範例會擷取中儲存的資料<xref:System.Windows.Forms.DataObject>，並使用`autoConvert`參數來指定是否要轉換的資料格式。  
  
 首先，新<xref:System.Windows.Forms.DataObject>建立文字資料。 然後範例會嘗試擷取資料，並指定其格式為字串而沒有格式轉換，也就是`autoConvert`參數是`false`。 這項作業會失敗，因為沒有字串資料中的<xref:System.Windows.Forms.DataObject>。  
  
 接下來，範例會嘗試擷取資料，同樣地，具有`autoConvert`參數設定為`true`。 這項作業成功，而且結果會顯示在<xref:System.Windows.Forms.MessageBox>。  
  
 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.GetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>判斷儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中的資料是否與指定的格式相關聯。</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool&#xA;override this.GetDataPresent : string -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">要檢查的格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <summary>判斷儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中的資料是否與指定的格式相關聯，或是可以轉換成指定的格式。</summary>
        <returns>如果儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中的資料與指定的格式相關聯，或可以轉換成指定的格式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法來判斷呼叫之前是否存在格式<xref:System.Windows.Forms.DataObject.GetData%2A>。 呼叫<xref:System.Windows.Forms.DataObject.GetFormats%2A>的格式，可在此<xref:System.Windows.Forms.DataObject>。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果儲存時指定，允許的轉換，而且如果所要求的格式與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
  
> [!NOTE]
>  如果可以不擷取任何資料，就會擲不回任何例外狀況。 相反地，`false`會傳回。  
  
   
  
## Examples  
 下列程式碼範例可讓您決定是否目前儲存於這個<xref:System.Windows.Forms.DataObject>相關聯，或可以轉換成指定的格式。 新<xref:System.Windows.Forms.DataObject>初始化字串和其相關的格式指定為文字。  
  
 然後範例會列印文字資料是否存在於是否<xref:System.Windows.Forms.DataObject>。 此程式碼需要`textBox1`已建立。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool&#xA;override this.GetDataPresent : Type -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" />，表示要檢查的格式。</param>
        <summary>判斷儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中的資料是否與指定的格式相關聯，或是可以轉換成指定的格式。</summary>
        <returns>如果儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中的資料與指定的格式相關聯，或可以轉換成指定的格式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法來判斷呼叫之前是否存在格式<xref:System.Windows.Forms.DataObject.GetData%2A>。 呼叫<xref:System.Windows.Forms.DataObject.GetFormats%2A>的格式，可在此<xref:System.Windows.Forms.DataObject>。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果儲存時指定，允許的轉換，而且如果所要求的格式與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
  
> [!NOTE]
>  如果可以不擷取任何資料，就會擲不回任何例外狀況。 相反地，`false`會傳回。  
  
   
  
## Examples  
 下列程式碼範例可讓您判斷所指定類型的資料是否存在於<xref:System.Windows.Forms.DataObject>，或指定的型別是否可以轉換資料。 結果會顯示在文字方塊中。 程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool&#xA;override this.GetDataPresent : string * bool -&gt; bool" Usage="dataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">要檢查的格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <param name="autoConvert">若要判斷儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 之中的資料是否可以轉換成指定的格式，則為 <see langword="true" />，若要檢查資料是否為指定的格式，則為 <see langword="false" />。</param>
        <summary>判斷這個 <see cref="T:System.Windows.Forms.DataObject" /> 是否包含指定格式的資料，或者是包含可以轉換成指定格式的資料。</summary>
        <returns>如果資料在指定的格式中，或是可以轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法來判斷呼叫之前是否存在格式<xref:System.Windows.Forms.DataObject.GetData%2A>。 呼叫<xref:System.Windows.Forms.DataObject.GetFormats%2A>的格式，可在此<xref:System.Windows.Forms.DataObject>。  
  
 這個方法會傳回`true`時：  
  
-   `autoConvert`參數是`true`和資料的格式，可以轉換成適當的格式。  
  
-   `autoConvert`參數是`false`且資料在適當的格式。  
  
 這個方法會傳回`false`時：  
  
-   `autoConvert`參數是`true`，這個方法中指定的格式中，找不到資料和它無法將資料轉換成指定的格式，或儲存資料時自動轉換設定為`false`。  
  
-   `autoConvert`參數是`false`和資料不存在於這<xref:System.Windows.Forms.DataObject>中指定的格式。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果它是預存指定允許的轉換，以及所要求的格式是否與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
  
> [!NOTE]
>  如果可以不擷取任何資料，就會擲不回任何例外狀況。 相反地，`false`會傳回。  
  
   
  
## Examples  
 下列程式碼範例可讓您判斷資料是否目前儲存在<xref:System.Windows.Forms.DataObject>與指定的格式相關聯。 首先，新<xref:System.Windows.Forms.DataObject>初始化的字串，指定其格式為文字。  
  
 然後<xref:System.Windows.Forms.DataObject>查詢的文字格式，與相關聯的資料指定`autoConvert`參數做為`false`。 此查詢的結果會列印在文字方塊中。  
  
 然後<xref:System.Windows.Forms.DataObject>查詢字串格式相關聯的資料指定`autoConvert`參數做為`true`。 結果會列印在文字方塊中。 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection&#xA;override this.GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="dataObject.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從資料物件擷取檔案名稱集合。</summary>
        <returns>如果資料物件不包含任何 <see cref="T:System.Collections.Specialized.StringCollection" /> 格式或可以轉換為該格式的資料，則為包含檔案名稱或 <see langword="null" /> 的 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檔案下拉清單是包含檔案的路徑資訊的字串集合。  
  
 檔案下拉清單儲存在資料物件，做為<xref:System.String>陣列。 這個方法會轉換到這個陣列<xref:System.Collections.Specialized.StringCollection>並傳回的集合。  
  
 使用<xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A>方法，以判斷資料物件是否包含檔案下拉清單，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.DataObject.SetFileDropList%2A>方法，將檔案下拉清單加入至資料物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回所有格式的清單，儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中的資料與這些格式關聯，或是該些資料可以轉換成這些格式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]&#xA;override this.GetFormats : unit -&gt; string[]" Usage="dataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回所有格式的清單，儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中的資料與這些格式關聯，或是該些資料可以轉換成這些格式。</summary>
        <returns>
          <see cref="T:System.String" /> 型別的陣列，包含儲存於這個物件之資料其所支援的格式清單。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫此方法，以取得支援的資料格式，然後再呼叫<xref:System.Windows.Forms.DataObject.GetData%2A>。 請參閱<xref:System.Windows.Forms.DataFormats>之預先定義的格式。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果它是預存指定允許的轉換，以及所要求的格式是否與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
  
   
  
## Examples  
 下列程式碼範例會查詢<xref:System.Windows.Forms.DataObject>其資料，與相關聯的格式和資料可以轉換成的格式。 結果清單會顯示在文字方塊中。 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]&#xA;override this.GetFormats : bool -&gt; string[]" Usage="dataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">若要擷取與儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中的資料相關聯或所有可以轉換的格式，則為 <see langword="true" />，若只要擷取原生資料格式，則為 <see langword="false" />。</param>
        <summary>使用自動轉換參數判斷是否只擷取原生資料格式，或擷取所有可以轉換的格式，傳回與儲存於這個 <see cref="T:System.Windows.Forms.DataObject" /> 中之資料相關聯或者所有可以轉換之格式的清單。</summary>
        <returns>
          <see cref="T:System.String" /> 型別的陣列，包含儲存於這個物件之資料其所支援的格式清單。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫此方法，以取得支援的資料格式，然後再呼叫<xref:System.Windows.Forms.DataObject.GetData%2A>。 請參閱<xref:System.Windows.Forms.DataFormats>之預先定義的格式。  
  
> [!NOTE]
>  資料可以轉換成其他格式，如果它是預存指定允許的轉換，以及所要求的格式是否與預存格式相容。 例如，資料儲存為 Unicode 可以轉換成文字。  
  
   
  
## Examples  
 下列程式碼範例會查詢<xref:System.Windows.Forms.DataObject>其資料與相關聯的格式。 第一個查詢會指定`autoConvert`參數做為`false`，因此只會傳回資料的原生格式。 第二個查詢會指定`autoConvert`參數做為`true`，因此格式的清單中包含的資料可以轉換成的格式。  
  
 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.GetFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="abstract member GetImage : unit -&gt; System.Drawing.Image&#xA;override this.GetImage : unit -&gt; System.Drawing.Image" Usage="dataObject.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從資料物件擷取影像。</summary>
        <returns>如果資料物件不包含任何 <see cref="T:System.Drawing.Image" /> 格式或可以轉換為該格式的資料，則為表示資料物件中影像資料或 <see langword="null" /> 的 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataObject.ContainsImage%2A>方法，以判斷資料物件是否包含影像資料，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.DataObject.SetImage%2A>映像資料加入資料物件的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從資料物件擷取文字資料。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="abstract member GetText : unit -&gt; string&#xA;override this.GetText : unit -&gt; string" Usage="dataObject.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式從資料物件擷取文字資料。</summary>
        <returns>如果資料物件不包含 <see cref="F:System.String.Empty" /> 格式的資料，則為資料物件中的文字資料或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataObject.ContainsText%2A>方法，以判斷資料物件是否包含文字資料，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.DataObject.SetText%2A>方法將文字資料加入至資料物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member GetText : System.Windows.Forms.TextDataFormat -&gt; string&#xA;override this.GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="dataObject.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">其中一個 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</param>
        <summary>從資料物件擷取以所指定 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值表示之格式的文字資料。</summary>
        <returns>如果資料物件不包含指定之格式的資料，則為資料物件中的文字資料或 <see cref="F:System.String.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.DataObject.ContainsText%2A>方法，以判斷資料物件是否包含文字資料，然後再擷取與這個方法。  
  
 使用<xref:System.Windows.Forms.DataObject.SetText%2A>方法將文字資料加入至資料物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式的資料加入至資料物件。</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : byte[] -&gt; unit&#xA;override this.SetAudio : byte[] -&gt; unit" Usage="dataObject.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">
          <see cref="T:System.Byte" /> 陣列，包含音訊資料。</param>
        <summary>將 <see cref="T:System.Byte" /> 格式的 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 陣列轉換為 <see cref="T:System.IO.Stream" /> 之後，再將該陣列加入至資料物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從資料物件中擷取音訊資料，請先使用<xref:System.Windows.Forms.DataObject.ContainsAudio%2A>方法，以判斷資料物件是否包含音訊資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetAudioStream%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> 為 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : System.IO.Stream -&gt; unit&#xA;override this.SetAudio : System.IO.Stream -&gt; unit" Usage="dataObject.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">
          <see cref="T:System.IO.Stream" />，包含音訊資料。</param>
        <summary>將 <see cref="T:System.IO.Stream" /> 格式的 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 資料加入至資料物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從資料物件中擷取音訊資料，請先使用<xref:System.Windows.Forms.DataObject.ContainsAudio%2A>方法，以判斷資料物件是否包含音訊資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetAudioStream%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> 為 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將物件加入 <see cref="T:System.Windows.Forms.DataObject" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit&#xA;override this.SetData : obj -&gt; unit" Usage="dataObject.SetData data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">要儲存的資料。</param>
        <summary>使用物件型別做為資料格式，將指定的物件加入至 <see cref="T:System.Windows.Forms.DataObject" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 如果您不知道目標應用程式的格式，您可以使用此方法的多個格式來儲存資料。 使用這個方法儲存的資料可以轉換成相容的格式，並在擷取時。  
  
 <xref:System.Windows.Forms.DataObject.SetData%28System.Object%29>多載存放區`data`值的格式，它會判斷呼叫<xref:System.Object.GetType%2A?displayProperty=nameWithType>方法。 如果`data`會實作<xref:System.Runtime.Serialization.ISerializable>介面，這個多載也會儲存在值<xref:System.Windows.DataFormats.Serializable>格式。  
  
   
  
## Examples  
 下列程式碼範例將資料儲存在<xref:System.Windows.Forms.DataObject>。 首先，新<xref:System.Windows.Forms.DataObject>建立和元件都會儲存在它。 然後，資料擷取所指定的類別。 結果會顯示在文字方塊中。  
  
 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.SetData3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit&#xA;override this.SetData : string * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">與資料關聯的格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <param name="data">要儲存的資料。</param>
        <summary>使用指定的格式，將指定的物件加入至 <see cref="T:System.Windows.Forms.DataObject" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 如果您不知道目標應用程式的格式，您可以使用此方法的多個格式來儲存資料。  
  
 使用這個方法儲存的資料可以轉換成相容的格式，並在擷取時。  
  
   
  
## Examples  
 下列程式碼範例將資料儲存在<xref:System.Windows.Forms.DataObject>，指定其格式為 Unicode。  
  
 然後藉由指定文字格式，因為預設值是相容的最終格式時，將資料轉換擷取的資料。 結果會顯示在文字方塊中。  
  
 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.SetData1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit&#xA;override this.SetData : Type * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" />，表示與資料相關的格式。</param>
        <param name="data">要儲存的資料。</param>
        <summary>使用指定的型別做為格式，將指定的物件加入至 <see cref="T:System.Windows.Forms.DataObject" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 如果您不知道目標應用程式的格式，您可以使用此方法的多個格式來儲存資料。  
  
 使用這個方法儲存的資料可以轉換成相容的格式，並在擷取時。  
  
   
  
## Examples  
 下列程式碼範例將資料儲存在<xref:System.Windows.Forms.DataObject>使用<xref:System.Type>做為資料格式。 藉由呼叫，然後擷取的資料<xref:System.Windows.Forms.DataObject.GetData%2A>使用<xref:System.Type>指定資料格式。 結果會顯示在文字方塊中。  
  
 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.SetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit&#xA;override this.SetData : string * bool * obj -&gt; unit" Usage="dataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">與資料關聯的格式。 如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</param>
        <param name="autoConvert">若資料可以被轉換成另一種格式則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="data">要儲存的資料。</param>
        <summary>使用指定的格式，將指定的物件加入至 <see cref="T:System.Windows.Forms.DataObject" />，並指出該資料是否可以轉換成另一種格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 如果您不知道目標應用程式的格式，您可以使用此方法的多個格式來儲存資料。  
  
   
  
## Examples  
 下列程式碼範例將資料儲存在<xref:System.Windows.Forms.DataObject>和指定的資料可以只擷取原生格式。  
  
 首先，新<xref:System.Windows.Forms.DataObject>建立。 以 Unicode 格式的資料會儲存在<xref:System.Windows.Forms.DataObject>，以`autoConvert`設定為`false`。  
  
 然後，<xref:System.Windows.Forms.DataObject>查詢可用的資料格式的清單。 傳回 Unicode 格式時，雖然 Unicode 資料可以轉換成文字和其他格式。  
  
 此程式碼需要`textBox1`已建立。  
  
 [!code-cpp[Classic DataObject.SetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="abstract member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit&#xA;override this.SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="dataObject.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">
          <see cref="T:System.Collections.Specialized.StringCollection" />，其中包含檔案名稱。</param>
        <summary>將 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 格式的檔案名稱集合加入至資料物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檔案下拉清單是包含檔案的路徑資訊的字串集合。  
  
 檔案下拉清單儲存在資料物件，做為<xref:System.String>陣列。 這個方法會轉換`filePaths`至<xref:System.String>再將其加入資料物件的陣列。  
  
 若要從資料物件擷取檔案下拉清單，請先使用<xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A>方法，以判斷資料物件是否包含以該格式的資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetFileDropList%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> 為 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public virtual void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="abstract member SetImage : System.Drawing.Image -&gt; unit&#xA;override this.SetImage : System.Drawing.Image -&gt; unit" Usage="dataObject.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">要加入至資料物件中的 <see cref="T:System.Drawing.Image" />。</param>
        <summary>將 <see cref="T:System.Drawing.Image" /> 格式的 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 資料加入至資料物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從資料物件擷取影像資料，請先使用<xref:System.Windows.Forms.DataObject.ContainsImage%2A>方法，以判斷資料物件是否包含影像資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetImage%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> 為 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將文字資料加入資料物件。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string -&gt; unit&#xA;override this.SetText : string -&gt; unit" Usage="dataObject.SetText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">要加入資料物件中的文字。</param>
        <summary>將 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的文字資料加入至資料物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從資料物件擷取文字資料，請先使用<xref:System.Windows.Forms.DataObject.ContainsText%2A>方法，以判斷資料物件是否包含影像資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetText%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> 為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit&#xA;override this.SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="dataObject.SetText (textData, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="textData">要加入資料物件中的文字。</param>
        <param name="format">其中一個 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</param>
        <summary>將文字資料以所指定 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值表示之格式加入至資料物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從資料物件擷取文字資料，請先使用<xref:System.Windows.Forms.DataObject.ContainsText%2A>方法，以判斷資料物件是否包含影像資料，然後才能擷取它與<xref:System.Windows.Forms.DataObject.GetText%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> 為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="pdwConnection" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">以傳址 (By Reference) 方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構，定義用於後續告知的格式、目標裝置、外觀和媒體。</param>
        <param name="advf">其中一個 <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> 值，指定用於控制諮詢連接的一組旗標。</param>
        <param name="pAdvSink">
          <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> 介面的指標，該介面位於接收變更告知的通知接收上。</param>
        <param name="pdwConnection">當這個方法傳回時，會包含識別這個連接的 DWORD 語彙基元 (Token) 的指標。 您可以在稍後將這個語彙基元傳遞到 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />，以便用它來刪除諮詢連接。 如果這個值是零，就不會建立連接。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>建立資料物件和通知接收之間的連接。 這個方法是由支援通知接收的物件所呼叫，而且可以讓接收通知收到物件資料變更的通知。</summary>
        <returns>這個方法支援標準傳回值 E_INVALIDARG、E_UNEXPECTED 和 E_OUTOFMEMORY，以及下列值： 
 <list type="table"><listheader><term> 值 
 </term><description> 描述 
 </description></listheader><item><term> S_OK 
 </term><description> 已建立諮詢連接。  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> 沒有在資料物件上實作這個方法。  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> 有一個無效的值；目前只支援 -1。  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description><paramref name="pFormatetc" /> 參數有一個無效的值。  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED 
 </term><description> 資料物件不支援變更告知。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwConnection">DWORD 語彙基元，指定要移除的連接。 使用原來建立連接時 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> 所傳回的值。</param>
        <summary>終結先前已經建立的告知連接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">當這個方法傳回時，會包含接收新列舉程式 (Enumerator) 物件介面指標的 <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" />。 如果實作時將 <c>enumAdvise</c> 設定為 <see langword="null" />，這個時候就不會有諮詢接收的連接。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>建立可以用來列舉目前諮詢連接的物件。</summary>
        <returns>這個方法支援標準傳回值 E_OUTOFMEMORY，以及下列值：  
  
 <list type="table"><listheader><term> 值  
  
 </term><description> 描述  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> 已成功產生列舉值物件，或是沒有連接。  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> 這個物件不支援通知告知。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="dwDirection">其中一個 <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> 值，指定資料的方向。</param>
        <summary>建立物件，用於列舉資料物件的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構。 呼叫 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 或 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" /> 時會使用這些結構。</summary>
        <returns>這個方法支援標準傳回值 E_INVALIDARG 和 E_OUTOFMEMORY，以及下列值： 
 <list type="table"><listheader><term> 值 
 </term><description> 描述 
 </description></listheader><item><term> S_OK 
 </term><description> 已成功建立列舉值物件。  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> 不支援 <paramref name="direction" /> 參數所指定的方向。  
  
 </description></item><item><term> OLE_S_USEREG 
 </term><description> 要求 OLE 列舉登錄中的格式。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">以傳址方傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，定義呼叫端在後續呼叫 (例如 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />) 中要用來擷取資料的格式、媒體和目標裝置。 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 成員在這種情況下並不重要，可以略過。</param>
        <param name="pformatetcOut">當這個方法傳回時，會包含 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，結構中含有特定轉譯可能適用的最普遍資訊，使它在標準上相當於 <c>formatetIn</c>。 呼叫端必須配置這個結構，而且 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> 方法必須填入資料。 為了在後續呼叫 (例如 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />) 中擷取資料，除非提供值為 <see langword="null" />，否則呼叫者會使用 <c>formatOut</c> 的提供值。 如果方法傳回 <see langword="null" />，這個值便為 <see langword="DATA_S_SAMEFORMATETC" />。 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 成員在這種情況下並不重要，可以略過。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>提供標準的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構，這個結構在邏輯上相當於更複雜的結構。 使用這個方法判斷兩個不同的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結果是否會傳回相同的資料，而不需要重複呈現。</summary>
        <returns>這個方法支援標準傳回值 E_INVALIDARG、E_UNEXPECTED 和 E_OUTOFMEMORY，以及下列值： 
 <list type="table"><listheader><term> 值 
 </term><description> 描述 
 </description></listheader><item><term> S_OK 
 </term><description> 傳回的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構與傳遞的結構不同。  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC 
 </term><description><see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構相同，而且 <paramref name="formatOut" /> 參數中傳回 <see langword="null" />。  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> 有一個無效的值；目前只支援 -1。  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description><paramref name="pFormatetc" /> 參數有一個無效的值。  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> 沒有執行應用程式。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatetc">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，定義傳遞資料時所要使用的格式、媒體和目標裝置。 您可以使用布林值 OR 運算子指定多個媒體，好讓方法可以在指定的媒體中選擇最適合的媒體。</param>
        <param name="medium">當這個方法傳回時，會包含 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 方法的指標，指出包含透過其 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> 成員傳回資料的存放媒體，以及透過其 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 成員值釋放媒體的責任。 如果 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 為 <see langword="null" />，便由媒體的接收者負責釋放媒體；否則 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 會指向適當物件上的 <see langword="IUnknown" /> 介面，以便呼叫其 <see langword="Release" /> 方法。 媒體必須由 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 配置及填入。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>從來源資料物件取得資料。 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 方法由資料消費者 (Data Consumer) 呼叫，以呈現指定的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構所描述的資料，並透過指定的 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 結構傳輸這些資料。 接著再由呼叫端負責釋放 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 結構。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">沒有足夠記憶體可以執行這項作業。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，定義傳遞資料時所要使用的格式、媒體和目標裝置。 只能在 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 指定一個媒體，而且只有下列 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 值有效：<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> 或 <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />。</param>
        <param name="medium">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />，定義包含要傳輸之資料的存放媒體。 媒體必須由 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 配置及填入。 呼叫端也必須釋放媒體。 這個方法的實作必須永遠提供 <see langword="null" /> 的值給這個參數所指向之 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 結構的 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 成員。</param>
        <summary>從來源資料物件取得資料。 這個方法 (由資料消費者呼叫) 與 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 方法不同，呼叫端必須針對後者配置及釋放指定的存放媒體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，定義用於查詢的格式、媒體和目標裝置。</param>
        <summary>判斷資料物件是否能夠呈現 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構中所描述的資料。 嘗試執行貼上或置放作業的物件可以在呼叫 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 之前呼叫這個方法，以指出作業是否成功。</summary>
        <returns>這個方法支援標準傳回值 E_INVALIDARG、E_UNEXPECTED 和 E_OUTOFMEMORY，以及下列值： 
 <list type="table"><listheader><term> 值 
 </term><description> 描述 
 </description></listheader><item><term> S_OK 
 </term><description> 對 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 的後續呼叫可能已經成功。  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> 的值無效；目前只支援 -1。  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description><paramref name="pFormatetc" /> 參數的值無效。  
  
 </description></item><item><term> DV_E_TYMED 
 </term><description> 無效的 <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> 值。  
  
 </description></item><item><term> DV_E_DVASPECT 
 </term><description> 無效的 <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> 值。  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> 沒有執行應用程式。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" />
        <Parameter Name="fRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構，定義資料物件在解譯存放媒體內含資料時所使用的格式。</param>
        <param name="pmedium">以傳址方傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 結構，定義用來傳遞資料的存放媒體。</param>
        <param name="fRelease">
          <see langword="true" /> 指定在呼叫傳回之後，呼叫的資料物件 (實作 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />) 便會擁有存放媒體。 這表示資料物件必須在使用媒體之後，呼叫 <see langword="ReleaseStgMedium" /> 函式來釋放媒體。 <see langword="false" /> 則指定呼叫端仍保留存放媒體的擁有權，而呼叫的物件資料只在呼叫期間使用存放媒體。</param>
        <summary>將資料傳輸給實作這個方法的物件。 這個方法是由包含資料來源的物件所呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它只有在 <xref:System.Windows.Forms.DataObject> 轉型成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時才能使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">這個方法不支援基礎資料物件的型別。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">呼叫 unmanaged 程式碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>