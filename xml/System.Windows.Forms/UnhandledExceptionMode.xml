<Type Name="UnhandledExceptionMode" FullName="System.Windows.Forms.UnhandledExceptionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c5a1edb705c337e21c9b48825e497914c91a37a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37563286" /></Metadata><TypeSignature Language="C#" Value="public enum UnhandledExceptionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.UnhandledExceptionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionMode" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="0c472-101">定義 Windows Form 應用程式應將未處理之例外狀況 (Exception) 傳送至何處。</span><span class="sxs-lookup"><span data-stu-id="0c472-101">Defines where a Windows Forms application should send unhandled exceptions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c472-102">這個列舉型別由<xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c472-102">This enumeration is used by <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c472-103">在.NET Framework 2.0 版中，通用語言執行階段行為會變更為允許在呼叫堆疊中向上傳播的未處理例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c472-103">In the .NET Framework version 2.0, the common language runtime behavior changed to allow unhandled exceptions to propagate up the call stack.</span></span> <span data-ttu-id="0c472-104">可以停用此行為，透過應用程式組態檔。</span><span class="sxs-lookup"><span data-stu-id="0c472-104">This behavior can be disabled via the application configuration file.</span></span> <span data-ttu-id="0c472-105">如需詳細資訊，請參閱[受控執行緒中的例外狀況](~/docs/standard/threading/exceptions-in-managed-threads.md)。</span><span class="sxs-lookup"><span data-stu-id="0c472-105">For more information, see [Exceptions in Managed Threads](~/docs/standard/threading/exceptions-in-managed-threads.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c472-106">下列程式碼範例會設定這兩個錯誤發生的事件處理常式，Windows Forms 執行緒和其他執行緒發生的錯誤。</span><span class="sxs-lookup"><span data-stu-id="0c472-106">The following code example sets event handlers for both errors that occur on Windows Forms threads and errors that occur on other threads.</span></span> <span data-ttu-id="0c472-107">它會設定<xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>，讓所有的錯誤處理應用程式，不論應用程式的使用者組態檔案中的設定。</span><span class="sxs-lookup"><span data-stu-id="0c472-107">It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all errors are handled by the application, regardless of the settings in the application's user configuration file.</span></span> <span data-ttu-id="0c472-108">它會使用<xref:System.Windows.Forms.Application.ThreadException>先前的功能，事件和<xref:System.AppDomain.UnhandledException>為後者的事件。</span><span class="sxs-lookup"><span data-stu-id="0c472-108">It uses the <xref:System.Windows.Forms.Application.ThreadException> event for the former, and the <xref:System.AppDomain.UnhandledException> event for the latter.</span></span> <span data-ttu-id="0c472-109">因為<xref:System.AppDomain.UnhandledException>無法防止應用程式終止，範例只將錯誤記錄在終止之前，系統事件記錄檔。</span><span class="sxs-lookup"><span data-stu-id="0c472-109">Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the system Event Log prior to termination.</span></span>  
  
 <span data-ttu-id="0c472-110">此範例假設您已定義兩個<xref:System.Windows.Forms.Button>控制項`button1`並`button2`，請在您<xref:System.Windows.Forms.Form>類別。</span><span class="sxs-lookup"><span data-stu-id="0c472-110">This sample assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.</span></span>  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode Automatic = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberSignature Language="F#" Value="Automatic = 0" Usage="System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0c472-111">除非應用程式的組態檔中另有指定，否則會將所有的例外狀況傳送至 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c472-111">Route all exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler, unless the application's configuration file specifies otherwise.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CatchException">
      <MemberSignature Language="C#" Value="CatchException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode CatchException = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberSignature Language="VB.NET" Value="CatchException" />
      <MemberSignature Language="C++ CLI" Value="CatchException" />
      <MemberSignature Language="F#" Value="CatchException = 2" Usage="System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0c472-112">一直會將例外狀況傳送至 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c472-112">Always route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler.</span></span> <span data-ttu-id="0c472-113">忽略應用程式組態檔。</span><span class="sxs-lookup"><span data-stu-id="0c472-113">Ignore the application configuration file.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="ThrowException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode ThrowException = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberSignature Language="VB.NET" Value="ThrowException" />
      <MemberSignature Language="C++ CLI" Value="ThrowException" />
      <MemberSignature Language="F#" Value="ThrowException = 1" Usage="System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0c472-114">一定不要將例外狀況傳送至 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c472-114">Never route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler.</span></span> <span data-ttu-id="0c472-115">忽略應用程式組態檔。</span><span class="sxs-lookup"><span data-stu-id="0c472-115">Ignore the application configuration file.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>