<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ControlStyles.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc33f394b9675cc633b116b6039a1f3d0d639c2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc33f394b9675cc633b116b6039a1f3d0d639c2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ControlStyles">
          <source>Specifies the style and behavior of a control.</source>
          <target state="translated">指定控制項的樣式和行為。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Controls use this enumeration in various properties and methods to specify functionality.</source>
          <target state="translated">控制項可使用這個列舉型別不同的屬性和方法中指定的功能。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">控制項可以藉由呼叫啟用樣式<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>方法並傳入適當<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>位元 （或位元） 及要設為位元的布林值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>For example, the following line of Visual Basic code would enable double-buffering.</source>
          <target state="translated">例如下, 面 Visual Basic 程式碼會啟用雙重緩衝。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If the AllPaintingInWmPaint bit is set to <ph id="ph1">`true`</ph>, the window message WM_ERASEBKGND is ignored, and both <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> methods are called directly from the window message WM_PAINT.</source>
          <target state="translated">如果 AllPaintingInWmPaint 位元設為<ph id="ph1">`true`</ph>，WM_ERASEBKGND 會被忽略的視窗訊息，兩者均<ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>會直接從視窗訊息 WM_PAINT 呼叫方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</source>
          <target state="translated">除非其他控制項傳送至控制項的視窗訊息 WM_ERASEBKGND，這通常會減少重繪閃動。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> with flat appearance does this.</source>
          <target state="translated">您可能會傳送要的視窗訊息 WM_ERASEBKGRND 達到虛擬透明效果類似於 SupportsTransparentBackColor;例如，<ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>一般外觀與做法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">若要完全啟用雙重緩衝，您可以將 OptimizedDoubleBuffer 和 AllPaintingInWmPaint 個位元<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>However the preferred method for enabling double buffering, which yields the same result, is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> property for the control to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">不過，建議啟用雙重緩衝，會產生相同的結果，是設定<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph>屬性來控制<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If the SupportsTransparentBackColor bit is set to <ph id="ph1">`true`</ph>, and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> is set to a color whose alpha component is less than 255, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> will simulate transparency by asking its parent control to paint the background.</source>
          <target state="translated">如果 SupportsTransparentBackColor 位元設為<ph id="ph1">`true`</ph>，而<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>設的色彩的 alpha 元件都小於 255，<ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph>會模擬要求來繪製背景其父控制項的透明度。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This is not true transparency.</source>
          <target state="translated">這不是，則為 true 的透明度。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If there is another control between the control and its parent, the current control will not show the control in the middle.</source>
          <target state="translated">如果沒有在控制項和其父代之間的另一個控制項，目前的控制項不會在中間顯示控制項。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the UserMouse bit is set to <ph id="ph1">`true`</ph>, the following methods are still called: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph8">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">當 UserMouse 位元設定為<ph id="ph1">`true`</ph>，仍會呼叫下列方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph8">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the control is clicked, if the StandardClick bit is set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType&gt;</ph> method is called and it raises the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">當按一下控制項時，如果 StandardClick 位元設為<ph id="ph1">`true`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType&gt;</ph>呼叫方法時，便會產生<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to <ph id="ph1">`true`</ph>, the click is passed on to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
          <target state="translated">當按兩下，控制項時，且 StandardClick 和 StandardDoubleClick 位元會設為<ph id="ph1">`true`</ph>，按一下會傳遞給<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Then the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType&gt;</ph> method is called and it raises the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">然後在<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType&gt;</ph>呼叫方法時，便會產生<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>However, the control can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> directly regardless of the StandardClick and StandardDoubleClick bit values.</source>
          <target state="translated">不過，可以呼叫控制項<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph>直接不論 StandardClick 和 StandardDoubleClick 位元值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>For more information on control click and double click behaviors, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> topics.</source>
          <target state="translated">如需詳細資訊，在控制項上按一下和按兩下行為，請參閱<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph>主題。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the UseTextForAccessibility bit is set and there is a value in the control's <ph id="ph1">`Text`</ph> property, the value of that control's <ph id="ph2">`Text`</ph> property determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">當設定 UseTextForAccessibility 位元，而且沒有在控制項的值<ph id="ph1">`Text`</ph>屬性，該控制項的值<ph id="ph2">`Text`</ph>屬性決定控制項的預設 Active Accessibility 的名稱和快顯金鑰。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Otherwise, the text of the preceding <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> control will be used instead.</source>
          <target state="translated">否則，之前的文字<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>控制項將改為使用。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This style is set by default.</source>
          <target state="translated">此樣式會依預設設定。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Certain built-in control types, such as <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, reset this style so that the <ph id="ph3">`Text`</ph> property of those controls will not be used by Active Accessibility.</source>
          <target state="translated">某些內建的控制項類型，例如<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>，重設此樣式，讓<ph id="ph3">`Text`</ph>Active Accessibility 將不會使用這些控制項的屬性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>The following example demonstrates a use of <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">下列範例會示範使用<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>與<ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /&gt;</ph> bit values to <ph id="ph3">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or can have no effect at all if the control does not support the <ph id="ph4">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">繼承自標準的 Windows Form 控制項，並變更<ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph>或<ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /&gt;</ph>位元值<ph id="ph3">&lt;see langword="true" /&gt;</ph>可能會導致非預期的行為，或如果，可能會不會影響所有控制項不支援<ph id="ph4">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>或<ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control ignores the window message WM_ERASEBKGND to reduce flicker.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項會忽略視窗訊息 WM_ERASEBKGND 以減少閃爍。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
          <source>This style should only be applied if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> 位元設定為 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 時，才應套用此樣式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control keeps a copy of the text rather than getting it from the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> each time it is needed.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項會保留文字的複本，而不是在每次需要時從 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> 取得。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>This style defaults to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">此樣式預設為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>This behavior improves performance, but makes it difficult to keep the text synchronized.</source>
          <target state="translated">此行為可以改進效能，但會難以維持文字同步。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.ContainerControl">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is a container-like control.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項為類容器控制項。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, drawing is performed in a buffer, and after it completes, the result is output to the screen.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，會在緩衝區中執行繪製，並在完成之後，將結果輸出到畫面。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>Double-buffering prevents flicker caused by the redrawing of the control.</source>
          <target state="translated">雙重緩衝可防止控制項重繪造成的閃爍。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>If you set <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, you should also set <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> and <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> to <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果您將 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /&gt;</ph> 設為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，您也應該將 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> 設為 <ph id="ph5">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> method is called for every message sent to the control's <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph>.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，每個傳送至控制項之 <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> 的訊息會呼叫 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source>This style defaults to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">此樣式預設為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /&gt;</ph> does not work in partial trust.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /&gt;</ph> 無法在部分信任的情況執行。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedHeight">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control has a fixed height when auto-scaled.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，當自動調整時控制項為固定高度。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedHeight">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> remains unchanged.</source>
          <target state="translated">例如，如果配置作業嘗試要調整控制項以容納新的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>，則控制項的 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 會維持不變。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedWidth">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control has a fixed width when auto-scaled.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，當自動調整時控制項為固定寬度。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedWidth">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> remains unchanged.</source>
          <target state="translated">例如，如果配置作業嘗試要調整控制項以容納新的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>，則控制項的 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 會維持不變。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.Opaque">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is drawn opaque and the background is not painted.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項會繪製為不透明且不會繪製背景。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項會先繪製到緩衝區，而非直接繪製到螢幕，這可減少閃爍。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
          <source>If you set this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>, you should also set the <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果您將此屬性設為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，您也應該將 <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> 設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.ResizeRedraw">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is redrawn when it is resized.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項調整大小時會重繪。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.Selectable">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control can receive focus.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項可以取得焦點。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardClick">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control implements the standard <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> behavior.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項會實作標準的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> 行為。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control implements the standard <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> behavior.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項會實作標準的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> 行為。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
          <source>This style is ignored if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> bit is not set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> 位元並未設為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，則會忽略此樣式。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control accepts a <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> with an alpha component of less than 255 to simulate transparency.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項可接受 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> 與小於 255 的 Alpha 元件以模擬透明度。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
          <source>Transparency will be simulated only if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the parent control is derived from <ph id="ph3">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">僅有 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> 位元設為 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 且父控制項衍生自 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 時，才會模擬透明度。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserMouse">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control does its own mouse processing, and mouse events are not handled by the operating system.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項會進行其本身的滑鼠處理，且作業系統不會處理滑鼠事件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control paints itself rather than the operating system doing so.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，控制項會繪製本身，而不是由作業系統進行。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event is not raised.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，就不會引發 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>This style only applies to classes derived from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">此樣式僅會套用至衍生自 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 的類別。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility">
          <source>Specifies that the value of the control's <bpt id="p1">&lt;c&gt;</bpt>Text<ept id="p1">&lt;/c&gt;</ept> property, if set, determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">指定控制項的 <bpt id="p1">&lt;c&gt;</bpt>Text<ept id="p1">&lt;/c&gt;</ept> 屬性值，如果設定，會決定控制項的預設 Active Accessibility 名稱和快速鍵。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>