<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62c92c663d6df89c8c57cb3a03e1f3fb377c6e69" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39933929" /></Metadata><TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OSFeature extends System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OSFeature" />
  <TypeSignature Language="VB.NET" Value="Public Class OSFeature&#xA;Inherits FeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class OSFeature : System::Windows::Forms::FeatureSupport" />
  <TypeSignature Language="F#" Value="type OSFeature = class&#xA;    inherit FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7a970-101">提供作業系統特定的功能查詢。</span><span class="sxs-lookup"><span data-stu-id="7a970-101">Provides operating-system specific feature queries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a970-102">使用`static`中提供這個類別的執行個體<xref:System.Windows.Forms.OSFeature.Feature%2A>查詢作業系統功能的屬性。</span><span class="sxs-lookup"><span data-stu-id="7a970-102">Use the `static` instance of this class provided in the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to query for operating system features.</span></span> <span data-ttu-id="7a970-103">您無法建立此類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a970-103">You cannot create an instance of this class.</span></span>  
  
 <span data-ttu-id="7a970-104">若要判斷某項功能的版本，請呼叫<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7a970-104">To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method.</span></span> <span data-ttu-id="7a970-105">若要判斷是否有一項功能或特定版本，請呼叫<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>方法並指定要尋找具有此類別所提供的功能識別碼的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-105">To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a970-106">下列範例會使用<xref:System.Windows.Forms.OSFeature>查詢作業系統以判斷<xref:System.Windows.Forms.OSFeature.LayeredWindows>安裝功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-106">The following example uses <xref:System.Windows.Forms.OSFeature> to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed.</span></span> <span data-ttu-id="7a970-107">此範例顯示兩種不同方式檢查以查看功能是否存在。</span><span class="sxs-lookup"><span data-stu-id="7a970-107">The example presents two different ways of checking to see whether the feature is present.</span></span> <span data-ttu-id="7a970-108">在第一個方法中，`myVersion`會檢查以查看它是否`null`。</span><span class="sxs-lookup"><span data-stu-id="7a970-108">In the first method, `myVersion` is checked to see if it is `null`.</span></span> <span data-ttu-id="7a970-109">如果版本`null`，未安裝的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-109">If the version is `null`, the feature is not installed.</span></span> <span data-ttu-id="7a970-110">在第二個方法中，範例會呼叫基底類別方法<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>來查看是否已安裝的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-110">In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed.</span></span> <span data-ttu-id="7a970-111">結果會顯示在文字方塊中。</span><span class="sxs-lookup"><span data-stu-id="7a970-111">The results are displayed in a text box.</span></span>  
  
 <span data-ttu-id="7a970-112">此程式碼假設`textBox1`已經建立，並在表單上。</span><span class="sxs-lookup"><span data-stu-id="7a970-112">This code assumes `textBox1` has been created and placed on a form.</span></span>  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.SystemInformation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OSFeature();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a970-113">初始化 <see cref="T:System.Windows.Forms.OSFeature" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a970-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.OSFeature" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a970-114">無法執行個體化這個類別。</span><span class="sxs-lookup"><span data-stu-id="7a970-114">This class cannot be instantiated.</span></span> <span data-ttu-id="7a970-115">若要查詢的作業系統功能，請使用`static`的執行個體<xref:System.Windows.Forms.OSFeature>此類別所提供。</span><span class="sxs-lookup"><span data-stu-id="7a970-115">To query for operating system features, use the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.OSFeature Feature" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OSFeature.Feature" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Feature As OSFeature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::OSFeature ^ Feature { System::Windows::Forms::OSFeature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Feature : System.Windows.Forms.OSFeature" Usage="System.Windows.Forms.OSFeature.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a970-116">取得 <see cref="T:System.Windows.Forms.OSFeature" /> 類別的 <see langword="static" /> 執行個體，以便用於功能查詢。</span><span class="sxs-lookup"><span data-stu-id="7a970-116">Gets a <see langword="static" /> instance of the <see cref="T:System.Windows.Forms.OSFeature" /> class to use for feature queries.</span></span> <span data-ttu-id="7a970-117">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="7a970-117">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="7a970-118"><see cref="T:System.Windows.Forms.OSFeature" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a970-118">An instance of the <see cref="T:System.Windows.Forms.OSFeature" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a970-119">使用此`static`查詢作業系統功能的屬性。</span><span class="sxs-lookup"><span data-stu-id="7a970-119">Use this `static` property to query for operating system features.</span></span> <span data-ttu-id="7a970-120">您無法建立此類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a970-120">You cannot create an instance of this class.</span></span>  
  
 <span data-ttu-id="7a970-121">若要判斷某項功能的版本，請呼叫<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7a970-121">To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method.</span></span> <span data-ttu-id="7a970-122">若要判斷是否有一項功能或特定版本，請呼叫<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>方法並指定要尋找具有此類別所提供的功能識別碼的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-122">To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a970-123">下列範例會查詢<xref:System.Windows.Forms.OSFeature>針對<xref:System.Windows.Forms.OSFeature.LayeredWindows>功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-123">The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature.</span></span> <span data-ttu-id="7a970-124">版本會檢查以查看它是否`null`，以判斷功能是否存在。</span><span class="sxs-lookup"><span data-stu-id="7a970-124">The version is checked to see if it is `null`, to determine whether the feature is present.</span></span> <span data-ttu-id="7a970-125">結果會顯示在文字方塊中。</span><span class="sxs-lookup"><span data-stu-id="7a970-125">The result is displayed in a text box.</span></span> <span data-ttu-id="7a970-126">此程式碼假設`textBox1`已經建立，並在表單上。</span><span class="sxs-lookup"><span data-stu-id="7a970-126">This code assumes `textBox1` has been created and placed on a form.</span></span>  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.#ctor" />
        <altmember cref="T:System.Version" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="override this.GetVersionPresent : obj -&gt; Version" Usage="oSFeature.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature"><span data-ttu-id="7a970-127">要求特定版本的功能 (<see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> 或 <see cref="F:System.Windows.Forms.OSFeature.Themes" />)。</span><span class="sxs-lookup"><span data-stu-id="7a970-127">The feature whose version is requested, either <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> or <see cref="F:System.Windows.Forms.OSFeature.Themes" />.</span></span></param>
        <summary><span data-ttu-id="7a970-128">擷取目前系統上可用的指定功能的版本。</span><span class="sxs-lookup"><span data-stu-id="7a970-128">Retrieves the version of the specified feature currently available on the system.</span></span></summary>
        <returns><span data-ttu-id="7a970-129"><see cref="T:System.Version" /> 表示目前可在系統上使用的指定作業系統功能版本，如果未發現此功能，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a970-129">A <see cref="T:System.Version" /> representing the version of the specified operating system feature currently available on the system; or <see langword="null" /> if the feature cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a970-130">使用<xref:System.Windows.Forms.OSFeature.Feature%2A>屬性，`static`的執行個體<xref:System.Windows.Forms.OSFeature>提供這個類別，來查詢的一項功能的版本號碼。</span><span class="sxs-lookup"><span data-stu-id="7a970-130">Use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property, the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class, to query for the version number of a feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a970-131">下列範例會查詢<xref:System.Windows.Forms.OSFeature>針對<xref:System.Windows.Forms.OSFeature.LayeredWindows>功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-131">The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature.</span></span> <span data-ttu-id="7a970-132">版本會檢查以查看它是否`null`，以判斷功能是否存在。</span><span class="sxs-lookup"><span data-stu-id="7a970-132">The version is checked to see if it is `null`, to determine whether the feature is present.</span></span> <span data-ttu-id="7a970-133">結果會顯示在文字方塊中。</span><span class="sxs-lookup"><span data-stu-id="7a970-133">The result is displayed in a text box.</span></span> <span data-ttu-id="7a970-134">此程式碼假設`textBox1`已經建立，並在表單上。</span><span class="sxs-lookup"><span data-stu-id="7a970-134">This code assumes `textBox1` has been created and placed on a form.</span></span>  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(valuetype System.Windows.Forms.SystemParameter enumVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (enumVal As SystemParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::Windows::Forms::SystemParameter enumVal);" />
      <MemberSignature Language="F#" Value="static member IsPresent : System.Windows.Forms.SystemParameter -&gt; bool" Usage="System.Windows.Forms.OSFeature.IsPresent enumVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" />
      </Parameters>
      <Docs>
        <param name="enumVal"><span data-ttu-id="7a970-135"><see cref="T:System.Windows.Forms.SystemParameter" />，表示要搜尋的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-135">A <see cref="T:System.Windows.Forms.SystemParameter" /> representing the feature to search for.</span></span></param>
        <summary><span data-ttu-id="7a970-136">擷取值，指出作業系統是否支援指定的功能或度量資訊 (Metric)。</span><span class="sxs-lookup"><span data-stu-id="7a970-136">Retrieves a value indicating whether the operating system supports the specified feature or metric.</span></span></summary>
        <returns><span data-ttu-id="7a970-137">如果此功能可以在系統上使用，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7a970-137"><see langword="true" /> if the feature is available on the system; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a970-138">一般而言，您可以使用<xref:System.Windows.Forms.OSFeature.IsPresent%2A>方法，以判斷作業系統是否支援特定功能或所識別的計量`enumValue`。</span><span class="sxs-lookup"><span data-stu-id="7a970-138">Typically, you use the <xref:System.Windows.Forms.OSFeature.IsPresent%2A> method to determine if the operating system supports the specific feature or metric identified by `enumValue`.</span></span> <span data-ttu-id="7a970-139">根據傳回的值<xref:System.Windows.Forms.OSFeature.IsPresent%2A>，您會在您的程式碼來執行條件式動作。</span><span class="sxs-lookup"><span data-stu-id="7a970-139">Based upon the value returned from <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, you would perform conditional actions in your code.</span></span> <span data-ttu-id="7a970-140">例如，如果呼叫這個方法的參數值<xref:System.Windows.Forms.SystemParameter.FlatMenu>傳回`true`，您可以建立主控描繪功能表應用程式中一般的樣式。</span><span class="sxs-lookup"><span data-stu-id="7a970-140">For example, if calling this method with a parameter value of <xref:System.Windows.Forms.SystemParameter.FlatMenu> returns `true`, you could create owner-drawn menus in your application in a flat style.</span></span>  
  
 <span data-ttu-id="7a970-141">如果它們並不適用於特定作業系統版本，則存取某些系統功能或度量可以引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7a970-141">Accessing some system features or metrics can raise exceptions if they are not available on a specific operating system version.</span></span> <span data-ttu-id="7a970-142">在此案例中，先使用對應<xref:System.Windows.Forms.SystemParameter>列舉值，以及使用<xref:System.Windows.Forms.OSFeature.IsPresent%2A>，以判斷是否支援度量。</span><span class="sxs-lookup"><span data-stu-id="7a970-142">In this case, first use the corresponding <xref:System.Windows.Forms.SystemParameter> enumeration value, along with <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, to determine if the metric is supported.</span></span> <span data-ttu-id="7a970-143">例如，呼叫<xref:System.Windows.Forms.OSFeature.IsPresent%2A>具有<xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>才能<xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType>屬性值。</span><span class="sxs-lookup"><span data-stu-id="7a970-143">For example, call <xref:System.Windows.Forms.OSFeature.IsPresent%2A> with <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> before getting the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a970-144">下列程式碼範例示範如何使用<xref:System.Windows.Forms.OSFeature.IsPresent%2A>方法使用<xref:System.Windows.Forms.SystemParameter>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="7a970-144">The following code example demonstrates how to use the <xref:System.Windows.Forms.OSFeature.IsPresent%2A> method with the <xref:System.Windows.Forms.SystemParameter> enumeration.</span></span> <span data-ttu-id="7a970-145">此範例可讓您判斷作業系統是否支援`CaretWidth`計量，然後再呼叫<xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="7a970-145">The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemParameter" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object LayeredWindows" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayeredWindows As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ LayeredWindows;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayeredWindows : obj" Usage="System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a970-146">表示層次的最上層視窗功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-146">Represents the layered, top-level windows feature.</span></span> <span data-ttu-id="7a970-147">此欄位為唯讀。</span><span class="sxs-lookup"><span data-stu-id="7a970-147">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a970-148">分層的視窗可透明或半透明的作業系統。</span><span class="sxs-lookup"><span data-stu-id="7a970-148">A layered window can be made transparent or translucent by the operating system.</span></span> <span data-ttu-id="7a970-149">在 Windows 2000 中引進的分層視窗的支援。</span><span class="sxs-lookup"><span data-stu-id="7a970-149">Support for layered windows was first introduced in Windows 2000.</span></span> <span data-ttu-id="7a970-150">如需詳細資訊，請參閱 [分層 Windows:: 新的方式來使用半透明和透明度效果在 Windows 應用程式] 中 Platform SDK 文件，網址http://msdn.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="7a970-150">For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at http://msdn.microsoft.com.</span></span>  
  
 <span data-ttu-id="7a970-151">若要判斷是否已安裝的分層的視窗功能，請使用<xref:System.Windows.Forms.OSFeature.Feature%2A>屬性來呼叫基底類別方法<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>使用<xref:System.Windows.Forms.OSFeature.LayeredWindows>為要尋找的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-151">To determine if the layered windows feature is installed, use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with <xref:System.Windows.Forms.OSFeature.LayeredWindows> as the feature to look for.</span></span>  
  
 <span data-ttu-id="7a970-152">或者，您可以檢查看看是否安裝此功能藉由呼叫<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>方法使用<xref:System.Windows.Forms.OSFeature.LayeredWindows>為要尋找的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-152">Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with <xref:System.Windows.Forms.OSFeature.LayeredWindows> as the feature to find.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a970-153">下列範例會判斷目前的系統是否支援層疊的視窗。</span><span class="sxs-lookup"><span data-stu-id="7a970-153">The following example determines whether the current system supports layered windows.</span></span> <span data-ttu-id="7a970-154">基底類別方法<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>呼叫<xref:System.Windows.Forms.OSFeature.LayeredWindows>為要尋找的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-154">The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with <xref:System.Windows.Forms.OSFeature.LayeredWindows> as the feature to look for.</span></span> <span data-ttu-id="7a970-155">結果會顯示在文字方塊中。</span><span class="sxs-lookup"><span data-stu-id="7a970-155">The result is displayed in a text box.</span></span> <span data-ttu-id="7a970-156">此程式碼假設`textBox1`已具現化並放置在表單上。</span><span class="sxs-lookup"><span data-stu-id="7a970-156">This code assumes `textBox1` has been instantiated and placed on a form.</span></span>  
  
 [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object Themes" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.Themes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Themes As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ Themes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Themes : obj" Usage="System.Windows.Forms.OSFeature.Themes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a970-157">表示作業系統的主題功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-157">Represents the operating system themes feature.</span></span> <span data-ttu-id="7a970-158">此欄位為唯讀。</span><span class="sxs-lookup"><span data-stu-id="7a970-158">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a970-159">主題是納入 Microsoft 增強版的桌面底色圖案、 資料指標、 字型、 音效和首次引進的圖示的視覺化介面設定的集合 ！</span><span class="sxs-lookup"><span data-stu-id="7a970-159">A theme is a collection of visual interface settings that include wallpaper, cursors, fonts, sounds, and icons first introduced in Microsoft Plus!</span></span> <span data-ttu-id="7a970-160">適用於 Windows 95。</span><span class="sxs-lookup"><span data-stu-id="7a970-160">for Windows 95.</span></span> <span data-ttu-id="7a970-161">.NET Framework 並不直接支援操作的佈景主題，雖然它沒有視覺化樣式中的廣泛支援<xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType>命名空間。</span><span class="sxs-lookup"><span data-stu-id="7a970-161">The .NET Framework does not directly support manipulating themes, although it does have extensive support for visual styles in the <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="7a970-162">如需有關 Windows 佈景主題的詳細資訊，請參閱佈景主題和視覺化樣式和 Win32 SDK 中的視覺樣式參考主題。</span><span class="sxs-lookup"><span data-stu-id="7a970-162">For more information about Windows Themes, see the topics Themes and Visual Styles and Visual Styles Reference in the Win32 SDK.</span></span>  
  
 <span data-ttu-id="7a970-163">若要判斷是否已安裝的佈景主題的功能，請呼叫基底類別方法<xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>與<xref:System.Windows.Forms.OSFeature.Themes>為要尋找的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-163">To determine if the themes feature is installed, call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with <xref:System.Windows.Forms.OSFeature.Themes> as the feature to look for.</span></span>  
  
 <span data-ttu-id="7a970-164">或者，您可以檢查看看是否安裝此功能藉由呼叫<xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>方法使用<xref:System.Windows.Forms.OSFeature.Themes>為要尋找的功能。</span><span class="sxs-lookup"><span data-stu-id="7a970-164">Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with <xref:System.Windows.Forms.OSFeature.Themes> as the feature to find.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
  </Members>
</Type>