<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe4ba17076bf3bf4c48fd2733f0329e7ded14bee" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46630497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>為裝載於 <see cref="T:System.Windows.Forms.DataGridView" /> 之儲存格的控制項定義通用功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此介面由實作控制項，例如<xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>並<xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>，所裝載的對應<xref:System.Windows.Forms.DataGridView>資料格，例如<xref:System.Windows.Forms.DataGridViewComboBoxCell>和<xref:System.Windows.Forms.DataGridViewTextBoxCell>，當它們位於編輯模式。  
  
 資料格可以裝載編輯控制項集的類型及其<xref:System.Windows.Forms.DataGridViewCell.EditType%2A>屬性設<xref:System.Type>表示編輯控制項類型。 當儲存格進入編輯模式時，請執行下列步驟：  
  
1.  <xref:System.Windows.Forms.DataGridView>控制項建立的編輯控制項類型的執行個體。  
  
2.  <xref:System.Windows.Forms.DataGridView>控制項會呼叫儲存格<xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A>方法。 您可以覆寫這個方法，以傳送至編輯控制項的儲存格的值。  
  
3.  <xref:System.Windows.Forms.DataGridView>控制項會呼叫編輯控制項<xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A>方法，並傳入目前的儲存格的樣式。 您可以實作這個方法來初始化編輯控制項的外觀，使其符合儲存格的外觀。  
  
4.  <xref:System.Windows.Forms.DataGridView>控制項會呼叫編輯控制項<xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A>方法。 您可以實作這個方法，以進行最後的調整，以編輯的控制項，例如選取的控制項值。  
  
 如需實作的詳細資訊<xref:System.Windows.Forms.IDataGridViewEditingControl>，請參閱 <<c2> [ 如何： 在 Windows Forms DataGridView 儲存格中的主控制項](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 資料格類型，例如<xref:System.Windows.Forms.DataGridViewCheckBoxCell>提供使用者介面 (UI) 的指定值，而不需要裝載編輯控制項實作<xref:System.Windows.Forms.IDataGridViewEditingCell>介面。 在此情況下會顯示 UI 不管儲存格是否處於編輯模式。  
  
 其他資料格類型，例如<xref:System.Windows.Forms.DataGridViewButtonCell>，提供 UI，但不是會儲存使用者指定的值。 在此情況下，資料格類型未實作<xref:System.Windows.Forms.IDataGridViewEditingCell>或裝載編輯控制項。  
  
   
  
## Examples  
 下列程式碼範例提供衍生自這個介面的實作<xref:System.Windows.Forms.DateTimePicker>。 這個範例是提供之較大範例的一部分[如何： 在 Windows Forms DataGridView 儲存格中的主控制項](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
    <related type="Article" href="http://msdn.microsoft.com/library/e79a9d4e-64ec-41f5-93ec-f5492633cbb2">如何：Windows Forms DataGridView 儲存格中的主控制項</related>
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="iDataGridViewEditingControl.ApplyCellStyleToEditingControl dataGridViewCellStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">要當做 UI 模型使用的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <summary>變更控制項的使用者介面 (UI)，使其與指定的儲存格樣式一致。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，此方法的實作會設定 UI 內容，編輯控制項，例如字型、 背景色彩和前景色彩中對應屬性的值為`dataGridViewCellStyle`，這是用於裝載的儲存格樣式控制項。  
  
   
  
## Examples  
 下列程式碼範例會提供這個成員的實作。 這個範例是提供之較大範例的一部分[如何： 在 Windows Forms DataGridView 儲存格中的主控制項](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlDataGridView : System.Windows.Forms.DataGridView with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定包含儲存格的 <see cref="T:System.Windows.Forms.DataGridView" />。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridView" />，其中含有進行編輯的 <see cref="T:System.Windows.Forms.DataGridViewCell" />，但如果沒有任何相關的 <see cref="T:System.Windows.Forms.DataGridView" />，則為 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定編輯器所修改之儲存格的格式化值。</summary>
        <value>
          <see cref="T:System.Object" />，表示儲存格的格式化值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 格式化的值代表的值，因為它會顯示在控制項的使用者介面。 格式化的值可能是絕對值和甚至是資料型別中的控制項中包含的實際值不同。  
  
   
  
## Examples  
 下列程式碼範例會提供這個成員的實作。 這個範例是提供之較大範例的一部分[如何： 在 Windows Forms DataGridView 儲存格中的主控制項](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlRowIndex : int with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定裝載儲存格之父資料列的索引。</summary>
        <value>含有儲存格之資料列的索引，但如果沒有父資料列，則為 –1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.IDataGridViewEditingControl>介面不會定義對應`ColumnIndex`屬性。 您可以使用<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A>屬性，以擷取其父代<xref:System.Windows.Forms.DataGridView>控制項，並使用<xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType>屬性來判斷使用中的儲存格的資料列和資料行索引。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出編輯控制項的值是否與裝載儲存格的值不同。</summary>
        <value>如果控制項的值與儲存格的值不同，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A>屬性設定為`true`以指出裝載儲存格的狀態已經變更，且其使用者介面 (UI) 需要更新以反映這項變更的值。 主控儲存格或資料表將會重設這個屬性，以`false`之後更新。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>傳回<see langword="true" />這個屬性的實作中不會自動變更顯示的值。 變更編輯控制項中，您必須先通知<see cref="T:System.Windows.Forms.DataGridView" />的變更所傳遞<see langword="true" />到<see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />方法。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="F#" Value="abstract member EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool" Usage="iDataGridViewEditingControl.EditingControlWantsInputKey (keyData, dataGridViewWantsInputKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" />，表示已按下的按鍵。</param>
        <param name="dataGridViewWantsInputKey">當 <see cref="T:System.Windows.Forms.DataGridView" /> 想要處理 <c>keyData</c> 中的 <see cref="T:System.Windows.Forms.Keys" /> 時；則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>判斷指定的按鍵是否為編輯控制項應該處理的標準輸入按鍵，或是 <see cref="T:System.Windows.Forms.DataGridView" /> 應該處理的特殊按鍵。</summary>
        <returns>如果指定按鍵為編輯控制項應該處理的標準輸入按鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 編輯控制項實作此方法，以判斷哪一個輸入的金鑰應該由控制項，以及哪個輸入索引鍵應該處理由<xref:System.Windows.Forms.DataGridView>。  
  
 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A>方法會呼叫<xref:System.Windows.Forms.DataGridView>。 <xref:System.Windows.Forms.DataGridView>將會傳入`true`for`dataGridViewWantsInputKey`時，它可以處理`keyData`。 如果編輯控制項可以讓<xref:System.Windows.Forms.DataGridView>處理`keyData`，<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A>應該會傳回`false`時`dataGridViewWantsInputKey`是`true`。 其他實作<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A>可能會忽略`dataGridViewWantsInputKey`的值`true`並處理`keyData`編輯控制項中。  
  
   
  
## Examples  
 下列程式碼範例會提供這個成員的實作。 這個範例是提供之較大範例的一部分[如何： 在 Windows Forms DataGridView 儲存格中的主控制項](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanelCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得當滑鼠指標放在 <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> 上方，但不在編輯控制項上方時所用的游標。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Cursor" />，表示用於編輯面板中的滑鼠指標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [編輯] 面板<xref:System.Windows.Forms.Panel>主機編輯控制何時<xref:System.Windows.Forms.DataGridView>控制項處於編輯模式。 實際的編輯控制項不一定涵蓋編輯面板的整個區域。 在此情況下，<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A>實作應該傳回滑鼠指標停留在面板上，但不是停留在控制項時要使用之資料指標。 一般而言，您會想要傳回控制項使用的相同資料指標。 如果您想要變更滑鼠指標位於控制項上方時出現的游標時，您必須設定<xref:System.Windows.Forms.Control.Cursor%2A>屬性。 您可以將此設定中的建構函式<xref:System.Windows.Forms.IDataGridViewEditingControl>實作，或您可以將它設定<xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A>實作。  
  
   
  
## Examples  
 下列程式碼範例會提供這個成員的實作。 這個範例是提供之較大範例的一部分[如何： 在 Windows Forms DataGridView 儲存格中的主控制項](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingControl.GetEditingControlFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的位元組合，指定需要資料的內容。</param>
        <summary>擷取儲存格的格式化值。</summary>
        <returns>
          <see cref="T:System.Object" />，表示儲存格內容的格式化版本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 格式化的值代表的值，因為它會顯示在控制項的使用者介面。 格式化的值可能是絕對值和甚至是資料型別中的控制項中包含的實際值不同。  
  
 若要設定控制項的格式化的值，請使用<xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A>屬性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>變更傳回值，這個方法的實作中，不會自動變更顯示的值。 變更編輯控制項中，您必須先通知<see cref="T:System.Windows.Forms.DataGridView" />的變更所傳遞<see langword="true" />到<see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />方法。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingControlForEdit : bool -&gt; unit" Usage="iDataGridViewEditingControl.PrepareEditingControlForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">
          <see langword="true" /> 表示選取所有的儲存格內容，否則為 <see langword="false" />。</param>
        <summary>準備目前所選的儲存格來編輯。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的目的是要準備進行編輯的控制項和其內容。 例如，您可能要放置插入點結尾的內容，或變更內容的對齊方式。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RepositionEditingControlOnValueChange : bool" Usage="System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出每當值變更時儲存格內容是否需要重新調整位置。</summary>
        <value>如果內容需要重新調整位置，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些情況需要的值變更時，重新定位儲存格的內容。 例如，儲存格的內容可能需要重新定位儲存格文字換行和內容變得越來越大時。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>