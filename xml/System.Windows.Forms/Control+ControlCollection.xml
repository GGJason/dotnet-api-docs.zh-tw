<Type Name="Control+ControlCollection" FullName="System.Windows.Forms.Control+ControlCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="557e794466cb062cad76399160f2b7ce7ec40512" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Control.ControlCollection : System.Windows.Forms.Layout.ArrangedElementCollection, ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Control/ControlCollection extends System.Windows.Forms.Layout.ArrangedElementCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Control.ControlCollection&#xA;Inherits ArrangedElementCollection&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Control::ControlCollection : System::Windows::Forms::Layout::ArrangedElementCollection, ICloneable, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Layout.ArrangedElementCollection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.Control" /> 物件的集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A>， <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>，和<xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>方法可讓您新增及移除個別控制項的集合。 您也可以使用<xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A>或<xref:System.Windows.Forms.Control.ControlCollection.Clear%2A>方法來新增或移除集合中的所有控制項。  
  
 您可以判斷如果<xref:System.Windows.Forms.Control>集合的成員會藉由傳遞至控制項<xref:System.Windows.Forms.Control.ControlCollection.Contains%2A>方法。 若要取得的位置的索引值<xref:System.Windows.Forms.Control>在集合中，以便將控制項傳遞至<xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A>方法。 集合可以複製到陣列，藉由呼叫<xref:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例移除<xref:System.Windows.Forms.Control>從<xref:System.Windows.Forms.Control.ControlCollection>衍生類別的<xref:System.Windows.Forms.Panel>如果它是集合的成員。 這個範例需要您已建立<xref:System.Windows.Forms.Panel>、 <xref:System.Windows.Forms.Button>，以及至少一個<xref:System.Windows.Forms.RadioButton>上控制<xref:System.Windows.Forms.Form>。 <xref:System.Windows.Forms.RadioButton>控制項會加入至<xref:System.Windows.Forms.Panel>控制項，而<xref:System.Windows.Forms.Panel>控制項加入至<xref:System.Windows.Forms.Form>。 當按一下按鈕時，選項按鈕命名為`radioButton2`被移除了<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Collections.IList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Windows.Forms.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Windows::Forms::Control ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="owner">表示擁有控制項集合之控制項的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Forms::Control ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">要加入至控制項集合的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>將指定的控制項加入至控制項集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A>方法可讓您新增<xref:System.Windows.Forms.Control>控制項集合的結尾的物件。  
  
 您也可以新增<xref:System.Windows.Forms.Control>物件加入該集合使用<xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A>方法。  
  
 若要移除<xref:System.Windows.Forms.Control>您先前加入，請使用<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>， <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>，或<xref:System.Windows.Forms.Control.ControlCollection.Clear%2A>方法。  
  
> [!NOTE]
>  A<xref:System.Windows.Forms.Control>只指派給其中<xref:System.Windows.Forms.Control.ControlCollection>一次。 如果<xref:System.Windows.Forms.Control>已經是另一個則會從控制項移除之前它就會加入另一個控制項的控制項的子系。  
  
   
  
## Examples  
 下列程式碼範例會將<xref:System.Windows.Forms.Control>至<xref:System.Windows.Forms.Control.ControlCollection>衍生類別的<xref:System.Windows.Forms.Panel>。 這個範例需要您已建立<xref:System.Windows.Forms.Panel>控制項和<xref:System.Windows.Forms.Button>上控制<xref:System.Windows.Forms.Form>。 按一下按鈕時，<xref:System.Windows.Forms.TextBox>控制項會加入至面板<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 [!code-cpp[ControlCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#2)]
 [!code-csharp[ControlCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#2)]
 [!code-vb[ControlCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">指定的控制項是最上層控制項，或者這個控制項是加入至控制項集合時，會產生循環控制項參考。</exception>
        <exception cref="T:System.ArgumentException">指定至 <paramref name="value" /> 參數的物件不是 <see cref="T:System.Windows.Forms.Control" />。</exception>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />方法，以確保控制項已加入至集合。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.Control[] controls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.Control[] controls) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (controls As Control())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::Control ^&gt; ^ controls);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="System.Windows.Forms.Control[]" />
      </Parameters>
      <Docs>
        <param name="controls">要加入至集合中之 <see cref="T:System.Windows.Forms.Control" /> 物件的陣列。</param>
        <summary>將控制項物件陣列加入至集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control>所包含的物件`controls`陣列會附加至集合結尾。  
  
 您可以使用<xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A>方法，以快速將群組新增<xref:System.Windows.Forms.Control>物件加入該集合，而不是手動新增每個<xref:System.Windows.Forms.Control>集合<xref:System.Windows.Forms.Control.ControlCollection.Add%2A>方法。  
  
 若要移除<xref:System.Windows.Forms.Control>您先前加入，請使用<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>， <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>，或<xref:System.Windows.Forms.Control.ControlCollection.Clear%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會將兩個<xref:System.Windows.Forms.Control>物件加入至<xref:System.Windows.Forms.Control.ControlCollection>衍生類別的<xref:System.Windows.Forms.Panel>。 這個範例需要您已建立<xref:System.Windows.Forms.Panel>控制項和<xref:System.Windows.Forms.Button>上控制<xref:System.Windows.Forms.Form>。 當按一下按鈕時，兩個<xref:System.Windows.Forms.RadioButton>控制項會加入至面板<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 [!code-cpp[ControlCollection#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#3)]
 [!code-csharp[ControlCollection#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#3)]
 [!code-vb[ControlCollection#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />方法，以確保您的控制項，加入至集合。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除集合中所有的控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Windows.Forms.Control.ControlCollection.Clear%2A>方法從父控制項移除整個控制項的集合。  
  
 若要從集合中移除個別控制項，請使用<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>或<xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>方法。  
  
> [!IMPORTANT]
>  呼叫<xref:System.Windows.Forms.Control.ControlCollection.Clear%2A>方法不會從記憶體移除控制項控點。 您必須明確呼叫<xref:System.Windows.Forms.Control.Dispose%2A>方法，以避免記憶體流失。  
  
 若要加入新<xref:System.Windows.Forms.Control>物件加入集合中，使用<xref:System.Windows.Forms.Control.ControlCollection.Add%2A>或<xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會移除所有<xref:System.Windows.Forms.Control>中的物件<xref:System.Windows.Forms.Control.ControlCollection>衍生類別的<xref:System.Windows.Forms.Panel>。 這個範例需要您已建立<xref:System.Windows.Forms.Panel>、 <xref:System.Windows.Forms.Button>，和至少一個其他控制<xref:System.Windows.Forms.Form>。 其他控制項加入至<xref:System.Windows.Forms.Panel>控制項，而<xref:System.Windows.Forms.Panel>加入<xref:System.Windows.Forms.Form>。 當按一下按鈕時，會從移除面板中所包含的所有控制項<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 [!code-cpp[ControlCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#1)]
 [!code-csharp[ControlCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#1)]
 [!code-vb[ControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />方法，以確保會從集合中移除所有的控制項。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">要在集合中尋找的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>判斷指定的控制項是否為集合的成員。</summary>
        <returns>
          如果 <see cref="T:System.Windows.Forms.Control" /> 是集合的成員，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可讓您判斷是否<xref:System.Windows.Forms.Control>所屬的集合，然後再嘗試執行作業所在<xref:System.Windows.Forms.Control>。 您可以使用這個方法，確認<xref:System.Windows.Forms.Control>已新增至或仍然是集合的成員。  
  
   
  
## Examples  
 下列程式碼範例移除<xref:System.Windows.Forms.Control>從<xref:System.Windows.Forms.Control.ControlCollection>衍生類別的<xref:System.Windows.Forms.Panel>如果它是集合的成員。 這個範例需要您已建立<xref:System.Windows.Forms.Panel>、 <xref:System.Windows.Forms.Button>，以及至少一個<xref:System.Windows.Forms.RadioButton>上控制<xref:System.Windows.Forms.Form>。 <xref:System.Windows.Forms.RadioButton>控制項會加入至<xref:System.Windows.Forms.Panel>控制項，而<xref:System.Windows.Forms.Panel>控制項加入至<xref:System.Windows.Forms.Form>。 當按一下按鈕時，選項按鈕命名為`removeButton`被移除了<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要在 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 中尋找的索引鍵。</param>
        <summary>判斷 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 是否包含具有指定索引鍵的項目。</summary>
        <returns>
          如果 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 包含具有指定索引鍵的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.Name%2A>屬性<xref:System.Windows.Forms.Control>對應至針對索引鍵<xref:System.Windows.Forms.Control>中<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllChildren As Boolean) As Control()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::Control ^&gt; ^ Find(System::String ^ key, bool searchAllChildren);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">要在 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 中尋找的索引鍵。</param>
        <param name="searchAllChildren">
          <see langword="true" /> 表示要搜尋所有子控制項，否則為 <see langword="false" />。</param>
        <summary>根據 <see cref="P:System.Windows.Forms.Control.Name" /> 屬性搜尋控制項，並建置所有相符之控制項的陣列。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.Control" /> 型別的陣列，其中包含相符的控制項。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> 參數為 <see langword="null" /> 或空白字串 ("")。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildIndex">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取控制項集合中控制項的索引。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public int GetChildIndex (System.Windows.Forms.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetChildIndex(class System.Windows.Forms.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildIndex (child As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetChildIndex(System::Windows::Forms::Control ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="child">要在控制項集合中搜尋的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>擷取控制項集合中指定之子控制項的索引。</summary>
        <returns>以零起始的索引值，表示控制項集合中指定的子控制項位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 具有索引值為零的控制項位於最上層的疊置順序，而較高的數字是愈接近下方。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="child" />
          <see cref="T:System.Windows.Forms.Control" /> 不在 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 中。</exception>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
      </Docs>
    </Member>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public virtual int GetChildIndex (System.Windows.Forms.Control child, bool throwException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildIndex(class System.Windows.Forms.Control child, bool throwException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildIndex (child As Control, throwException As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildIndex(System::Windows::Forms::Control ^ child, bool throwException);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="throwException" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="child">要在控制項集合中搜尋的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <param name="throwException">
          <see langword="true" /> 表示如果 <c>child</c> 參數中指定的 <see cref="T:System.Windows.Forms.Control" /> 不是 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 中的控制項，則擲回例外狀況；否則為 <see langword="false" />。</param>
        <summary>擷取控制項集合中指定之子控制項的索引。如果指定的控制項不在控制項集合中，則選擇性引發例外狀況。</summary>
        <returns>以零起始的索引值，表示控制項集合中指定的子控制項位置，如果指定的 <see cref="T:System.Windows.Forms.Control" /> 不在 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 中，則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 具有索引值為零的控制項位於最上層的疊置順序，而較高的數字是愈接近下方。 傳回值-1 會傳回時，才`throwException`參數是`false`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="child" />
          <see cref="T:System.Windows.Forms.Control" /> 不在 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 中，而且 <paramref name="throwException" /> 參數值為 <see langword="true" />。</exception>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取用來反覆查看 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 之列舉值物件的參考。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">要在集合中尋找的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>擷取控制項集合中指定之控制項的索引。</summary>
        <returns>以零起始的索引值，表示指定的 <see cref="T:System.Windows.Forms.Control" /> 在 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 中的位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在集合中，找不到控制項<xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A>方法傳回值為-1。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要搜尋的控制項名稱。</param>
        <summary>擷取指定之項目在集合中第一次出現的索引。</summary>
        <returns>具有指定名稱之控制項在集合中第一次出現的以零起始的索引。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A>稱為連續，最後一個傳回索引會檢查索引鍵的符合項目第一次，而且如果沒有相符項目，搜尋會從集合的開頭。  
  
 索引鍵的比較不區分大小寫。 如果`key`參數是`null`或空字串或使用指定的項目找不到索引鍵，<xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A>傳回-1。  
  
 <xref:System.Windows.Forms.Control.Name%2A>屬性<xref:System.Windows.Forms.Control>對應至針對索引鍵<xref:System.Windows.Forms.Control>中<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>表示集合中的 <see cref="T:System.Windows.Forms.Control" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ default[int] { System::Windows::Forms::Control ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要從控制項集合中擷取的控制項的索引。</param>
        <summary>指示集合中指定索引位置的 <see cref="T:System.Windows.Forms.Control" />。</summary>
        <value>位於控制項集合中指定索引位置的 <see cref="T:System.Windows.Forms.Control" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要擷取<xref:System.Windows.Forms.Control>從<xref:System.Windows.Forms.Control.ControlCollection>，參考具有特定索引值的集合物件。 索引值<xref:System.Windows.Forms.Control.ControlCollection>是以零為起始的索引。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 值小於零，或者大於或等於集合中控制項的數目。</exception>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ default[System::String ^] { System::Windows::Forms::Control ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要從控制項集合中擷取的控制項名稱。</param>
        <summary>表示集合中具有指定索引鍵的 <see cref="T:System.Windows.Forms.Control" />。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Control" /> 中，具有指定索引鍵的 <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.Name%2A>屬性<xref:System.Windows.Forms.Control>對應至針對索引鍵<xref:System.Windows.Forms.Control>中<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Owner { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得擁有這個 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 的控制項。</summary>
        <value>擁有這個 <see cref="T:System.Windows.Forms.Control" /> 的 <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::Control ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">要從 <see cref="T:System.Windows.Forms.Control" /> 移除的 <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</param>
        <summary>從控制項集合中移除指定的控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.Control>會移除從控制項集合，所有後續控制項都移一個位置，集合中。  
  
 您也可以移除<xref:System.Windows.Forms.Control>使用<xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>方法或移除所有控制使用<xref:System.Windows.Forms.Control.ControlCollection.Clear%2A>方法。  
  
 若要加入新<xref:System.Windows.Forms.Control>物件加入集合中，使用<xref:System.Windows.Forms.Control.ControlCollection.Add%2A>或<xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例移除<xref:System.Windows.Forms.Control>從<xref:System.Windows.Forms.Control.ControlCollection>衍生類別的<xref:System.Windows.Forms.Panel>如果它是集合的成員。 這個範例需要您已建立<xref:System.Windows.Forms.Panel>、 <xref:System.Windows.Forms.Button>，和一或多個<xref:System.Windows.Forms.RadioButton>控制項<xref:System.Windows.Forms.Form>。 <xref:System.Windows.Forms.RadioButton>控制項會加入至<xref:System.Windows.Forms.Panel>控制項，而<xref:System.Windows.Forms.Panel>控制項加入至<xref:System.Windows.Forms.Form>。 當按一下按鈕時，選項按鈕命名為`radioButton2`被移除了<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />方法，以確保會從集合中移除控制項。</para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除之 <see cref="T:System.Windows.Forms.Control" /> 的索引值。</param>
        <summary>從控制項集合中指定的索引位置移除控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.Control>會移除從控制項集合，所有後續控制項都移一個位置，集合中。  
  
 您也可以移除<xref:System.Windows.Forms.Control>您先前加入使用<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>或<xref:System.Windows.Forms.Control.ControlCollection.Clear%2A>方法。  
  
 若要加入新<xref:System.Windows.Forms.Control>物件加入集合中，使用<xref:System.Windows.Forms.Control.ControlCollection.Add%2A>或<xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會移除第一個<xref:System.Windows.Forms.Control>中<xref:System.Windows.Forms.Control.ControlCollection>衍生類別的<xref:System.Windows.Forms.Panel>如果集合計數大於零。 這個範例需要您已建立<xref:System.Windows.Forms.Panel>、 <xref:System.Windows.Forms.Button>，和至少一個其他控制<xref:System.Windows.Forms.Form>。 其他控制項加入至<xref:System.Windows.Forms.Panel>控制項，而<xref:System.Windows.Forms.Panel>控制項加入至<xref:System.Windows.Forms.Form>。 當按一下按鈕時，會從移除面板中所包含的第一個控制項<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 [!code-cpp[ControlCollection#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#5)]
 [!code-csharp[ControlCollection#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#5)]
 [!code-vb[ControlCollection#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要移除的子控制項名稱。</param>
        <summary>移除具有指定索引鍵的子控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.Name%2A>屬性<xref:System.Windows.Forms.Control>對應至針對索引鍵<xref:System.Windows.Forms.Control>中<xref:System.Windows.Forms.Control.ControlCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildIndex">
      <MemberSignature Language="C#" Value="public virtual void SetChildIndex (System.Windows.Forms.Control child, int newIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildIndex(class System.Windows.Forms.Control child, int32 newIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetChildIndex (child As Control, newIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetChildIndex(System::Windows::Forms::Control ^ child, int newIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">要搜尋的「子」<c></c><see cref="T:System.Windows.Forms.Control" />。</param>
        <param name="newIndex">控制項的新索引值。</param>
        <summary>將集合中指定之子控制項的索引，設定為指定的索引值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Forms.Control.ControlCollection.SetChildIndex%2A>呼叫時，<xref:System.Windows.Forms.Control>所參考`child`參數會移至所指定的位置`newIndex`和其他<xref:System.Windows.Forms.Control>參考<xref:System.Windows.Forms.Control.ControlCollection>適應移動已重新排列。 具有索引值為零的控制項位於最上層的疊置順序，而較高的數字是愈接近下方。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="child" /> 控制項不在 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 中。</exception>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (control As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ control) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.Control.ControlCollection> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (control As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ control) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.Control.ControlCollection> 執行個體轉換成 <xref:System.Collections.IList> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.ICloneable.Clone" />。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.Control.ControlCollection> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>