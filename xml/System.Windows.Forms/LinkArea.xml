<Type Name="LinkArea" FullName="System.Windows.Forms.LinkArea">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9a846e08b309a19391842fc2eafa5a763f0b6ac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647862" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LinkArea" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit LinkArea extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkArea" />
  <TypeSignature Language="VB.NET" Value="Public Structure LinkArea" />
  <TypeSignature Language="C++ CLI" Value="public value class LinkArea" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.LinkArea/LinkAreaConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.LinkLabel" /> 控制項中的區域，代表控制項中的超連結 (Hyperlink)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有兩種方式加入至文字的超連結<xref:System.Windows.Forms.LinkLabel>控制項。 您可以存取<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A>方法<xref:System.Windows.Forms.LinkLabel.LinkCollection>類別透過<xref:System.Windows.Forms.LinkLabel.Links%2A>屬性<xref:System.Windows.Forms.LinkLabel>若要將多個超連結加入至控制項的文字。 如果您只需要單一的超連結加入控制項的文字，您可以使用<xref:System.Windows.Forms.LinkLabel.LinkArea%2A>屬性<xref:System.Windows.Forms.LinkLabel>。 這個屬性會接受<xref:System.Windows.Forms.LinkArea>，定義超連結控制項的文字內的位置。 使用指定超連結時<xref:System.Windows.Forms.LinkArea>屬性，若要再加入連結區域<xref:System.Windows.Forms.LinkLabel.LinkCollection>以加入連結使用的相同方式<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A>方法<xref:System.Windows.Forms.LinkLabel.LinkCollection>。  
  
 <xref:System.Windows.Forms.LinkArea.Length%2A>屬性指定的文字內的字元數<xref:System.Windows.Forms.LinkLabel>来包含在連結區域中。 <xref:System.Windows.Forms.LinkArea.Start%2A>屬性會指定要包含在超連結控制項文字中的第一個字元。 如果您想要判斷特定<xref:System.Windows.Forms.LinkArea>是空白，您可以使用<xref:System.Windows.Forms.LinkArea.IsEmpty%2A>屬性而不是檢查由<xref:System.Windows.Forms.LinkArea.Start%2A>和<xref:System.Windows.Forms.LinkArea.Length%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.LinkLabel>類別，具有多個<xref:System.Windows.Forms.LinkArea>定義的區段，以在表單上顯示標籤。 此範例示範設定<xref:System.Windows.Forms.Label.AutoSize%2A>， <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>， <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>， <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>，和<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>屬性，以自訂的外觀<xref:System.Windows.Forms.LinkLabel>。 第一個<xref:System.Windows.Forms.LinkArea>使用指定<xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>屬性。 其他連結加入至<xref:System.Windows.Forms.LinkLabel>使用<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>方法。 範例會處理<xref:System.Windows.Forms.LinkLabel.LinkClicked>啟動 Web 瀏覽器的超連結，並顯示事件<xref:System.Windows.Forms.MessageBox>的其他連結。  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.LinkLabel.LinkArea" />
    <altmember cref="T:System.Windows.Forms.LinkLabel" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkArea (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkArea(int start, int length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <see cref="T:System.Windows.Forms.LinkLabel" /> 文字中，連接區域以零起始的位置。</param>
        <param name="length">要包含在連結區域的字元數，須自起始字元後起算。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.LinkArea" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">與這個 <see cref="T:System.Windows.Forms.LinkArea" /> 相比較的物件。</param>
        <summary>判斷這個 <see cref="T:System.Windows.Forms.LinkArea" /> 是否等於指定的物件。</summary>
        <returns>
          如果指定的物件等於目前的 <see cref="T:System.Windows.Forms.LinkArea" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個執行個體的雜湊碼。</summary>
        <returns>32 位元帶正負號的整數，其為這個執行個體的雜湊碼。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Windows.Forms.LinkArea" /> 是否為空的。</summary>
        <value>
          如果指定的起始處和長度傳回空白的連結區域，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來判斷此物件，而不是評估的值中是否已指定有效的連結區域<xref:System.Windows.Forms.LinkArea.Length%2A>和<xref:System.Windows.Forms.LinkArea.Start%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定連結區域中的字元數。</summary>
        <value>連結區域中的字元數包含空格。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定從文字<xref:System.Windows.Forms.LinkLabel>若要顯示為連結，設定<xref:System.Windows.Forms.LinkArea.Start%2A>屬性，以啟動 建立連結的文字中的位置。 之後<xref:System.Windows.Forms.LinkArea.Start%2A>屬性是設定，請將值<xref:System.Windows.Forms.LinkArea.Length%2A>屬性的數字的字元，包括在中指定的字元位置<xref:System.Windows.Forms.LinkArea.Start%2A>屬性，您想要讓連結文字。 例如，如果您想要建立連結的文字"快速棕色 fox"的第一個字，則設定<xref:System.Windows.Forms.LinkArea.Start%2A>屬性設為零 (0) 和<xref:System.Windows.Forms.LinkArea.Length%2A>屬性三 （3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkArea.Start" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.LinkArea linkArea1, System.Windows.Forms.LinkArea linkArea2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Forms.LinkArea linkArea1, valuetype System.Windows.Forms.LinkArea linkArea2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.op_Equality(System.Windows.Forms.LinkArea,System.Windows.Forms.LinkArea)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (linkArea1 As LinkArea, linkArea2 As LinkArea) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::LinkArea linkArea1, System::Windows::Forms::LinkArea linkArea2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkArea1" Type="System.Windows.Forms.LinkArea" />
        <Parameter Name="linkArea2" Type="System.Windows.Forms.LinkArea" />
      </Parameters>
      <Docs>
        <param name="linkArea1">要比較的 <see cref="T:System.Windows.Forms.LinkArea" />。</param>
        <param name="linkArea2">要比較的 <see cref="T:System.Windows.Forms.LinkArea" />。</param>
        <summary>傳回值，指出 <see cref="T:System.Windows.Forms.LinkArea" /> 類別的兩個執行個體是否相等。</summary>
        <returns>
          如果 <see cref="T:System.Windows.Forms.LinkArea" /> 類別的兩個執行個體相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[這個運算子的對等方法是 <xref:System.Windows.Forms.LinkArea.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.LinkArea linkArea1, System.Windows.Forms.LinkArea linkArea2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Forms.LinkArea linkArea1, valuetype System.Windows.Forms.LinkArea linkArea2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.op_Inequality(System.Windows.Forms.LinkArea,System.Windows.Forms.LinkArea)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (linkArea1 As LinkArea, linkArea2 As LinkArea) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::LinkArea linkArea1, System::Windows::Forms::LinkArea linkArea2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkArea1" Type="System.Windows.Forms.LinkArea" />
        <Parameter Name="linkArea2" Type="System.Windows.Forms.LinkArea" />
      </Parameters>
      <Docs>
        <param name="linkArea1">要比較的 <see cref="T:System.Windows.Forms.LinkArea" />。</param>
        <param name="linkArea2">要比較的 <see cref="T:System.Windows.Forms.LinkArea" />。</param>
        <summary>傳回值，指出 <see cref="T:System.Windows.Forms.LinkArea" /> 類別的兩個執行個體是否不相等。</summary>
        <returns>
          如果 <see cref="T:System.Windows.Forms.LinkArea" /> 類別的兩個執行個體不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.LinkLabel" /> 文字中連結區域的起始位置。</summary>
        <value>
          <see cref="T:System.Windows.Forms.LinkLabel" /> 控制項文字中的位置，即為連結開始的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定從文字<xref:System.Windows.Forms.LinkLabel>若要顯示為連結，設定<xref:System.Windows.Forms.LinkArea.Start%2A>屬性，以啟動 建立連結的文字中的位置。 之後<xref:System.Windows.Forms.LinkArea.Start%2A>屬性是設定，請將值<xref:System.Windows.Forms.LinkArea.Length%2A>屬性的數字的字元，包括在中指定的字元位置<xref:System.Windows.Forms.LinkArea.Start%2A>屬性，您想要讓連結文字。 例如，如果您想要建立連結的文字"快速棕色 fox"的第一個字，則設定<xref:System.Windows.Forms.LinkArea.Start%2A>屬性設為零 (0) 和<xref:System.Windows.Forms.LinkArea.Length%2A>屬性三 （3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkArea.Length" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回此執行個體的完整類型名稱。</summary>
        <returns>包含完整類型名稱的 <see cref="T:System.String" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>