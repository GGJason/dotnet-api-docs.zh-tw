<Type Name="LinkLabel+Link" FullName="System.Windows.Forms.LinkLabel+Link">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef4604629843817371de886a5f3db8c9bebaa2c0" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48636835" /></Metadata><TypeSignature Language="C#" Value="public class LinkLabel.Link" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit LinkLabel/Link extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkLabel.Link" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkLabel.Link" />
  <TypeSignature Language="C++ CLI" Value="public: ref class LinkLabel::Link" />
  <TypeSignature Language="F#" Value="type LinkLabel.Link = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.LinkConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.LinkLabel" /> 控制項中的連結。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.Link>類別定義內連結的屬性<xref:System.Windows.Forms.LinkLabel>控制項。 您可以使用這些屬性來提供資料給<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件的<xref:System.Windows.Forms.LinkLabel>控制項，來執行工作，當按一下控制項中的連結。 <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A>屬性可讓您定義資訊的<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件可以使用 顯示 Microsoft Internet Explorer 中的 URL，或開啟檔案。  
  
 除了連結的屬性的相關資訊<xref:System.Windows.Forms.LinkLabel.Link>類別也會協助定義的文字<xref:System.Windows.Forms.LinkLabel.Link>和它的顯示狀態。 <xref:System.Windows.Forms.LinkLabel.Link.Start%2A>並<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>屬性定義的位置和長度的文字中的文字<xref:System.Windows.Forms.LinkLabel>控制項來顯示為連結。 <xref:System.Windows.Forms.LinkLabel.Link.Enabled%2A>屬性可讓您將連結顯示為已停用的連結，而<xref:System.Windows.Forms.LinkLabel.Link.Visited%2A>屬性可以警告使用者他們已瀏覽目前的執行個體中指定的連結<xref:System.Windows.Forms.LinkLabel>。  
  
 您可以顯示多個連結，在單一<xref:System.Windows.Forms.LinkLabel>控制項。 每個<xref:System.Windows.Forms.LinkLabel.Link>就會加入至<xref:System.Windows.Forms.LinkLabel.LinkCollection>聯<xref:System.Windows.Forms.LinkLabel>控制項。 若要取得集合中定義的連結<xref:System.Windows.Forms.LinkLabel>控制，請使用<xref:System.Windows.Forms.LinkLabel.Links%2A?displayProperty=nameWithType>屬性。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Forms.LinkLabel>類別，具有多個<xref:System.Windows.Forms.LinkArea>定義，在表單上顯示標籤的區段。 此範例示範如何設定<xref:System.Windows.Forms.Label.AutoSize%2A>， <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>， <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>， <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>，並<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>屬性，以自訂的外觀<xref:System.Windows.Forms.LinkLabel>。 第一個<xref:System.Windows.Forms.LinkArea>指定使用<xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>屬性。 其他連結新增到<xref:System.Windows.Forms.LinkLabel>使用<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>方法。 範例會處理<xref:System.Windows.Forms.LinkLabel.LinkClicked>藉由啟動 Web 瀏覽器的超連結，並顯示事件<xref:System.Windows.Forms.MessageBox>其他連結。  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
    <altmember cref="P:System.Windows.Forms.LinkLabel.Links" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Link.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Link.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link(int start, int length);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LinkLabel.Link : int * int -&gt; System.Windows.Forms.LinkLabel.Link" Usage="new System.Windows.Forms.LinkLabel.Link (start, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><see cref="T:System.Windows.Forms.LinkLabel" /> 文字中，連接區域以零起始的位置。</param>
        <param name="length">要包含在連結區域的字元數，須自起始字元後起算。</param>
        <summary>在 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 中起始位置之後的指定字元數和起始位置，初始化 <see cref="T:System.Windows.Forms.LinkLabel" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (int start, int length, object linkData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 start, int32 length, object linkData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Link.#ctor(System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Integer, length As Integer, linkData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Link(int start, int length, System::Object ^ linkData);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LinkLabel.Link : int * int * obj -&gt; System.Windows.Forms.LinkLabel.Link" Usage="new System.Windows.Forms.LinkLabel.Link (start, length, linkData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="linkData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="start"><see cref="T:System.Windows.Forms.LinkLabel" /> 文字中，連接區域以零起始的位置。</param>
        <param name="length">要包含在連結區域的字元數，須自起始字元後起算。</param>
        <param name="linkData">與連結關聯的資料。</param>
        <summary>在 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 中起始位置之後的指定字元數和起始位置，初始化 <see cref="T:System.Windows.Forms.LinkLabel" /> 類別的新執行個體和與連結關聯的資料。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定連結的文字描述。</summary>
        <value><see cref="T:System.String" /> 表示連結的文字描述。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數值，表示是否啟用連結。</summary>
        <value>如果啟用連結，則為 <see langword="true" />，否則，<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來停用狀態內顯示連結<xref:System.Windows.Forms.LinkLabel>控制項。 停用連結時，按一下連結不會造成<xref:System.Windows.Forms.LinkLabel>引發的控制項<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkLabel.Link.Visited" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定連結文字的字元數。</summary>
        <value>連結文字中的字元數包含空格。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定從文字<xref:System.Windows.Forms.LinkLabel>若要顯示為連結，請設定<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>屬性，以啟動 建立連結的文字中的位置。 在後<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>屬性是設定，設定的值<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>字元，包括在指定的字元位置數目的屬性<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>屬性，您想要讓連結文字。 例如，如果您想要讓文字 「 quick brown fox 」 的第一個文字連結，您設定<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>屬性設為零 (0) 和<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>屬性三 （3)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkData">
      <MemberSignature Language="C#" Value="public object LinkData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LinkData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.LinkData" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ LinkData { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LinkData : obj with get, set" Usage="System.Windows.Forms.LinkLabel.Link.LinkData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與連結相關的資料。</summary>
        <value><see cref="T:System.Object" />，表示與連結相關的資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來提供連結的相關資訊。 這個屬性所提供的資訊可用於<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件的<xref:System.Windows.Forms.LinkLabel>提供可用來處理所按的連結，連結的相關資訊。 比方說，您可以指定要顯示在 Internet Explorer 中，按一下連結的值時的 URL<xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A>屬性。 您也可以使用<xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A>屬性來識別當使用者按一下連結時要顯示的對話方塊。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Forms.LinkLabel>類別，具有多個<xref:System.Windows.Forms.LinkArea>定義，在表單上顯示標籤的區段。 此範例示範如何設定<xref:System.Windows.Forms.Label.AutoSize%2A>， <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>， <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>， <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>，並<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>屬性，以自訂的外觀<xref:System.Windows.Forms.LinkLabel>。 第一個<xref:System.Windows.Forms.LinkArea>指定使用<xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>屬性。 其他連結新增到<xref:System.Windows.Forms.LinkLabel>使用<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>方法。 範例會處理<xref:System.Windows.Forms.LinkLabel.LinkClicked>藉由啟動 Web 瀏覽器的超連結，並顯示事件<xref:System.Windows.Forms.MessageBox>其他連結。  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.LinkLabel.LinkClicked" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 的名稱。</summary>
        <value>表示 <see cref="T:System.String" /> 名稱的 <see cref="T:System.Windows.Forms.LinkLabel.Link" />。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.Link.Name%2A>屬性可用於編製索引的索引鍵。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Start : int with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或建立 <see cref="T:System.Windows.Forms.LinkLabel" /> 文字中連結的起始位置。</summary>
        <value><see cref="T:System.Windows.Forms.LinkLabel" /> 控制項文字中的位置，即為連結開始的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定從文字<xref:System.Windows.Forms.LinkLabel>若要顯示為連結，請設定<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>屬性，以啟動 建立連結的文字中的位置。 在後<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>屬性是設定，設定的值<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>字元，包括在指定的字元位置數目的屬性<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>屬性，您想要讓連結文字。 例如，如果您想要讓文字 「 quick brown fox 」 的第一個文字連結，您設定<xref:System.Windows.Forms.LinkLabel.Link.Start%2A>屬性設為零 (0) 和<xref:System.Windows.Forms.LinkLabel.Link.Length%2A>屬性三 （3)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件，它包含 <see cref="T:System.Windows.Forms.LinkLabel.Link" /> 相關資料。</summary>
        <value>包含有關控制項資料的 <see cref="T:System.Object" />。 預設值為 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visited">
      <MemberSignature Language="C#" Value="public bool Visited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visited" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Link.Visited" />
      <MemberSignature Language="VB.NET" Value="Public Property Visited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visited : bool with get, set" Usage="System.Windows.Forms.LinkLabel.Link.Visited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數值，表示使用者是否瀏覽過該連結。</summary>
        <value>如果瀏覽過該連結則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.LinkLabel>控制項並不會自動代表的已瀏覽的連結的連結。 若要將連結顯示為已瀏覽的連結，您可以設定此屬性的值`true`中的事件處理常式<xref:System.Windows.Forms.LinkLabel.LinkClicked>事件的<xref:System.Windows.Forms.LinkLabel>。 已瀏覽的連結會顯示使用中指定的色彩<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>屬性<xref:System.Windows.Forms.LinkLabel>控制項。 一次表單，其中包含<xref:System.Windows.Forms.LinkLabel>控制項關閉時，所有連結相關聯的顯示狀態為已刪除。 若要保留連結的顯示狀態，您要將連結的顯示狀態儲存在您的應用程式相關聯的登錄設定。  
  
> [!NOTE]
>  如果您有只有一個連結中指定<xref:System.Windows.Forms.LinkLabel>控制項，您可以使用<xref:System.Windows.Forms.LinkLabel.LinkVisited%2A>屬性<xref:System.Windows.Forms.LinkLabel>至指定的連結，為已瀏覽。 您也可以使用<xref:System.Windows.Forms.LinkLabel.LinkVisited%2A>屬性，如果您有多個連結定義，但設定僅適用於定義控制項中的第一個連結。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Forms.LinkLabel>類別，具有多個<xref:System.Windows.Forms.LinkArea>定義，在表單上顯示標籤的區段。 此範例示範如何設定<xref:System.Windows.Forms.Label.AutoSize%2A>， <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>， <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>， <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>，並<xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>屬性，以自訂的外觀<xref:System.Windows.Forms.LinkLabel>。 第一個<xref:System.Windows.Forms.LinkArea>指定使用<xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>屬性。 其他連結新增到<xref:System.Windows.Forms.LinkLabel>使用<xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>方法。 範例會處理<xref:System.Windows.Forms.LinkLabel.LinkClicked>藉由啟動 Web 瀏覽器的超連結，並顯示事件<xref:System.Windows.Forms.MessageBox>其他連結。  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkVisited" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
  </Members>
</Type>