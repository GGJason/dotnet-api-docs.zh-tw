<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AxHost.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d9f95d307ef4fee1723318c2b8875ae8daca626b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9f95d307ef4fee1723318c2b8875ae8daca626b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Wraps ActiveX controls and exposes them as fully featured Windows Forms controls.</source>
          <target state="translated">包裝 ActiveX 控制項，並把這些控制項公開成為全功能的 Windows Form 控制項。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>You typically do not use the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class directly.</source>
          <target state="translated">您通常不會使用<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>直接類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>You can use the <bpt id="p1">[</bpt>Aximp.exe (Windows Forms ActiveX Control Importer)<ept id="p1">](~/docs/framework/tools/aximp-exe-windows-forms-activex-control-importer.md)</ept> to generate the wrappers that extend <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>.</source>
          <target state="translated">您可以使用<bpt id="p1">[</bpt>Aximp.exe （Windows Form ActiveX 控制項匯入工具）<ept id="p1">](~/docs/framework/tools/aximp-exe-windows-forms-activex-control-importer.md)</ept>來產生包裝函式，擴充<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>The ActiveX Control Importer generates a class that is derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class, and compiles it into a library file (DLL) that can be added as a reference to your application.</source>
          <target state="translated">ActiveX 控制項匯入工具會產生的類別，衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別，並將其編譯為程式庫檔案 (DLL) 可新增為您的應用程式的參考。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>Alternatively, you can use the <ph id="ph1">`/source`</ph> switch with the ActiveX Control Importer and a C# file is generated for your <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class.</source>
          <target state="translated">或者，您可以使用<ph id="ph1">`/source`</ph>切換使用 ActiveX 控制項匯入工具，並會產生的 C# 檔案您<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>衍生的類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>You can then make changes to the code and recompile it into a library file.</source>
          <target state="translated">您可以變更的程式碼並重新編譯為程式庫檔案。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>If the name of a member of the ActiveX control matches a name defined in the .NET Framework, then the ActiveX Control Importer will prefix the member name with "Ctl" when it creates the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class.</source>
          <target state="translated">如果 ActiveX 控制項的成員名稱符合.NET Framework 中，已定義的名稱，則 ActiveX 控制項匯入工具會在成員名稱前面加"Ctl"會在建立時<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>衍生的類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>For example, if your ActiveX control has a member named "Layout", it is renamed "CtlLayout" in the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class because the <ph id="ph2">`Layout`</ph> event is defined within the .NET Framework.</source>
          <target state="translated">例如，如果您的 ActiveX 控制項名為"Layout"的成員，它會重新命名"CtlLayout"中的<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>衍生類別，因為<ph id="ph2">`Layout`</ph>.NET Framework 中定義事件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>Most of the common properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class are only valid and used if the underlying ActiveX control exposes those properties.</source>
          <target state="translated">大部分的通用屬性<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別才有效，且使用如果基礎 ActiveX 控制項公開這些屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>A few examples of the common properties are <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>.</source>
          <target state="translated">通用屬性的一些範例包含<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>If you are using Visual Studio as your Windows Forms design environment, you can make an ActiveX control available to your application by adding the ActiveX control to your Toolbox.</source>
          <target state="translated">如果您使用 Visual Studio 為您的 Windows Form 設計環境，您可以對 ActiveX 控制項可以使用您的應用程式將 ActiveX 控制項加入至您的工具箱。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>To accomplish this, right-click the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Customize Toolbox<ept id="p2">**</ept>, then browse to the ActiveX control's.ocx file.</source>
          <target state="translated">若要完成此動作，以滑鼠右鍵按一下<bpt id="p1">**</bpt>工具箱<ept id="p1">**</ept>，選取<bpt id="p2">**</bpt>自訂工具箱<ept id="p2">**</ept>，然後瀏覽至 ActiveX control's.ocx 檔案。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>For more information, see "Adding ActiveX Controls to Windows Forms" in the Visual Studio documentation.</source>
          <target state="translated">如需詳細資訊，請參閱 Visual Studio 文件中的 「 加入 ActiveX 控制項至 Windows 表單 」。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">下列程式碼範例會覆寫建構函式，而<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>衍生包裝 Microsoft 格式編輯 ActiveX 控制項的類別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">此程式碼需要您已建立產生的原始程式碼 MSMask32.ocx 檔案上執行 AxImp.exe<ph id="ph1">`/source`</ph>參數來產生包裝函式類別，可供編輯。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">這會顯示程式碼只能在 C# 語法因為這是唯一的語言輸出 AxImp.exe。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String)">
          <source>The CLSID of the ActiveX control to wrap.</source>
          <target state="translated">要包裝之 ActiveX 控制項的 CLSID。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class, wrapping the ActiveX control indicated by the specified CLSID.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別的新執行個體，包裝指定的 CLSID 指出的 ActiveX 控制項。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>The CLSID of the ActiveX control to wrap.</source>
          <target state="translated">要包裝之 ActiveX 控制項的 CLSID。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that modifies the shortcut-menu behavior for the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 可修改控制項的捷徑功能表行為。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class, wrapping the ActiveX control indicated by the specified CLSID, and using the shortcut-menu behavior indicated by the specified <ph id="ph2">&lt;paramref name="flags" /&gt;</ph> value.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別的新執行個體，包裝指定 CLSID 指出的 ActiveX 控制項，並使用指定 <ph id="ph2">&lt;paramref name="flags" /&gt;</ph> 值所指出的捷徑功能表行為。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>If the binary representation of the <ph id="ph1">`flags`</ph> parameter value contains the bit represented by the value 0x1, the shortcut menu for the control will not contain an <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> option unless the ActiveX control explicitly provides it.</source>
          <target state="translated">如果的二進位表示法<ph id="ph1">`flags`</ph>參數值包含由 0x1 值的位元，將不會包含控制項的捷徑功能表<bpt id="p1">**</bpt>編輯<ept id="p1">**</ept>選項 ActiveX 控制項未明確提供它。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>If the binary representation of the <ph id="ph1">`flags`</ph> parameter value contains the bit represented by the value 0x2, the shortcut menu for the control will contain a Properties option if the ActiveX control offers a set of property pages; otherwise, the shortcut menu will contain a Properties option only if the ActiveX control explicitly provides it.</source>
          <target state="translated">如果的二進位表示法<ph id="ph1">`flags`</ph>參數值包含由 0x2 值的位元，控制項的捷徑功能表會包含屬性選項，如果 ActiveX 控制項提供一組屬性頁面中; 否則快顯功能表將包含屬性選項，只有當 ActiveX 控制項明確地提供。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>When overridden in a derived class, attaches interfaces to the underlying ActiveX control.</source>
          <target state="translated">在衍生類別中被覆寫時，將介面附加在基礎的 ActiveX 控制項。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">下列程式碼範例會覆寫建構函式，而<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>衍生包裝 Microsoft 格式編輯 ActiveX 控制項的類別。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">此程式碼需要您已建立產生的原始程式碼 MSMask32.ocx 檔案上執行 AxImp.exe<ph id="ph1">`/source`</ph>參數來產生包裝函式類別，可供編輯。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">這會顯示程式碼只能在 C# 語法因為這是唯一的語言輸出 AxImp.exe。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>Classes that extend <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> should override this method.</source>
          <target state="translated">擴充的類別<ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>應該覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>Within an overridden version of this method, the extending class should call <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.GetOcx" /&gt;</ph> to retrieve its own interface.</source>
          <target state="translated">擴充的類別應該呼叫這個方法的覆寫的版本，內<ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.GetOcx" /&gt;</ph>擷取它自己的介面。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>In most cases, the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.GetOcx" /&gt;</ph> method should not be called before this method is called.</source>
          <target state="translated">在大部分情況下，<ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.GetOcx" /&gt;</ph>方法應該不會呼叫這個方法之前呼叫。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.BackColor">
          <source>This member is not meaningful for this control.</source>
          <target state="translated">這個成員對這個控制項來說不具意義。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.BackColor">
          <source>A Color that represents the background color of the control.</source>
          <target state="translated">色彩，表示控制項的背景色彩。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.BackColorChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BackColorChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BackColorChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackColorChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BackColorChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BackColorChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackColorChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackColorChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.BackgroundImage">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.BackgroundImage">
          <source>The background image displayed in the control.</source>
          <target state="translated">在控制項中顯示的背景影像。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BackgroundImageChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BackgroundImageChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BackgroundImageChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BackgroundImageChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.BackgroundImageLayout">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.BackgroundImageLayout">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.BackgroundImageLayoutChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">這個事件與這個類別無關。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>Begins the initialization of the ActiveX control.</source>
          <target state="translated">開始 ActiveX 控制項的初始化。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>Design environments typically use this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">設計環境通常會使用這個方法來開始初始化用於表單或為另一個元件所使用的元件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph>方法結束初始化。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BeginInit%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph>方法可防止控制項完全初始化之前使用。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化發生於執行階段。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.BindingContextChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BindingContextChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BindingContextChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BindingContextChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BindingContextChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BindingContextChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BindingContextChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BindingContextChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.ChangeUICues">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ChangeUICues" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ChangeUICues" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ChangeUICues">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ChangeUICues&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ChangeUICues&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ChangeUICues">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ChangeUICues">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.Click">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Click" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Click" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Click">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Click&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Click&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Click">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Click">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>Gets or sets the control containing the ActiveX control.</source>
          <target state="translated">取得或設定包含 ActiveX 控制項的控制項。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> that represents the control containing the ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph>，表示包含 ActiveX 控制項的控制項。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ContainingControl%2A&gt;</ph> property value can be different from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ContainingControl%2A&gt;</ph>屬性值可以不同於<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> represented by this property is the ActiveX control's logical container.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph>由這個屬性是 ActiveX 控制項的邏輯容器。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>For example, if an ActiveX control is hosted in a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, and the <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> is contained on a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, then the <ph id="ph4">&lt;xref:System.Windows.Forms.AxHost.ContainingControl%2A&gt;</ph> property value of the ActiveX control is the <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>, and the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value is the <ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control.</source>
          <target state="translated">比方說，如果 ActiveX 控制項裝載於<ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控制項，而<ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>都包含在<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>，則<ph id="ph4">&lt;xref:System.Windows.Forms.AxHost.ContainingControl%2A&gt;</ph>ActiveX 控制項的屬性值是<ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>屬性值<ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>for all windows to get this property value.</source>
          <target state="translated">若要取得這個屬性值的所有視窗。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.ContextMenu">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContextMenu">
          <source>The shortcut menu associated with the control.</source>
          <target state="translated">與控制項相關聯的捷徑功能表。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.ContextMenuChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ContextMenuChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ContextMenuChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ContextMenuChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ContextMenuChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ContextMenuChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ContextMenuChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ContextMenuChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateHandle">
          <source>Creates a handle for the control.</source>
          <target state="translated">建立控制項的控制代碼。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateInstanceCore(System.Guid)">
          <source>The CLSID of the ActiveX control.</source>
          <target state="translated">ActiveX 控制項的 CLSID。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateInstanceCore(System.Guid)">
          <source>Called by the system to create the ActiveX control.</source>
          <target state="translated">為系統所呼叫，以建立 ActiveX 控制項。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateInstanceCore(System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，表示 ActiveX 控制項。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">建立控制代碼時，取得必要的建立參數。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph>，包含建立控制項之控制代碼時所需的建立參數。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateSink">
          <source>Called by the control to prepare it for listening to events.</source>
          <target state="translated">由控制項呼叫，以便準備聽候事件。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.CreateSink">
          <source>This base-class implementation is empty.</source>
          <target state="translated">此基底類別實作是空的。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Cursor">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Cursor">
          <source>The foreground color of the control.</source>
          <target state="translated">控制項的前景色彩。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.CursorChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.CursorChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.CursorChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.CursorChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.CursorChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.CursorChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.CursorChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.CursorChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">取得控制項的預設大小。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">控制項的預設 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DestroyHandle">
          <source>Destroys the handle associated with the control.</source>
          <target state="translated">終結與這個控制項相關的控制代碼。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DetachSink">
          <source>Called by the control when it stops listening to events.</source>
          <target state="translated">由控制項在停止聽候事件時進行呼叫。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.DetachSink">
          <source>This base-class implementation is empty.</source>
          <target state="translated">此基底類別實作是空的。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and its child controls and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 所使用的 Unmanaged 資源，以及其子系的控制項，並會選擇性地釋放一些 Managed 資源。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DoubleClick">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DoubleClick" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DoubleClick" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DoubleClick">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DoubleClick&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DoubleClick&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DoubleClick">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DoubleClick">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DoVerb(System.Int32)">
          <source>One of the actions enumerated for the object in IOleObject::EnumVerbs.</source>
          <target state="translated">針對 IOleObject::EnumVerbs 中的物件所列舉的其中一個動作。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DoVerb(System.Int32)">
          <source>Requests that an object perform an action in response to an end-user's action.</source>
          <target state="translated">要求物件執行動作，以回應使用者的動作。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.DoVerb(System.Int32)">
          <source>This method passes the specified verb to the <bpt id="p1">[</bpt>IOleObject::DoVerb<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166076)</ept> method of the hosted control.</source>
          <target state="translated">這個方法會傳遞至指定的指令動詞<bpt id="p1">[</bpt>IOleObject::DoVerb<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166076)</ept>裝載控制項的方法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DragDrop">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragDrop" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragDrop" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragDrop">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragDrop&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragDrop&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragDrop">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragDrop">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DragEnter">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragEnter" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragEnter" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragEnter">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragEnter&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragEnter&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragEnter">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragEnter">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DragLeave">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragLeave" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragLeave" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragLeave">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragLeave&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragLeave&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragLeave">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragLeave">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DragOver">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragOver" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragOver" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragOver">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragOver&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragOver&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragOver">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragOver">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Bitmap" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Bitmap" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>This method is not supported by this control.</source>
          <target state="translated">這個控制項不支援這個方法。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.EditMode">
          <source>Returns a value that indicates whether the hosted control is in edit mode.</source>
          <target state="translated">傳回值，這個值表示裝載的控制項是否處於編輯模式。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.EditMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the hosted control is in edit mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果裝載的控制項處於編輯模式則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Enabled">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Enabled">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.EnabledChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.EnabledChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.EnabledChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.EnabledChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EnabledChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EnabledChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.EnabledChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.EnabledChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>Ends the initialization of an ActiveX control.</source>
          <target state="translated">結束 ActiveX 控制項的初始化。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>Design environments typically use this method to finish the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">設計環境通常會使用這個方法來完成初始化用於表單或為另一個元件所使用的元件。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph>方法結束初始化。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BeginInit%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph>方法可防止控制項完全初始化之前使用。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化發生於執行階段。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Font">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Font">
          <source>The font of the text displayed by the control.</source>
          <target state="translated">控制項所顯示之文字的字型。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.FontChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.FontChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.FontChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.FontChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.FontChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.FontChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.FontChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.FontChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.ForeColor">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ForeColor">
          <source>The foreground color of the control.</source>
          <target state="translated">控制項的前景色彩。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.ForeColorChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ForeColorChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ForeColorChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ForeColorChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ForeColorChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ForeColorChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ForeColorChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ForeColorChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetColorFromOleColor(System.UInt32)">
          <source>The OLE color value to translate.</source>
          <target state="translated">要轉譯的 OLE 色彩值。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetColorFromOleColor(System.UInt32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that corresponds to the specified OLE color value.</source>
          <target state="translated">傳回對應至指定之 OLE 色彩值的 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 結構。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetColorFromOleColor(System.UInt32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that represents the translated OLE color value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 結構，表示已轉譯的 OLE 色彩值。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFont(System.Object)">
          <source>The IFont to create a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> from.</source>
          <target state="translated">用來建立 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> 的來源 IFont。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFont(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> created from the specified OLE <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> object.</source>
          <target state="translated">傳回從指定的 OLE <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> 物件所建立的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFont(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> created from the specified <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept>, <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> if the font could not be created, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if <ph id="ph4">&lt;paramref name="font" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">從指定的 <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> 所建立的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>，如果無法建立字型則為 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph>如果 <ph id="ph4">&lt;paramref name="font" /&gt;</ph> 為 <ph id="ph5">&lt;see langword="null" /&gt;</ph> 則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFontDisp(System.Object)">
          <source>The IFontDisp to create a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> from.</source>
          <target state="translated">用來建立 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> 的來源 IFontDisp。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFontDisp(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> created from the specified OLE <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> object.</source>
          <target state="translated">傳回從指定的 OLE <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> 物件所建立的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFontDisp(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> created from the specified <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept>, <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> if the font could not be created, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if <ph id="ph4">&lt;paramref name="font" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">從指定的 <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> 所建立的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>，如果無法建立字型則為 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph>如果 <ph id="ph4">&lt;paramref name="font" /&gt;</ph> 為 <ph id="ph5">&lt;see langword="null" /&gt;</ph> 則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
          <source>The font to create an IFontDisp object from.</source>
          <target state="translated">建立 IFontDisp 物件的來源字型。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
          <source>Returns an OLE <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> object created from the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> object.</source>
          <target state="translated">傳回從指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> 物件所建立的 OLE <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
          <source>The <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> object created from the specified font or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="font" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">從指定的字型所建立的 <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> 物件，如果 <ph id="ph2">&lt;paramref name="font" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Font.Unit" /&gt;</ph> property value is not <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.Point" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Font.Unit" /&gt;</ph> 屬性值不是 <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
          <source>The font to create an IFont object from.</source>
          <target state="translated">建立 IFont 物件的來源字型。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
          <source>Returns an OLE <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> object created from the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> object.</source>
          <target state="translated">傳回從指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> 物件所建立的 OLE <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
          <source>The <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> object created from the specified font, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="font" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> or the <bpt id="p2">[</bpt>IFont<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> could not be created.</source>
          <target state="translated">從指定的字型所建立的 <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> 物件，如果 <ph id="ph2">&lt;paramref name="font" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 或無法建立 <bpt id="p2">[</bpt>IFont<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept>，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Font.Unit" /&gt;</ph> property value is not <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.Point" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Font.Unit" /&gt;</ph> 屬性值不是 <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureDispFromPicture(System.Drawing.Image)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to convert.</source>
          <target state="translated">要進行轉換的 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureDispFromPicture(System.Drawing.Image)">
          <source>Returns an OLE <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> object corresponding to the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated">傳回與指定的 <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 相對應之 OLE <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> 物件 。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureDispFromPicture(System.Drawing.Image)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> object.</source>
          <target state="translated">表示 OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> 物件的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromCursor(System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>, which is an image that represents the Windows mouse pointer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>，這是代表 Windows 滑鼠指標的影像。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromCursor(System.Windows.Forms.Cursor)">
          <source>Returns an OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> object corresponding to the specified <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">傳回與指定的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 相對應之 OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> 物件 。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromCursor(System.Windows.Forms.Cursor)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated">表示 OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> 物件的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromPicture(System.Drawing.Image)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to convert.</source>
          <target state="translated">要進行轉換的 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromPicture(System.Drawing.Image)">
          <source>Returns an OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> object corresponding to the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated">傳回與指定的 <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 相對應之 OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> 物件 。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromPicture(System.Drawing.Image)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated">表示 OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> 物件的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> structure to translate.</source>
          <target state="translated">要轉換的 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 結構。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>Returns an OLE Automation date that corresponds to the specified <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> structure.</source>
          <target state="translated">傳回 OLE Automation 日期，對應至指定的 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 結構。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>A double-precision floating-point number that contains an OLE Automation date equivalent to specified <ph id="ph1">&lt;paramref name="time" /&gt;</ph> value.</source>
          <target state="translated">雙精確度浮點數，含有相當於指定之 <ph id="ph1">&lt;paramref name="time" /&gt;</ph> 值的 OLE Automation 日期。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>An OLE Automation date is implemented as a floating-point number whose value is the number of days from midnight, 30 December 1899.</source>
          <target state="translated">OLE Automation 日期會實作為其值是從午夜 30 1899 年的日數的浮點數。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</source>
          <target state="translated">例如，午夜 31 1899 年所表示 1.0;上午 6 點 2.25; 表示 1 年 1 月 1900午夜-1.0; 表示 29 1899 年而且早上 6 點-1.25 表示 29 1899 年。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>The base OLE Automation Date is midnight, 30 December 1899.</source>
          <target state="translated">基底 OLE Automation 日期為午夜，30 1899 年。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>The maximum OLE Automation Date is the same as <ph id="ph1">&lt;xref:System.DateTime.MaxValue&gt;</ph>, the last moment of 31 December 9999.</source>
          <target state="translated">最大 OLE Automation 日期等同於<ph id="ph1">&lt;xref:System.DateTime.MaxValue&gt;</ph>、 31 年 12 月的最後一刻 9999。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>For more information about OLE Automation, see the <bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>.</source>
          <target state="translated">如需 OLE Automation 的詳細資訊，請參閱<bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>The value of this instance cannot be represented as an OLE Automation Date.</source>
          <target state="translated">這個執行個體的值無法表示為 OLE Automation 日期。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>Retrieves a reference to the underlying ActiveX control.</source>
          <target state="translated">擷取基礎的 ActiveX 控制項的參考。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>An object that represents the ActiveX control.</source>
          <target state="translated">表示出 ActiveX 控制項的物件。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">下列程式碼範例會覆寫建構函式，而<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>衍生包裝 Microsoft 格式編輯 ActiveX 控制項的類別。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">此程式碼需要您已建立產生的原始程式碼 MSMask32.ocx 檔案上執行 AxImp.exe<ph id="ph1">`/source`</ph>參數來產生包裝函式類別，可供編輯。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">這會顯示程式碼只能在 C# 語法因為這是唯一的語言輸出 AxImp.exe。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOleColorFromColor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure to translate.</source>
          <target state="translated">要轉換的 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 結構。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOleColorFromColor(System.Drawing.Color)">
          <source>Returns an OLE color value that corresponds to the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure.</source>
          <target state="translated">傳回 OLE 色彩值，對應至指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 結構。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOleColorFromColor(System.Drawing.Color)">
          <source>The OLE color value that represents the translated <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure.</source>
          <target state="translated">OLE 色彩值，代表已轉譯的 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 結構。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> to convert.</source>
          <target state="translated">要進行轉換的 <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> corresponding to the specified OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>，對應至指定的 OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> representing the <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>，表示 <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>You can use this method to convert <ph id="ph1">`IPictureDisp`</ph> objects in addition to <ph id="ph2">`IPicture`</ph> objects.</source>
          <target state="translated">您可以使用這個方法轉換<ph id="ph1">`IPictureDisp`</ph>物件除了<ph id="ph2">`IPicture`</ph>物件。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>This works because the <ph id="ph1">`IPictureDisp`</ph> OLE interface is a subset of the <ph id="ph2">`IPicture`</ph> interface.</source>
          <target state="translated">因為<ph id="ph1">`IPictureDisp`</ph>OLE 介面是子集<ph id="ph2">`IPicture`</ph>介面。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>Converting <ph id="ph1">`IPictureDisp`</ph> objects with this method is necessary because the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp%2A&gt;</ph> does not work correctly at this time.</source>
          <target state="translated">轉換<ph id="ph1">`IPictureDisp`</ph>是必要的物件，這個方法與因為<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp%2A&gt;</ph>此時無法正確運作。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> to convert.</source>
          <target state="translated">要進行轉換的 <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> corresponding to the specified OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>，對應至指定的 OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> representing the <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>，表示 <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>This method does not work correctly.</source>
          <target state="translated">這個方法無法正常運作。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.GetPictureFromIPicture%2A&gt;</ph> method to convert an <ph id="ph2">`IPictureDisp`</ph> object into an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>, however, because the <ph id="ph4">`IPictureDisp`</ph> OLE interface is a subset of the <ph id="ph5">`IPicture`</ph> interface.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.GetPictureFromIPicture%2A&gt;</ph>方法，將轉換<ph id="ph2">`IPictureDisp`</ph>物件插入<ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>，不過因為<ph id="ph4">`IPictureDisp`</ph>OLE 介面是子集<ph id="ph5">`IPicture`</ph>介面。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The original bounds of the ActiveX control.</source>
          <target state="translated">ActiveX 控制項的原始界限。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A scaling factor.</source>
          <target state="translated">縮放比例。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Called by the system to retrieve the current bounds of the ActiveX control.</source>
          <target state="translated">為系統所呼叫，以擷取 ActiveX 控制項的目前界限。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The unmodified <ph id="ph1">&lt;paramref name="bounds" /&gt;</ph> value.</source>
          <target state="translated">未經修改的 <ph id="ph1">&lt;paramref name="bounds" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>ActiveX controls scale themselves, so this method does not perform any special calculations, ignores the <ph id="ph1">`factor`</ph> and <ph id="ph2">`specified`</ph> values, and returns the <ph id="ph3">`bounds`</ph> value unchanged.</source>
          <target state="translated">ActiveX 控制項縮放本身，這個方法不會執行任何特殊的計算，因此會忽略<ph id="ph1">`factor`</ph>和<ph id="ph2">`specified`</ph>值，然後傳回<ph id="ph3">`bounds`</ph>值保持不變。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>The OLE Automate date to translate.</source>
          <target state="translated">要轉譯的 OLE Automate 日期。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> structure that corresponds to the specified OLE Automation date.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 結構，對應至指定的 OLE Automation 日期。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that represents the same date and time as <ph id="ph2">&lt;paramref name="date" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>，表示和 <ph id="ph2">&lt;paramref name="date" /&gt;</ph> 相同的日期和時間。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>The <ph id="ph1">`date`</ph> parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.</source>
          <target state="translated"><ph id="ph1">`date`</ph>參數是代表日期做為基底日期前後，午夜，30 1899 年的日數的雙精確度浮點數。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>The sign and integral part of <ph id="ph1">`date`</ph> encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of <ph id="ph2">`date`</ph> encodes the time of day as a fraction of a day displacement from midnight.</source>
          <target state="translated">符號和整數類資料類型屬於<ph id="ph1">`date`</ph>編碼日期做為正或負一天加上的位移，從 1899 年 30，以及小數部分的絕對值<ph id="ph2">`date`</ph>編碼為一天加上位移，從午夜一部分的一天時間。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source><ph id="ph1">`date`</ph> must be a value between negative 657435.0 through positive 2958466.0.</source>
          <target state="translated"><ph id="ph1">`date`</ph> 必須是正數 2958466.0 透過負數 657435.0 之間的值。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.</source>
          <target state="translated">請注意，由於日期編碼的方式，有兩種代表 30 1899 年當天任何時間。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</source>
          <target state="translated">例如，-0.5，0.5 表示中午 30 1899 年，因為日期加上位移的加號或減號基底日期則從零天仍然是基底的日期，而且從午夜的半天位移中午。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>For more information about OLE Automation, see the <bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>.</source>
          <target state="translated">如需 OLE Automation 的詳細資訊，請參閱<bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>The date is not a valid OLE Automation Date value.</source>
          <target state="translated">日期不是有效的 OLE Automation 日期值。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.GiveFeedback">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.GiveFeedback" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.GiveFeedback" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.GiveFeedback">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.GiveFeedback&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.GiveFeedback&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.GiveFeedback">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.GiveFeedback">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>Gets a value indicating whether the ActiveX control has an <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box.</source>
          <target state="translated">取得值，指出 ActiveX 控制項是否有 [關於] 對話方塊。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the ActiveX control has an <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果 ActiveX 控制項有<bpt id="p1">**</bpt>有關<ept id="p1">**</ept>對話方塊中，否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>The <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box typically displays version and copyright information about the ActiveX control.</source>
          <target state="translated"><bpt id="p1">**</bpt>有關<ept id="p1">**</ept>對話方塊通常會顯示關於 ActiveX 控制項的版本和著作權資訊。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">下列程式碼範例會覆寫建構函式，而<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>衍生包裝 Microsoft 格式編輯 ActiveX 控制項的類別。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">此程式碼需要您已建立產生的原始程式碼 MSMask32.ocx 檔案上執行 AxImp.exe<ph id="ph1">`/source`</ph>參數來產生包裝函式類別，可供編輯。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">這會顯示程式碼只能在 C# 語法因為這是唯一的語言輸出 AxImp.exe。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.HasPropertyPages">
          <source>Determines if the ActiveX control has a property page.</source>
          <target state="translated">決定 ActiveX 控制項是否有屬性頁。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.HasPropertyPages">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the ActiveX control has a property page; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 ActiveX 控制項有屬性頁，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.HasPropertyPages">
          <source>Property pages allow an ActiveX control user to view and change ActiveX control properties.</source>
          <target state="translated">屬性頁面可讓 ActiveX 控制項使用者檢視和變更 ActiveX 控制項的屬性。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.HasPropertyPages">
          <source>These properties are accessed by invoking a control properties dialog box, which contains one or more property pages that provide a customized, graphical interface for viewing and editing the control properties.</source>
          <target state="translated">藉由叫用控制項屬性對話方塊，其中包含提供自訂的圖形化介面來檢視及編輯控制項屬性的一或多個屬性頁中存取這些屬性。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.HelpRequested">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.HelpRequested" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.HelpRequested" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.HelpRequested">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HelpRequested&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HelpRequested&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.HelpRequested">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.HelpRequested">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.ImeMode">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ImeMode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.ImeModeChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ImeModeChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ImeModeChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ImeModeChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ImeModeChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ImeModeChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ImeModeChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ImeModeChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.InvokeEditMode">
          <source>Attempts to activate the editing mode of the hosted control.</source>
          <target state="translated">嘗試啟動裝載之控制項的編輯模式。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>The character to test.</source>
          <target state="translated">要測試的字元。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>Determines if a character is an input character that the ActiveX control recognizes.</source>
          <target state="translated">判斷字元是否為 ActiveX 控制項能夠辨認的輸入字元。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character should be sent directly to the ActiveX control and not preprocessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果字元應直接傳送至 ActiveX 控制項，且不應前置處理，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.IsInputChar%2A&gt;</ph> method is called during window message preprocessing to determine whether the given input character should be preprocessed or sent directly to the ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.IsInputChar%2A&gt;</ph>視窗訊息來判斷指定的輸入的字元是否應該前置處理過或直接傳送至 ActiveX 控制項前置處理期間會呼叫方法。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>The preprocessing of a character includes checking whether the character is a mnemonic of another control.</source>
          <target state="translated">前置處理的字元包括檢查的字元是否另一個控制項的助憶鍵。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.IsInputChar%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>, so the specified character is sent directly to the ActiveX control.</source>
          <target state="translated">在中實作<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.IsInputChar%2A&gt;</ph>方法一律會傳回<ph id="ph3">`true`</ph>，因此指定的字元直接傳送至 ActiveX 控制項。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">繼承類別呼叫這個方法的所有視窗。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.KeyDown">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyDown" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyDown" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyDown">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyDown&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyDown&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyDown">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyDown">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.KeyPress">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyPress" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyPress" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyPress">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyPress&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyPress&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyPress">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyPress">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.KeyUp">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyUp" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyUp" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyUp">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyUp&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyUp&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyUp">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyUp">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.Layout">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Layout" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Layout" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Layout">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Layout&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Layout&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Layout">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Layout">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.MakeDirty">
          <source>Announces to the component change service that the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> has changed.</source>
          <target state="translated">向元件變更服務表示 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 已變更。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseClick">
          <source>This event is not relevant for this class.</source>
          <target state="translated">這個事件與這個類別無關。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseDoubleClick">
          <source>This event is not relevant for this class.</source>
          <target state="translated">這個事件與這個類別無關。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseDown">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseDown">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseDown&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseDown&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseDown">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseDown">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseEnter">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseEnter" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseEnter" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseEnter">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseEnter&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseEnter&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseEnter">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseEnter">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseHover">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseHover" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseHover" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseHover">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseHover&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseHover&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseHover">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseHover">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseLeave">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseLeave" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseLeave" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseLeave">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseLeave&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseLeave&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseLeave">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseLeave">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseMove">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseMove">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseMove&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseMove&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseMove">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseMove">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseUp">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseUp">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseUp&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseUp&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseUp">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseUp">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseWheel">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseWheel" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseWheel" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseWheel">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseWheel&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseWheel&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseWheel">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseWheel">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>Gets or sets the persisted state of the ActiveX control.</source>
          <target state="translated">取得或設定 ActiveX 控制項的持續狀態。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost.State" /&gt;</ph> that represents the persisted state of the ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost.State" /&gt;</ph>，表示 ActiveX 控制項的持續狀態。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.OcxState%2A&gt;</ph> property is used after the control is created but before it is shown.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.OcxState%2A&gt;</ph>屬性用在建立控制項之後，但之前就會顯示出來。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>The persisted state of the underlying ActiveX control is returned in the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.State&gt;</ph>.</source>
          <target state="translated">中會傳回基礎 ActiveX 控制項的永續性的狀態<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.State&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>The ActiveX control is already loaded.</source>
          <target state="translated">ActiveX 控制項已經載入。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnInPlaceActive">
          <source>Called when the control transitions to the in-place active state.</source>
          <target state="translated">當控制項轉換至就地啟動狀態時呼叫。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.OnInPlaceActive">
          <source>This base-class implementation is empty.</source>
          <target state="translated">此基底類別實作是空的。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnLostFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnLostFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.Paint">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Paint" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Paint" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Paint">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Paint&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Paint&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Paint">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Paint">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the message to process.</source>
          <target state="translated">由參考傳遞的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，表示要處理的訊息。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</source>
          <target state="translated">可能的值包括 WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR 和 WM_SYSCHAR。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Preprocesses keyboard or input messages within the message loop before they are dispatched.</source>
          <target state="translated">先於訊息迴圈中前置處理鍵盤或輸入訊息後，再分派這些訊息。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控制項已處理訊息，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值，表示要處理的按鍵。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog key.</source>
          <target state="translated">處理對話方塊按鍵。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果按鍵已由控制項處理，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessMnemonic(System.Char)">
          <source>The character to process.</source>
          <target state="translated">要處理的字元。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">處理助憶鍵字元。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控制項已將字元當成助憶鍵處理，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PropsValid">
          <source>Returns a value that indicates whether the hosted control is in a state in which its properties can be accessed.</source>
          <target state="translated">傳回值，這個值表示載裝的控制項是否處於可存取其屬性的狀態。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PropsValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the properties of the hosted control can be accessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以存取裝載之控制項的屬性則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.QueryAccessibilityHelp&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.QueryAccessibilityHelp&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.QueryContinueDrag" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.QueryContinueDrag" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryContinueDrag">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.QueryContinueDrag&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.QueryContinueDrag&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryContinueDrag">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryContinueDrag">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event using the specified 32-bit signed integers.</source>
          <target state="translated">使用指定的 32 位元帶正負號的整數 (Signed Integer)，引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event using the specified single-precision floating-point numbers.</source>
          <target state="translated">使用指定的單精度浮點數來引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event using the specified objects.</source>
          <target state="translated">使用指定的物件來引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event using the specified 32-bit signed integers.</source>
          <target state="translated">使用指定的 32 位元帶正負號的整數 (Signed Integer)，引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event using the specified single-precision floating-point numbers.</source>
          <target state="translated">使用指定的單精度浮點數來引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event using the specified objects.</source>
          <target state="translated">使用指定的物件來引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event using the specified 32-bit signed integers.</source>
          <target state="translated">使用指定的 32 位元帶正負號的整數 (Signed Integer)，引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event using the specified single-precision floating-point numbers.</source>
          <target state="translated">使用指定的單精度浮點數來引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 值，表示所按下的滑鼠按鍵。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 X 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">按一下滑鼠時的 Y 座標 (以像素為單位)。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event using the specified objects.</source>
          <target state="translated">使用指定的物件來引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.RightToLeft">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.RightToLeft">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.RightToLeftChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.RightToLeftChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.RightToLeftChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.RightToLeftChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.RightToLeftChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.RightToLeftChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.RightToLeftChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.RightToLeftChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost.AboutBoxDelegate" /&gt;</ph> to call.</source>
          <target state="translated">要呼叫的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost.AboutBoxDelegate" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>Calls the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /&gt;</ph> method to display the ActiveX control's About dialog box.</source>
          <target state="translated">呼叫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /&gt;</ph> 方法以顯示出 ActiveX 控制項的 [關於] 對話方塊。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> method also allows derived classes to handle the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.ShowAboutBox%2A&gt;</ph> method without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph>方法也允許衍生的類別處理<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.ShowAboutBox%2A&gt;</ph>方法，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>This is the preferred technique for handling the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ShowAboutBox%2A&gt;</ph> method in a derived class.</source>
          <target state="translated">這是處理的慣用的技巧<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ShowAboutBox%2A&gt;</ph>方法在衍生類別中的。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">下列程式碼範例會覆寫建構函式，而<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>衍生包裝 Microsoft 格式編輯 ActiveX 控制項的類別。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">此程式碼需要您已建立產生的原始程式碼 MSMask32.ocx 檔案上執行 AxImp.exe<ph id="ph1">`/source`</ph>參數來產生包裝函式類別，可供編輯。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">這會顯示程式碼只能在 C# 語法因為這是唯一的語言輸出 AxImp.exe。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /&gt;</ph> method so that registered delegates receive the <ph id="ph3">&lt;see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /&gt;</ph> method.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /&gt;</ph>在衍生類別中，請務必呼叫基底類別的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /&gt;</ph>方法，使已註冊的委派能接收<ph id="ph3">&lt;see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">控制項的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 屬性值。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">控制項的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 屬性值。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">控制項的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 屬性值。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">控制項的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 屬性值。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值的位元組合。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Performs the work of setting the specified bounds of this control.</source>
          <target state="translated">執行設定這個控制項的指定範圍的工作。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetVisibleCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the control visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示將控制項設為可見，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetVisibleCore(System.Boolean)">
          <source>Sets the control to the specified visible state.</source>
          <target state="translated">將控制項設定為指定的可見狀態。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ShowAboutBox">
          <source>Displays the ActiveX control's <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box.</source>
          <target state="translated">顯示 ActiveX 控制項的 [關於] 對話方塊。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowAboutBox">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasAboutBox%2A&gt;</ph> is <ph id="ph2">`false`</ph>, no <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box is displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasAboutBox%2A&gt;</ph>是<ph id="ph2">`false`</ph>、 no<bpt id="p1">**</bpt>有關<ept id="p1">**</ept>對話方塊隨即出現。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Displays the property pages associated with the ActiveX control.</source>
          <target state="translated">顯示 ActiveX 控制項的相關屬性頁。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages">
          <source>Displays the property pages associated with the ActiveX control.</source>
          <target state="translated">顯示 ActiveX 控制項的相關屬性頁。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasPropertyPages%2A&gt;</ph> is <ph id="ph2">`false`</ph>, no property pages are displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasPropertyPages%2A&gt;</ph>是<ph id="ph2">`false`</ph>，會顯示任何屬性頁。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages">
          <source>Property pages allow an ActiveX control user to view and change ActiveX control properties.</source>
          <target state="translated">屬性頁面可讓 ActiveX 控制項使用者檢視和變更 ActiveX 控制項的屬性。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages">
          <source>These properties are accessed by invoking a control properties dialog box, which contains one or more property pages that provide a customized, graphical interface for viewing and editing the control properties.</source>
          <target state="translated">藉由叫用控制項屬性對話方塊，其中包含提供自訂的圖形化介面來檢視及編輯控制項屬性的一或多個屬性頁中存取這些屬性。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>The parent <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> of the ActiveX control.</source>
          <target state="translated">ActiveX 控制項的父 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>Displays the property pages associated with the ActiveX control assigned to the specified parent control.</source>
          <target state="translated">顯示出指派給指定父控制項的 ActiveX 控制項的相關屬性頁。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasPropertyPages%2A&gt;</ph> is <ph id="ph2">`false`</ph>, no property pages are displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasPropertyPages%2A&gt;</ph>是<ph id="ph2">`false`</ph>，會顯示任何屬性頁。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>Property pages allow an ActiveX control user to view and change ActiveX control properties.</source>
          <target state="translated">屬性頁面可讓 ActiveX 控制項使用者檢視和變更 ActiveX 控制項的屬性。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>These properties are accessed by invoking a control properties dialog box, which contains one or more property pages that provide a customized, graphical interface for viewing and editing the control properties.</source>
          <target state="translated">藉由叫用控制項屬性對話方塊，其中包含提供自訂的圖形化介面來檢視及編輯控制項屬性的一或多個屬性頁中存取這些屬性。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Site">
          <source>Gets or sets the site of the control.</source>
          <target state="translated">取得或設定控制項的站台。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the Control, if any.</source>
          <target state="translated">與控制項相關聯的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> (如果有的話)。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.StyleChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.StyleChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.StyleChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.StyleChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.StyleChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.StyleChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.StyleChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.StyleChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
          <source>Returns a collection of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> for the current object.</source>
          <target state="translated">傳回目前物件之 <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 型別的集合。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the current object.</source>
          <target state="translated">具有目前物件之屬性 (Attribute) 的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
          <source>Returns the class name of the current object.</source>
          <target state="translated">傳回目前物件的類別名稱。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> in all cases.</source>
          <target state="translated">在所有情況下都會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
          <source>Use the type name instead of the value that the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetClassName%2A&gt;</ph> method returns.</source>
          <target state="translated">使用的型別名稱，而不是值的<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetClassName%2A&gt;</ph>方法會傳回。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
          <source>Returns the name of the current object.</source>
          <target state="translated">傳回目前物件的名稱。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> in all cases.</source>
          <target state="translated">在所有情況下都會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
          <source>Use the default name instead of the value that the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetComponentName%2A&gt;</ph> method returns.</source>
          <target state="translated">使用預設名稱，而不是值的<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetComponentName%2A&gt;</ph>方法會傳回。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
          <source>Returns a type converter for the current object.</source>
          <target state="translated">傳回目前物件的型別轉換子 (Type Converter)。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> in all cases.</source>
          <target state="translated">在所有情況下都會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
          <source>Use the default type converter instead of the value that the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetConverter%2A&gt;</ph> method returns.</source>
          <target state="translated">使用預設的型別轉換子，而不是值的<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetConverter%2A&gt;</ph>方法會傳回。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
          <source>Returns the default event for the current object.</source>
          <target state="translated">傳回目前物件的預設事件。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that represents the default event for the current object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object does not have events.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>，表示目前物件的預設事件。如果物件沒有事件，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
          <source>Returns the default property for the current object.</source>
          <target state="translated">傳回目前物件的預設屬性。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that represents the default property for the current object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object does not have properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>，表示目前物件的預設屬性；如果物件沒有屬性，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the editor for the current object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示目前物件的編輯器。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
          <source>Returns an editor of the specified type for the current object.</source>
          <target state="translated">傳回目前物件之指定型別的編輯器。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
          <source>An object of the specified type that is the editor for the current object, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the editor cannot be found.</source>
          <target state="translated">指定型別的物件，即目前物件的編輯器；如果找不到編輯器，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Returns events for the current object.</source>
          <target state="translated">傳回目前物件的事件。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <source>Returns the events for the current object.</source>
          <target state="translated">傳回目前物件的事件。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> that represents the events for the current object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>，表示目前物件的事件。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that is used as a filter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 型別的陣列，可當做篩選條件使用。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
          <source>Returns the events for the current object using the specified attribute array as a filter.</source>
          <target state="translated">使用指定的屬性陣列做為篩選條件，傳回目前物件的事件。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> that represents the events for the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> that match the given set of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph>，表示 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 的事件符合指定的屬性集。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Returns properties for the current object.</source>
          <target state="translated">傳回目前物件的屬性。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <source>Returns the properties for the current object.</source>
          <target state="translated">傳回目前物件的屬性。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that represents the events for the current object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，表示目前物件的事件。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that is used as a filter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 型別的陣列，可當做篩選條件使用。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
          <source>Returns the properties for the current object using the specified attribute array as a filter.</source>
          <target state="translated">使用指定的屬性 (Attribute) 陣列做為篩選條件，傳回目前物件的屬性 (Property)。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that represents the events for the current <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> that match the given set of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>，表示目前 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 的事件符合指定的屬性集。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <source>Not used.</source>
          <target state="translated">未使用。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <source>Returns the object that owns the specified value.</source>
          <target state="translated">傳回具有指定值的物件。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <source>The current object.</source>
          <target state="translated">目前的物件。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Text">
          <source>This property is not relevant for this class.</source>
          <target state="translated">這個屬性與這個類別無關。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Text">
          <source>The text associated with this control.</source>
          <target state="translated">與這個控制項關聯的文字。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.TextChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.TextChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.TextChanged" /&gt;</ph> 事件不為 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> 類別支援。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.TextChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.TextChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">如果您嘗試新增或移除的處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.TextChanged&gt;</ph>事件，<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.TextChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">事件衍生自<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別不會受到<ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.TextChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">ActiveX 所公開的事件控制<ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>建立包裝函式都應該使用的事件。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">要處理的 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">處理 Windows 訊息。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
