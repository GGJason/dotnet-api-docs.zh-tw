<Type Name="IDataObject" FullName="System.Windows.Forms.IDataObject">
  <TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6a7e8-101">提供不受格式影響的資料傳送機制。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-101">Provides a format-independent mechanism for transferring data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-102">`IDataObject`介面由<xref:System.Windows.Forms.Clipboard>類別和拖放作業中。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-102">The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="6a7e8-103">類別中實作時<xref:System.Windows.Forms.IDataObject>方法可讓使用者將資料儲存在多個類別的執行個體中的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-103">When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class.</span></span> <span data-ttu-id="6a7e8-104">將資料儲存在多個格式增加目標應用程式，您可能不知道其格式需求，可以擷取儲存的資料的機會。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-104">Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</span></span> <span data-ttu-id="6a7e8-105">若要將資料儲存在執行個體<xref:System.Windows.Forms.IDataObject>，呼叫<xref:System.Windows.Forms.IDataObject.SetData%2A>方法和指定的資料格式`format`參數。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-105">To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter.</span></span> <span data-ttu-id="6a7e8-106">設定`autoConvert`參數`false`如果您不想要擷取的時間轉換成另一種格式儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-106">Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved.</span></span> <span data-ttu-id="6a7e8-107">叫用<xref:System.Windows.Forms.IDataObject.SetData%2A>某個執行個體上多次<xref:System.Windows.Forms.IDataObject>將資料儲存在一個以上的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-107">Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.</span></span>  
  
 <span data-ttu-id="6a7e8-108">擷取儲存的資料，從<xref:System.Windows.Forms.IDataObject>藉由呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>方法並指定資料格式化`format`參數。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-108">You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter.</span></span> <span data-ttu-id="6a7e8-109">設定`autoConvert`參數`false`來擷取指定的格式儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-109">Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format.</span></span> <span data-ttu-id="6a7e8-110">若要將儲存的資料轉換成指定的格式，將`autoConvert`至`true`，或請勿使用`autoConvert`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-110">To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.</span></span>  
  
 <span data-ttu-id="6a7e8-111">若要判斷中儲存之資料的格式<xref:System.Windows.Forms.IDataObject>，使用下列<xref:System.Windows.Forms.IDataObject>方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-111">To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.</span></span>  
  
-   <span data-ttu-id="6a7e8-112">呼叫<xref:System.Windows.Forms.IDataObject.GetFormats%2A>方法來擷取的陣列中的所有格式的資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-112">Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available.</span></span> <span data-ttu-id="6a7e8-113">設定`autoConvert`參數`false`取得僅將資料的儲存格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-113">Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored.</span></span> <span data-ttu-id="6a7e8-114">若要取得資料已使用的所有格式，請設定`autoConvert`至`true`，或不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-114">To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.</span></span>  
  
-   <span data-ttu-id="6a7e8-115">呼叫<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>方法，以判斷是否可用於特定格式儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-115">Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format.</span></span> <span data-ttu-id="6a7e8-116">如果您不想要轉換成指定的格式儲存的資料，設定`autoConvert`參數`false`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-116">If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.</span></span>  
  
 <span data-ttu-id="6a7e8-117">請參閱<xref:System.Windows.Forms.DataObject>實作這個介面的類別。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-117">See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface.</span></span> <span data-ttu-id="6a7e8-118">請參閱<xref:System.Windows.Forms.DataFormats>預先定義的類別<xref:System.Windows.Forms.Clipboard>資料格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-118">See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a7e8-119">擷取與指定資料格式產生關聯的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-119">Retrieves the data associated with the specified data format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-120">要擷取的資料格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-120">The format of the data to retrieve.</span></span> <span data-ttu-id="6a7e8-121">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-121">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="6a7e8-122">擷取與指定資料格式產生關聯的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-122">Retrieves the data associated with the specified data format.</span></span></summary>
        <returns><span data-ttu-id="6a7e8-123">與指定之格式或 <see langword="null" /> 產生關聯的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-123">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-124">如果這個方法在指定的格式中找不到資料，它會嘗試將資料轉換成的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-124">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="6a7e8-125">如果資料無法轉換成指定的格式，則這個方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-125">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="6a7e8-126">若要判斷資料是否相關，或可以轉換成格式，請呼叫<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>之前先呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-126">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a7e8-127">呼叫<xref:System.Windows.Forms.IDataObject.GetFormats%2A>取得一份有效的格式，這個執行個體中儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-127">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7e8-128">資料可以轉換成其他格式，如果儲存時指定，允許轉換，而且要求的格式與預存格式相容。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-128">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a7e8-129">例如，資料儲存為 Unicode 可以轉換成文字。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-129">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a7e8-130">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-130">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-131">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject,`來示範如何使用`GetData`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-131">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="6a7e8-132">方法用來擷取儲存在資料`myDataObject`，這與相關聯`Text`格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-132">The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format.</span></span> <span data-ttu-id="6a7e8-133">這個範例假設您已經建立<xref:System.Windows.Forms.Form>名為`Form1`和<xref:System.Windows.Forms.TextBox>名為`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-133">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]
 [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]
 [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-134"><see cref="T:System.Type" />，表示要擷取的資料的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-134">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span></span> <span data-ttu-id="6a7e8-135">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-135">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="6a7e8-136">擷取與指定的類別型別格式相關的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-136">Retrieves the data associated with the specified class type format.</span></span></summary>
        <returns><span data-ttu-id="6a7e8-137">與指定之格式或 <see langword="null" /> 產生關聯的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-137">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-138">如果這個方法在指定的格式中找不到資料，它會嘗試將資料轉換成的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-138">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="6a7e8-139">如果資料無法轉換成指定的格式，則這個方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-139">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="6a7e8-140">若要判斷資料是否相關，或可以轉換成格式，請呼叫<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>之前先呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-140">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a7e8-141">呼叫<xref:System.Windows.Forms.IDataObject.GetFormats%2A>取得一份有效的格式，這個執行個體中儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-141">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7e8-142">資料可以轉換成其他格式，如果儲存時指定，允許轉換，而且要求的格式與預存格式相容。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-142">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a7e8-143">例如，資料儲存為 Unicode 可以轉換成文字。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-143">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a7e8-144">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-144">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-145">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`GetData`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-145">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="6a7e8-146">方法用來擷取儲存在資料`myObject`，特定的類型，與相關聯`myType`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-146">The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`.</span></span> <span data-ttu-id="6a7e8-147">所擷取的資料類型會顯示在訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-147">The type of the retrieved data is displayed in a message box.</span></span> <span data-ttu-id="6a7e8-148">這個範例假設您已經建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-148">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]
 [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]
 [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-149">要擷取的資料格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-149">The format of the data to retrieve.</span></span> <span data-ttu-id="6a7e8-150">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-150">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert">
          <span data-ttu-id="6a7e8-151">若要將資料轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-151"><see langword="true" /> to convert the data to the specified format; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6a7e8-152">擷取與指定的資料格式相關的資料，使用布林值來決定是否要將資料轉換成格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-152">Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="6a7e8-153">與指定之格式或 <see langword="null" /> 產生關聯的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-153">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-154">如果`autoConvert`參數是`true`而且這個方法在指定的格式中找不到資料，它會嘗試將資料轉換成的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-154">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="6a7e8-155">如果資料無法轉換成指定的格式，或如果資料已儲存與`autoConvert`參數設定為`false`，這個方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-155">If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="6a7e8-156">如果`autoConvert`參數是`false`，這個方法會傳回資料中指定的格式，或`null`如果找不到沒有此格式的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-156">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="6a7e8-157">若要判斷資料是否相關，或可以轉換成格式，請呼叫<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>之前先呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-157">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a7e8-158">呼叫<xref:System.Windows.Forms.IDataObject.GetFormats%2A>取得一份有效的格式，這個執行個體中儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-158">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7e8-159">資料可以轉換成其他格式，如果儲存時指定，允許轉換，而且要求的格式與預存格式相容。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-159">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a7e8-160">例如，資料儲存為 Unicode 可以轉換成文字。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-160">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a7e8-161">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-161">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-162">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`GetData`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-162">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="6a7e8-163">此範例會擷取儲存在資料`DataObject`，並使用`autoConvert`參數來指定是否要轉換的資料格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-163">The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format.</span></span> <span data-ttu-id="6a7e8-164">首先，`myDataObject`建立文字資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-164">First, `myDataObject` is created with text data.</span></span> <span data-ttu-id="6a7e8-165">然後此範例會嘗試兩次來擷取資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-165">Then the example tries twice to retrieve the data.</span></span> <span data-ttu-id="6a7e8-166">在第一次的試用版，它會指定它的格式字串和集合`autoConvert`參數`false`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-166">In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`.</span></span> <span data-ttu-id="6a7e8-167">這個試用版失敗，而且結果會顯示在訊息方塊標示為 「 訊息 #1 」。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-167">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="6a7e8-168">第二個的試用版，在此範例會擷取相同的資料與`autoConvert`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-168">In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="6a7e8-169">這個試用版成功，而且結果會顯示在訊息方塊標示為 「 訊息 #2 」。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-169">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="6a7e8-170">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-170">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]
 [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]
 [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a7e8-171">決定儲存於這個執行個體中的資料是否與指定的格式相關。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-171">Determines whether data stored in this instance is associated with the specified format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-172">要檢查的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-172">The format for which to check.</span></span> <span data-ttu-id="6a7e8-173">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-173">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="6a7e8-174">決定儲存於這個執行個體中的資料是否與指定的格式相關，或是可以轉換成指定的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-174">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns>
          <span data-ttu-id="6a7e8-175">如果儲存在這個執行個體中的資料與指定的格式相關，或是可以轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-175"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-176">呼叫此方法以判斷格式是否存在於這<xref:System.Windows.Forms.DataObject>之前先呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-176">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a7e8-177">呼叫<xref:System.Windows.Forms.IDataObject.GetFormats%2A>的格式，這個執行個體中可用。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-177">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7e8-178">資料可以轉換成其他格式，如果儲存時指定，允許轉換，而且要求的格式與預存格式相容。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-178">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a7e8-179">例如，資料儲存為 Unicode 可以轉換成文字。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-179">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a7e8-180">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-180">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-181">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`GetDataPresent`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-181">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="6a7e8-182">首先，它會建立資料物件，使用字串和`Text`格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-182">First, it creates a data object using a string and the `Text` format.</span></span> <span data-ttu-id="6a7e8-183">然後它會確認資料已存在於`Text`格式，並將結果顯示在訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-183">Then it verifies that the data is present in the `Text` format and displays the results in a message box.</span></span> <span data-ttu-id="6a7e8-184">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-184">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]
 [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]
 [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-185"><see cref="T:System.Type" />，表示要檢查的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-185">A <see cref="T:System.Type" /> representing the format for which to check.</span></span> <span data-ttu-id="6a7e8-186">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-186">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="6a7e8-187">決定儲存於這個執行個體中的資料是否與指定的格式相關，或是可以轉換成指定的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-187">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns>
          <span data-ttu-id="6a7e8-188">如果儲存在這個執行個體中的資料與指定的格式相關，或是可以轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-188"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-189">呼叫此方法以判斷格式是否存在於這<xref:System.Windows.Forms.DataObject>之前先呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-189">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a7e8-190">呼叫<xref:System.Windows.Forms.IDataObject.GetFormats%2A>的格式，這個執行個體中可用。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-190">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7e8-191">資料可以轉換成其他格式，如果儲存時指定，允許轉換，而且要求的格式與預存格式相容。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-191">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a7e8-192">例如，資料儲存為 Unicode 可以轉換成文字。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-192">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a7e8-193">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-193">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-194">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`GetDataPresent`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-194">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="6a7e8-195">首先，它會建立元件 (`myComponent`) 並將它儲存在資料物件 (`myDataObject`)。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-195">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="6a7e8-196">接著它會檢查指定的資料是否儲存在`myDataObject`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-196">Then it checks whether the specified data is stored in `myDataObject`.</span></span> <span data-ttu-id="6a7e8-197">如果測試判斷值`true`，它會在訊息方塊中顯示結果，並在文字方塊中顯示的資料類型。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-197">If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box.</span></span> <span data-ttu-id="6a7e8-198">這個範例假設您已經建立<xref:System.Windows.Forms.Form>名為`Form1`和<xref:System.Windows.Forms.TextBox>名為`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-198">This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]
 [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]
 [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-199">要檢查的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-199">The format for which to check.</span></span> <span data-ttu-id="6a7e8-200">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-200">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert">
          <span data-ttu-id="6a7e8-201">若要決定是否要將儲存於這個執行個體的資料轉換成指定的格式則為 <see langword="true" />；若要檢查資料是否是指定的格式則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-201"><see langword="true" /> to determine whether data stored in this instance can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span></span></param>
        <summary><span data-ttu-id="6a7e8-202">決定儲存於這個執行個體中的資料是否與指定的格式相關，使用布林值來決定是否要將資料轉換成格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-202">Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</span></span></summary>
        <returns>
          <span data-ttu-id="6a7e8-203">如果資料在指定的格式中，或是可以轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-203"><see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-204">呼叫此方法以判斷格式是否存在於這<xref:System.Windows.Forms.DataObject>之前先呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-204">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a7e8-205">呼叫<xref:System.Windows.Forms.IDataObject.GetFormats%2A>的格式，這個執行個體中可用。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-205">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
 <span data-ttu-id="6a7e8-206">這個方法會傳回`true`時：</span><span class="sxs-lookup"><span data-stu-id="6a7e8-206">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="6a7e8-207">`autoConvert`參數是`true`且資料在可以轉換成適當格式的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-207">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="6a7e8-208">`autoConvert`參數是`false`且資料在適當的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-208">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="6a7e8-209">這個方法會傳回`false`時：</span><span class="sxs-lookup"><span data-stu-id="6a7e8-209">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="6a7e8-210">`autoConvert`參數是`true`和這個方法中指定的格式，找不到資料並不能在資料轉換成指定的格式，或儲存資料時`autoConvert`設`false`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-210">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.</span></span>  
  
-   <span data-ttu-id="6a7e8-211">`autoConvert`參數是`false`，與資料不存在於此執行個體中指定的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-211">The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7e8-212">資料可以轉換成其他格式，如果儲存時指定，允許轉換，而且要求的格式與預存格式相容。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-212">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a7e8-213">例如，資料儲存為 Unicode 可以轉換成文字。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-213">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a7e8-214">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-214">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-215">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`GetDataPresent`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-215">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="6a7e8-216">首先，它會建立資料物件 (`myDataObject`) 使用字串和`Text`格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-216">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="6a7e8-217">然後它會查詢相關聯的資料物件`Text`格式，與`autoConvert`參數設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-217">Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="6a7e8-218">這個試用版失敗，而且結果會顯示在訊息方塊標示為 「 訊息 #1 」。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-218">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="6a7e8-219">在第二個的試用版，它會設定`autoConvert`參數`true`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-219">In the second trial, it sets the `autoConvert` parameter to `true`.</span></span> <span data-ttu-id="6a7e8-220">這個試用版成功，而且結果會顯示在訊息方塊標示為 「 訊息 #2 」。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-220">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="6a7e8-221">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-221">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]
 [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]
 [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a7e8-222">傳回與儲存於這個執行個體中的資料相關的，或者可以轉換的所有格式的清單。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-222">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a7e8-223">傳回與儲存於這個執行個體中的資料相關的，或者可以轉換的所有格式的清單。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-223">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
        <returns><span data-ttu-id="6a7e8-224">名稱陣列，表示這個物件中儲存的資料所支援的所有格式的清單。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-224">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-225">呼叫此方法以取得支援的資料格式，然後再呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-225">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="6a7e8-226">請參閱<xref:System.Windows.Forms.DataFormats>類別預先定義的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-226">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7e8-227">資料可以轉換成其他格式，如果儲存時指定，允許轉換，而且要求的格式與預存格式相容。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-227">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a7e8-228">例如，資料儲存為 Unicode 可以轉換成文字。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-228">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a7e8-229">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-229">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-230">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`GetFormats`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-230">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="6a7e8-231">首先，它會建立資料物件 (`myDataObject`) 使用字串和`Text`格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-231">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="6a7e8-232">然後它會擷取所有的資料格式以及在資料物件中的資料轉換格式，並在訊息方塊中顯示結果清單。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-232">Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</span></span> <span data-ttu-id="6a7e8-233">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-233">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]
 [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]
 [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <span data-ttu-id="6a7e8-234">若要擷取與儲存於這個執行個體中的資料相關的、或是可以轉換的所有格式則為 <see langword="true" />；若只要擷取原生的資料格式則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-234"><see langword="true" /> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false" /> to retrieve only native data formats.</span></span></param>
        <summary><span data-ttu-id="6a7e8-235">取得與儲存於這個執行個體中的資料相關的，或者可以轉換的所有格式清單，使用布林值來決定要擷取資料可以轉換的所有格式，還是只要擷取原生的資料格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-235">Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</span></span></summary>
        <returns><span data-ttu-id="6a7e8-236">名稱陣列，表示這個物件中儲存的資料所支援的所有格式的清單。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-236">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-237">呼叫此方法以取得支援的資料格式，然後再呼叫<xref:System.Windows.Forms.IDataObject.GetData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-237">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="6a7e8-238">請參閱<xref:System.Windows.Forms.DataFormats>類別預先定義的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-238">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a7e8-239">資料可以轉換成其他格式，如果儲存時指定，允許轉換，而且要求的格式與預存格式相容。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-239">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a7e8-240">例如，資料儲存為 Unicode 可以轉換成文字。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-240">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a7e8-241">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-241">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-242">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`GetFormats`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-242">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="6a7e8-243">首先，它會建立資料物件 (`myDataObject`) 使用字串和`UnicodeText`格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-243">First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format.</span></span> <span data-ttu-id="6a7e8-244">然後它會取得與資料相關聯的格式的兩個查詢。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-244">Then it makes two queries to get the formats associated with the data.</span></span> <span data-ttu-id="6a7e8-245">在第一個查詢中，它會設定`autoConvert`參數`false`： 在此情況下，會傳回資料的原生格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-245">In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned.</span></span> <span data-ttu-id="6a7e8-246">在第二個查詢中，它會設定`autoConvert`參數`true`，好讓它取得的格式，包括資料可以轉換成的格式清單。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-246">In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to.</span></span> <span data-ttu-id="6a7e8-247">在每個案例中，結果清單會顯示在訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-247">In each case, the resulting list is displayed in a message box.</span></span> <span data-ttu-id="6a7e8-248">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-248">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]
 [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]
 [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a7e8-249">將指定的資料和其相關的格式儲存於這個執行個體中。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-249">Stores the specified data and its associated format in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="6a7e8-250">要儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-250">The data to store.</span></span></param>
        <summary><span data-ttu-id="6a7e8-251">使用格式的資料類別，將指定的資料儲存於這個執行個體中。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-251">Stores the specified data in this instance, using the class of the data for the format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-252">格式衍生自資料類別。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-252">The format is derived from the data class.</span></span>  
  
 <span data-ttu-id="6a7e8-253">使用這個方法儲存的資料可以轉換成相容的格式，並在擷取時。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-253">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="6a7e8-254">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-254">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-255">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`SetData`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-255">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="6a7e8-256">首先，它會建立元件 (`myComponent`) 並將它儲存在資料物件 (`myDataObject`)。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-256">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="6a7e8-257">然後它會檢查指定的資料是否會儲存在資料物件，並在訊息方塊中顯示結果。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-257">Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</span></span> <span data-ttu-id="6a7e8-258">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-258">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]
 [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]
 [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-259">與資料關聯的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-259">The format associated with the data.</span></span> <span data-ttu-id="6a7e8-260">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-260">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="6a7e8-261">要儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-261">The data to store.</span></span></param>
        <summary><span data-ttu-id="6a7e8-262">將指定的資料和其相關的格式儲存於這個執行個體中。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-262">Stores the specified data and its associated format in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-263">如果您不知道目標應用程式格式，您可以使用此方法的多個格式儲存資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-263">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="6a7e8-264">使用這個方法儲存的資料可以轉換成相容的格式，並在擷取時。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-264">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="6a7e8-265">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-265">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-266">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`SetData`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-266">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="6a7e8-267">首先，它會建立資料物件 (`myDataObject`) 會將字串儲存在指定的物件和`UnicodeText`格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-267">First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format.</span></span> <span data-ttu-id="6a7e8-268">然後它會擷取該資料儲存在指定的物件`Text`格式化，以便將資料轉換成`Text`格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-268">Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format.</span></span> <span data-ttu-id="6a7e8-269">結果會顯示在訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-269">The result is displayed in a message box.</span></span> <span data-ttu-id="6a7e8-270">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-270">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]
 [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]
 [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-271"><see cref="T:System.Type" />，表示與資料相關的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-271">A <see cref="T:System.Type" /> representing the format associated with the data.</span></span> <span data-ttu-id="6a7e8-272">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-272">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="6a7e8-273">要儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-273">The data to store.</span></span></param>
        <summary><span data-ttu-id="6a7e8-274">將指定的資料和其相關的類別型別儲存在這個執行個體中。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-274">Stores the specified data and its associated class type in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-275">如果您不知道目標應用程式格式，您可以使用此方法的多個格式儲存資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-275">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="6a7e8-276">使用這個方法儲存的資料可以轉換成相容的格式，並在擷取時。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-276">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="6a7e8-277">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-277">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-278">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`SetData`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-278">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="6a7e8-279">首先，它會建立元件 (`myComponent`) 並將它儲存在資料物件 (`myDataObject`)，並使用`myType`指定資料格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-279">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format.</span></span> <span data-ttu-id="6a7e8-280">然後它會檢查指定之類型的資料是否會儲存在物件，並在訊息方塊中顯示結果。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-280">Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</span></span> <span data-ttu-id="6a7e8-281">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-281">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]
 [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]
 [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a7e8-282">與資料關聯的格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-282">The format associated with the data.</span></span> <span data-ttu-id="6a7e8-283">如需預先定義的格式，請參閱 <see cref="T:System.Windows.Forms.DataFormats" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-283">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert">
          <span data-ttu-id="6a7e8-284">若資料可以被轉換成另一種格式則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-284"><see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span></span></param>
        <param name="data"><span data-ttu-id="6a7e8-285">要儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-285">The data to store.</span></span></param>
        <summary><span data-ttu-id="6a7e8-286">將指定的資料和其相關的格式儲存於這個執行個體中，使用布林值指定是否可以將資料轉換成另一種格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-286">Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a7e8-287">如果您不知道目標應用程式格式，您可以使用此方法的多個格式儲存資料。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-287">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="6a7e8-288">這個方法的實作，請參閱<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-288">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a7e8-289">這個範例會使用<xref:System.Windows.Forms.DataObject>類別，它會實作`IDataObject`，以示範如何使用`SetData`方法。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-289">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="6a7e8-290">首先，它會建立資料物件 (`myDataObject`)，並將`UnicodeText`字串，`autoConvert`參數設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-290">First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="6a7e8-291">然後它會擷取儲存物件中的資料相關聯的格式，並，並在訊息方塊中顯示結果。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-291">Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</span></span> <span data-ttu-id="6a7e8-292">與資料相關聯的唯一格式是`UnicodeText`格式。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-292">The only format associated with the data is the `UnicodeText` format.</span></span> <span data-ttu-id="6a7e8-293">這個範例假設您已建立<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="6a7e8-293">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]
 [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]
 [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>