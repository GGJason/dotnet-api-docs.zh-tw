<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89a871da45924275e9a60693bb8e800093cf6409" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36522819" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4912d-101">提供 <see cref="E:System.Windows.Forms.Control.DragDrop" />、<see cref="E:System.Windows.Forms.Control.DragEnter" /> 或 <see cref="E:System.Windows.Forms.Control.DragOver" /> 事件的資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4912d-101">Provides data for the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4912d-102"><xref:System.Windows.Forms.Control.DragDrop>使用者完成拖曳至控制項的物件，然後拖曳至其控制項透過放開滑鼠按鈕拖放作業時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-102">The <xref:System.Windows.Forms.Control.DragDrop> event occurs when the user completes a drag-and-drop operation by dragging an object over the control and then dropping it onto the control by releasing the mouse button.</span></span> <span data-ttu-id="4912d-103"><xref:System.Windows.Forms.Control.DragEnter>使用者移動滑鼠指標拖曳至控制項的物件，使用滑鼠拖曳指標時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-103">The <xref:System.Windows.Forms.Control.DragEnter> event occurs when the user moves the mouse pointer onto the control while dragging an object with the mouse.</span></span> <span data-ttu-id="4912d-104"><xref:System.Windows.Forms.Control.DragOver>事件發生於使用者拖曳的物件，使用滑鼠時將滑鼠指標移到控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-104">The <xref:System.Windows.Forms.Control.DragOver> event occurs when the user moves the mouse pointer over the control while dragging an object with the mouse.</span></span>  
  
 <span data-ttu-id="4912d-105">A<xref:System.Windows.Forms.DragEventArgs>物件會指定與此事件相關聯的任何資料; SHIFT、 CTRL 和 ALT 鍵的目前狀態的位置，滑鼠指標; 以及來源和目標的拖曳事件所允許的拖放效果。</span><span class="sxs-lookup"><span data-stu-id="4912d-105">A <xref:System.Windows.Forms.DragEventArgs> object specifies any data associated with this event; the current state of the SHIFT, CTRL, and ALT keys; the location of the mouse pointer; and the drag-and-drop effects allowed by the source and target of the drag event.</span></span>  
  
 <span data-ttu-id="4912d-106">事件模型的相關資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="4912d-106">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4912d-107">下列範例會示範兩個之間的拖放作業<xref:System.Windows.Forms.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-107">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="4912d-108">範例會呼叫<xref:System.Windows.Forms.Control.DoDragDrop%2A>時拖曳動作開始的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-108">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="4912d-109">如果已移動滑鼠拖曳動作會啟動多個<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>期間的滑鼠位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-109">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="4912d-110"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用來決定要在拖曳的項目索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-110">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="4912d-111">此範例也示範如何使用自訂游標拖放作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-111">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="4912d-112">這個範例假設有兩個資料指標檔案`3dwarro.cur`和`3dwno.cur`、 自訂拖放到的應用程式目錄，存在於和不置放資料指標，分別。</span><span class="sxs-lookup"><span data-stu-id="4912d-112">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="4912d-113">如果使用自訂游標`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已核取。</span><span class="sxs-lookup"><span data-stu-id="4912d-113">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="4912d-114">自訂的資料指標中所設定<xref:System.Windows.Forms.Control.GiveFeedback>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-114">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="4912d-115">鍵盤的狀態會在評估<xref:System.Windows.Forms.Control.DragOver>右邊的事件處理常式`ListBox`，以決定在拖曳作業將會根據 SHIFT、 CTRL、 ALT 或 CTRL + ALT 鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="4912d-115">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="4912d-116">中的位置`ListBox`期間也決定會卸除`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-116">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="4912d-117">如果要卸除的資料不是`String`，然後在<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>設<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4912d-117">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4912d-118">最後，卸除的狀態會顯示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="4912d-118">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="4912d-119">若要提供的權限卸除資料`ListBox`決定<xref:System.Windows.Forms.Control.DragDrop>事件處理常式和`String`中適當的位置加入值`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="4912d-119">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="4912d-120">如果在拖曳作業移動超出界限的表單，則取消拖放作業<xref:System.Windows.Forms.Control.QueryContinueDrag>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-120">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="4912d-121">此程式碼摘錄示範如何使用<xref:System.Windows.Forms.DragEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="4912d-121">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="4912d-122">請參閱<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-122">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 <span data-ttu-id="4912d-123">下列範例說明如何<xref:System.Windows.Forms.DragEventArgs>拖放作業的目標與來源之間傳遞。</span><span class="sxs-lookup"><span data-stu-id="4912d-123">The following example illustrates how <xref:System.Windows.Forms.DragEventArgs> are passed between the source and target of a drag-and-drop operation.</span></span> <span data-ttu-id="4912d-124">在此範例中，<xref:System.Windows.Forms.ListBox>控制項做為來源的資料，而<xref:System.Windows.Forms.RichTextBox>控制項做為目標。</span><span class="sxs-lookup"><span data-stu-id="4912d-124">In this example, a <xref:System.Windows.Forms.ListBox> control is the source of the data, and the <xref:System.Windows.Forms.RichTextBox> control is the target.</span></span> <span data-ttu-id="4912d-125">此範例假設<xref:System.Windows.Forms.ListBox>控制項已填入有效的檔案名稱的清單。</span><span class="sxs-lookup"><span data-stu-id="4912d-125">The example assumes that the <xref:System.Windows.Forms.ListBox> control has been populated with a list of valid filenames.</span></span> <span data-ttu-id="4912d-126">當使用者拖曳其中一個顯示的檔名從<xref:System.Windows.Forms.ListBox>控制項拖曳至<xref:System.Windows.Forms.RichTextBox>控制項，檔名中參照的檔案會開啟。</span><span class="sxs-lookup"><span data-stu-id="4912d-126">When the user drags one of the displayed filenames from the <xref:System.Windows.Forms.ListBox> control onto the <xref:System.Windows.Forms.RichTextBox> control, the file referenced in the filename is opened.</span></span>  
  
 <span data-ttu-id="4912d-127">在起始操作<xref:System.Windows.Forms.ListBox>控制項的 MouseDown 事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-127">The operation is initiated in the <xref:System.Windows.Forms.ListBox> control's MouseDown event.</span></span> <span data-ttu-id="4912d-128">在<xref:System.Windows.Forms.RichTextBox.DragEnter>事件處理常式，此範例會使用<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>方法以驗證資料的格式，<xref:System.Windows.Forms.RichTextBox>控制項可以顯示，然後設定<xref:System.Windows.Forms.DragDropEffects>屬性來指定資料應該複製從原始檔控制目標控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-128">In the <xref:System.Windows.Forms.RichTextBox.DragEnter> event handler, the example uses the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to verify that the data is in a format that the <xref:System.Windows.Forms.RichTextBox> control can display and then sets the <xref:System.Windows.Forms.DragDropEffects> property to specify that data should be copied from the source control to the target control.</span></span> <span data-ttu-id="4912d-129">最後，<xref:System.Windows.Forms.RichTextBox>控制項的拖放事件處理常式使用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法來擷取要開啟的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="4912d-129">Finally, the <xref:System.Windows.Forms.RichTextBox> control's DragDrop event handler uses the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the filename to open.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="4912d-130">與這個事件關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-130">The data associated with this event.</span>
          </span>
        </param>
        <param name="keyState">
          <span data-ttu-id="4912d-131">SHIFT、CTRL 和 ALT 鍵的目前狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-131">The current state of the SHIFT, CTRL, and ALT keys.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="4912d-132">滑鼠指標的 X 座標 (以像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-132">The x-coordinate of the mouse cursor in pixels.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4912d-133">滑鼠指標的 Y 座標 (以像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-133">The y-coordinate of the mouse cursor in pixels.</span>
          </span>
        </param>
        <param name="allowedEffect">
          <span data-ttu-id="4912d-134">其中一個 <see cref="T:System.Windows.Forms.DragDropEffects" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-134">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <param name="effect">
          <span data-ttu-id="4912d-135">其中一個 <see cref="T:System.Windows.Forms.DragDropEffects" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-135">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4912d-136">初始化 <see cref="T:System.Windows.Forms.DragEventArgs" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-136">Initializes a new instance of the <see cref="T:System.Windows.Forms.DragEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4912d-137">取得原始 (或來源) 拖曳事件所允許的拖放作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-137">Gets which drag-and-drop operations are allowed by the originator (or source) of the drag event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4912d-138">其中一個 <see cref="T:System.Windows.Forms.DragDropEffects" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-138">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4912d-139">當控制項的拖放作業會呼叫以起始<xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType>方法，它會指定允許的作業的效果。</span><span class="sxs-lookup"><span data-stu-id="4912d-139">When a control initiates a drag-and-drop operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> method, it specifies the permissible effects of the operation.</span></span> <span data-ttu-id="4912d-140">比方說，當您將檔案從來源，如果檔案是唯讀的 （或從唯讀的儲存媒體例如 CD），則來源會指示檔案可以複製，但未傳送到目標。</span><span class="sxs-lookup"><span data-stu-id="4912d-140">For example, when you drag a file from a source, if the file is read-only (or from a read-only storage medium such as a CD), the source will indicate that the file can be copied, but not transferred, to the target.</span></span>  
  
 <span data-ttu-id="4912d-141">嘗試拖曳的資料上執行作業，您應該檢查此屬性可確保在允許的作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-141">Before attempting to perform an operation on the dragged data, you should examine this property to ensure that the operation is allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4912d-142">下列範例會示範兩個之間的拖放作業<xref:System.Windows.Forms.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-142">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="4912d-143">範例會呼叫<xref:System.Windows.Forms.Control.DoDragDrop%2A>時拖曳動作開始的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-143">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="4912d-144">如果已移動滑鼠拖曳動作會啟動多個<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>期間的滑鼠位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-144">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="4912d-145"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用來決定要在拖曳的項目索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-145">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="4912d-146">此範例也示範如何使用自訂游標拖放作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-146">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="4912d-147">這個範例假設有兩個資料指標檔案`3dwarro.cur`和`3dwno.cur`、 自訂拖放到的應用程式目錄，存在於和不置放資料指標，分別。</span><span class="sxs-lookup"><span data-stu-id="4912d-147">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="4912d-148">如果使用自訂游標`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已核取。</span><span class="sxs-lookup"><span data-stu-id="4912d-148">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="4912d-149">自訂的資料指標中所設定<xref:System.Windows.Forms.Control.GiveFeedback>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-149">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="4912d-150">鍵盤的狀態會在評估<xref:System.Windows.Forms.Control.DragOver>右邊的事件處理常式`ListBox`，以決定在拖曳作業將會根據 SHIFT、 CTRL、 ALT 或 CTRL + ALT 鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="4912d-150">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="4912d-151">中的位置`ListBox`期間也決定會卸除`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-151">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="4912d-152">如果要卸除的資料不是`String`，然後在<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>設<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4912d-152">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4912d-153">最後，卸除的狀態會顯示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="4912d-153">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="4912d-154">若要提供的權限卸除資料`ListBox`決定<xref:System.Windows.Forms.Control.DragDrop>事件處理常式和`String`中適當的位置加入值`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="4912d-154">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="4912d-155">如果在拖曳作業移動超出界限的表單，則取消拖放作業<xref:System.Windows.Forms.Control.QueryContinueDrag>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-155">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="4912d-156">此程式碼摘錄示範如何使用<xref:System.Windows.Forms.DragEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="4912d-156">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="4912d-157">請參閱<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-157">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4912d-158">取得包含與這個事件相關聯的 <see cref="T:System.Windows.Forms.IDataObject" /> 資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-158">Gets the <see cref="T:System.Windows.Forms.IDataObject" /> that contains the data associated with this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4912d-159">與這個事件關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-159">The data associated with this event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4912d-160">在您的事件處理常式的主體中，您可以使用<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>方法來判斷資料是否符合的控制項被拖曳的資料格式的需求。</span><span class="sxs-lookup"><span data-stu-id="4912d-160">In the body of your event handler, you can use the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether the data matches the format requirements of the control onto which the data is being dragged.</span></span> <span data-ttu-id="4912d-161">您也可以指定是否要嘗試將資料轉換成符合您的格式需求。</span><span class="sxs-lookup"><span data-stu-id="4912d-161">You also can specify whether you want to attempt to convert the data to meet your format requirements.</span></span> <span data-ttu-id="4912d-162">如果拖曳的資料符合您的格式需求，使用<xref:System.Windows.Forms.IDataObject.GetData%2A>方法來擷取資料。</span><span class="sxs-lookup"><span data-stu-id="4912d-162">If the dragged data meets your format requirements, use the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4912d-163">下列範例會示範兩個之間的拖放作業<xref:System.Windows.Forms.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-163">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="4912d-164">範例會呼叫<xref:System.Windows.Forms.Control.DoDragDrop%2A>時拖曳動作開始的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-164">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="4912d-165">如果已移動滑鼠拖曳動作會啟動多個<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>期間的滑鼠位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-165">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="4912d-166"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用來決定要在拖曳的項目索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-166">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="4912d-167">此範例也示範如何使用自訂游標拖放作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-167">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="4912d-168">這個範例假設有兩個資料指標檔案`3dwarro.cur`和`3dwno.cur`、 自訂拖放到的應用程式目錄，存在於和不置放資料指標，分別。</span><span class="sxs-lookup"><span data-stu-id="4912d-168">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="4912d-169">如果使用自訂游標`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已核取。</span><span class="sxs-lookup"><span data-stu-id="4912d-169">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="4912d-170">自訂的資料指標中所設定<xref:System.Windows.Forms.Control.GiveFeedback>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-170">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="4912d-171">鍵盤的狀態會在評估<xref:System.Windows.Forms.Control.DragOver>右邊的事件處理常式`ListBox`，以決定在拖曳作業將會根據 SHIFT、 CTRL、 ALT 或 CTRL + ALT 鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="4912d-171">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="4912d-172">中的位置`ListBox`期間也決定會卸除`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-172">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="4912d-173">如果要卸除的資料不是`String`，然後在<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>設<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4912d-173">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4912d-174">最後，卸除的狀態會顯示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="4912d-174">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="4912d-175">若要提供的權限卸除資料`ListBox`決定<xref:System.Windows.Forms.Control.DragDrop>事件處理常式和`String`中適當的位置加入值`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="4912d-175">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="4912d-176">如果在拖曳作業移動超出界限的表單，則取消拖放作業<xref:System.Windows.Forms.Control.QueryContinueDrag>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-176">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="4912d-177">此程式碼摘錄示範如何使用<xref:System.Windows.Forms.DragEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="4912d-177">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="4912d-178">請參閱<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-178">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4912d-179">取得或設定拖放作業中的目標置放效果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-179">Gets or sets the target drop effect in a drag-and-drop operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4912d-180">其中一個 <see cref="T:System.Windows.Forms.DragDropEffects" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-180">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4912d-181">根據預設，套用的效果會判斷滑鼠游標拖放作業的目標。</span><span class="sxs-lookup"><span data-stu-id="4912d-181">By default, the effect applied determines the mouse cursor for the target of a drag-and-drop operation.</span></span> <span data-ttu-id="4912d-182">這非常有用意見反應提供給使用者，就會發生的作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-182">This is useful to provide feedback to the user on the operation that will occur.</span></span> <span data-ttu-id="4912d-183">例如，如果您按下 CTRL 鍵，當您拖曳檔案從來源時，指定<xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType>表示目標將會嘗試執行複製作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-183">For example, if you press the CTRL key when you drag a file from a source, specify <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> to indicate the target will try to perform a copy operation.</span></span>  
  
 <span data-ttu-id="4912d-184">若要使用自訂的資料指標的拖曳操作，請參閱<xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4912d-184">To use custom cursors for a drag operation, see <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4912d-185">下列範例會示範兩個之間的拖放作業<xref:System.Windows.Forms.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-185">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="4912d-186">範例會呼叫<xref:System.Windows.Forms.Control.DoDragDrop%2A>時拖曳動作開始的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-186">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="4912d-187">如果已移動滑鼠拖曳動作會啟動多個<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>期間的滑鼠位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-187">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="4912d-188"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用來決定要在拖曳的項目索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-188">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="4912d-189">此範例也示範如何使用自訂游標拖放作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-189">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="4912d-190">這個範例假設有兩個資料指標檔案`3dwarro.cur`和`3dwno.cur`、 自訂拖放到的應用程式目錄，存在於和不置放資料指標，分別。</span><span class="sxs-lookup"><span data-stu-id="4912d-190">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="4912d-191">如果使用自訂游標`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已核取。</span><span class="sxs-lookup"><span data-stu-id="4912d-191">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="4912d-192">自訂的資料指標中所設定<xref:System.Windows.Forms.Control.GiveFeedback>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-192">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="4912d-193">鍵盤的狀態會在評估<xref:System.Windows.Forms.Control.DragOver>右邊的事件處理常式`ListBox`，以決定在拖曳作業將會根據 SHIFT、 CTRL、 ALT 或 CTRL + ALT 鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="4912d-193">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="4912d-194">中的位置`ListBox`期間也決定會卸除`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-194">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="4912d-195">如果要卸除的資料不是`String`，然後在<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>設<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4912d-195">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4912d-196">最後，卸除的狀態會顯示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="4912d-196">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="4912d-197">若要提供的權限卸除資料`ListBox`決定<xref:System.Windows.Forms.Control.DragDrop>事件處理常式和`String`中適當的位置加入值`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="4912d-197">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="4912d-198">如果在拖曳作業移動超出界限的表單，則取消拖放作業<xref:System.Windows.Forms.Control.QueryContinueDrag>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-198">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="4912d-199">此程式碼摘錄示範如何使用<xref:System.Windows.Forms.DragEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="4912d-199">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="4912d-200">請參閱<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-200">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4912d-201">取得 SHIFT、CTRL 和 ALT 鍵的目前狀態，以及滑鼠按鍵的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-201">Gets the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4912d-202">SHIFT、CTRL 和 ALT 鍵和滑鼠按鍵的目前狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-202">The current state of the SHIFT, CTRL, and ALT keys and of the mouse buttons.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4912d-203">您可以進行特定的索引鍵的狀態而定的拖放作業的效果。</span><span class="sxs-lookup"><span data-stu-id="4912d-203">You can make the effect of a drag-and-drop operation to depend on the state of a particular key.</span></span> <span data-ttu-id="4912d-204">例如，您可能決定要複製或移動的資料取決拖放作業期間是否按下 CTRL 或 SHIFT 鍵。</span><span class="sxs-lookup"><span data-stu-id="4912d-204">For example, you may decide to copy or move data depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="4912d-205">中所設定的位元<xref:System.Windows.Forms.DragEventArgs.KeyState%2A>屬性的識別索引鍵或在作業期間已按下滑鼠按鈕。</span><span class="sxs-lookup"><span data-stu-id="4912d-205">The bits that are set in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="4912d-206">例如，如果按下滑鼠左的按鈕時，第一個位元<xref:System.Windows.Forms.DragEventArgs.KeyState%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="4912d-206">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="4912d-207">您可以使用位元 AND 運算子來測試指定的按鍵狀態。</span><span class="sxs-lookup"><span data-stu-id="4912d-207">You can use the bitwise AND operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="4912d-208">下表列出可用來指定事件的值。</span><span class="sxs-lookup"><span data-stu-id="4912d-208">The following table lists the values that are used for a specified event.</span></span>  
  
|<span data-ttu-id="4912d-209">值</span><span class="sxs-lookup"><span data-stu-id="4912d-209">Value</span></span>|<span data-ttu-id="4912d-210">Key</span><span class="sxs-lookup"><span data-stu-id="4912d-210">Key</span></span>|  
|-----------|---------|  
|<span data-ttu-id="4912d-211">1 （0 位元）</span><span class="sxs-lookup"><span data-stu-id="4912d-211">1 (bit 0)</span></span>|<span data-ttu-id="4912d-212">滑鼠左鍵。</span><span class="sxs-lookup"><span data-stu-id="4912d-212">The left mouse button.</span></span>|  
|<span data-ttu-id="4912d-213">2 （1 位元）</span><span class="sxs-lookup"><span data-stu-id="4912d-213">2 (bit 1)</span></span>|<span data-ttu-id="4912d-214">滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="4912d-214">The right mouse button.</span></span>|  
|<span data-ttu-id="4912d-215">4 （2 位元）</span><span class="sxs-lookup"><span data-stu-id="4912d-215">4 (bit 2)</span></span>|<span data-ttu-id="4912d-216">SHIFT 鍵。</span><span class="sxs-lookup"><span data-stu-id="4912d-216">The SHIFT key.</span></span>|  
|<span data-ttu-id="4912d-217">8 （位元 3）</span><span class="sxs-lookup"><span data-stu-id="4912d-217">8 (bit 3)</span></span>|<span data-ttu-id="4912d-218">CTRL 鍵。</span><span class="sxs-lookup"><span data-stu-id="4912d-218">The CTRL key.</span></span>|  
|<span data-ttu-id="4912d-219">16 （位元 4）</span><span class="sxs-lookup"><span data-stu-id="4912d-219">16 (bit 4)</span></span>|<span data-ttu-id="4912d-220">滑鼠中鍵。</span><span class="sxs-lookup"><span data-stu-id="4912d-220">The middle mouse button.</span></span>|  
|<span data-ttu-id="4912d-221">32 （位元 5）</span><span class="sxs-lookup"><span data-stu-id="4912d-221">32 (bit 5)</span></span>|<span data-ttu-id="4912d-222">ALT 鍵。</span><span class="sxs-lookup"><span data-stu-id="4912d-222">The ALT key.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4912d-223">下列範例會示範兩個之間的拖放作業<xref:System.Windows.Forms.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-223">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="4912d-224">範例會呼叫<xref:System.Windows.Forms.Control.DoDragDrop%2A>時拖曳動作開始的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-224">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="4912d-225">如果已移動滑鼠拖曳動作會啟動多個<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>期間的滑鼠位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-225">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="4912d-226"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用來決定要在拖曳的項目索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-226">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="4912d-227">此範例也示範如何使用自訂游標拖放作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-227">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="4912d-228">這個範例假設有兩個資料指標檔案`3dwarro.cur`和`3dwno.cur`、 自訂拖放到的應用程式目錄，存在於和不置放資料指標，分別。</span><span class="sxs-lookup"><span data-stu-id="4912d-228">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="4912d-229">如果使用自訂游標`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已核取。</span><span class="sxs-lookup"><span data-stu-id="4912d-229">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="4912d-230">自訂的資料指標中所設定<xref:System.Windows.Forms.Control.GiveFeedback>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-230">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="4912d-231">鍵盤的狀態會在評估<xref:System.Windows.Forms.Control.DragOver>右邊的事件處理常式`ListBox`，以決定在拖曳作業將會根據 SHIFT、 CTRL、 ALT 或 CTRL + ALT 鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="4912d-231">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="4912d-232">中的位置`ListBox`期間也決定會卸除`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-232">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="4912d-233">如果要卸除的資料不是`String`，然後在<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>設<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4912d-233">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4912d-234">最後，卸除的狀態會顯示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="4912d-234">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="4912d-235">若要提供的權限卸除資料`ListBox`決定<xref:System.Windows.Forms.Control.DragDrop>事件處理常式和`String`中適當的位置加入值`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="4912d-235">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="4912d-236">如果在拖曳作業移動超出界限的表單，則取消拖放作業<xref:System.Windows.Forms.Control.QueryContinueDrag>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-236">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="4912d-237">此程式碼摘錄示範如何使用<xref:System.Windows.Forms.DragEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="4912d-237">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="4912d-238">請參閱<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-238">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4912d-239">取得滑鼠指標的 X 座標 (在螢幕座標中)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-239">Gets the x-coordinate of the mouse pointer, in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4912d-240">滑鼠指標的 X 座標 (單位為像素)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-240">The x-coordinate of the mouse pointer in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4912d-241">下列範例會示範兩個之間的拖放作業<xref:System.Windows.Forms.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-241">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="4912d-242">範例會呼叫<xref:System.Windows.Forms.Control.DoDragDrop%2A>時拖曳動作開始的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-242">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="4912d-243">如果已移動滑鼠拖曳動作會啟動多個<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>期間的滑鼠位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-243">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="4912d-244"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用來決定要在拖曳的項目索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-244">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="4912d-245">此範例也示範如何使用自訂游標拖放作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-245">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="4912d-246">這個範例假設有兩個資料指標檔案`3dwarro.cur`和`3dwno.cur`、 自訂拖放到的應用程式目錄，存在於和不置放資料指標，分別。</span><span class="sxs-lookup"><span data-stu-id="4912d-246">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="4912d-247">如果使用自訂游標`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已核取。</span><span class="sxs-lookup"><span data-stu-id="4912d-247">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="4912d-248">自訂的資料指標中所設定<xref:System.Windows.Forms.Control.GiveFeedback>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-248">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="4912d-249">鍵盤的狀態會在評估<xref:System.Windows.Forms.Control.DragOver>右邊的事件處理常式`ListBox`，以決定在拖曳作業將會根據 SHIFT、 CTRL、 ALT 或 CTRL + ALT 鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="4912d-249">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="4912d-250">中的位置`ListBox`期間也決定會卸除`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-250">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="4912d-251">如果要卸除的資料不是`String`，然後在<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>設<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4912d-251">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4912d-252">最後，卸除的狀態會顯示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="4912d-252">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="4912d-253">若要提供的權限卸除資料`ListBox`決定<xref:System.Windows.Forms.Control.DragDrop>事件處理常式和`String`中適當的位置加入值`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="4912d-253">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="4912d-254">如果在拖曳作業移動超出界限的表單，則取消拖放作業<xref:System.Windows.Forms.Control.QueryContinueDrag>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-254">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="4912d-255">此程式碼摘錄示範如何使用<xref:System.Windows.Forms.DragEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="4912d-255">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="4912d-256">請參閱<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-256">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4912d-257">取得滑鼠指標的 Y 座標 (在螢幕座標中)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-257">Gets the y-coordinate of the mouse pointer, in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4912d-258">滑鼠指標的 Y 座標 (單位為像素)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4912d-258">The y-coordinate of the mouse pointer in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4912d-259">下列範例會示範兩個之間的拖放作業<xref:System.Windows.Forms.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="4912d-259">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="4912d-260">範例會呼叫<xref:System.Windows.Forms.Control.DoDragDrop%2A>時拖曳動作開始的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-260">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="4912d-261">如果已移動滑鼠拖曳動作會啟動多個<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>期間的滑鼠位置<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-261">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="4912d-262"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用來決定要在拖曳的項目索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-262">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="4912d-263">此範例也示範如何使用自訂游標拖放作業。</span><span class="sxs-lookup"><span data-stu-id="4912d-263">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="4912d-264">這個範例假設有兩個資料指標檔案`3dwarro.cur`和`3dwno.cur`、 自訂拖放到的應用程式目錄，存在於和不置放資料指標，分別。</span><span class="sxs-lookup"><span data-stu-id="4912d-264">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="4912d-265">如果使用自訂游標`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已核取。</span><span class="sxs-lookup"><span data-stu-id="4912d-265">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="4912d-266">自訂的資料指標中所設定<xref:System.Windows.Forms.Control.GiveFeedback>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-266">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="4912d-267">鍵盤的狀態會在評估<xref:System.Windows.Forms.Control.DragOver>右邊的事件處理常式`ListBox`，以決定在拖曳作業將會根據 SHIFT、 CTRL、 ALT 或 CTRL + ALT 鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="4912d-267">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="4912d-268">中的位置`ListBox`期間也決定會卸除`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="4912d-268">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="4912d-269">如果要卸除的資料不是`String`，然後在<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>設<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4912d-269">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4912d-270">最後，卸除的狀態會顯示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="4912d-270">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="4912d-271">若要提供的權限卸除資料`ListBox`決定<xref:System.Windows.Forms.Control.DragDrop>事件處理常式和`String`中適當的位置加入值`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="4912d-271">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="4912d-272">如果在拖曳作業移動超出界限的表單，則取消拖放作業<xref:System.Windows.Forms.Control.QueryContinueDrag>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="4912d-272">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="4912d-273">此程式碼摘錄示範如何使用<xref:System.Windows.Forms.DragEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="4912d-273">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="4912d-274">請參閱<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="4912d-274">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>