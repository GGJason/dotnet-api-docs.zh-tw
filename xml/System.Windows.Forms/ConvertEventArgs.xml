<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc70d2d1f8197b7c6877de1c7ac19c736d5a0004" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37571499" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see cref="E:System.Windows.Forms.Binding.Format" /> 和 <see cref="E:System.Windows.Forms.Binding.Parse" /> 事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs>用來格式化和 unformat 透過資料繫結的 Windows Form 控制項所顯示的值<xref:System.Windows.Forms.Binding>物件。 <xref:System.Windows.Forms.Binding.Format>事件發生於控制項屬性繫結至值和<xref:System.Windows.Forms.Binding.Parse>繫結的值變更時，就會發生事件。  
  
 <xref:System.Windows.Forms.Binding.Format>和<xref:System.Windows.Forms.Binding.Parse>事件可讓您建立自訂的格式來顯示資料。 例如，如果資料表中的資料型別的<xref:System.Decimal>，您可以指定資料應該顯示在本機的貨幣格式為--，藉由設定<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>屬性<xref:System.Windows.Forms.ConvertEventArgs>中的格式化值<xref:System.Windows.Forms.Binding.Format>事件。 因此，您必須 unformat 中顯示的值<xref:System.Windows.Forms.Binding.Parse>事件。  
  
 如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.Binding>，將<xref:System.Windows.Forms.ConvertEventHandler>兩者的委派<xref:System.Windows.Forms.Binding.Parse>和<xref:System.Windows.Forms.Binding.Format>事件，並使用<xref:System.Windows.Forms.Control.DataBindings%2A>屬性，即可加入<xref:System.Windows.Forms.Binding>至<xref:System.Windows.Forms.BindingsCollection>的<xref:System.Windows.Forms.TextBox>控制項。 `DecimalToCurrencyString`事件的委派，它會加入<xref:System.Windows.Forms.Binding.Format>事件，會使用<xref:System.Decimal.ToString%2A>方法，以設定繫結的值的格式 (<xref:System.Decimal>型別) 為貨幣。 `CurrencyStringToDecimal`事件的委派，它會加入<xref:System.Windows.Forms.Binding.Parse>事件，將控制項所顯示的值轉換回<xref:System.Decimal>型別。  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Object" />，包含目前的屬性值。</param>
        <param name="desiredType">值的 <see cref="T:System.Type" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ConvertEventArgs" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得您要的值的資料類型。</summary>
        <value>您要的值的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>屬性可讓您檢查之屬性的值轉換成的型別。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>屬性來判斷是否可以繼續到另一種類型的轉換。 `DecimalToCurrencyString`方法會測試是否<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>是一個字串。 如果沒有，程式碼結束方法。 同樣地，`CurrencyStringToDecimal`方法會測試是否<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>是<xref:System.Decimal>，如果它不是則結束`true`。  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Forms.ConvertEventArgs" /> 的值。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ConvertEventArgs" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所包含的值<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>屬性取決於所在事件<xref:System.Windows.Forms.ConvertEventArgs>會傳回。 <xref:System.Windows.Forms.ConvertEventArgs>可以傳回的其中一個<xref:System.Windows.Forms.Binding.Format>事件或<xref:System.Windows.Forms.Binding.Parse>事件。  
  
 當<xref:System.Windows.Forms.ConvertEventArgs>都會傳入<xref:System.Windows.Forms.Binding.Format>事件，<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>屬性包含資料來源的未格式化的屬性值。 內<xref:System.Windows.Forms.Binding.Format>事件，您可以讀取屬性值、 格式化的值，並重設<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>藉此將資料繫結控制項中顯示的值設定為新值 （格式化） 的屬性。  
  
 當<xref:System.Windows.Forms.ConvertEventArgs>中傳回<xref:System.Windows.Forms.Binding.Parse>事件，此屬性會包含資料繫結控制項的自訂格式化值。 內<xref:System.Windows.Forms.Binding.Parse>事件，您必須閱讀格式化的值、 加以剖析，並將它轉換回資料來源相同的資料類型。 您接著可以重設<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>未格式化的屬性值，並藉此設定資料來源的值。 若要判斷資料來源的類型，請檢查<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>屬性值。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Windows.Forms.Binding>，將<xref:System.Windows.Forms.ConvertEventHandler>兩者的委派<xref:System.Windows.Forms.Binding.Parse>和<xref:System.Windows.Forms.Binding.Format>事件，並使用<xref:System.Windows.Forms.Control.DataBindings%2A>屬性，即可加入<xref:System.Windows.Forms.Binding>至<xref:System.Windows.Forms.BindingsCollection>的<xref:System.Windows.Forms.TextBox>控制項。 `DecimalToCurrencyString`事件的委派，它會加入<xref:System.Windows.Forms.Binding.Format>事件，會使用<xref:System.Decimal.ToString%2A>方法，以設定繫結的值的格式 (<xref:System.Decimal>型別) 為貨幣。 `CurrencyStringToDecimal`事件的委派，它會加入<xref:System.Windows.Forms.Binding.Parse>事件，將控制項所顯示的值轉換回<xref:System.Decimal>型別。  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>